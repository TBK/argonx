diff --git a/IClientController.h b/IClientController.h
index f5bb2fb..23e60cf 100644
--- a/IClientController.h
+++ b/IClientController.h
@@ -1,9 +1,11 @@
 class IClientController
 {
 public:
-    virtual unknown_ret ~CSteamController() = 0;
-    virtual unknown_ret ~CSteamController() = 0;
-    virtual unknown_ret Init(bool, IClientControllerSerialized*) = 0;
+    virtual unknown_ret __Destructor1() = 0;
+#ifdef ARGONX_UNIX
+    virtual unknown_ret __Destructor2() = 0;
+#endif
+    virtual unknown_ret Init(bool, class IClientControllerSerialized*) = 0;
     virtual unknown_ret Shutdown() = 0;
     virtual unknown_ret RunFrame() = 0;
     virtual unknown_ret GetAllControllersStatus(ControllersStatus_t*) = 0;
diff --git a/IClientControllerSerialized.h b/IClientControllerSerialized.h
index 3038cdc..f34cc28 100644
--- a/IClientControllerSerialized.h
+++ b/IClientControllerSerialized.h
@@ -1,8 +1,10 @@
 class IClientControllerSerialized
 {
 public:
-    virtual unknown_ret ~IClientControllerSerializedMap() = 0;
-    virtual unknown_ret ~IClientControllerSerializedMap() = 0;
+    virtual unknown_ret __Destructor1() = 0;
+#if defined(ARGONX_UNIX)
+    virtual unknown_ret __Destructor2() = 0;
+#endif  
     virtual unknown_ret ShowBindingPanel(unsigned int, unsigned long long) = 0;
     virtual unknown_ret GetControllerTypeForHandle(unsigned long long) = 0;
     virtual unknown_ret GetGamepadIndexForHandle(unsigned long long) = 0;
diff --git a/IClientEngine.h b/IClientEngine.h
index ca421a2..631348a 100644
--- a/IClientEngine.h
+++ b/IClientEngine.h
@@ -1,20 +1,20 @@
 class IClientEngine
 {
 public:
-    virtual unknown_ret CreateSteamPipe() = 0;
-    virtual unknown_ret BReleaseSteamPipe(int) = 0;
-    virtual unknown_ret CreateGlobalUser(int*) = 0;
-    virtual unknown_ret ConnectToGlobalUser(int) = 0;
-    virtual unknown_ret CreateLocalUser(int*, EAccountType) = 0;
-    virtual unknown_ret CreatePipeToLocalUser(int, int*) = 0;
-    virtual unknown_ret ReleaseUser(int, int) = 0;
-    virtual unknown_ret IsValidHSteamUserPipe(int, int) = 0;
-    virtual unknown_ret GetIClientUser(int, int) = 0;
-    virtual unknown_ret GetIClientGameServer(int, int) = 0;
+    virtual Steam::PipeHandle CreateSteamPipe() = 0;
+    virtual bool BReleaseSteamPipe(Steam::PipeHandle) = 0;
+    virtual Steam::UserHandle CreateGlobalUser(Steam::PipeHandle *) = 0;
+    virtual Steam::UserHandle ConnectToGlobalUser(Steam::PipeHandle) = 0;
+    virtual Steam::UserHandle CreateLocalUser(Steam::PipeHandle*, Steam::EAccountType) = 0;
+    virtual void CreatePipeToLocalUser(Steam::UserHandle, Steam::PipeHandle*) = 0;
+    virtual void ReleaseUser(Steam::PipeHandle, Steam::UserHandle) = 0;
+    virtual bool IsValidHSteamUserPipe(Steam::PipeHandle, Steam::UserHandle) = 0;
+    virtual void *GetIClientUser(Steam::UserHandle, Steam::PipeHandle) = 0;
+    virtual void *GetIClientGameServer(Steam::UserHandle, Steam::PipeHandle) = 0;
     virtual unknown_ret SetLocalIPBinding(unsigned int, unsigned short) = 0;
-    virtual unknown_ret GetUniverseName(EUniverse) = 0;
-    virtual unknown_ret GetIClientFriends(int, int) = 0;
-    virtual unknown_ret GetIClientUtils(int) = 0;
+    virtual const char *GetUniverseName(Steam::EUniverse) = 0;
+    virtual void *GetIClientFriends(Steam::UserHandle, Steam::PipeHandle) = 0;
+    virtual void *GetIClientUtils(Steam::PipeHandle) = 0;
     virtual unknown_ret GetIClientBilling(int, int) = 0;
     virtual unknown_ret GetIClientMatchmaking(int, int) = 0;
     virtual unknown_ret GetIClientApps(int, int) = 0;
@@ -29,7 +29,7 @@ public:
     virtual unknown_ret GetIClientScreenshots(int, int) = 0;
     virtual unknown_ret SetWarningMessageHook(void (*)(int, char const*)) = 0;
     virtual unknown_ret GetIClientGameCoordinator(int, int) = 0;
-    virtual unknown_ret SetOverlayNotificationPosition(ENotificationPosition) = 0;
+    virtual unknown_ret SetOverlayNotificationPosition(Steam::ENotificationPosition) = 0;
     virtual unknown_ret SetOverlayNotificationInset(int, int) = 0;
     virtual unknown_ret HookScreenshots(bool) = 0;
     virtual unknown_ret IsScreenshotsHooked() = 0;
@@ -38,7 +38,7 @@ public:
     virtual unknown_ret GetIClientProductBuilder(int, int) = 0;
     virtual unknown_ret GetIClientDepotBuilder(int, int) = 0;
     virtual unknown_ret GetIClientNetworkDeviceManager(int) = 0;
-    virtual unknown_ret ConCommandInit(IConCommandBaseAccessor*) = 0;
+    virtual unknown_ret ConCommandInit(Steam::IConCommandBaseAccessor*) = 0;
     virtual unknown_ret GetIClientAppManager(int, int) = 0;
     virtual unknown_ret GetIClientConfigStore(int, int) = 0;
     virtual unknown_ret BOverlayNeedsPresent() = 0;
@@ -71,8 +71,10 @@ public:
     virtual unknown_ret GetIClientCompat(int, int) = 0;
     virtual unknown_ret SetClientCommandLine(int, char**) = 0;
     virtual unknown_ret GetIClientParties(int, int) = 0;
-    virtual unknown_ret ~CSteamClient() = 0;
-    virtual unknown_ret ~CSteamClient() = 0;
+    virtual unknown_ret __Destructor1() = 0;
+#if defined(ARGONX_UNIX)
+    virtual unknown_ret __Destructor2() = 0;
+#endif
     virtual unknown_ret GetIPCServerMap() = 0;
     virtual unknown_ret OnDebugTextArrived(char const*) = 0;
     virtual unknown_ret OnThreadLocalRegistration() = 0;
diff --git a/IClientFriends.h b/IClientFriends.h
index dfb5ee0..6283370 100644
--- a/IClientFriends.h
+++ b/IClientFriends.h
@@ -1,12 +1,12 @@
 class IClientFriends
 {
 public:
-    virtual unknown_ret GetPersonaName() = 0;
-    virtual unknown_ret SetPersonaName(char const*) = 0;
-    virtual unknown_ret SetPersonaNameEx(char const*, bool) = 0;
-    virtual unknown_ret IsPersonaNameSet() = 0;
-    virtual unknown_ret GetPersonaState() = 0;
-    virtual unknown_ret SetPersonaState(EPersonaState) = 0;
+    virtual const char *GetPersonaName() = 0;
+    virtual SteamAPICall_t SetPersonaName(char const*) = 0;
+    virtual SteamAPICall_t SetPersonaNameEx(char const*, bool) = 0;
+    virtual bool IsPersonaNameSet() = 0;
+    virtual EPersonaState GetPersonaState() = 0;
+    virtual void SetPersonaState(EPersonaState) = 0;
     virtual unknown_ret NotifyUIOfMenuChange(bool, bool, bool, bool) = 0;
     virtual unknown_ret GetFriendCount(int) = 0;
     virtual unknown_ret GetFriendArray(CSteamID*, signed char*, int, int) = 0;
diff --git a/IClientUser.h b/IClientUser.h
index c5f387b..dc2cf5d 100644
--- a/IClientUser.h
+++ b/IClientUser.h
@@ -1,21 +1,21 @@
 class IClientUser
 {
 public:
-    virtual unknown_ret GetHSteamUser() = 0;
-    virtual unknown_ret LogOn(CSteamID) = 0;
-    virtual unknown_ret LogOnWithPassword(char const*, char const*) = 0;
+    virtual UserHandle GetHSteamUser() = 0;
+    virtual void LogOn(CSteamID) = 0;
+    virtual void LogOnWithPassword(char const*, char const*) = 0;
     virtual unknown_ret LogOnAndCreateNewSteamAccountIfNeeded() = 0;
     virtual unknown_ret VerifyOfflineLogon() = 0;
-    virtual unknown_ret LogOff() = 0;
-    virtual unknown_ret BLoggedOn() = 0;
-    virtual unknown_ret GetLogonState() = 0;
-    virtual unknown_ret BConnected() = 0;
-    virtual unknown_ret BTryingToLogin() = 0;
-    virtual unknown_ret GetSteamID() = 0;
-    virtual unknown_ret GetConsoleSteamID() = 0;
+    virtual void LogOff() = 0;
+    virtual bool BLoggedOn() = 0;
+    virtual u32 GetLogonState() = 0;
+    virtual bool BConnected() = 0;
+    virtual bool BTryingToLogin() = 0;
+    virtual CSteamID GetSteamID() = 0;
+    virtual CSteamID GetConsoleSteamID() = 0;
     virtual unknown_ret GetClientInstanceID() = 0;
-    virtual unknown_ret IsVACBanned(unsigned int) = 0;
-    virtual unknown_ret SetEmail(char const*) = 0;
+    virtual bool IsVACBanned(CGameID) = 0;
+    virtual void SetEmail(char const*) = 0;
     virtual unknown_ret SetConfigString(EConfigSubTree, char const*, char const*) = 0;
     virtual unknown_ret GetConfigString(EConfigSubTree, char const*, char*, int) = 0;
     virtual unknown_ret SetConfigInt(EConfigSubTree, char const*, int) = 0;
@@ -52,9 +52,9 @@ public:
     virtual unknown_ret DestroyCachedCredentials(char const*) = 0;
     virtual unknown_ret GetCurrentWebAuthToken(char*, int, char*, int) = 0;
     virtual unknown_ret RequestWebAuthToken() = 0;
-    virtual unknown_ret SetLoginInformation(char const*, char const*, bool) = 0;
-    virtual unknown_ret SetTwoFactorCode(char const*) = 0;
-    virtual unknown_ret ClearAllLoginInformation() = 0;
+    virtual void SetLoginInformation(char const*, char const*, bool) = 0;
+    virtual void SetTwoFactorCode(char const*) = 0;
+    virtual void ClearAllLoginInformation() = 0;
     virtual unknown_ret GetLanguage(char*, int) = 0;
     virtual unknown_ret BIsCyberCafe() = 0;
     virtual unknown_ret BIsAcademicAccount() = 0;
diff --git a/IClientUtils.h b/IClientUtils.h
index d8cb3b6..d16cf35 100644
--- a/IClientUtils.h
+++ b/IClientUtils.h
@@ -1,17 +1,17 @@
 class IClientUtils
 {
 public:
-    virtual unknown_ret GetInstallPath() = 0;
+    virtual const char *GetInstallPath() = 0;
     virtual unknown_ret GetUserBaseFolderInstallImage() = 0;
     virtual unknown_ret GetManagedContentRoot() = 0;
     virtual unknown_ret GetSecondsSinceAppActive() = 0;
     virtual unknown_ret GetSecondsSinceComputerActive() = 0;
     virtual unknown_ret SetComputerActive() = 0;
-    virtual unknown_ret GetConnectedUniverse() = 0;
+    virtual EUniverse GetConnectedUniverse() = 0;
     virtual unknown_ret GetServerRealTime() = 0;
-    virtual unknown_ret GetIPCountry() = 0;
+    virtual const char *GetIPCountry() = 0;
     virtual unknown_ret GetImageSize(int, unsigned int*, unsigned int*) = 0;
-    virtual unknown_ret GetImageRGBA(int, unsigned char*, int) = 0;
+    virtual unknown_ret GetImageRGBA(int, unsigned char*, unsigned int) = 0;
     virtual unknown_ret GetCSERIPPort(unsigned int*, unsigned short*) = 0;
     virtual unknown_ret GetNumRunningApps() = 0;
     virtual unknown_ret GetCurrentBatteryPower() = 0;
@@ -21,10 +21,10 @@ public:
     virtual unknown_ret GetAppID() = 0;
     virtual unknown_ret SetAPIDebuggingActive(bool, bool) = 0;
     virtual unknown_ret AllocPendingAPICallHandle() = 0;
-    virtual unknown_ret IsAPICallCompleted(unsigned long long, bool*) = 0;
-    virtual unknown_ret GetAPICallFailureReason(unsigned long long) = 0;
-    virtual unknown_ret GetAPICallResult(unsigned long long, void*, int, int, bool*) = 0;
-    virtual unknown_ret SetAPICallResultWithoutPostingCallback(unsigned long long, void const*, int, int) = 0;
+    virtual bool IsAPICallCompleted(Steam::SteamAPICall_t handle, bool*failed) = 0;
+    virtual ESteamAPICallFailure GetAPICallFailureReason(SteamAPICall_t) = 0;
+    virtual bool GetAPICallResult(Steam::SteamAPICall_t h, u8 *callbackBuffer, u32 bufferSize, int expectedCallback, bool *failed) = 0;
+    virtual unknown_ret SetAPICallResultWithoutPostingCallback(unsigned long long handle, void const *callback, int size, int) = 0;
     virtual unknown_ret SignalAppsToShutDown() = 0;
     virtual unknown_ret SignalServiceAppsToDisconnect() = 0;
     virtual unknown_ret TerminateAllAppsMultiStep(unsigned int) = 0;
