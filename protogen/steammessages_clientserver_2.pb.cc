// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_2.proto

#include "steammessages_clientserver_2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fclientserver_5f2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummary_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceInfo_RichPresence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryStopPlaying_StopApp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMAddScreenshot_Tag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUserNotifications_Notification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDownloadRateStatistics_StatsInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGMSClientServerQueryResponse_Server;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerData_Player;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerPingSample_Sample;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day;
}  // namespace protobuf_steammessages_5fclientserver_5f2_2eproto
class CMsgClientUCMAddScreenshot_TagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshot_Tag>
      _instance;
} _CMsgClientUCMAddScreenshot_Tag_default_instance_;
class CMsgClientUCMAddScreenshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshot>
      _instance;
} _CMsgClientUCMAddScreenshot_default_instance_;
class CMsgClientUCMAddScreenshotResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshotResponse>
      _instance;
} _CMsgClientUCMAddScreenshotResponse_default_instance_;
class CMsgClientUCMDeleteScreenshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeleteScreenshot>
      _instance;
} _CMsgClientUCMDeleteScreenshot_default_instance_;
class CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeleteScreenshotResponse>
      _instance;
} _CMsgClientUCMDeleteScreenshotResponse_default_instance_;
class CMsgClientUCMPublishFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishFile>
      _instance;
} _CMsgClientUCMPublishFile_default_instance_;
class CMsgClientUCMPublishFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishFileResponse>
      _instance;
} _CMsgClientUCMPublishFileResponse_default_instance_;
class CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile_KeyValueTag>
      _instance;
} _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
class CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile_AdditionalPreview>
      _instance;
} _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
class CMsgClientUCMUpdatePublishedFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile>
      _instance;
} _CMsgClientUCMUpdatePublishedFile_default_instance_;
class CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFileResponse>
      _instance;
} _CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
class CMsgClientUCMDeletePublishedFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeletePublishedFile>
      _instance;
} _CMsgClientUCMDeletePublishedFile_default_instance_;
class CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeletePublishedFileResponse>
      _instance;
} _CMsgClientUCMDeletePublishedFileResponse_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFiles>
      _instance;
} _CMsgClientUCMEnumerateUserPublishedFiles_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId>
      _instance;
} _CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFilesResponse>
      _instance;
} _CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFiles>
      _instance;
} _CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId>
      _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesResponse>
      _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>
      _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>
      _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>
      _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
class CMsgClientUCMPublishedFileSubscribedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileSubscribed>
      _instance;
} _CMsgClientUCMPublishedFileSubscribed_default_instance_;
class CMsgClientUCMPublishedFileUnsubscribedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileUnsubscribed>
      _instance;
} _CMsgClientUCMPublishedFileUnsubscribed_default_instance_;
class CMsgClientUCMPublishedFileDeletedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileDeleted>
      _instance;
} _CMsgClientUCMPublishedFileDeleted_default_instance_;
class CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileUpdated>
      _instance;
} _CMsgClientUCMPublishedFileUpdated_default_instance_;
class CMsgClientWorkshopItemChangesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesRequest>
      _instance;
} _CMsgClientWorkshopItemChangesRequest_default_instance_;
class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>
      _instance;
} _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
class CMsgClientWorkshopItemChangesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesResponse>
      _instance;
} _CMsgClientWorkshopItemChangesResponse_default_instance_;
class CMsgClientWorkshopItemInfoRequest_WorkshopItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoRequest_WorkshopItem>
      _instance;
} _CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_;
class CMsgClientWorkshopItemInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoRequest>
      _instance;
} _CMsgClientWorkshopItemInfoRequest_default_instance_;
class CMsgClientWorkshopItemInfoResponse_WorkshopItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo>
      _instance;
} _CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_;
class CMsgClientWorkshopItemInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoResponse>
      _instance;
} _CMsgClientWorkshopItemInfoResponse_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUser>
      _instance;
} _CMsgClientUCMGetPublishedFilesForUser_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId>
      _instance;
} _CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUserResponse>
      _instance;
} _CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMSetUserPublishedFileAction>
      _instance;
} _CMsgClientUCMSetUserPublishedFileAction_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMSetUserPublishedFileActionResponse>
      _instance;
} _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserAction>
      _instance;
} _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>
      _instance;
} _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>
      _instance;
} _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
class CMsgClientScreenshotsChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientScreenshotsChanged>
      _instance;
} _CMsgClientScreenshotsChanged_default_instance_;
class CMsgClientUpdateUserGameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateUserGameInfo>
      _instance;
} _CMsgClientUpdateUserGameInfo_default_instance_;
class CMsgClientRichPresenceUploadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceUpload>
      _instance;
} _CMsgClientRichPresenceUpload_default_instance_;
class CMsgClientRichPresenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceRequest>
      _instance;
} _CMsgClientRichPresenceRequest_default_instance_;
class CMsgClientRichPresenceInfo_RichPresenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceInfo_RichPresence>
      _instance;
} _CMsgClientRichPresenceInfo_RichPresence_default_instance_;
class CMsgClientRichPresenceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceInfo>
      _instance;
} _CMsgClientRichPresenceInfo_default_instance_;
class CMsgClientCheckFileSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckFileSignature>
      _instance;
} _CMsgClientCheckFileSignature_default_instance_;
class CMsgClientCheckFileSignatureResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckFileSignatureResponse>
      _instance;
} _CMsgClientCheckFileSignatureResponse_default_instance_;
class CMsgClientReadMachineAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReadMachineAuth>
      _instance;
} _CMsgClientReadMachineAuth_default_instance_;
class CMsgClientReadMachineAuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReadMachineAuthResponse>
      _instance;
} _CMsgClientReadMachineAuthResponse_default_instance_;
class CMsgClientUpdateMachineAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateMachineAuth>
      _instance;
} _CMsgClientUpdateMachineAuth_default_instance_;
class CMsgClientUpdateMachineAuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateMachineAuthResponse>
      _instance;
} _CMsgClientUpdateMachineAuthResponse_default_instance_;
class CMsgClientRequestMachineAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestMachineAuth>
      _instance;
} _CMsgClientRequestMachineAuth_default_instance_;
class CMsgClientRequestMachineAuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestMachineAuthResponse>
      _instance;
} _CMsgClientRequestMachineAuthResponse_default_instance_;
class CMsgClientRegisterKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterKey>
      _instance;
} _CMsgClientRegisterKey_default_instance_;
class CMsgClientPurchaseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPurchaseResponse>
      _instance;
} _CMsgClientPurchaseResponse_default_instance_;
class CMsgClientActivateOEMLicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientActivateOEMLicense>
      _instance;
} _CMsgClientActivateOEMLicense_default_instance_;
class CMsgClientRegisterOEMMachineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterOEMMachine>
      _instance;
} _CMsgClientRegisterOEMMachine_default_instance_;
class CMsgClientRegisterOEMMachineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterOEMMachineResponse>
      _instance;
} _CMsgClientRegisterOEMMachineResponse_default_instance_;
class CMsgClientPurchaseWithMachineIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPurchaseWithMachineID>
      _instance;
} _CMsgClientPurchaseWithMachineID_default_instance_;
class CMsgTrading_InitiateTradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_InitiateTradeRequest>
      _instance;
} _CMsgTrading_InitiateTradeRequest_default_instance_;
class CMsgTrading_InitiateTradeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_InitiateTradeResponse>
      _instance;
} _CMsgTrading_InitiateTradeResponse_default_instance_;
class CMsgTrading_CancelTradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_CancelTradeRequest>
      _instance;
} _CMsgTrading_CancelTradeRequest_default_instance_;
class CMsgTrading_StartSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_StartSession>
      _instance;
} _CMsgTrading_StartSession_default_instance_;
class CMsgClientEmailChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailChange>
      _instance;
} _CMsgClientEmailChange_default_instance_;
class CMsgClientEmailChangeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailChangeResponse>
      _instance;
} _CMsgClientEmailChangeResponse_default_instance_;
class CMsgClientGetCDNAuthTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetCDNAuthToken>
      _instance;
} _CMsgClientGetCDNAuthToken_default_instance_;
class CMsgClientGetDepotDecryptionKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetDepotDecryptionKey>
      _instance;
} _CMsgClientGetDepotDecryptionKey_default_instance_;
class CMsgClientGetDepotDecryptionKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetDepotDecryptionKeyResponse>
      _instance;
} _CMsgClientGetDepotDecryptionKeyResponse_default_instance_;
class CMsgClientCheckAppBetaPasswordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPassword>
      _instance;
} _CMsgClientCheckAppBetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponse_BetaPasswordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPasswordResponse_BetaPassword>
      _instance;
} _CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPasswordResponse>
      _instance;
} _CMsgClientCheckAppBetaPasswordResponse_default_instance_;
class CMsgClientUpdateAppJobReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateAppJobReport>
      _instance;
} _CMsgClientUpdateAppJobReport_default_instance_;
class CMsgClientDPContentStatsReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPContentStatsReport>
      _instance;
} _CMsgClientDPContentStatsReport_default_instance_;
class CMsgClientGetCDNAuthTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetCDNAuthTokenResponse>
      _instance;
} _CMsgClientGetCDNAuthTokenResponse_default_instance_;
class CMsgDownloadRateStatistics_StatsInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDownloadRateStatistics_StatsInfo>
      _instance;
} _CMsgDownloadRateStatistics_StatsInfo_default_instance_;
class CMsgDownloadRateStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDownloadRateStatistics>
      _instance;
} _CMsgDownloadRateStatistics_default_instance_;
class CMsgClientRequestAccountDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestAccountData>
      _instance;
} _CMsgClientRequestAccountData_default_instance_;
class CMsgClientRequestAccountDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestAccountDataResponse>
      _instance;
} _CMsgClientRequestAccountDataResponse_default_instance_;
class CMsgClientUGSGetGlobalStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStats>
      _instance;
} _CMsgClientUGSGetGlobalStats_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_Day_StatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse_Day_Stat>
      _instance;
} _CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_DayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse_Day>
      _instance;
} _CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_;
class CMsgClientUGSGetGlobalStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse>
      _instance;
} _CMsgClientUGSGetGlobalStatsResponse_default_instance_;
class CMsgGameServerData_PlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerData_Player>
      _instance;
} _CMsgGameServerData_Player_default_instance_;
class CMsgGameServerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerData>
      _instance;
} _CMsgGameServerData_default_instance_;
class CMsgGameServerRemoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerRemove>
      _instance;
} _CMsgGameServerRemove_default_instance_;
class CMsgClientGMSServerQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGMSServerQuery>
      _instance;
} _CMsgClientGMSServerQuery_default_instance_;
class CMsgGMSClientServerQueryResponse_ServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGMSClientServerQueryResponse_Server>
      _instance;
} _CMsgGMSClientServerQueryResponse_Server_default_instance_;
class CMsgGMSClientServerQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGMSClientServerQueryResponse>
      _instance;
} _CMsgGMSClientServerQueryResponse_default_instance_;
class CMsgGameServerOutOfDateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerOutOfDate>
      _instance;
} _CMsgGameServerOutOfDate_default_instance_;
class CMsgClientRedeemGuestPassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRedeemGuestPass>
      _instance;
} _CMsgClientRedeemGuestPass_default_instance_;
class CMsgClientRedeemGuestPassResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRedeemGuestPassResponse>
      _instance;
} _CMsgClientRedeemGuestPassResponse_default_instance_;
class CMsgClientGetClanActivityCountsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClanActivityCounts>
      _instance;
} _CMsgClientGetClanActivityCounts_default_instance_;
class CMsgClientGetClanActivityCountsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClanActivityCountsResponse>
      _instance;
} _CMsgClientGetClanActivityCountsResponse_default_instance_;
class CMsgClientOGSReportStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOGSReportString>
      _instance;
} _CMsgClientOGSReportString_default_instance_;
class CMsgClientOGSReportBugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOGSReportBug>
      _instance;
} _CMsgClientOGSReportBug_default_instance_;
class CMsgGSAssociateWithClanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSAssociateWithClan>
      _instance;
} _CMsgGSAssociateWithClan_default_instance_;
class CMsgGSAssociateWithClanResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSAssociateWithClanResponse>
      _instance;
} _CMsgGSAssociateWithClanResponse_default_instance_;
class CMsgGSComputeNewPlayerCompatibilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSComputeNewPlayerCompatibility>
      _instance;
} _CMsgGSComputeNewPlayerCompatibility_default_instance_;
class CMsgGSComputeNewPlayerCompatibilityResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSComputeNewPlayerCompatibilityResponse>
      _instance;
} _CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_;
class CMsgClientSentLogsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSentLogs>
      _instance;
} _CMsgClientSentLogs_default_instance_;
class CMsgGCClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCClient>
      _instance;
} _CMsgGCClient_default_instance_;
class CMsgClientRequestFreeLicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFreeLicense>
      _instance;
} _CMsgClientRequestFreeLicense_default_instance_;
class CMsgClientRequestFreeLicenseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFreeLicenseResponse>
      _instance;
} _CMsgClientRequestFreeLicenseResponse_default_instance_;
class CMsgDRMDownloadRequestWithCrashDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMDownloadRequestWithCrashData>
      _instance;
} _CMsgDRMDownloadRequestWithCrashData_default_instance_;
class CMsgDRMDownloadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMDownloadResponse>
      _instance;
} _CMsgDRMDownloadResponse_default_instance_;
class CMsgDRMFinalResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMFinalResult>
      _instance;
} _CMsgDRMFinalResult_default_instance_;
class CMsgClientDPCheckSpecialSurveyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPCheckSpecialSurvey>
      _instance;
} _CMsgClientDPCheckSpecialSurvey_default_instance_;
class CMsgClientDPCheckSpecialSurveyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPCheckSpecialSurveyResponse>
      _instance;
} _CMsgClientDPCheckSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPSendSpecialSurveyResponse>
      _instance;
} _CMsgClientDPSendSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPSendSpecialSurveyResponseReply>
      _instance;
} _CMsgClientDPSendSpecialSurveyResponseReply_default_instance_;
class CMsgClientRequestForgottenPasswordEmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestForgottenPasswordEmail>
      _instance;
} _CMsgClientRequestForgottenPasswordEmail_default_instance_;
class CMsgClientRequestForgottenPasswordEmailResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestForgottenPasswordEmailResponse>
      _instance;
} _CMsgClientRequestForgottenPasswordEmailResponse_default_instance_;
class CMsgClientItemAnnouncementsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientItemAnnouncements>
      _instance;
} _CMsgClientItemAnnouncements_default_instance_;
class CMsgClientRequestItemAnnouncementsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestItemAnnouncements>
      _instance;
} _CMsgClientRequestItemAnnouncements_default_instance_;
class CMsgClientUserNotifications_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUserNotifications_Notification>
      _instance;
} _CMsgClientUserNotifications_Notification_default_instance_;
class CMsgClientUserNotificationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUserNotifications>
      _instance;
} _CMsgClientUserNotifications_default_instance_;
class CMsgClientCommentNotificationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCommentNotifications>
      _instance;
} _CMsgClientCommentNotifications_default_instance_;
class CMsgClientRequestCommentNotificationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestCommentNotifications>
      _instance;
} _CMsgClientRequestCommentNotifications_default_instance_;
class CMsgClientOfflineMessageNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOfflineMessageNotification>
      _instance;
} _CMsgClientOfflineMessageNotification_default_instance_;
class CMsgClientRequestOfflineMessageCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestOfflineMessageCount>
      _instance;
} _CMsgClientRequestOfflineMessageCount_default_instance_;
class CMsgClientChatGetFriendMessageHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistory>
      _instance;
} _CMsgClientChatGetFriendMessageHistory_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>
      _instance;
} _CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryResponse>
      _instance;
} _CMsgClientChatGetFriendMessageHistoryResponse_default_instance_;
class CMsgClientChatGetFriendMessageHistoryForOfflineMessagesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryForOfflineMessages>
      _instance;
} _CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevels>
      _instance;
} _CMsgClientFSGetFriendsSteamLevels_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponse_FriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevelsResponse_Friend>
      _instance;
} _CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevelsResponse>
      _instance;
} _CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_;
class CMsgClientEmailAddrInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailAddrInfo>
      _instance;
} _CMsgClientEmailAddrInfo_default_instance_;
class CMsgCREEnumeratePublishedFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFiles>
      _instance;
} _CMsgCREEnumeratePublishedFiles_default_instance_;
class CMsgCREEnumeratePublishedFilesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFilesResponse_PublishedFileId>
      _instance;
} _CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_;
class CMsgCREEnumeratePublishedFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFilesResponse>
      _instance;
} _CMsgCREEnumeratePublishedFilesResponse_default_instance_;
class CMsgCREItemVoteSummary_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummary_PublishedFileId>
      _instance;
} _CMsgCREItemVoteSummary_PublishedFileId_default_instance_;
class CMsgCREItemVoteSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummary>
      _instance;
} _CMsgCREItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponse_ItemVoteSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummaryResponse_ItemVoteSummary>
      _instance;
} _CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummaryResponse>
      _instance;
} _CMsgCREItemVoteSummaryResponse_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREUpdateUserPublishedItemVote>
      _instance;
} _CMsgCREUpdateUserPublishedItemVote_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREUpdateUserPublishedItemVoteResponse>
      _instance;
} _CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>
      _instance;
} _CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetails>
      _instance;
} _CMsgCREGetUserPublishedItemVoteDetails_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>
      _instance;
} _CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetailsResponse>
      _instance;
} _CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_;
class CMsgGameServerPingSample_SampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerPingSample_Sample>
      _instance;
} _CMsgGameServerPingSample_Sample_default_instance_;
class CMsgGameServerPingSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerPingSample>
      _instance;
} _CMsgGameServerPingSample_default_instance_;
class CMsgFSGetFollowerCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetFollowerCount>
      _instance;
} _CMsgFSGetFollowerCount_default_instance_;
class CMsgFSGetFollowerCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetFollowerCountResponse>
      _instance;
} _CMsgFSGetFollowerCountResponse_default_instance_;
class CMsgFSGetIsFollowingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetIsFollowing>
      _instance;
} _CMsgFSGetIsFollowing_default_instance_;
class CMsgFSGetIsFollowingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetIsFollowingResponse>
      _instance;
} _CMsgFSGetIsFollowingResponse_default_instance_;
class CMsgFSEnumerateFollowingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSEnumerateFollowingList>
      _instance;
} _CMsgFSEnumerateFollowingList_default_instance_;
class CMsgFSEnumerateFollowingListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSEnumerateFollowingListResponse>
      _instance;
} _CMsgFSEnumerateFollowingListResponse_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDPGetNumberOfCurrentPlayers>
      _instance;
} _CMsgDPGetNumberOfCurrentPlayers_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDPGetNumberOfCurrentPlayersResponse>
      _instance;
} _CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_;
class CMsgClientFriendUserStatusPublishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendUserStatusPublished>
      _instance;
} _CMsgClientFriendUserStatusPublished_default_instance_;
class CMsgClientServiceMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceMethod>
      _instance;
} _CMsgClientServiceMethod_default_instance_;
class CMsgClientServiceMethodResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceMethodResponse>
      _instance;
} _CMsgClientServiceMethodResponse_default_instance_;
class CMsgClientUIModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUIMode>
      _instance;
} _CMsgClientUIMode_default_instance_;
class CMsgClientVanityURLChangedNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVanityURLChangedNotification>
      _instance;
} _CMsgClientVanityURLChangedNotification_default_instance_;
class CMsgClientAuthorizeLocalDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDeviceRequest>
      _instance;
} _CMsgClientAuthorizeLocalDeviceRequest_default_instance_;
class CMsgClientAuthorizeLocalDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDevice>
      _instance;
} _CMsgClientAuthorizeLocalDevice_default_instance_;
class CMsgClientAuthorizeLocalDeviceNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDeviceNotification>
      _instance;
} _CMsgClientAuthorizeLocalDeviceNotification_default_instance_;
class CMsgClientDeauthorizeDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeauthorizeDeviceRequest>
      _instance;
} _CMsgClientDeauthorizeDeviceRequest_default_instance_;
class CMsgClientDeauthorizeDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeauthorizeDevice>
      _instance;
} _CMsgClientDeauthorizeDevice_default_instance_;
class CMsgClientUseLocalDeviceAuthorizations_DeviceTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUseLocalDeviceAuthorizations_DeviceToken>
      _instance;
} _CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_;
class CMsgClientUseLocalDeviceAuthorizationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUseLocalDeviceAuthorizations>
      _instance;
} _CMsgClientUseLocalDeviceAuthorizations_default_instance_;
class CMsgClientGetAuthorizedDevicesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevices>
      _instance;
} _CMsgClientGetAuthorizedDevices_default_instance_;
class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>
      _instance;
} _CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_;
class CMsgClientGetAuthorizedDevicesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevicesResponse>
      _instance;
} _CMsgClientGetAuthorizedDevicesResponse_default_instance_;
class CMsgClientSharedLibraryLockStatus_LockedLibraryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryLockStatus_LockedLibrary>
      _instance;
} _CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_;
class CMsgClientSharedLibraryLockStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryLockStatus>
      _instance;
} _CMsgClientSharedLibraryLockStatus_default_instance_;
class CMsgClientSharedLibraryStopPlaying_StopAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryStopPlaying_StopApp>
      _instance;
} _CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_;
class CMsgClientSharedLibraryStopPlayingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryStopPlaying>
      _instance;
} _CMsgClientSharedLibraryStopPlaying_default_instance_;
class CMsgClientServiceCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceCall>
      _instance;
} _CMsgClientServiceCall_default_instance_;
class CMsgClientServiceModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceModule>
      _instance;
} _CMsgClientServiceModule_default_instance_;
class CMsgClientServiceCallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceCallResponse>
      _instance;
} _CMsgClientServiceCallResponse_default_instance_;
class CMsgAMUnlockStreamingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockStreaming>
      _instance;
} _CMsgAMUnlockStreaming_default_instance_;
class CMsgAMUnlockStreamingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockStreamingResponse>
      _instance;
} _CMsgAMUnlockStreamingResponse_default_instance_;
class CMsgAMUnlockHEVCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockHEVC>
      _instance;
} _CMsgAMUnlockHEVC_default_instance_;
class CMsgAMUnlockHEVCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockHEVCResponse>
      _instance;
} _CMsgAMUnlockHEVCResponse_default_instance_;
class CMsgClientPlayingSessionStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPlayingSessionState>
      _instance;
} _CMsgClientPlayingSessionState_default_instance_;
class CMsgClientKickPlayingSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientKickPlayingSession>
      _instance;
} _CMsgClientKickPlayingSession_default_instance_;
class CMsgClientVoiceCallPreAuthorizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVoiceCallPreAuthorize>
      _instance;
} _CMsgClientVoiceCallPreAuthorize_default_instance_;
class CMsgClientVoiceCallPreAuthorizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVoiceCallPreAuthorizeResponse>
      _instance;
} _CMsgClientVoiceCallPreAuthorizeResponse_default_instance_;
namespace protobuf_steammessages_5fclientserver_5f2_2eproto {
static void InitDefaultsCMsgClientUCMAddScreenshot_Tag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMAddScreenshot_Tag_default_instance_;
    new (ptr) ::CMsgClientUCMAddScreenshot_Tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMAddScreenshot_Tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMAddScreenshot_Tag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMAddScreenshot_Tag}, {}};

static void InitDefaultsCMsgClientUCMAddScreenshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMAddScreenshot_default_instance_;
    new (ptr) ::CMsgClientUCMAddScreenshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMAddScreenshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMAddScreenshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMAddScreenshot}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshot_Tag.base,}};

static void InitDefaultsCMsgClientUCMAddScreenshotResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMAddScreenshotResponse_default_instance_;
    new (ptr) ::CMsgClientUCMAddScreenshotResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMAddScreenshotResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMAddScreenshotResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMAddScreenshotResponse}, {}};

static void InitDefaultsCMsgClientUCMDeleteScreenshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMDeleteScreenshot_default_instance_;
    new (ptr) ::CMsgClientUCMDeleteScreenshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMDeleteScreenshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeleteScreenshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeleteScreenshot}, {}};

static void InitDefaultsCMsgClientUCMDeleteScreenshotResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMDeleteScreenshotResponse_default_instance_;
    new (ptr) ::CMsgClientUCMDeleteScreenshotResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMDeleteScreenshotResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeleteScreenshotResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeleteScreenshotResponse}, {}};

static void InitDefaultsCMsgClientUCMPublishFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMPublishFile_default_instance_;
    new (ptr) ::CMsgClientUCMPublishFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMPublishFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishFile}, {}};

static void InitDefaultsCMsgClientUCMPublishFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMPublishFileResponse_default_instance_;
    new (ptr) ::CMsgClientUCMPublishFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMPublishFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishFileResponse}, {}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFile_KeyValueTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
    new (ptr) ::CMsgClientUCMUpdatePublishedFile_KeyValueTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMUpdatePublishedFile_KeyValueTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMUpdatePublishedFile_KeyValueTag}, {}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFile_AdditionalPreview() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
    new (ptr) ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMUpdatePublishedFile_AdditionalPreview}, {}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMUpdatePublishedFile_default_instance_;
    new (ptr) ::CMsgClientUCMUpdatePublishedFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMUpdatePublishedFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientUCMUpdatePublishedFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientUCMUpdatePublishedFile}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag.base,
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview.base,}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
    new (ptr) ::CMsgClientUCMUpdatePublishedFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMUpdatePublishedFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMUpdatePublishedFileResponse}, {}};

static void InitDefaultsCMsgClientUCMDeletePublishedFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMDeletePublishedFile_default_instance_;
    new (ptr) ::CMsgClientUCMDeletePublishedFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMDeletePublishedFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeletePublishedFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeletePublishedFile}, {}};

static void InitDefaultsCMsgClientUCMDeletePublishedFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMDeletePublishedFileResponse_default_instance_;
    new (ptr) ::CMsgClientUCMDeletePublishedFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMDeletePublishedFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeletePublishedFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeletePublishedFileResponse}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserPublishedFiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserPublishedFiles_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserPublishedFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserPublishedFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserPublishedFiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserPublishedFiles}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserPublishedFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserPublishedFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId.base,}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserSubscribedFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserSubscribedFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFiles}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserSubscribedFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserSubscribedFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId.base,}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdates}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
    new (ptr) ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId.base,}};

static void InitDefaultsCMsgClientUCMPublishedFileSubscribed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMPublishedFileSubscribed_default_instance_;
    new (ptr) ::CMsgClientUCMPublishedFileSubscribed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMPublishedFileSubscribed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileSubscribed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileSubscribed}, {}};

static void InitDefaultsCMsgClientUCMPublishedFileUnsubscribed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMPublishedFileUnsubscribed_default_instance_;
    new (ptr) ::CMsgClientUCMPublishedFileUnsubscribed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMPublishedFileUnsubscribed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileUnsubscribed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileUnsubscribed}, {}};

static void InitDefaultsCMsgClientUCMPublishedFileDeleted() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMPublishedFileDeleted_default_instance_;
    new (ptr) ::CMsgClientUCMPublishedFileDeleted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMPublishedFileDeleted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileDeleted =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileDeleted}, {}};

static void InitDefaultsCMsgClientUCMPublishedFileUpdated() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMPublishedFileUpdated_default_instance_;
    new (ptr) ::CMsgClientUCMPublishedFileUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMPublishedFileUpdated::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileUpdated =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileUpdated}, {}};

static void InitDefaultsCMsgClientWorkshopItemChangesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemChangesRequest_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemChangesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemChangesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemChangesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemChangesRequest}, {}};

static void InitDefaultsCMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemChangesResponse_WorkshopItemInfo}, {}};

static void InitDefaultsCMsgClientWorkshopItemChangesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemChangesResponse_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemChangesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemChangesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientWorkshopItemChangesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientWorkshopItemChangesResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo.base,}};

static void InitDefaultsCMsgClientWorkshopItemInfoRequest_WorkshopItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemInfoRequest_WorkshopItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemInfoRequest_WorkshopItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemInfoRequest_WorkshopItem}, {}};

static void InitDefaultsCMsgClientWorkshopItemInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemInfoRequest_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientWorkshopItemInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientWorkshopItemInfoRequest}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem.base,}};

static void InitDefaultsCMsgClientWorkshopItemInfoResponse_WorkshopItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemInfoResponse_WorkshopItemInfo}, {}};

static void InitDefaultsCMsgClientWorkshopItemInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWorkshopItemInfoResponse_default_instance_;
    new (ptr) ::CMsgClientWorkshopItemInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWorkshopItemInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientWorkshopItemInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientWorkshopItemInfoResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo.base,}};

static void InitDefaultsCMsgClientUCMGetPublishedFilesForUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMGetPublishedFilesForUser_default_instance_;
    new (ptr) ::CMsgClientUCMGetPublishedFilesForUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMGetPublishedFilesForUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMGetPublishedFilesForUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMGetPublishedFilesForUser}, {}};

static void InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_;
    new (ptr) ::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId}, {}};

static void InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_;
    new (ptr) ::CMsgClientUCMGetPublishedFilesForUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMGetPublishedFilesForUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMGetPublishedFilesForUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId.base,}};

static void InitDefaultsCMsgClientUCMSetUserPublishedFileAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMSetUserPublishedFileAction_default_instance_;
    new (ptr) ::CMsgClientUCMSetUserPublishedFileAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMSetUserPublishedFileAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMSetUserPublishedFileAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMSetUserPublishedFileAction}, {}};

static void InitDefaultsCMsgClientUCMSetUserPublishedFileActionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
    new (ptr) ::CMsgClientUCMSetUserPublishedFileActionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMSetUserPublishedFileActionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMSetUserPublishedFileActionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMSetUserPublishedFileActionResponse}, {}};

static void InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
    new (ptr) ::CMsgClientUCMEnumeratePublishedFilesByUserAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumeratePublishedFilesByUserAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserAction}, {}};

static void InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
    new (ptr) ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId}, {}};

static void InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
    new (ptr) ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId.base,}};

static void InitDefaultsCMsgClientScreenshotsChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientScreenshotsChanged_default_instance_;
    new (ptr) ::CMsgClientScreenshotsChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientScreenshotsChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientScreenshotsChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientScreenshotsChanged}, {}};

static void InitDefaultsCMsgClientUpdateUserGameInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUpdateUserGameInfo_default_instance_;
    new (ptr) ::CMsgClientUpdateUserGameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUpdateUserGameInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateUserGameInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateUserGameInfo}, {}};

static void InitDefaultsCMsgClientRichPresenceUpload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRichPresenceUpload_default_instance_;
    new (ptr) ::CMsgClientRichPresenceUpload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRichPresenceUpload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceUpload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRichPresenceUpload}, {}};

static void InitDefaultsCMsgClientRichPresenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRichPresenceRequest_default_instance_;
    new (ptr) ::CMsgClientRichPresenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRichPresenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRichPresenceRequest}, {}};

static void InitDefaultsCMsgClientRichPresenceInfo_RichPresence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRichPresenceInfo_RichPresence_default_instance_;
    new (ptr) ::CMsgClientRichPresenceInfo_RichPresence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRichPresenceInfo_RichPresence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceInfo_RichPresence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRichPresenceInfo_RichPresence}, {}};

static void InitDefaultsCMsgClientRichPresenceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRichPresenceInfo_default_instance_;
    new (ptr) ::CMsgClientRichPresenceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRichPresenceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientRichPresenceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientRichPresenceInfo}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceInfo_RichPresence.base,}};

static void InitDefaultsCMsgClientCheckFileSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCheckFileSignature_default_instance_;
    new (ptr) ::CMsgClientCheckFileSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCheckFileSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckFileSignature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckFileSignature}, {}};

static void InitDefaultsCMsgClientCheckFileSignatureResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCheckFileSignatureResponse_default_instance_;
    new (ptr) ::CMsgClientCheckFileSignatureResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCheckFileSignatureResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckFileSignatureResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckFileSignatureResponse}, {}};

static void InitDefaultsCMsgClientReadMachineAuth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientReadMachineAuth_default_instance_;
    new (ptr) ::CMsgClientReadMachineAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientReadMachineAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientReadMachineAuth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientReadMachineAuth}, {}};

static void InitDefaultsCMsgClientReadMachineAuthResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientReadMachineAuthResponse_default_instance_;
    new (ptr) ::CMsgClientReadMachineAuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientReadMachineAuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientReadMachineAuthResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientReadMachineAuthResponse}, {}};

static void InitDefaultsCMsgClientUpdateMachineAuth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUpdateMachineAuth_default_instance_;
    new (ptr) ::CMsgClientUpdateMachineAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUpdateMachineAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateMachineAuth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateMachineAuth}, {}};

static void InitDefaultsCMsgClientUpdateMachineAuthResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUpdateMachineAuthResponse_default_instance_;
    new (ptr) ::CMsgClientUpdateMachineAuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUpdateMachineAuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateMachineAuthResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateMachineAuthResponse}, {}};

static void InitDefaultsCMsgClientRequestMachineAuth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestMachineAuth_default_instance_;
    new (ptr) ::CMsgClientRequestMachineAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestMachineAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestMachineAuth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestMachineAuth}, {}};

static void InitDefaultsCMsgClientRequestMachineAuthResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestMachineAuthResponse_default_instance_;
    new (ptr) ::CMsgClientRequestMachineAuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestMachineAuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestMachineAuthResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestMachineAuthResponse}, {}};

static void InitDefaultsCMsgClientRegisterKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRegisterKey_default_instance_;
    new (ptr) ::CMsgClientRegisterKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRegisterKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterKey}, {}};

static void InitDefaultsCMsgClientPurchaseResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPurchaseResponse_default_instance_;
    new (ptr) ::CMsgClientPurchaseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPurchaseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPurchaseResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPurchaseResponse}, {}};

static void InitDefaultsCMsgClientActivateOEMLicense() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientActivateOEMLicense_default_instance_;
    new (ptr) ::CMsgClientActivateOEMLicense();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientActivateOEMLicense::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientActivateOEMLicense =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientActivateOEMLicense}, {}};

static void InitDefaultsCMsgClientRegisterOEMMachine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRegisterOEMMachine_default_instance_;
    new (ptr) ::CMsgClientRegisterOEMMachine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRegisterOEMMachine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterOEMMachine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterOEMMachine}, {}};

static void InitDefaultsCMsgClientRegisterOEMMachineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRegisterOEMMachineResponse_default_instance_;
    new (ptr) ::CMsgClientRegisterOEMMachineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRegisterOEMMachineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterOEMMachineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterOEMMachineResponse}, {}};

static void InitDefaultsCMsgClientPurchaseWithMachineID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPurchaseWithMachineID_default_instance_;
    new (ptr) ::CMsgClientPurchaseWithMachineID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPurchaseWithMachineID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPurchaseWithMachineID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPurchaseWithMachineID}, {}};

static void InitDefaultsCMsgTrading_InitiateTradeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTrading_InitiateTradeRequest_default_instance_;
    new (ptr) ::CMsgTrading_InitiateTradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTrading_InitiateTradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_InitiateTradeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_InitiateTradeRequest}, {}};

static void InitDefaultsCMsgTrading_InitiateTradeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTrading_InitiateTradeResponse_default_instance_;
    new (ptr) ::CMsgTrading_InitiateTradeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTrading_InitiateTradeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_InitiateTradeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_InitiateTradeResponse}, {}};

static void InitDefaultsCMsgTrading_CancelTradeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTrading_CancelTradeRequest_default_instance_;
    new (ptr) ::CMsgTrading_CancelTradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTrading_CancelTradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_CancelTradeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_CancelTradeRequest}, {}};

static void InitDefaultsCMsgTrading_StartSession() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTrading_StartSession_default_instance_;
    new (ptr) ::CMsgTrading_StartSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTrading_StartSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_StartSession =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_StartSession}, {}};

static void InitDefaultsCMsgClientEmailChange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientEmailChange_default_instance_;
    new (ptr) ::CMsgClientEmailChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientEmailChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientEmailChange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientEmailChange}, {}};

static void InitDefaultsCMsgClientEmailChangeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientEmailChangeResponse_default_instance_;
    new (ptr) ::CMsgClientEmailChangeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientEmailChangeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientEmailChangeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientEmailChangeResponse}, {}};

static void InitDefaultsCMsgClientGetCDNAuthToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetCDNAuthToken_default_instance_;
    new (ptr) ::CMsgClientGetCDNAuthToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetCDNAuthToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetCDNAuthToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetCDNAuthToken}, {}};

static void InitDefaultsCMsgClientGetDepotDecryptionKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetDepotDecryptionKey_default_instance_;
    new (ptr) ::CMsgClientGetDepotDecryptionKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetDepotDecryptionKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetDepotDecryptionKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetDepotDecryptionKey}, {}};

static void InitDefaultsCMsgClientGetDepotDecryptionKeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetDepotDecryptionKeyResponse_default_instance_;
    new (ptr) ::CMsgClientGetDepotDecryptionKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetDepotDecryptionKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetDepotDecryptionKeyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetDepotDecryptionKeyResponse}, {}};

static void InitDefaultsCMsgClientCheckAppBetaPassword() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCheckAppBetaPassword_default_instance_;
    new (ptr) ::CMsgClientCheckAppBetaPassword();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCheckAppBetaPassword::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckAppBetaPassword =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckAppBetaPassword}, {}};

static void InitDefaultsCMsgClientCheckAppBetaPasswordResponse_BetaPassword() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_;
    new (ptr) ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckAppBetaPasswordResponse_BetaPassword}, {}};

static void InitDefaultsCMsgClientCheckAppBetaPasswordResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCheckAppBetaPasswordResponse_default_instance_;
    new (ptr) ::CMsgClientCheckAppBetaPasswordResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCheckAppBetaPasswordResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientCheckAppBetaPasswordResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientCheckAppBetaPasswordResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword.base,}};

static void InitDefaultsCMsgClientUpdateAppJobReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUpdateAppJobReport_default_instance_;
    new (ptr) ::CMsgClientUpdateAppJobReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUpdateAppJobReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateAppJobReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateAppJobReport}, {}};

static void InitDefaultsCMsgClientDPContentStatsReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDPContentStatsReport_default_instance_;
    new (ptr) ::CMsgClientDPContentStatsReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDPContentStatsReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPContentStatsReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPContentStatsReport}, {}};

static void InitDefaultsCMsgClientGetCDNAuthTokenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetCDNAuthTokenResponse_default_instance_;
    new (ptr) ::CMsgClientGetCDNAuthTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetCDNAuthTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetCDNAuthTokenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetCDNAuthTokenResponse}, {}};

static void InitDefaultsCMsgDownloadRateStatistics_StatsInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDownloadRateStatistics_StatsInfo_default_instance_;
    new (ptr) ::CMsgDownloadRateStatistics_StatsInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDownloadRateStatistics_StatsInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDownloadRateStatistics_StatsInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDownloadRateStatistics_StatsInfo}, {}};

static void InitDefaultsCMsgDownloadRateStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDownloadRateStatistics_default_instance_;
    new (ptr) ::CMsgDownloadRateStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDownloadRateStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgDownloadRateStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgDownloadRateStatistics}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDownloadRateStatistics_StatsInfo.base,}};

static void InitDefaultsCMsgClientRequestAccountData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestAccountData_default_instance_;
    new (ptr) ::CMsgClientRequestAccountData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestAccountData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestAccountData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestAccountData}, {}};

static void InitDefaultsCMsgClientRequestAccountDataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestAccountDataResponse_default_instance_;
    new (ptr) ::CMsgClientRequestAccountDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestAccountDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestAccountDataResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestAccountDataResponse}, {}};

static void InitDefaultsCMsgClientUGSGetGlobalStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUGSGetGlobalStats_default_instance_;
    new (ptr) ::CMsgClientUGSGetGlobalStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUGSGetGlobalStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUGSGetGlobalStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUGSGetGlobalStats}, {}};

static void InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day_Stat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_;
    new (ptr) ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day_Stat}, {}};

static void InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_;
    new (ptr) ::CMsgClientUGSGetGlobalStatsResponse_Day();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUGSGetGlobalStatsResponse_Day::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat.base,}};

static void InitDefaultsCMsgClientUGSGetGlobalStatsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUGSGetGlobalStatsResponse_default_instance_;
    new (ptr) ::CMsgClientUGSGetGlobalStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUGSGetGlobalStatsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUGSGetGlobalStatsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUGSGetGlobalStatsResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day.base,}};

static void InitDefaultsCMsgGameServerData_Player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameServerData_Player_default_instance_;
    new (ptr) ::CMsgGameServerData_Player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerData_Player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerData_Player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerData_Player}, {}};

static void InitDefaultsCMsgGameServerData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameServerData_default_instance_;
    new (ptr) ::CMsgGameServerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGameServerData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGameServerData}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerData_Player.base,}};

static void InitDefaultsCMsgGameServerRemove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameServerRemove_default_instance_;
    new (ptr) ::CMsgGameServerRemove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerRemove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerRemove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerRemove}, {}};

static void InitDefaultsCMsgClientGMSServerQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGMSServerQuery_default_instance_;
    new (ptr) ::CMsgClientGMSServerQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGMSServerQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGMSServerQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGMSServerQuery}, {}};

static void InitDefaultsCMsgGMSClientServerQueryResponse_Server() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGMSClientServerQueryResponse_Server_default_instance_;
    new (ptr) ::CMsgGMSClientServerQueryResponse_Server();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGMSClientServerQueryResponse_Server::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGMSClientServerQueryResponse_Server =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGMSClientServerQueryResponse_Server}, {}};

static void InitDefaultsCMsgGMSClientServerQueryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGMSClientServerQueryResponse_default_instance_;
    new (ptr) ::CMsgGMSClientServerQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGMSClientServerQueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGMSClientServerQueryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGMSClientServerQueryResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGMSClientServerQueryResponse_Server.base,}};

static void InitDefaultsCMsgGameServerOutOfDate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameServerOutOfDate_default_instance_;
    new (ptr) ::CMsgGameServerOutOfDate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerOutOfDate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerOutOfDate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerOutOfDate}, {}};

static void InitDefaultsCMsgClientRedeemGuestPass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRedeemGuestPass_default_instance_;
    new (ptr) ::CMsgClientRedeemGuestPass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRedeemGuestPass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRedeemGuestPass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRedeemGuestPass}, {}};

static void InitDefaultsCMsgClientRedeemGuestPassResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRedeemGuestPassResponse_default_instance_;
    new (ptr) ::CMsgClientRedeemGuestPassResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRedeemGuestPassResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRedeemGuestPassResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRedeemGuestPassResponse}, {}};

static void InitDefaultsCMsgClientGetClanActivityCounts() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClanActivityCounts_default_instance_;
    new (ptr) ::CMsgClientGetClanActivityCounts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClanActivityCounts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClanActivityCounts =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClanActivityCounts}, {}};

static void InitDefaultsCMsgClientGetClanActivityCountsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClanActivityCountsResponse_default_instance_;
    new (ptr) ::CMsgClientGetClanActivityCountsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClanActivityCountsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClanActivityCountsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClanActivityCountsResponse}, {}};

static void InitDefaultsCMsgClientOGSReportString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientOGSReportString_default_instance_;
    new (ptr) ::CMsgClientOGSReportString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientOGSReportString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientOGSReportString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientOGSReportString}, {}};

static void InitDefaultsCMsgClientOGSReportBug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientOGSReportBug_default_instance_;
    new (ptr) ::CMsgClientOGSReportBug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientOGSReportBug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientOGSReportBug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientOGSReportBug}, {}};

static void InitDefaultsCMsgGSAssociateWithClan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSAssociateWithClan_default_instance_;
    new (ptr) ::CMsgGSAssociateWithClan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSAssociateWithClan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSAssociateWithClan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSAssociateWithClan}, {}};

static void InitDefaultsCMsgGSAssociateWithClanResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSAssociateWithClanResponse_default_instance_;
    new (ptr) ::CMsgGSAssociateWithClanResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSAssociateWithClanResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSAssociateWithClanResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSAssociateWithClanResponse}, {}};

static void InitDefaultsCMsgGSComputeNewPlayerCompatibility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSComputeNewPlayerCompatibility_default_instance_;
    new (ptr) ::CMsgGSComputeNewPlayerCompatibility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSComputeNewPlayerCompatibility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSComputeNewPlayerCompatibility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSComputeNewPlayerCompatibility}, {}};

static void InitDefaultsCMsgGSComputeNewPlayerCompatibilityResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_;
    new (ptr) ::CMsgGSComputeNewPlayerCompatibilityResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSComputeNewPlayerCompatibilityResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSComputeNewPlayerCompatibilityResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSComputeNewPlayerCompatibilityResponse}, {}};

static void InitDefaultsCMsgClientSentLogs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSentLogs_default_instance_;
    new (ptr) ::CMsgClientSentLogs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSentLogs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSentLogs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSentLogs}, {}};

static void InitDefaultsCMsgGCClient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGCClient_default_instance_;
    new (ptr) ::CMsgGCClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCClient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCClient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCClient}, {}};

static void InitDefaultsCMsgClientRequestFreeLicense() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestFreeLicense_default_instance_;
    new (ptr) ::CMsgClientRequestFreeLicense();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestFreeLicense::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestFreeLicense =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestFreeLicense}, {}};

static void InitDefaultsCMsgClientRequestFreeLicenseResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestFreeLicenseResponse_default_instance_;
    new (ptr) ::CMsgClientRequestFreeLicenseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestFreeLicenseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestFreeLicenseResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestFreeLicenseResponse}, {}};

static void InitDefaultsCMsgDRMDownloadRequestWithCrashData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDRMDownloadRequestWithCrashData_default_instance_;
    new (ptr) ::CMsgDRMDownloadRequestWithCrashData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDRMDownloadRequestWithCrashData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDRMDownloadRequestWithCrashData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDRMDownloadRequestWithCrashData}, {}};

static void InitDefaultsCMsgDRMDownloadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDRMDownloadResponse_default_instance_;
    new (ptr) ::CMsgDRMDownloadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDRMDownloadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDRMDownloadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDRMDownloadResponse}, {}};

static void InitDefaultsCMsgDRMFinalResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDRMFinalResult_default_instance_;
    new (ptr) ::CMsgDRMFinalResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDRMFinalResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDRMFinalResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDRMFinalResult}, {}};

static void InitDefaultsCMsgClientDPCheckSpecialSurvey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDPCheckSpecialSurvey_default_instance_;
    new (ptr) ::CMsgClientDPCheckSpecialSurvey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDPCheckSpecialSurvey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPCheckSpecialSurvey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPCheckSpecialSurvey}, {}};

static void InitDefaultsCMsgClientDPCheckSpecialSurveyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDPCheckSpecialSurveyResponse_default_instance_;
    new (ptr) ::CMsgClientDPCheckSpecialSurveyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDPCheckSpecialSurveyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPCheckSpecialSurveyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPCheckSpecialSurveyResponse}, {}};

static void InitDefaultsCMsgClientDPSendSpecialSurveyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDPSendSpecialSurveyResponse_default_instance_;
    new (ptr) ::CMsgClientDPSendSpecialSurveyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDPSendSpecialSurveyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPSendSpecialSurveyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPSendSpecialSurveyResponse}, {}};

static void InitDefaultsCMsgClientDPSendSpecialSurveyResponseReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDPSendSpecialSurveyResponseReply_default_instance_;
    new (ptr) ::CMsgClientDPSendSpecialSurveyResponseReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDPSendSpecialSurveyResponseReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPSendSpecialSurveyResponseReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPSendSpecialSurveyResponseReply}, {}};

static void InitDefaultsCMsgClientRequestForgottenPasswordEmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestForgottenPasswordEmail_default_instance_;
    new (ptr) ::CMsgClientRequestForgottenPasswordEmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestForgottenPasswordEmail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestForgottenPasswordEmail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestForgottenPasswordEmail}, {}};

static void InitDefaultsCMsgClientRequestForgottenPasswordEmailResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestForgottenPasswordEmailResponse_default_instance_;
    new (ptr) ::CMsgClientRequestForgottenPasswordEmailResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestForgottenPasswordEmailResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestForgottenPasswordEmailResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestForgottenPasswordEmailResponse}, {}};

static void InitDefaultsCMsgClientItemAnnouncements() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientItemAnnouncements_default_instance_;
    new (ptr) ::CMsgClientItemAnnouncements();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientItemAnnouncements::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientItemAnnouncements =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientItemAnnouncements}, {}};

static void InitDefaultsCMsgClientRequestItemAnnouncements() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestItemAnnouncements_default_instance_;
    new (ptr) ::CMsgClientRequestItemAnnouncements();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestItemAnnouncements::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestItemAnnouncements =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestItemAnnouncements}, {}};

static void InitDefaultsCMsgClientUserNotifications_Notification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUserNotifications_Notification_default_instance_;
    new (ptr) ::CMsgClientUserNotifications_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUserNotifications_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUserNotifications_Notification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUserNotifications_Notification}, {}};

static void InitDefaultsCMsgClientUserNotifications() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUserNotifications_default_instance_;
    new (ptr) ::CMsgClientUserNotifications();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUserNotifications::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUserNotifications =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUserNotifications}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUserNotifications_Notification.base,}};

static void InitDefaultsCMsgClientCommentNotifications() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCommentNotifications_default_instance_;
    new (ptr) ::CMsgClientCommentNotifications();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCommentNotifications::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCommentNotifications =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCommentNotifications}, {}};

static void InitDefaultsCMsgClientRequestCommentNotifications() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestCommentNotifications_default_instance_;
    new (ptr) ::CMsgClientRequestCommentNotifications();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestCommentNotifications::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestCommentNotifications =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestCommentNotifications}, {}};

static void InitDefaultsCMsgClientOfflineMessageNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientOfflineMessageNotification_default_instance_;
    new (ptr) ::CMsgClientOfflineMessageNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientOfflineMessageNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientOfflineMessageNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientOfflineMessageNotification}, {}};

static void InitDefaultsCMsgClientRequestOfflineMessageCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestOfflineMessageCount_default_instance_;
    new (ptr) ::CMsgClientRequestOfflineMessageCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestOfflineMessageCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestOfflineMessageCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestOfflineMessageCount}, {}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientChatGetFriendMessageHistory_default_instance_;
    new (ptr) ::CMsgClientChatGetFriendMessageHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientChatGetFriendMessageHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatGetFriendMessageHistory}, {}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse_FriendMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_;
    new (ptr) ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse_FriendMessage}, {}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientChatGetFriendMessageHistoryResponse_default_instance_;
    new (ptr) ::CMsgClientChatGetFriendMessageHistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientChatGetFriendMessageHistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientChatGetFriendMessageHistoryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage.base,}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistoryForOfflineMessages() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_;
    new (ptr) ::CMsgClientChatGetFriendMessageHistoryForOfflineMessages();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatGetFriendMessageHistoryForOfflineMessages}, {}};

static void InitDefaultsCMsgClientFSGetFriendsSteamLevels() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFSGetFriendsSteamLevels_default_instance_;
    new (ptr) ::CMsgClientFSGetFriendsSteamLevels();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFSGetFriendsSteamLevels::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFSGetFriendsSteamLevels =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFSGetFriendsSteamLevels}, {}};

static void InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse_Friend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_;
    new (ptr) ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse_Friend}, {}};

static void InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_;
    new (ptr) ::CMsgClientFSGetFriendsSteamLevelsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFSGetFriendsSteamLevelsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientFSGetFriendsSteamLevelsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend.base,}};

static void InitDefaultsCMsgClientEmailAddrInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientEmailAddrInfo_default_instance_;
    new (ptr) ::CMsgClientEmailAddrInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientEmailAddrInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientEmailAddrInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientEmailAddrInfo}, {}};

static void InitDefaultsCMsgCREEnumeratePublishedFiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREEnumeratePublishedFiles_default_instance_;
    new (ptr) ::CMsgCREEnumeratePublishedFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREEnumeratePublishedFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREEnumeratePublishedFiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREEnumeratePublishedFiles}, {}};

static void InitDefaultsCMsgCREEnumeratePublishedFilesResponse_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_;
    new (ptr) ::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREEnumeratePublishedFilesResponse_PublishedFileId}, {}};

static void InitDefaultsCMsgCREEnumeratePublishedFilesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREEnumeratePublishedFilesResponse_default_instance_;
    new (ptr) ::CMsgCREEnumeratePublishedFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREEnumeratePublishedFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREEnumeratePublishedFilesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREEnumeratePublishedFilesResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId.base,}};

static void InitDefaultsCMsgCREItemVoteSummary_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREItemVoteSummary_PublishedFileId_default_instance_;
    new (ptr) ::CMsgCREItemVoteSummary_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREItemVoteSummary_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummary_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREItemVoteSummary_PublishedFileId}, {}};

static void InitDefaultsCMsgCREItemVoteSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREItemVoteSummary_default_instance_;
    new (ptr) ::CMsgCREItemVoteSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREItemVoteSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREItemVoteSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREItemVoteSummary}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummary_PublishedFileId.base,}};

static void InitDefaultsCMsgCREItemVoteSummaryResponse_ItemVoteSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_;
    new (ptr) ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREItemVoteSummaryResponse_ItemVoteSummary}, {}};

static void InitDefaultsCMsgCREItemVoteSummaryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREItemVoteSummaryResponse_default_instance_;
    new (ptr) ::CMsgCREItemVoteSummaryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREItemVoteSummaryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREItemVoteSummaryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREItemVoteSummaryResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary.base,}};

static void InitDefaultsCMsgCREUpdateUserPublishedItemVote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREUpdateUserPublishedItemVote_default_instance_;
    new (ptr) ::CMsgCREUpdateUserPublishedItemVote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREUpdateUserPublishedItemVote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREUpdateUserPublishedItemVote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREUpdateUserPublishedItemVote}, {}};

static void InitDefaultsCMsgCREUpdateUserPublishedItemVoteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_;
    new (ptr) ::CMsgCREUpdateUserPublishedItemVoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREUpdateUserPublishedItemVoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREUpdateUserPublishedItemVoteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREUpdateUserPublishedItemVoteResponse}, {}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetails_PublishedFileId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_;
    new (ptr) ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREGetUserPublishedItemVoteDetails_PublishedFileId}, {}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREGetUserPublishedItemVoteDetails_default_instance_;
    new (ptr) ::CMsgCREGetUserPublishedItemVoteDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREGetUserPublishedItemVoteDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREGetUserPublishedItemVoteDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREGetUserPublishedItemVoteDetails}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.base,}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_;
    new (ptr) ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail}, {}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_;
    new (ptr) ::CMsgCREGetUserPublishedItemVoteDetailsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCREGetUserPublishedItemVoteDetailsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.base,}};

static void InitDefaultsCMsgGameServerPingSample_Sample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameServerPingSample_Sample_default_instance_;
    new (ptr) ::CMsgGameServerPingSample_Sample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerPingSample_Sample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerPingSample_Sample =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerPingSample_Sample}, {}};

static void InitDefaultsCMsgGameServerPingSample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameServerPingSample_default_instance_;
    new (ptr) ::CMsgGameServerPingSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerPingSample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGameServerPingSample =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGameServerPingSample}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerPingSample_Sample.base,}};

static void InitDefaultsCMsgFSGetFollowerCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFSGetFollowerCount_default_instance_;
    new (ptr) ::CMsgFSGetFollowerCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFSGetFollowerCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetFollowerCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetFollowerCount}, {}};

static void InitDefaultsCMsgFSGetFollowerCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFSGetFollowerCountResponse_default_instance_;
    new (ptr) ::CMsgFSGetFollowerCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFSGetFollowerCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetFollowerCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetFollowerCountResponse}, {}};

static void InitDefaultsCMsgFSGetIsFollowing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFSGetIsFollowing_default_instance_;
    new (ptr) ::CMsgFSGetIsFollowing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFSGetIsFollowing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetIsFollowing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetIsFollowing}, {}};

static void InitDefaultsCMsgFSGetIsFollowingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFSGetIsFollowingResponse_default_instance_;
    new (ptr) ::CMsgFSGetIsFollowingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFSGetIsFollowingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetIsFollowingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetIsFollowingResponse}, {}};

static void InitDefaultsCMsgFSEnumerateFollowingList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFSEnumerateFollowingList_default_instance_;
    new (ptr) ::CMsgFSEnumerateFollowingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFSEnumerateFollowingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSEnumerateFollowingList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSEnumerateFollowingList}, {}};

static void InitDefaultsCMsgFSEnumerateFollowingListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFSEnumerateFollowingListResponse_default_instance_;
    new (ptr) ::CMsgFSEnumerateFollowingListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFSEnumerateFollowingListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSEnumerateFollowingListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSEnumerateFollowingListResponse}, {}};

static void InitDefaultsCMsgDPGetNumberOfCurrentPlayers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDPGetNumberOfCurrentPlayers_default_instance_;
    new (ptr) ::CMsgDPGetNumberOfCurrentPlayers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDPGetNumberOfCurrentPlayers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDPGetNumberOfCurrentPlayers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDPGetNumberOfCurrentPlayers}, {}};

static void InitDefaultsCMsgDPGetNumberOfCurrentPlayersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_;
    new (ptr) ::CMsgDPGetNumberOfCurrentPlayersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDPGetNumberOfCurrentPlayersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDPGetNumberOfCurrentPlayersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDPGetNumberOfCurrentPlayersResponse}, {}};

static void InitDefaultsCMsgClientFriendUserStatusPublished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendUserStatusPublished_default_instance_;
    new (ptr) ::CMsgClientFriendUserStatusPublished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendUserStatusPublished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendUserStatusPublished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendUserStatusPublished}, {}};

static void InitDefaultsCMsgClientServiceMethod() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServiceMethod_default_instance_;
    new (ptr) ::CMsgClientServiceMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServiceMethod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceMethod =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceMethod}, {}};

static void InitDefaultsCMsgClientServiceMethodResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServiceMethodResponse_default_instance_;
    new (ptr) ::CMsgClientServiceMethodResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServiceMethodResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceMethodResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceMethodResponse}, {}};

static void InitDefaultsCMsgClientUIMode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUIMode_default_instance_;
    new (ptr) ::CMsgClientUIMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUIMode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUIMode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUIMode}, {}};

static void InitDefaultsCMsgClientVanityURLChangedNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientVanityURLChangedNotification_default_instance_;
    new (ptr) ::CMsgClientVanityURLChangedNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientVanityURLChangedNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientVanityURLChangedNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientVanityURLChangedNotification}, {}};

static void InitDefaultsCMsgClientAuthorizeLocalDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAuthorizeLocalDeviceRequest_default_instance_;
    new (ptr) ::CMsgClientAuthorizeLocalDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAuthorizeLocalDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthorizeLocalDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthorizeLocalDeviceRequest}, {}};

static void InitDefaultsCMsgClientAuthorizeLocalDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAuthorizeLocalDevice_default_instance_;
    new (ptr) ::CMsgClientAuthorizeLocalDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAuthorizeLocalDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthorizeLocalDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthorizeLocalDevice}, {}};

static void InitDefaultsCMsgClientAuthorizeLocalDeviceNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAuthorizeLocalDeviceNotification_default_instance_;
    new (ptr) ::CMsgClientAuthorizeLocalDeviceNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAuthorizeLocalDeviceNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthorizeLocalDeviceNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthorizeLocalDeviceNotification}, {}};

static void InitDefaultsCMsgClientDeauthorizeDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDeauthorizeDeviceRequest_default_instance_;
    new (ptr) ::CMsgClientDeauthorizeDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDeauthorizeDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeauthorizeDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeauthorizeDeviceRequest}, {}};

static void InitDefaultsCMsgClientDeauthorizeDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDeauthorizeDevice_default_instance_;
    new (ptr) ::CMsgClientDeauthorizeDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDeauthorizeDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeauthorizeDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeauthorizeDevice}, {}};

static void InitDefaultsCMsgClientUseLocalDeviceAuthorizations_DeviceToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_;
    new (ptr) ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUseLocalDeviceAuthorizations_DeviceToken}, {}};

static void InitDefaultsCMsgClientUseLocalDeviceAuthorizations() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUseLocalDeviceAuthorizations_default_instance_;
    new (ptr) ::CMsgClientUseLocalDeviceAuthorizations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUseLocalDeviceAuthorizations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUseLocalDeviceAuthorizations =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUseLocalDeviceAuthorizations}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken.base,}};

static void InitDefaultsCMsgClientGetAuthorizedDevices() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetAuthorizedDevices_default_instance_;
    new (ptr) ::CMsgClientGetAuthorizedDevices();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetAuthorizedDevices::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAuthorizedDevices =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetAuthorizedDevices}, {}};

static void InitDefaultsCMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_;
    new (ptr) ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice}, {}};

static void InitDefaultsCMsgClientGetAuthorizedDevicesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetAuthorizedDevicesResponse_default_instance_;
    new (ptr) ::CMsgClientGetAuthorizedDevicesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetAuthorizedDevicesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGetAuthorizedDevicesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientGetAuthorizedDevicesResponse}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice.base,}};

static void InitDefaultsCMsgClientSharedLibraryLockStatus_LockedLibrary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_;
    new (ptr) ::CMsgClientSharedLibraryLockStatus_LockedLibrary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSharedLibraryLockStatus_LockedLibrary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSharedLibraryLockStatus_LockedLibrary}, {}};

static void InitDefaultsCMsgClientSharedLibraryLockStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSharedLibraryLockStatus_default_instance_;
    new (ptr) ::CMsgClientSharedLibraryLockStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSharedLibraryLockStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientSharedLibraryLockStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientSharedLibraryLockStatus}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary.base,}};

static void InitDefaultsCMsgClientSharedLibraryStopPlaying_StopApp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_;
    new (ptr) ::CMsgClientSharedLibraryStopPlaying_StopApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSharedLibraryStopPlaying_StopApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryStopPlaying_StopApp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSharedLibraryStopPlaying_StopApp}, {}};

static void InitDefaultsCMsgClientSharedLibraryStopPlaying() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSharedLibraryStopPlaying_default_instance_;
    new (ptr) ::CMsgClientSharedLibraryStopPlaying();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSharedLibraryStopPlaying::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientSharedLibraryStopPlaying =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientSharedLibraryStopPlaying}, {
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryStopPlaying_StopApp.base,}};

static void InitDefaultsCMsgClientServiceCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServiceCall_default_instance_;
    new (ptr) ::CMsgClientServiceCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServiceCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceCall =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceCall}, {}};

static void InitDefaultsCMsgClientServiceModule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServiceModule_default_instance_;
    new (ptr) ::CMsgClientServiceModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServiceModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceModule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceModule}, {}};

static void InitDefaultsCMsgClientServiceCallResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServiceCallResponse_default_instance_;
    new (ptr) ::CMsgClientServiceCallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServiceCallResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceCallResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceCallResponse}, {}};

static void InitDefaultsCMsgAMUnlockStreaming() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAMUnlockStreaming_default_instance_;
    new (ptr) ::CMsgAMUnlockStreaming();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMUnlockStreaming::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockStreaming =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockStreaming}, {}};

static void InitDefaultsCMsgAMUnlockStreamingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAMUnlockStreamingResponse_default_instance_;
    new (ptr) ::CMsgAMUnlockStreamingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMUnlockStreamingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockStreamingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockStreamingResponse}, {}};

static void InitDefaultsCMsgAMUnlockHEVC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAMUnlockHEVC_default_instance_;
    new (ptr) ::CMsgAMUnlockHEVC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMUnlockHEVC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockHEVC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockHEVC}, {}};

static void InitDefaultsCMsgAMUnlockHEVCResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAMUnlockHEVCResponse_default_instance_;
    new (ptr) ::CMsgAMUnlockHEVCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMUnlockHEVCResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockHEVCResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockHEVCResponse}, {}};

static void InitDefaultsCMsgClientPlayingSessionState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPlayingSessionState_default_instance_;
    new (ptr) ::CMsgClientPlayingSessionState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPlayingSessionState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPlayingSessionState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPlayingSessionState}, {}};

static void InitDefaultsCMsgClientKickPlayingSession() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientKickPlayingSession_default_instance_;
    new (ptr) ::CMsgClientKickPlayingSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientKickPlayingSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientKickPlayingSession =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientKickPlayingSession}, {}};

static void InitDefaultsCMsgClientVoiceCallPreAuthorize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientVoiceCallPreAuthorize_default_instance_;
    new (ptr) ::CMsgClientVoiceCallPreAuthorize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientVoiceCallPreAuthorize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientVoiceCallPreAuthorize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientVoiceCallPreAuthorize}, {}};

static void InitDefaultsCMsgClientVoiceCallPreAuthorizeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientVoiceCallPreAuthorizeResponse_default_instance_;
    new (ptr) ::CMsgClientVoiceCallPreAuthorizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientVoiceCallPreAuthorizeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientVoiceCallPreAuthorizeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientVoiceCallPreAuthorizeResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMAddScreenshot_Tag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMAddScreenshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMAddScreenshotResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeleteScreenshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeleteScreenshotResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeletePublishedFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeletePublishedFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserPublishedFiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileSubscribed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileUnsubscribed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileDeleted.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileUpdated.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemChangesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemChangesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMGetPublishedFilesForUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMGetPublishedFilesForUserResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMSetUserPublishedFileAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMSetUserPublishedFileActionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientScreenshotsChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateUserGameInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceUpload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceInfo_RichPresence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckFileSignature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckFileSignatureResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientReadMachineAuth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientReadMachineAuthResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateMachineAuth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateMachineAuthResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestMachineAuth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestMachineAuthResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPurchaseResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientActivateOEMLicense.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterOEMMachine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterOEMMachineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPurchaseWithMachineID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_InitiateTradeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_InitiateTradeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_CancelTradeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_StartSession.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientEmailChange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientEmailChangeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetCDNAuthToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetDepotDecryptionKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetDepotDecryptionKeyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckAppBetaPassword.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckAppBetaPasswordResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateAppJobReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPContentStatsReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetCDNAuthTokenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDownloadRateStatistics_StatsInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDownloadRateStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestAccountData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestAccountDataResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStatsResponse_Day.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStatsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerData_Player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerRemove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGMSServerQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGMSClientServerQueryResponse_Server.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGMSClientServerQueryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerOutOfDate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRedeemGuestPass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRedeemGuestPassResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClanActivityCounts.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClanActivityCountsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientOGSReportString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientOGSReportBug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSAssociateWithClan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSAssociateWithClanResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSComputeNewPlayerCompatibility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSComputeNewPlayerCompatibilityResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSentLogs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCClient.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestFreeLicense.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestFreeLicenseResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDRMDownloadRequestWithCrashData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDRMDownloadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDRMFinalResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPCheckSpecialSurvey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPCheckSpecialSurveyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPSendSpecialSurveyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPSendSpecialSurveyResponseReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestForgottenPasswordEmail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestForgottenPasswordEmailResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientItemAnnouncements.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestItemAnnouncements.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUserNotifications_Notification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUserNotifications.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCommentNotifications.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestCommentNotifications.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientOfflineMessageNotification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestOfflineMessageCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistoryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFSGetFriendsSteamLevels.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFSGetFriendsSteamLevelsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientEmailAddrInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREEnumeratePublishedFiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREEnumeratePublishedFilesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummary_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummaryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREUpdateUserPublishedItemVote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREUpdateUserPublishedItemVoteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerPingSample_Sample.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerPingSample.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetFollowerCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetFollowerCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetIsFollowing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetIsFollowingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSEnumerateFollowingList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSEnumerateFollowingListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDPGetNumberOfCurrentPlayers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDPGetNumberOfCurrentPlayersResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendUserStatusPublished.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceMethod.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceMethodResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUIMode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientVanityURLChangedNotification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthorizeLocalDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthorizeLocalDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthorizeLocalDeviceNotification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeauthorizeDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeauthorizeDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUseLocalDeviceAuthorizations.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAuthorizedDevices.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAuthorizedDevicesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryLockStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryStopPlaying_StopApp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryStopPlaying.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceCall.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceModule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceCallResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockStreaming.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockStreamingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockHEVC.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockHEVCResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPlayingSessionState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientKickPlayingSession.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientVoiceCallPreAuthorize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientVoiceCallPreAuthorizeResponse.base);
}

::google::protobuf::Metadata file_level_metadata[183];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, tag_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, tag_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, thumbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, vr_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, rtime32_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, caption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, shortcut_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, tagged_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, spoiler_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, tagged_publishedfileid_),
  5,
  0,
  1,
  4,
  6,
  7,
  8,
  9,
  2,
  3,
  ~0u,
  ~0u,
  10,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, screenshotid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshot, screenshotid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshotResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshotResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, preview_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, consumer_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, workshop_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, video_provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, video_account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, video_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFile, in_progress_),
  7,
  0,
  1,
  8,
  2,
  3,
  ~0u,
  11,
  9,
  10,
  4,
  13,
  5,
  6,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, original_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, internal_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, videoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, preview_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, update_index_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, preview_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_preview_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, change_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_content_manifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, content_manifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, removed_kvtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, kvtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, previews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, previews_to_remove_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, clear_in_progress_),
  8,
  7,
  0,
  1,
  2,
  3,
  ~0u,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  4,
  16,
  5,
  17,
  18,
  6,
  20,
  19,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  21,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFileResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFiles, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFiles, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFiles, sort_order_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserPublishedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, list_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, matching_file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFiles, count_),
  0,
  1,
  3,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, rtime32_subscribed_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse, subscribed_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_time_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_hcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_last_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, subscribed_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, file_hcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, rtime_subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, is_depot_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileSubscribed, rtime_updated_),
  0,
  2,
  1,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUnsubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUnsubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUnsubscribed, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUnsubscribed, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileDeleted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileDeleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileDeleted, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileDeleted, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, hcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, last_time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, num_items_needed_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, manifest_id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, workshop_items_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest_WorkshopItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest_WorkshopItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest_WorkshopItem, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest_WorkshopItem, time_updated_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest, last_time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoRequest, workshop_items_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, manifest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, is_legacy_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse, workshop_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWorkshopItemInfoResponse, private_items_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, creator_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, required_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, excluded_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUser, start_index_),
  1,
  0,
  ~0u,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMGetPublishedFilesForUserResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, action_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileActionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileActionResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, action_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, rtime_time_stamp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientScreenshotsChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientScreenshotsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, steamid_idgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, game_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, game_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateUserGameInfo, token_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceUpload, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceUpload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceUpload, rich_presence_kv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceUpload, steamid_broadcast_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceRequest, steamid_request_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo_RichPresence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo_RichPresence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo_RichPresence, steamid_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo_RichPresence, rich_presence_kv_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRichPresenceInfo, rich_presence_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignature, app_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, esignatureresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, signatureheader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, getlasterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckFileSignatureResponse, evalvesignaturecheckdetail_),
  3,
  4,
  5,
  0,
  6,
  1,
  2,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuth, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuth, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuth, cubtoread_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, getlasterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, cubread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, bytes_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReadMachineAuthResponse, filename_sentry_),
  0,
  4,
  5,
  1,
  6,
  7,
  8,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, cubtowrite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, otp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, otp_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, otp_sharedsecret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuth, otp_timedrift_),
  0,
  4,
  5,
  1,
  6,
  2,
  3,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, getlasterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, cubwrote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, otp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, otp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateMachineAuthResponse, otp_identifier_),
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  8,
  9,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, eresult_sentryfile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, sha_sentryfile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, lock_account_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, otp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, otp_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, otp_sharedsecret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, otp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, machine_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuth, machine_name_userchosen_),
  0,
  6,
  7,
  1,
  8,
  9,
  2,
  3,
  10,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestMachineAuthResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterKey, key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseResponse, purchase_result_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseResponse, purchase_receipt_info_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, bios_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, bios_serialnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, license_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, mainboard_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, mainboard_product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientActivateOEMLicense, mainboard_serialnumber_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterOEMMachine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterOEMMachine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterOEMMachine, oem_register_file_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterOEMMachineResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterOEMMachineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterOEMMachineResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseWithMachineID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseWithMachineID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseWithMachineID, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPurchaseWithMachineID, machine_info_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeRequest, trade_request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeRequest, other_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeRequest, other_name_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, trade_request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, other_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, steamguard_required_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, new_device_cooldown_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, default_password_reset_probation_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, password_reset_probation_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, default_email_change_probation_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_InitiateTradeResponse, email_change_probation_days_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_CancelTradeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_CancelTradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_CancelTradeRequest, other_steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_StartSession, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_StartSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTrading_StartSession, other_steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, final_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, newmethod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, twofactor_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, sms_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChange, client_supports_sms_),
  0,
  1,
  2,
  5,
  6,
  3,
  4,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChangeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChangeResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailChangeResponse, requires_sms_code_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthToken, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthToken, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthToken, app_id_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKey, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKey, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKeyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKeyResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKeyResponse, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetDepotDecryptionKeyResponse, depot_encryption_key_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPassword, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPassword, betapassword_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, betaname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, betapassword_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCheckAppBetaPasswordResponse, betapasswords_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, depot_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, app_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, job_app_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, error_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, job_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, files_validation_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, job_bytes_downloaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, job_bytes_staged_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, bytes_comitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, start_app_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, stats_machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, branch_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, total_bytes_downloaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, total_bytes_staged_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, total_bytes_restored_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, is_borrowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, is_free_weekend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, total_bytes_legacy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, total_bytes_patched_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUpdateAppJobReport, total_bytes_saved_),
  2,
  ~0u,
  3,
  4,
  0,
  5,
  8,
  6,
  7,
  10,
  9,
  11,
  1,
  12,
  13,
  14,
  18,
  19,
  15,
  16,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, stats_machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, os_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, num_install_folders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, num_installed_games_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPContentStatsReport, size_installed_games_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthTokenResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthTokenResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthTokenResponse, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetCDNAuthTokenResponse, expiration_time_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, source_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics_StatsInfo, host_name_),
  1,
  2,
  4,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDownloadRateStatistics, stats_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountData, account_or_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountData, action_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, ct_matches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, account_name_suggestion1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, account_name_suggestion2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestAccountDataResponse, account_name_suggestion3_),
  4,
  5,
  0,
  6,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, history_days_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, time_last_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, first_day_cached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStats, days_cached_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day, day_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse_Day, stats_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse, day_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUGSGetGlobalStatsResponse, days_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData_Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData_Player, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, steam_id_gs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, query_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, game_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, sourcetv_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, gamedir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, max_players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, bot_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, secure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, dedicated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, game_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, game_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerData, map_),
  9,
  10,
  11,
  12,
  13,
  8,
  14,
  0,
  1,
  2,
  3,
  ~0u,
  15,
  16,
  17,
  18,
  19,
  4,
  5,
  20,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerRemove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerRemove, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerRemove, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerRemove, query_port_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, geo_location_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, region_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, filter_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGMSServerQuery, max_servers_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse_Server, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse_Server, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse_Server, server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse_Server, server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse_Server, auth_players_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse, servers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGMSClientServerQueryResponse, error_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerOutOfDate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerOutOfDate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerOutOfDate, steam_id_gs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerOutOfDate, reject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerOutOfDate, message_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPass, guest_pass_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPassResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPassResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPassResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPassResponse, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRedeemGuestPassResponse, must_own_appid_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClanActivityCounts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClanActivityCounts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClanActivityCounts, steamid_clans_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClanActivityCountsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClanActivityCountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClanActivityCountsResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, accumulated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, formatter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportString, varargs_),
  3,
  2,
  4,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportBug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportBug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportBug, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportBug, bugtext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOGSReportBug, screenshot_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClan, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClan, steam_id_clan_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClanResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClanResponse, steam_id_clan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSAssociateWithClanResponse, eresult_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibility, steam_id_candidate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, steam_id_candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, is_clan_member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, ct_dont_like_you_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, ct_you_dont_like_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSComputeNewPlayerCompatibilityResponse, ct_clanmembers_dont_like_you_),
  0,
  5,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSentLogs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSentLogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, gcname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClient, ip_),
  2,
  3,
  0,
  4,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicense, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicense, appids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicenseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicenseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicenseResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicenseResponse, granted_packageids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFreeLicenseResponse, granted_appids_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, download_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, download_types_known_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, guid_drm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, guid_split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, guid_merge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, module_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadRequestWithCrashData, crash_data_),
  6,
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, blob_download_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, merge_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, download_file_dfs_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, download_file_dfs_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, download_file_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMDownloadResponse, module_path_),
  7,
  3,
  4,
  0,
  5,
  6,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, blob_download_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, error_detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, merge_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, download_file_dfs_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, download_file_dfs_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDRMFinalResult, download_file_url_),
  7,
  2,
  3,
  4,
  0,
  5,
  6,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurvey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurvey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurvey, survey_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, custom_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, include_software_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPCheckSpecialSurveyResponse, token_),
  5,
  3,
  0,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponse, survey_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponse, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponseReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponseReply, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDPSendSpecialSurveyResponseReply, token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmail, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmail, password_tried_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmailResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestForgottenPasswordEmailResponse, use_secret_question_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientItemAnnouncements, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientItemAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientItemAnnouncements, count_new_items_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestItemAnnouncements, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestItemAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications_Notification, user_notification_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications_Notification, count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUserNotifications, notifications_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCommentNotifications, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCommentNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCommentNotifications, count_new_comments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCommentNotifications, count_new_comments_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCommentNotifications, count_new_comments_subscriptions_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestCommentNotifications, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestCommentNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOfflineMessageNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOfflineMessageNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOfflineMessageNotification, offline_messages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientOfflineMessageNotification, friends_with_offline_messages_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestOfflineMessageCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestOfflineMessageCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistory, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, unread_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryResponse, messages_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryForOfflineMessages, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatGetFriendMessageHistoryForOfflineMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevels, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevels, accountids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, level_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFSGetFriendsSteamLevelsResponse, friends_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, email_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, email_is_validated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, email_validation_changed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, credential_change_requires_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, password_or_secretqa_change_requires_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmailAddrInfo, remind_user_about_email_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, query_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, user_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFiles, matching_file_type_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, votes_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, votes_against_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, reports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, score_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREEnumeratePublishedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummary_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummary_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummary_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummary, published_file_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, votes_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, votes_against_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, reports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, score_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREItemVoteSummaryResponse, item_vote_summaries_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVote, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVote, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVote, vote_up_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVoteResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREUpdateUserPublishedItemVoteResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetails, published_file_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, vote_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCREGetUserPublishedItemVoteDetailsResponse, user_item_vote_details_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample_Sample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample_Sample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample_Sample, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample_Sample, avg_ping_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample_Sample, stddev_ping_ms_x10_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample, my_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample, gs_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerPingSample, gs_samples_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCount, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCountResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetFollowerCountResponse, count_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowing, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowingResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSGetIsFollowingResponse, is_following_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingList, start_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingListResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingListResponse, total_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFSEnumerateFollowingListResponse, steam_ids_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayers, appid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayersResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayersResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDPGetNumberOfCurrentPlayersResponse, player_count_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendUserStatusPublished, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendUserStatusPublished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendUserStatusPublished, friend_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendUserStatusPublished, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendUserStatusPublished, status_text_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethod, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethod, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethod, serialized_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethod, is_notification_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethodResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethodResponse, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceMethodResponse, serialized_method_response_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUIMode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUIMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUIMode, uimode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUIMode, chat_mode_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVanityURLChangedNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVanityURLChangedNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVanityURLChangedNotification, vanity_url_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceRequest, device_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceRequest, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceRequest, local_device_token_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDevice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDevice, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDevice, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDevice, authed_device_token_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceNotification, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceNotification, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthorizeLocalDeviceNotification, local_device_token_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDeviceRequest, deauthorization_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDeviceRequest, deauthorization_device_token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDevice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDevice, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeauthorizeDevice, deauthorization_account_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, token_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations, authorization_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUseLocalDeviceAuthorizations, device_tokens_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevices, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, auth_device_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, last_access_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, borrower_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, is_pending_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, app_played_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAuthorizedDevicesResponse, authorized_device_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus_LockedLibrary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus_LockedLibrary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus_LockedLibrary, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus_LockedLibrary, locked_by_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus, locked_library_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryLockStatus, own_library_locked_by_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying_StopApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying_StopApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying_StopApp, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying_StopApp, owner_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying, seconds_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSharedLibraryStopPlaying, stop_apps_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, sysid_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, call_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, module_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, function_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, cub_output_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, callparameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, ping_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCall, max_outstanding_calls_),
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  2,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceModule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceModule, module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceModule, module_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceModule, module_content_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, sysid_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, call_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, module_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, ecallresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, result_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, os_version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, system_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, load_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, exception_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, portable_os_version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, portable_system_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, was_converted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, internal_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, current_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, last_call_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, last_call_module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, last_call_sysid_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, last_ecallresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, last_callissue_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServiceCallResponse, last_callcomplete_delta_),
  0,
  9,
  10,
  1,
  12,
  2,
  3,
  4,
  11,
  5,
  6,
  7,
  13,
  14,
  15,
  16,
  17,
  8,
  18,
  19,
  20,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockStreaming, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockStreaming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockStreamingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockStreamingResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockStreamingResponse, encryption_key_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockHEVC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockHEVC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockHEVCResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockHEVCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMUnlockHEVCResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayingSessionState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayingSessionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayingSessionState, playing_blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayingSessionState, playing_app_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientKickPlayingSession, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientKickPlayingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientKickPlayingSession, only_stop_game_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorize, caller_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorize, receiver_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorize, caller_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorize, hangup_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorizeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorizeResponse, caller_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorizeResponse, receiver_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorizeResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientVoiceCallPreAuthorizeResponse, caller_id_),
  0,
  1,
  3,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CMsgClientUCMAddScreenshot_Tag)},
  { 9, 28, sizeof(::CMsgClientUCMAddScreenshot)},
  { 42, 49, sizeof(::CMsgClientUCMAddScreenshotResponse)},
  { 51, 57, sizeof(::CMsgClientUCMDeleteScreenshot)},
  { 58, 64, sizeof(::CMsgClientUCMDeleteScreenshotResponse)},
  { 65, 85, sizeof(::CMsgClientUCMPublishFile)},
  { 100, 108, sizeof(::CMsgClientUCMPublishFileResponse)},
  { 111, 118, sizeof(::CMsgClientUCMUpdatePublishedFile_KeyValueTag)},
  { 120, 130, sizeof(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview)},
  { 135, 167, sizeof(::CMsgClientUCMUpdatePublishedFile)},
  { 194, 201, sizeof(::CMsgClientUCMUpdatePublishedFileResponse)},
  { 203, 210, sizeof(::CMsgClientUCMDeletePublishedFile)},
  { 212, 218, sizeof(::CMsgClientUCMDeletePublishedFileResponse)},
  { 219, 227, sizeof(::CMsgClientUCMEnumerateUserPublishedFiles)},
  { 230, 236, sizeof(::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId)},
  { 237, 245, sizeof(::CMsgClientUCMEnumerateUserPublishedFilesResponse)},
  { 248, 258, sizeof(::CMsgClientUCMEnumerateUserSubscribedFiles)},
  { 263, 270, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId)},
  { 272, 280, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesResponse)},
  { 283, 291, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)},
  { 294, 306, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId)},
  { 313, 321, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)},
  { 324, 336, sizeof(::CMsgClientUCMPublishedFileSubscribed)},
  { 343, 350, sizeof(::CMsgClientUCMPublishedFileUnsubscribed)},
  { 352, 359, sizeof(::CMsgClientUCMPublishedFileDeleted)},
  { 361, 372, sizeof(::CMsgClientUCMPublishedFileUpdated)},
  { 378, 386, sizeof(::CMsgClientWorkshopItemChangesRequest)},
  { 389, 397, sizeof(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo)},
  { 400, 408, sizeof(::CMsgClientWorkshopItemChangesResponse)},
  { 411, 418, sizeof(::CMsgClientWorkshopItemInfoRequest_WorkshopItem)},
  { 420, 428, sizeof(::CMsgClientWorkshopItemInfoRequest)},
  { 431, 440, sizeof(::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo)},
  { 444, 453, sizeof(::CMsgClientWorkshopItemInfoResponse)},
  { 457, 467, sizeof(::CMsgClientUCMGetPublishedFilesForUser)},
  { 472, 478, sizeof(::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId)},
  { 479, 487, sizeof(::CMsgClientUCMGetPublishedFilesForUserResponse)},
  { 490, 498, sizeof(::CMsgClientUCMSetUserPublishedFileAction)},
  { 501, 507, sizeof(::CMsgClientUCMSetUserPublishedFileActionResponse)},
  { 508, 516, sizeof(::CMsgClientUCMEnumeratePublishedFilesByUserAction)},
  { 519, 526, sizeof(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId)},
  { 528, 536, sizeof(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)},
  { 539, 544, sizeof(::CMsgClientScreenshotsChanged)},
  { 544, 554, sizeof(::CMsgClientUpdateUserGameInfo)},
  { 559, 566, sizeof(::CMsgClientRichPresenceUpload)},
  { 568, 574, sizeof(::CMsgClientRichPresenceRequest)},
  { 575, 582, sizeof(::CMsgClientRichPresenceInfo_RichPresence)},
  { 584, 590, sizeof(::CMsgClientRichPresenceInfo)},
  { 591, 597, sizeof(::CMsgClientCheckFileSignature)},
  { 598, 613, sizeof(::CMsgClientCheckFileSignatureResponse)},
  { 623, 631, sizeof(::CMsgClientReadMachineAuth)},
  { 634, 648, sizeof(::CMsgClientReadMachineAuthResponse)},
  { 657, 670, sizeof(::CMsgClientUpdateMachineAuth)},
  { 678, 693, sizeof(::CMsgClientUpdateMachineAuthResponse)},
  { 703, 719, sizeof(::CMsgClientRequestMachineAuth)},
  { 730, 736, sizeof(::CMsgClientRequestMachineAuthResponse)},
  { 737, 743, sizeof(::CMsgClientRegisterKey)},
  { 744, 752, sizeof(::CMsgClientPurchaseResponse)},
  { 755, 766, sizeof(::CMsgClientActivateOEMLicense)},
  { 772, 778, sizeof(::CMsgClientRegisterOEMMachine)},
  { 779, 785, sizeof(::CMsgClientRegisterOEMMachineResponse)},
  { 786, 793, sizeof(::CMsgClientPurchaseWithMachineID)},
  { 795, 803, sizeof(::CMsgTrading_InitiateTradeRequest)},
  { 806, 820, sizeof(::CMsgTrading_InitiateTradeResponse)},
  { 829, 835, sizeof(::CMsgTrading_CancelTradeRequest)},
  { 836, 842, sizeof(::CMsgTrading_StartSession)},
  { 843, 856, sizeof(::CMsgClientEmailChange)},
  { 864, 871, sizeof(::CMsgClientEmailChangeResponse)},
  { 873, 881, sizeof(::CMsgClientGetCDNAuthToken)},
  { 884, 891, sizeof(::CMsgClientGetDepotDecryptionKey)},
  { 893, 901, sizeof(::CMsgClientGetDepotDecryptionKeyResponse)},
  { 904, 911, sizeof(::CMsgClientCheckAppBetaPassword)},
  { 913, 920, sizeof(::CMsgClientCheckAppBetaPasswordResponse_BetaPassword)},
  { 922, 929, sizeof(::CMsgClientCheckAppBetaPasswordResponse)},
  { 931, 957, sizeof(::CMsgClientUpdateAppJobReport)},
  { 978, 990, sizeof(::CMsgClientDPContentStatsReport)},
  { 997, 1005, sizeof(::CMsgClientGetCDNAuthTokenResponse)},
  { 1008, 1018, sizeof(::CMsgDownloadRateStatistics_StatsInfo)},
  { 1023, 1030, sizeof(::CMsgDownloadRateStatistics)},
  { 1032, 1039, sizeof(::CMsgClientRequestAccountData)},
  { 1041, 1053, sizeof(::CMsgClientRequestAccountDataResponse)},
  { 1060, 1070, sizeof(::CMsgClientUGSGetGlobalStats)},
  { 1075, 1082, sizeof(::CMsgClientUGSGetGlobalStatsResponse_Day_Stat)},
  { 1084, 1091, sizeof(::CMsgClientUGSGetGlobalStatsResponse_Day)},
  { 1093, 1102, sizeof(::CMsgClientUGSGetGlobalStatsResponse)},
  { 1106, 1112, sizeof(::CMsgGameServerData_Player)},
  { 1113, 1140, sizeof(::CMsgGameServerData)},
  { 1162, 1170, sizeof(::CMsgGameServerRemove)},
  { 1173, 1183, sizeof(::CMsgClientGMSServerQuery)},
  { 1188, 1196, sizeof(::CMsgGMSClientServerQueryResponse_Server)},
  { 1199, 1206, sizeof(::CMsgGMSClientServerQueryResponse)},
  { 1208, 1216, sizeof(::CMsgGameServerOutOfDate)},
  { 1219, 1225, sizeof(::CMsgClientRedeemGuestPass)},
  { 1226, 1234, sizeof(::CMsgClientRedeemGuestPassResponse)},
  { 1237, 1243, sizeof(::CMsgClientGetClanActivityCounts)},
  { 1244, 1250, sizeof(::CMsgClientGetClanActivityCountsResponse)},
  { 1251, 1261, sizeof(::CMsgClientOGSReportString)},
  { 1266, 1274, sizeof(::CMsgClientOGSReportBug)},
  { 1277, 1283, sizeof(::CMsgGSAssociateWithClan)},
  { 1284, 1291, sizeof(::CMsgGSAssociateWithClanResponse)},
  { 1293, 1299, sizeof(::CMsgGSComputeNewPlayerCompatibility)},
  { 1300, 1311, sizeof(::CMsgGSComputeNewPlayerCompatibilityResponse)},
  { 1317, 1322, sizeof(::CMsgClientSentLogs)},
  { 1322, 1333, sizeof(::CMsgGCClient)},
  { 1339, 1345, sizeof(::CMsgClientRequestFreeLicense)},
  { 1346, 1354, sizeof(::CMsgClientRequestFreeLicenseResponse)},
  { 1357, 1370, sizeof(::CMsgDRMDownloadRequestWithCrashData)},
  { 1378, 1391, sizeof(::CMsgDRMDownloadResponse)},
  { 1399, 1412, sizeof(::CMsgDRMFinalResult)},
  { 1420, 1426, sizeof(::CMsgClientDPCheckSpecialSurvey)},
  { 1427, 1438, sizeof(::CMsgClientDPCheckSpecialSurveyResponse)},
  { 1444, 1451, sizeof(::CMsgClientDPSendSpecialSurveyResponse)},
  { 1453, 1460, sizeof(::CMsgClientDPSendSpecialSurveyResponseReply)},
  { 1462, 1469, sizeof(::CMsgClientRequestForgottenPasswordEmail)},
  { 1471, 1478, sizeof(::CMsgClientRequestForgottenPasswordEmailResponse)},
  { 1480, 1486, sizeof(::CMsgClientItemAnnouncements)},
  { 1487, 1492, sizeof(::CMsgClientRequestItemAnnouncements)},
  { 1492, 1499, sizeof(::CMsgClientUserNotifications_Notification)},
  { 1501, 1507, sizeof(::CMsgClientUserNotifications)},
  { 1508, 1516, sizeof(::CMsgClientCommentNotifications)},
  { 1519, 1524, sizeof(::CMsgClientRequestCommentNotifications)},
  { 1524, 1531, sizeof(::CMsgClientOfflineMessageNotification)},
  { 1533, 1538, sizeof(::CMsgClientRequestOfflineMessageCount)},
  { 1538, 1544, sizeof(::CMsgClientChatGetFriendMessageHistory)},
  { 1545, 1554, sizeof(::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage)},
  { 1558, 1566, sizeof(::CMsgClientChatGetFriendMessageHistoryResponse)},
  { 1569, 1574, sizeof(::CMsgClientChatGetFriendMessageHistoryForOfflineMessages)},
  { 1574, 1580, sizeof(::CMsgClientFSGetFriendsSteamLevels)},
  { 1581, 1588, sizeof(::CMsgClientFSGetFriendsSteamLevelsResponse_Friend)},
  { 1590, 1596, sizeof(::CMsgClientFSGetFriendsSteamLevelsResponse)},
  { 1597, 1608, sizeof(::CMsgClientEmailAddrInfo)},
  { 1614, 1627, sizeof(::CMsgCREEnumeratePublishedFiles)},
  { 1635, 1645, sizeof(::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId)},
  { 1650, 1658, sizeof(::CMsgCREEnumeratePublishedFilesResponse)},
  { 1661, 1667, sizeof(::CMsgCREItemVoteSummary_PublishedFileId)},
  { 1668, 1674, sizeof(::CMsgCREItemVoteSummary)},
  { 1675, 1685, sizeof(::CMsgCREItemVoteSummaryResponse_ItemVoteSummary)},
  { 1690, 1697, sizeof(::CMsgCREItemVoteSummaryResponse)},
  { 1699, 1706, sizeof(::CMsgCREUpdateUserPublishedItemVote)},
  { 1708, 1714, sizeof(::CMsgCREUpdateUserPublishedItemVoteResponse)},
  { 1715, 1721, sizeof(::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId)},
  { 1722, 1728, sizeof(::CMsgCREGetUserPublishedItemVoteDetails)},
  { 1729, 1736, sizeof(::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail)},
  { 1738, 1745, sizeof(::CMsgCREGetUserPublishedItemVoteDetailsResponse)},
  { 1747, 1755, sizeof(::CMsgGameServerPingSample_Sample)},
  { 1758, 1766, sizeof(::CMsgGameServerPingSample)},
  { 1769, 1775, sizeof(::CMsgFSGetFollowerCount)},
  { 1776, 1783, sizeof(::CMsgFSGetFollowerCountResponse)},
  { 1785, 1791, sizeof(::CMsgFSGetIsFollowing)},
  { 1792, 1799, sizeof(::CMsgFSGetIsFollowingResponse)},
  { 1801, 1807, sizeof(::CMsgFSEnumerateFollowingList)},
  { 1808, 1816, sizeof(::CMsgFSEnumerateFollowingListResponse)},
  { 1819, 1825, sizeof(::CMsgDPGetNumberOfCurrentPlayers)},
  { 1826, 1833, sizeof(::CMsgDPGetNumberOfCurrentPlayersResponse)},
  { 1835, 1843, sizeof(::CMsgClientFriendUserStatusPublished)},
  { 1846, 1854, sizeof(::CMsgClientServiceMethod)},
  { 1857, 1864, sizeof(::CMsgClientServiceMethodResponse)},
  { 1866, 1873, sizeof(::CMsgClientUIMode)},
  { 1875, 1881, sizeof(::CMsgClientVanityURLChangedNotification)},
  { 1882, 1890, sizeof(::CMsgClientAuthorizeLocalDeviceRequest)},
  { 1893, 1901, sizeof(::CMsgClientAuthorizeLocalDevice)},
  { 1904, 1912, sizeof(::CMsgClientAuthorizeLocalDeviceNotification)},
  { 1915, 1922, sizeof(::CMsgClientDeauthorizeDeviceRequest)},
  { 1924, 1931, sizeof(::CMsgClientDeauthorizeDevice)},
  { 1933, 1940, sizeof(::CMsgClientUseLocalDeviceAuthorizations_DeviceToken)},
  { 1942, 1949, sizeof(::CMsgClientUseLocalDeviceAuthorizations)},
  { 1951, 1956, sizeof(::CMsgClientGetAuthorizedDevices)},
  { 1956, 1967, sizeof(::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice)},
  { 1973, 1980, sizeof(::CMsgClientGetAuthorizedDevicesResponse)},
  { 1982, 1989, sizeof(::CMsgClientSharedLibraryLockStatus_LockedLibrary)},
  { 1991, 1998, sizeof(::CMsgClientSharedLibraryLockStatus)},
  { 2000, 2007, sizeof(::CMsgClientSharedLibraryStopPlaying_StopApp)},
  { 2009, 2016, sizeof(::CMsgClientSharedLibraryStopPlaying)},
  { 2018, 2033, sizeof(::CMsgClientServiceCall)},
  { 2043, 2051, sizeof(::CMsgClientServiceModule)},
  { 2054, 2080, sizeof(::CMsgClientServiceCallResponse)},
  { 2101, 2106, sizeof(::CMsgAMUnlockStreaming)},
  { 2106, 2113, sizeof(::CMsgAMUnlockStreamingResponse)},
  { 2115, 2120, sizeof(::CMsgAMUnlockHEVC)},
  { 2120, 2126, sizeof(::CMsgAMUnlockHEVCResponse)},
  { 2127, 2134, sizeof(::CMsgClientPlayingSessionState)},
  { 2136, 2142, sizeof(::CMsgClientKickPlayingSession)},
  { 2143, 2152, sizeof(::CMsgClientVoiceCallPreAuthorize)},
  { 2156, 2165, sizeof(::CMsgClientVoiceCallPreAuthorizeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMAddScreenshot_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMAddScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMAddScreenshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMDeleteScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMDeleteScreenshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMPublishFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMPublishFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMUpdatePublishedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMUpdatePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMDeletePublishedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMDeletePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserPublishedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMPublishedFileSubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMPublishedFileUnsubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMPublishedFileDeleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMPublishedFileUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemChangesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemChangesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWorkshopItemInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMGetPublishedFilesForUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMSetUserPublishedFileAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientScreenshotsChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUpdateUserGameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRichPresenceUpload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRichPresenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRichPresenceInfo_RichPresence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRichPresenceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCheckFileSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCheckFileSignatureResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientReadMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientReadMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUpdateMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUpdateMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRegisterKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientActivateOEMLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRegisterOEMMachine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRegisterOEMMachineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPurchaseWithMachineID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTrading_InitiateTradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTrading_InitiateTradeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTrading_CancelTradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTrading_StartSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientEmailChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientEmailChangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetCDNAuthToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetDepotDecryptionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetDepotDecryptionKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCheckAppBetaPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCheckAppBetaPasswordResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUpdateAppJobReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDPContentStatsReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetCDNAuthTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDownloadRateStatistics_StatsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDownloadRateStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestAccountData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestAccountDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUGSGetGlobalStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUGSGetGlobalStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerData_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGMSServerQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGMSClientServerQueryResponse_Server_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGMSClientServerQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerOutOfDate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRedeemGuestPass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRedeemGuestPassResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClanActivityCounts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClanActivityCountsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientOGSReportString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientOGSReportBug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSAssociateWithClan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSAssociateWithClanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSComputeNewPlayerCompatibility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSentLogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestFreeLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestFreeLicenseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDRMDownloadRequestWithCrashData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDRMDownloadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDRMFinalResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDPCheckSpecialSurvey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDPCheckSpecialSurveyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDPSendSpecialSurveyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDPSendSpecialSurveyResponseReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestForgottenPasswordEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestForgottenPasswordEmailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientItemAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestItemAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUserNotifications_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUserNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCommentNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestCommentNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientOfflineMessageNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestOfflineMessageCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientChatGetFriendMessageHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientChatGetFriendMessageHistoryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFSGetFriendsSteamLevels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientEmailAddrInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREEnumeratePublishedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREEnumeratePublishedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREItemVoteSummary_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREItemVoteSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREItemVoteSummaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREUpdateUserPublishedItemVote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREGetUserPublishedItemVoteDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerPingSample_Sample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerPingSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFSGetFollowerCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFSGetFollowerCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFSGetIsFollowing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFSGetIsFollowingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFSEnumerateFollowingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFSEnumerateFollowingListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDPGetNumberOfCurrentPlayers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendUserStatusPublished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServiceMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServiceMethodResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUIMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientVanityURLChangedNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAuthorizeLocalDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAuthorizeLocalDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAuthorizeLocalDeviceNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDeauthorizeDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDeauthorizeDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUseLocalDeviceAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetAuthorizedDevices_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetAuthorizedDevicesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSharedLibraryLockStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSharedLibraryStopPlaying_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServiceCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServiceModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServiceCallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMUnlockStreaming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMUnlockStreamingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMUnlockHEVC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMUnlockHEVCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPlayingSessionState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientKickPlayingSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientVoiceCallPreAuthorize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientVoiceCallPreAuthorizeResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_clientserver_2.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 183);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"steammessages_clientserver_2.proto\032\030st"
      "eammessages_base.proto\"\201\003\n\032CMsgClientUCM"
      "AddScreenshot\022\r\n\005appid\030\001 \001(\r\022\020\n\010filename"
      "\030\002 \001(\t\022\021\n\tthumbname\030\003 \001(\t\022\023\n\013vr_filename"
      "\030\016 \001(\t\022\027\n\017rtime32_created\030\004 \001(\007\022\r\n\005width"
      "\030\005 \001(\r\022\016\n\006height\030\006 \001(\r\022\023\n\013permissions\030\007 "
      "\001(\r\022\017\n\007caption\030\010 \001(\t\022\025\n\rshortcut_name\030\t "
      "\001(\t\022,\n\003tag\030\n \003(\0132\037.CMsgClientUCMAddScree"
      "nshot.Tag\022\026\n\016tagged_steamid\030\013 \003(\006\022\023\n\013spo"
      "iler_tag\030\014 \001(\010\022\036\n\026tagged_publishedfileid"
      "\030\r \003(\004\032*\n\003Tag\022\020\n\010tag_name\030\001 \001(\t\022\021\n\ttag_v"
      "alue\030\002 \001(\t\"d\n\"CMsgClientUCMAddScreenshot"
      "Response\022\022\n\007eresult\030\001 \001(\005:\0012\022*\n\014screensh"
      "otid\030\002 \001(\006:\02418446744073709551615\"K\n\035CMsg"
      "ClientUCMDeleteScreenshot\022*\n\014screenshoti"
      "d\030\001 \001(\006:\02418446744073709551615\";\n%CMsgCli"
      "entUCMDeleteScreenshotResponse\022\022\n\007eresul"
      "t\030\001 \001(\005:\0012\"\321\002\n\030CMsgClientUCMPublishFile\022"
      "\016\n\006app_id\030\001 \001(\r\022\021\n\tfile_name\030\002 \001(\t\022\031\n\021pr"
      "eview_file_name\030\003 \001(\t\022\027\n\017consumer_app_id"
      "\030\004 \001(\r\022\r\n\005title\030\005 \001(\t\022\023\n\013description\030\006 \001"
      "(\t\022\014\n\004tags\030\010 \003(\t\022\025\n\rworkshop_file\030\t \001(\010\022"
      "\022\n\nvisibility\030\n \001(\005\022\021\n\tfile_type\030\013 \001(\r\022\013"
      "\n\003url\030\014 \001(\t\022\026\n\016video_provider\030\r \001(\r\022\032\n\022v"
      "ideo_account_name\030\016 \001(\t\022\030\n\020video_identif"
      "ier\030\017 \001(\t\022\023\n\013in_progress\030\020 \001(\010\"\241\001\n CMsgC"
      "lientUCMPublishFileResponse\022\022\n\007eresult\030\001"
      " \001(\005:\0012\022/\n\021published_file_id\030\002 \001(\006:\0241844"
      "6744073709551615\0228\n)needs_workshop_legal"
      "_agreement_acceptance\030\003 \001(\010:\005false\"\234\007\n C"
      "MsgClientUCMUpdatePublishedFile\022\016\n\006app_i"
      "d\030\001 \001(\r\022\031\n\021published_file_id\030\002 \001(\006\022\021\n\tfi"
      "le_name\030\003 \001(\t\022\031\n\021preview_file_name\030\004 \001(\t"
      "\022\r\n\005title\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022\014\n\004"
      "tags\030\007 \003(\t\022\022\n\nvisibility\030\010 \001(\005\022\023\n\013update"
      "_file\030\t \001(\010\022\033\n\023update_preview_file\030\n \001(\010"
      "\022\024\n\014update_title\030\013 \001(\010\022\032\n\022update_descrip"
      "tion\030\014 \001(\010\022\023\n\013update_tags\030\r \001(\010\022\031\n\021updat"
      "e_visibility\030\016 \001(\010\022\032\n\022change_description"
      "\030\017 \001(\t\022\022\n\nupdate_url\030\020 \001(\010\022\013\n\003url\030\021 \001(\t\022"
      "\037\n\027update_content_manifest\030\022 \001(\010\022\030\n\020cont"
      "ent_manifest\030\023 \001(\006\022\020\n\010metadata\030\024 \001(\t\022\027\n\017"
      "update_metadata\030\025 \001(\010\022\023\n\010language\030\026 \001(\005:"
      "\0010\022\026\n\016removed_kvtags\030\027 \003(\t\022=\n\006kvtags\030\030 \003"
      "(\0132-.CMsgClientUCMUpdatePublishedFile.Ke"
      "yValueTag\022E\n\010previews\030\031 \003(\01323.CMsgClient"
      "UCMUpdatePublishedFile.AdditionalPreview"
      "\022\032\n\022previews_to_remove\030\032 \003(\005\022\031\n\021clear_in"
      "_progress\030\033 \001(\010\032)\n\013KeyValueTag\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\t\032\214\001\n\021AdditionalPreview"
      "\022\032\n\022original_file_name\030\001 \001(\t\022\032\n\022internal"
      "_file_name\030\002 \001(\t\022\017\n\007videoid\030\003 \001(\t\022\024\n\014pre"
      "view_type\030\004 \001(\r\022\030\n\014update_index\030\005 \001(\005:\002-"
      "1\"x\n(CMsgClientUCMUpdatePublishedFileRes"
      "ponse\022\022\n\007eresult\030\001 \001(\005:\0012\0228\n)needs_works"
      "hop_legal_agreement_acceptance\030\002 \001(\010:\005fa"
      "lse\"M\n CMsgClientUCMDeletePublishedFile\022"
      "\031\n\021published_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001"
      "(\r\">\n(CMsgClientUCMDeletePublishedFileRe"
      "sponse\022\022\n\007eresult\030\001 \001(\005:\0012\"c\n(CMsgClient"
      "UCMEnumerateUserPublishedFiles\022\016\n\006app_id"
      "\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022\n\nsort_orde"
      "r\030\003 \001(\r\"\347\001\n0CMsgClientUCMEnumerateUserPu"
      "blishedFilesResponse\022\022\n\007eresult\030\001 \001(\005:\0012"
      "\022Z\n\017published_files\030\002 \003(\0132A.CMsgClientUC"
      "MEnumerateUserPublishedFilesResponse.Pub"
      "lishedFileId\022\025\n\rtotal_results\030\003 \001(\r\032,\n\017P"
      "ublishedFileId\022\031\n\021published_file_id\030\001 \001("
      "\006\"\230\001\n)CMsgClientUCMEnumerateUserSubscrib"
      "edFiles\022\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002"
      " \001(\r\022\024\n\tlist_type\030\003 \001(\r:\0011\022\035\n\022matching_f"
      "ile_type\030\004 \001(\r:\0010\022\021\n\005count\030\005 \001(\r:\00250\"\211\002\n"
      "1CMsgClientUCMEnumerateUserSubscribedFil"
      "esResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\\\n\020subscr"
      "ibed_files\030\002 \003(\0132B.CMsgClientUCMEnumerat"
      "eUserSubscribedFilesResponse.PublishedFi"
      "leId\022\025\n\rtotal_results\030\003 \001(\r\032K\n\017Published"
      "FileId\022\031\n\021published_file_id\030\001 \001(\006\022\035\n\022rti"
      "me32_subscribed\030\002 \001(\007:\0010\"o\n4CMsgClientUC"
      "MEnumerateUserSubscribedFilesWithUpdates"
      "\022\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022\n"
      "\nstart_time\030\003 \001(\007\"\221\003\n<CMsgClientUCMEnume"
      "rateUserSubscribedFilesWithUpdatesRespon"
      "se\022\022\n\007eresult\030\001 \001(\005:\0012\022g\n\020subscribed_fil"
      "es\030\002 \003(\0132M.CMsgClientUCMEnumerateUserSub"
      "scribedFilesWithUpdatesResponse.Publishe"
      "dFileId\022\025\n\rtotal_results\030\003 \001(\r\032\274\001\n\017Publi"
      "shedFileId\022\031\n\021published_file_id\030\001 \001(\006\022\035\n"
      "\022rtime32_subscribed\030\002 \001(\007:\0010\022\r\n\005appid\030\003 "
      "\001(\r\022\025\n\rfile_hcontent\030\004 \001(\006\022\021\n\tfile_size\030"
      "\005 \001(\r\022\034\n\024rtime32_last_updated\030\006 \001(\007\022\030\n\020i"
      "s_depot_content\030\007 \001(\010\"\306\001\n$CMsgClientUCMP"
      "ublishedFileSubscribed\022\031\n\021published_file"
      "_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\025\n\rfile_hconte"
      "nt\030\003 \001(\006\022\021\n\tfile_size\030\004 \001(\r\022\030\n\020rtime_sub"
      "scribed\030\005 \001(\r\022\030\n\020is_depot_content\030\006 \001(\010\022"
      "\025\n\rrtime_updated\030\007 \001(\r\"S\n&CMsgClientUCMP"
      "ublishedFileUnsubscribed\022\031\n\021published_fi"
      "le_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\"N\n!CMsgClien"
      "tUCMPublishedFileDeleted\022\031\n\021published_fi"
      "le_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\"\243\001\n!CMsgClie"
      "ntUCMPublishedFileUpdated\022\031\n\021published_f"
      "ile_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\024\n\014time_upd"
      "ated\030\003 \001(\r\022\020\n\010hcontent\030\004 \001(\006\022\021\n\tfile_siz"
      "e\030\005 \001(\007\022\030\n\020is_depot_content\030\006 \001(\010\"k\n$CMs"
      "gClientWorkshopItemChangesRequest\022\016\n\006app"
      "_id\030\001 \001(\r\022\031\n\021last_time_updated\030\002 \001(\r\022\030\n\020"
      "num_items_needed\030\003 \001(\r\"\373\001\n%CMsgClientWor"
      "kshopItemChangesResponse\022\022\n\007eresult\030\001 \001("
      "\005:\0012\022\023\n\013update_time\030\002 \001(\r\022O\n\016workshop_it"
      "ems\030\005 \003(\01327.CMsgClientWorkshopItemChange"
      "sResponse.WorkshopItemInfo\032X\n\020WorkshopIt"
      "emInfo\022\031\n\021published_file_id\030\001 \001(\006\022\024\n\014tim"
      "e_updated\030\002 \001(\r\022\023\n\013manifest_id\030\003 \001(\006\"\330\001\n"
      "!CMsgClientWorkshopItemInfoRequest\022\016\n\006ap"
      "p_id\030\001 \001(\r\022\031\n\021last_time_updated\030\002 \001(\r\022G\n"
      "\016workshop_items\030\003 \003(\0132/.CMsgClientWorksh"
      "opItemInfoRequest.WorkshopItem\032\?\n\014Worksh"
      "opItem\022\031\n\021published_file_id\030\001 \001(\006\022\024\n\014tim"
      "e_updated\030\002 \001(\r\"\237\002\n\"CMsgClientWorkshopIt"
      "emInfoResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\023\n\013up"
      "date_time\030\002 \001(\r\022L\n\016workshop_items\030\003 \003(\0132"
      "4.CMsgClientWorkshopItemInfoResponse.Wor"
      "kshopItemInfo\022\025\n\rprivate_items\030\004 \003(\006\032k\n\020"
      "WorkshopItemInfo\022\031\n\021published_file_id\030\001 "
      "\001(\006\022\024\n\014time_updated\030\002 \001(\r\022\023\n\013manifest_id"
      "\030\003 \001(\006\022\021\n\tis_legacy\030\004 \001(\010\"\224\001\n%CMsgClient"
      "UCMGetPublishedFilesForUser\022\016\n\006app_id\030\001 "
      "\001(\r\022\030\n\020creator_steam_id\030\002 \001(\006\022\025\n\rrequire"
      "d_tags\030\003 \003(\t\022\025\n\rexcluded_tags\030\004 \003(\t\022\023\n\013s"
      "tart_index\030\005 \001(\r\"\341\001\n-CMsgClientUCMGetPub"
      "lishedFilesForUserResponse\022\022\n\007eresult\030\001 "
      "\001(\005:\0012\022W\n\017published_files\030\002 \003(\0132>.CMsgCl"
      "ientUCMGetPublishedFilesForUserResponse."
      "PublishedFileId\022\025\n\rtotal_results\030\003 \001(\r\032,"
      "\n\017PublishedFileId\022\031\n\021published_file_id\030\001"
      " \001(\006\"d\n\'CMsgClientUCMSetUserPublishedFil"
      "eAction\022\031\n\021published_file_id\030\001 \001(\006\022\016\n\006ap"
      "p_id\030\002 \001(\r\022\016\n\006action\030\003 \001(\005\"E\n/CMsgClient"
      "UCMSetUserPublishedFileActionResponse\022\022\n"
      "\007eresult\030\001 \001(\005:\0012\"g\n0CMsgClientUCMEnumer"
      "atePublishedFilesByUserAction\022\016\n\006app_id\030"
      "\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\016\n\006action\030\003 \001"
      "(\005\"\224\002\n8CMsgClientUCMEnumeratePublishedFi"
      "lesByUserActionResponse\022\022\n\007eresult\030\001 \001(\005"
      ":\0012\022b\n\017published_files\030\002 \003(\0132I.CMsgClien"
      "tUCMEnumeratePublishedFilesByUserActionR"
      "esponse.PublishedFileId\022\025\n\rtotal_results"
      "\030\003 \001(\r\032I\n\017PublishedFileId\022\031\n\021published_f"
      "ile_id\030\001 \001(\006\022\033\n\020rtime_time_stamp\030\002 \001(\007:\001"
      "0\"\036\n\034CMsgClientScreenshotsChanged\"w\n\034CMs"
      "gClientUpdateUserGameInfo\022\024\n\014steamid_idg"
      "s\030\001 \001(\006\022\016\n\006gameid\030\002 \001(\006\022\017\n\007game_ip\030\003 \001(\r"
      "\022\021\n\tgame_port\030\004 \001(\r\022\r\n\005token\030\005 \001(\014\"S\n\034CM"
      "sgClientRichPresenceUpload\022\030\n\020rich_prese"
      "nce_kv\030\001 \001(\014\022\031\n\021steamid_broadcast\030\002 \003(\006\""
      "8\n\035CMsgClientRichPresenceRequest\022\027\n\017stea"
      "mid_request\030\001 \003(\006\"\235\001\n\032CMsgClientRichPres"
      "enceInfo\022\?\n\rrich_presence\030\001 \003(\0132(.CMsgCl"
      "ientRichPresenceInfo.RichPresence\032>\n\014Ric"
      "hPresence\022\024\n\014steamid_user\030\001 \001(\006\022\030\n\020rich_"
      "presence_kv\030\002 \001(\014\".\n\034CMsgClientCheckFile"
      "Signature\022\016\n\006app_id\030\001 \001(\r\"\367\001\n$CMsgClient"
      "CheckFileSignatureResponse\022\016\n\006app_id\030\001 \001"
      "(\r\022\013\n\003pid\030\002 \001(\r\022\017\n\007eresult\030\003 \001(\r\022\020\n\010file"
      "name\030\004 \001(\t\022\030\n\020esignatureresult\030\005 \001(\r\022\020\n\010"
      "sha_file\030\006 \001(\014\022\027\n\017signatureheader\030\007 \001(\014\022"
      "\020\n\010filesize\030\010 \001(\r\022\024\n\014getlasterror\030\t \001(\r\022"
      "\"\n\032evalvesignaturecheckdetail\030\n \001(\r\"P\n\031C"
      "MsgClientReadMachineAuth\022\020\n\010filename\030\001 \001"
      "(\t\022\016\n\006offset\030\002 \001(\r\022\021\n\tcubtoread\030\003 \001(\r\"\316\001"
      "\n!CMsgClientReadMachineAuthResponse\022\020\n\010f"
      "ilename\030\001 \001(\t\022\017\n\007eresult\030\002 \001(\r\022\020\n\010filesi"
      "ze\030\003 \001(\r\022\020\n\010sha_file\030\004 \001(\014\022\024\n\014getlasterr"
      "or\030\005 \001(\r\022\016\n\006offset\030\006 \001(\r\022\017\n\007cubread\030\007 \001("
      "\r\022\022\n\nbytes_read\030\010 \001(\014\022\027\n\017filename_sentry"
      "\030\t \001(\t\"\275\001\n\033CMsgClientUpdateMachineAuth\022\020"
      "\n\010filename\030\001 \001(\t\022\016\n\006offset\030\002 \001(\r\022\022\n\ncubt"
      "owrite\030\003 \001(\r\022\r\n\005bytes\030\004 \001(\014\022\020\n\010otp_type\030"
      "\005 \001(\r\022\026\n\016otp_identifier\030\006 \001(\t\022\030\n\020otp_sha"
      "redsecret\030\007 \001(\014\022\025\n\rotp_timedrift\030\010 \001(\r\"\341"
      "\001\n#CMsgClientUpdateMachineAuthResponse\022\020"
      "\n\010filename\030\001 \001(\t\022\017\n\007eresult\030\002 \001(\r\022\020\n\010fil"
      "esize\030\003 \001(\r\022\020\n\010sha_file\030\004 \001(\014\022\024\n\014getlast"
      "error\030\005 \001(\r\022\016\n\006offset\030\006 \001(\r\022\020\n\010cubwrote\030"
      "\007 \001(\r\022\020\n\010otp_type\030\010 \001(\005\022\021\n\totp_value\030\t \001"
      "(\r\022\026\n\016otp_identifier\030\n \001(\t\"\241\002\n\034CMsgClien"
      "tRequestMachineAuth\022\020\n\010filename\030\001 \001(\t\022\032\n"
      "\022eresult_sentryfile\030\002 \001(\r\022\020\n\010filesize\030\003 "
      "\001(\r\022\026\n\016sha_sentryfile\030\004 \001(\014\022\033\n\023lock_acco"
      "unt_action\030\006 \001(\005\022\020\n\010otp_type\030\007 \001(\r\022\026\n\016ot"
      "p_identifier\030\010 \001(\t\022\030\n\020otp_sharedsecret\030\t"
      " \001(\014\022\021\n\totp_value\030\n \001(\r\022\024\n\014machine_name\030"
      "\013 \001(\t\022\037\n\027machine_name_userchosen\030\014 \001(\t\"7"
      "\n$CMsgClientRequestMachineAuthResponse\022\017"
      "\n\007eresult\030\001 \001(\r\"$\n\025CMsgClientRegisterKey"
      "\022\013\n\003key\030\001 \001(\t\"p\n\032CMsgClientPurchaseRespo"
      "nse\022\022\n\007eresult\030\001 \001(\005:\0012\022\037\n\027purchase_resu"
      "lt_details\030\002 \001(\005\022\035\n\025purchase_receipt_inf"
      "o\030\003 \001(\014\"\305\001\n\034CMsgClientActivateOEMLicense"
      "\022\031\n\021bios_manufacturer\030\001 \001(\t\022\031\n\021bios_seri"
      "alnumber\030\002 \001(\t\022\024\n\014license_file\030\003 \001(\014\022\036\n\026"
      "mainboard_manufacturer\030\004 \001(\t\022\031\n\021mainboar"
      "d_product\030\005 \001(\t\022\036\n\026mainboard_serialnumbe"
      "r\030\006 \001(\t\"9\n\034CMsgClientRegisterOEMMachine\022"
      "\031\n\021oem_register_file\030\001 \001(\014\"7\n$CMsgClient"
      "RegisterOEMMachineResponse\022\017\n\007eresult\030\001 "
      "\001(\r\"K\n\037CMsgClientPurchaseWithMachineID\022\022"
      "\n\npackage_id\030\001 \001(\r\022\024\n\014machine_info\030\002 \001(\014"
      "\"g\n CMsgTrading_InitiateTradeRequest\022\030\n\020"
      "trade_request_id\030\001 \001(\r\022\025\n\rother_steamid\030"
      "\002 \001(\004\022\022\n\nother_name\030\003 \001(\t\"\322\002\n!CMsgTradin"
      "g_InitiateTradeResponse\022\020\n\010response\030\001 \001("
      "\r\022\030\n\020trade_request_id\030\002 \001(\r\022\025\n\rother_ste"
      "amid\030\003 \001(\004\022 \n\030steamguard_required_days\030\004"
      " \001(\r\022 \n\030new_device_cooldown_days\030\005 \001(\r\022-"
      "\n%default_password_reset_probation_days\030"
      "\006 \001(\r\022%\n\035password_reset_probation_days\030\007"
      " \001(\r\022+\n#default_email_change_probation_d"
      "ays\030\010 \001(\r\022#\n\033email_change_probation_days"
      "\030\t \001(\r\"7\n\036CMsgTrading_CancelTradeRequest"
      "\022\025\n\rother_steamid\030\001 \001(\004\"1\n\030CMsgTrading_S"
      "tartSession\022\025\n\rother_steamid\030\001 \001(\004\"\257\001\n\025C"
      "MsgClientEmailChange\022\020\n\010password\030\001 \001(\t\022\r"
      "\n\005email\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\r\n\005final\030\004 \001"
      "(\010\022\021\n\tnewmethod\030\005 \001(\010\022\026\n\016twofactor_code\030"
      "\006 \001(\t\022\020\n\010sms_code\030\007 \001(\t\022\033\n\023client_suppor"
      "ts_sms\030\010 \001(\010\"N\n\035CMsgClientEmailChangeRes"
      "ponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\031\n\021requires_sm"
      "s_code\030\002 \001(\010\"P\n\031CMsgClientGetCDNAuthToke"
      "n\022\020\n\010depot_id\030\001 \001(\r\022\021\n\thost_name\030\002 \001(\t\022\016"
      "\n\006app_id\030\003 \001(\r\"C\n\037CMsgClientGetDepotDecr"
      "yptionKey\022\020\n\010depot_id\030\001 \001(\r\022\016\n\006app_id\030\002 "
      "\001(\r\"m\n\'CMsgClientGetDepotDecryptionKeyRe"
      "sponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\020\n\010depot_id\030\002"
      " \001(\r\022\034\n\024depot_encryption_key\030\003 \001(\014\"F\n\036CM"
      "sgClientCheckAppBetaPassword\022\016\n\006app_id\030\001"
      " \001(\r\022\024\n\014betapassword\030\002 \001(\t\"\301\001\n&CMsgClien"
      "tCheckAppBetaPasswordResponse\022\022\n\007eresult"
      "\030\001 \001(\005:\0012\022K\n\rbetapasswords\030\004 \003(\01324.CMsgC"
      "lientCheckAppBetaPasswordResponse.BetaPa"
      "ssword\0326\n\014BetaPassword\022\020\n\010betaname\030\001 \001(\t"
      "\022\024\n\014betapassword\030\002 \001(\t\"\255\004\n\034CMsgClientUpd"
      "ateAppJobReport\022\016\n\006app_id\030\001 \001(\r\022\021\n\tdepot"
      "_ids\030\002 \003(\r\022\021\n\tapp_state\030\003 \001(\r\022\025\n\rjob_app"
      "_error\030\004 \001(\r\022\025\n\rerror_details\030\005 \001(\t\022\024\n\014j"
      "ob_duration\030\006 \001(\r\022\037\n\027files_validation_fa"
      "iled\030\007 \001(\r\022\034\n\024job_bytes_downloaded\030\010 \001(\004"
      "\022\030\n\020job_bytes_staged\030\t \001(\004\022\026\n\016bytes_comi"
      "tted\030\n \001(\004\022\027\n\017start_app_state\030\013 \001(\r\022\030\n\020s"
      "tats_machine_id\030\014 \001(\006\022\023\n\013branch_name\030\r \001"
      "(\t\022\036\n\026total_bytes_downloaded\030\016 \001(\004\022\032\n\022to"
      "tal_bytes_staged\030\017 \001(\004\022\034\n\024total_bytes_re"
      "stored\030\020 \001(\004\022\023\n\013is_borrowed\030\021 \001(\010\022\027\n\017is_"
      "free_weekend\030\022 \001(\010\022\032\n\022total_bytes_legacy"
      "\030\023 \001(\004\022\033\n\023total_bytes_patched\030\024 \001(\004\022\031\n\021t"
      "otal_bytes_saved\030\025 \001(\004\"\313\001\n\036CMsgClientDPC"
      "ontentStatsReport\022\030\n\020stats_machine_id\030\001 "
      "\001(\006\022\024\n\014country_code\030\002 \001(\t\022\017\n\007os_type\030\003 \001"
      "(\005\022\020\n\010language\030\004 \001(\005\022\033\n\023num_install_fold"
      "ers\030\005 \001(\r\022\033\n\023num_installed_games\030\006 \001(\r\022\034"
      "\n\024size_installed_games\030\007 \001(\004\"_\n!CMsgClie"
      "ntGetCDNAuthTokenResponse\022\022\n\007eresult\030\001 \001"
      "(\r:\0012\022\r\n\005token\030\002 \001(\t\022\027\n\017expiration_time\030"
      "\003 \001(\r\"\313\001\n\032CMsgDownloadRateStatistics\022\017\n\007"
      "cell_id\030\001 \001(\r\0224\n\005stats\030\002 \003(\0132%.CMsgDownl"
      "oadRateStatistics.StatsInfo\032f\n\tStatsInfo"
      "\022\023\n\013source_type\030\001 \001(\r\022\021\n\tsource_id\030\002 \001(\r"
      "\022\017\n\007seconds\030\003 \001(\r\022\r\n\005bytes\030\004 \001(\004\022\021\n\thost"
      "_name\030\005 \001(\t\"H\n\034CMsgClientRequestAccountD"
      "ata\022\030\n\020account_or_email\030\001 \001(\t\022\016\n\006action\030"
      "\002 \001(\r\"\327\001\n$CMsgClientRequestAccountDataRe"
      "sponse\022\016\n\006action\030\001 \001(\r\022\017\n\007eresult\030\002 \001(\r\022"
      "\024\n\014account_name\030\003 \001(\t\022\022\n\nct_matches\030\004 \001("
      "\r\022 \n\030account_name_suggestion1\030\005 \001(\t\022 \n\030a"
      "ccount_name_suggestion2\030\006 \001(\t\022 \n\030account"
      "_name_suggestion3\030\007 \001(\t\"\231\001\n\033CMsgClientUG"
      "SGetGlobalStats\022\016\n\006gameid\030\001 \001(\004\022\036\n\026histo"
      "ry_days_requested\030\002 \001(\r\022\033\n\023time_last_req"
      "uested\030\003 \001(\007\022\030\n\020first_day_cached\030\004 \001(\r\022\023"
      "\n\013days_cached\030\005 \001(\r\"\225\002\n#CMsgClientUGSGet"
      "GlobalStatsResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022"
      "\021\n\ttimestamp\030\002 \001(\007\022\023\n\013day_current\030\003 \001(\005\022"
      "6\n\004days\030\004 \003(\0132(.CMsgClientUGSGetGlobalSt"
      "atsResponse.Day\032z\n\003Day\022\016\n\006day_id\030\001 \001(\r\022<"
      "\n\005stats\030\002 \003(\0132-.CMsgClientUGSGetGlobalSt"
      "atsResponse.Day.Stat\032%\n\004Stat\022\017\n\007stat_id\030"
      "\001 \001(\005\022\014\n\004data\030\002 \001(\003\"\324\003\n\022CMsgGameServerDa"
      "ta\022\023\n\013steam_id_gs\030\001 \001(\006\022\n\n\002ip\030\002 \001(\r\022\022\n\nq"
      "uery_port\030\003 \001(\r\022\021\n\tgame_port\030\004 \001(\r\022\025\n\rso"
      "urcetv_port\030\005 \001(\r\022\014\n\004name\030\026 \001(\t\022\016\n\006app_i"
      "d\030\006 \001(\r\022\017\n\007gamedir\030\007 \001(\t\022\017\n\007version\030\010 \001("
      "\t\022\017\n\007product\030\t \001(\t\022\016\n\006region\030\n \001(\t\022+\n\007pl"
      "ayers\030\013 \003(\0132\032.CMsgGameServerData.Player\022"
      "\023\n\013max_players\030\014 \001(\r\022\021\n\tbot_count\030\r \001(\r\022"
      "\020\n\010password\030\016 \001(\010\022\016\n\006secure\030\017 \001(\010\022\021\n\tded"
      "icated\030\020 \001(\010\022\n\n\002os\030\021 \001(\t\022\021\n\tgame_data\030\022 "
      "\001(\t\022\031\n\021game_data_version\030\023 \001(\r\022\021\n\tgame_t"
      "ype\030\024 \001(\t\022\013\n\003map\030\025 \001(\t\032\032\n\006Player\022\020\n\010stea"
      "m_id\030\001 \001(\006\"H\n\024CMsgGameServerRemove\022\020\n\010st"
      "eam_id\030\001 \001(\006\022\n\n\002ip\030\002 \001(\r\022\022\n\nquery_port\030\003"
      " \001(\r\"\202\001\n\030CMsgClientGMSServerQuery\022\016\n\006app"
      "_id\030\001 \001(\r\022\027\n\017geo_location_ip\030\002 \001(\r\022\023\n\013re"
      "gion_code\030\003 \001(\r\022\023\n\013filter_text\030\004 \001(\t\022\023\n\013"
      "max_servers\030\005 \001(\r\"\264\001\n CMsgGMSClientServe"
      "rQueryResponse\0229\n\007servers\030\001 \003(\0132(.CMsgGM"
      "SClientServerQueryResponse.Server\022\r\n\005err"
      "or\030\002 \001(\t\032F\n\006Server\022\021\n\tserver_ip\030\001 \001(\r\022\023\n"
      "\013server_port\030\002 \001(\r\022\024\n\014auth_players\030\003 \001(\r"
      "\"O\n\027CMsgGameServerOutOfDate\022\023\n\013steam_id_"
      "gs\030\001 \001(\006\022\016\n\006reject\030\002 \001(\010\022\017\n\007message\030\003 \001("
      "\t\"2\n\031CMsgClientRedeemGuestPass\022\025\n\rguest_"
      "pass_id\030\001 \001(\006\"c\n!CMsgClientRedeemGuestPa"
      "ssResponse\022\022\n\007eresult\030\001 \001(\r:\0012\022\022\n\npackag"
      "e_id\030\002 \001(\r\022\026\n\016must_own_appid\030\003 \001(\r\"8\n\037CM"
      "sgClientGetClanActivityCounts\022\025\n\rsteamid"
      "_clans\030\001 \003(\004\"=\n\'CMsgClientGetClanActivit"
      "yCountsResponse\022\022\n\007eresult\030\001 \001(\r:\0012\"y\n\031C"
      "MsgClientOGSReportString\022\023\n\013accumulated\030"
      "\001 \001(\010\022\021\n\tsessionid\030\002 \001(\004\022\020\n\010severity\030\003 \001"
      "(\005\022\021\n\tformatter\030\004 \001(\t\022\017\n\007varargs\030\005 \001(\014\"P"
      "\n\026CMsgClientOGSReportBug\022\021\n\tsessionid\030\001 "
      "\001(\004\022\017\n\007bugtext\030\002 \001(\t\022\022\n\nscreenshot\030\003 \001(\014"
      "\"0\n\027CMsgGSAssociateWithClan\022\025\n\rsteam_id_"
      "clan\030\001 \001(\006\"L\n\037CMsgGSAssociateWithClanRes"
      "ponse\022\025\n\rsteam_id_clan\030\001 \001(\006\022\022\n\007eresult\030"
      "\002 \001(\r:\0012\"A\n#CMsgGSComputeNewPlayerCompat"
      "ibility\022\032\n\022steam_id_candidate\030\001 \001(\006\"\317\001\n+"
      "CMsgGSComputeNewPlayerCompatibilityRespo"
      "nse\022\032\n\022steam_id_candidate\030\001 \001(\006\022\022\n\007eresu"
      "lt\030\002 \001(\r:\0012\022\026\n\016is_clan_member\030\003 \001(\010\022\030\n\020c"
      "t_dont_like_you\030\004 \001(\005\022\030\n\020ct_you_dont_lik"
      "e\030\005 \001(\005\022$\n\034ct_clanmembers_dont_like_you\030"
      "\006 \001(\005\"\024\n\022CMsgClientSentLogs\"l\n\014CMsgGCCli"
      "ent\022\r\n\005appid\030\001 \001(\r\022\017\n\007msgtype\030\002 \001(\r\022\017\n\007p"
      "ayload\030\003 \001(\014\022\017\n\007steamid\030\004 \001(\006\022\016\n\006gcname\030"
      "\005 \001(\t\022\n\n\002ip\030\006 \001(\r\".\n\034CMsgClientRequestFr"
      "eeLicense\022\016\n\006appids\030\002 \003(\r\"n\n$CMsgClientR"
      "equestFreeLicenseResponse\022\022\n\007eresult\030\001 \001"
      "(\r:\0012\022\032\n\022granted_packageids\030\002 \003(\r\022\026\n\016gra"
      "nted_appids\030\003 \003(\r\"\323\001\n#CMsgDRMDownloadReq"
      "uestWithCrashData\022\026\n\016download_flags\030\001 \001("
      "\r\022\034\n\024download_types_known\030\002 \001(\r\022\020\n\010guid_"
      "drm\030\003 \001(\014\022\022\n\nguid_split\030\004 \001(\014\022\022\n\nguid_me"
      "rge\030\005 \001(\014\022\023\n\013module_name\030\006 \001(\t\022\023\n\013module"
      "_path\030\007 \001(\t\022\022\n\ncrash_data\030\010 \001(\014\"\333\001\n\027CMsg"
      "DRMDownloadResponse\022\022\n\007eresult\030\001 \001(\r:\0012\022"
      "\016\n\006app_id\030\002 \001(\r\022\032\n\022blob_download_type\030\003 "
      "\001(\r\022\022\n\nmerge_guid\030\004 \001(\014\022\034\n\024download_file"
      "_dfs_ip\030\005 \001(\r\022\036\n\026download_file_dfs_port\030"
      "\006 \001(\r\022\031\n\021download_file_url\030\007 \001(\t\022\023\n\013modu"
      "le_path\030\010 \001(\t\"\327\001\n\022CMsgDRMFinalResult\022\022\n\007"
      "eResult\030\001 \001(\r:\0012\022\016\n\006app_id\030\002 \001(\r\022\032\n\022blob"
      "_download_type\030\003 \001(\r\022\024\n\014error_detail\030\004 \001"
      "(\r\022\022\n\nmerge_guid\030\005 \001(\014\022\034\n\024download_file_"
      "dfs_ip\030\006 \001(\r\022\036\n\026download_file_dfs_port\030\007"
      " \001(\r\022\031\n\021download_file_url\030\010 \001(\t\"3\n\036CMsgC"
      "lientDPCheckSpecialSurvey\022\021\n\tsurvey_id\030\001"
      " \001(\r\"\226\001\n&CMsgClientDPCheckSpecialSurveyR"
      "esponse\022\022\n\007eResult\030\001 \001(\r:\0012\022\r\n\005state\030\002 \001"
      "(\r\022\014\n\004name\030\003 \001(\t\022\022\n\ncustom_url\030\004 \001(\t\022\030\n\020"
      "include_software\030\005 \001(\010\022\r\n\005token\030\006 \001(\014\"H\n"
      "%CMsgClientDPSendSpecialSurveyResponse\022\021"
      "\n\tsurvey_id\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\"O\n*CMsgC"
      "lientDPSendSpecialSurveyResponseReply\022\022\n"
      "\007eResult\030\001 \001(\r:\0012\022\r\n\005token\030\002 \001(\014\"W\n\'CMsg"
      "ClientRequestForgottenPasswordEmail\022\024\n\014a"
      "ccount_name\030\001 \001(\t\022\026\n\016password_tried\030\002 \001("
      "\t\"_\n/CMsgClientRequestForgottenPasswordE"
      "mailResponse\022\017\n\007eResult\030\001 \001(\r\022\033\n\023use_sec"
      "ret_question\030\002 \001(\010\"6\n\033CMsgClientItemAnno"
      "uncements\022\027\n\017count_new_items\030\001 \001(\r\"$\n\"CM"
      "sgClientRequestItemAnnouncements\"\236\001\n\033CMs"
      "gClientUserNotifications\022@\n\rnotification"
      "s\030\001 \003(\0132).CMsgClientUserNotifications.No"
      "tification\032=\n\014Notification\022\036\n\026user_notif"
      "ication_type\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\"\210\001\n\036CM"
      "sgClientCommentNotifications\022\032\n\022count_ne"
      "w_comments\030\001 \001(\r\022 \n\030count_new_comments_o"
      "wner\030\002 \001(\r\022(\n count_new_comments_subscri"
      "ptions\030\003 \001(\r\"\'\n%CMsgClientRequestComment"
      "Notifications\"g\n$CMsgClientOfflineMessag"
      "eNotification\022\030\n\020offline_messages\030\001 \001(\r\022"
      "%\n\035friends_with_offline_messages\030\002 \003(\r\"&"
      "\n$CMsgClientRequestOfflineMessageCount\"8"
      "\n%CMsgClientChatGetFriendMessageHistory\022"
      "\017\n\007steamid\030\001 \001(\006\"\371\001\n-CMsgClientChatGetFr"
      "iendMessageHistoryResponse\022\017\n\007steamid\030\001 "
      "\001(\006\022\017\n\007success\030\002 \001(\r\022N\n\010messages\030\003 \003(\0132<"
      ".CMsgClientChatGetFriendMessageHistoryRe"
      "sponse.FriendMessage\032V\n\rFriendMessage\022\021\n"
      "\taccountid\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\r\022\017\n\007m"
      "essage\030\003 \001(\t\022\016\n\006unread\030\004 \001(\010\"9\n7CMsgClie"
      "ntChatGetFriendMessageHistoryForOfflineM"
      "essages\"7\n!CMsgClientFSGetFriendsSteamLe"
      "vels\022\022\n\naccountids\030\001 \003(\r\"\233\001\n)CMsgClientF"
      "SGetFriendsSteamLevelsResponse\022B\n\007friend"
      "s\030\001 \003(\01321.CMsgClientFSGetFriendsSteamLev"
      "elsResponse.Friend\032*\n\006Friend\022\021\n\taccounti"
      "d\030\001 \001(\r\022\r\n\005level\030\002 \001(\r\"\353\001\n\027CMsgClientEma"
      "ilAddrInfo\022\025\n\remail_address\030\001 \001(\t\022\032\n\022ema"
      "il_is_validated\030\002 \001(\010\022 \n\030email_validatio"
      "n_changed\030\003 \001(\010\022\'\n\037credential_change_req"
      "uires_code\030\004 \001(\010\0221\n)password_or_secretqa"
      "_change_requires_code\030\005 \001(\010\022\037\n\027remind_us"
      "er_about_email\030\006 \001(\010\"\267\001\n\036CMsgCREEnumerat"
      "ePublishedFiles\022\016\n\006app_id\030\001 \001(\r\022\022\n\nquery"
      "_type\030\002 \001(\005\022\023\n\013start_index\030\003 \001(\r\022\014\n\004days"
      "\030\004 \001(\r\022\r\n\005count\030\005 \001(\r\022\014\n\004tags\030\006 \003(\t\022\021\n\tu"
      "ser_tags\030\007 \003(\t\022\036\n\022matching_file_type\030\010 \001"
      "(\r:\00213\"\235\002\n&CMsgCREEnumeratePublishedFile"
      "sResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022P\n\017publish"
      "ed_files\030\002 \003(\01327.CMsgCREEnumeratePublish"
      "edFilesResponse.PublishedFileId\022\025\n\rtotal"
      "_results\030\003 \001(\r\032v\n\017PublishedFileId\022\031\n\021pub"
      "lished_file_id\030\001 \001(\006\022\021\n\tvotes_for\030\002 \001(\005\022"
      "\025\n\rvotes_against\030\003 \001(\005\022\017\n\007reports\030\004 \001(\005\022"
      "\r\n\005score\030\005 \001(\002\"\213\001\n\026CMsgCREItemVoteSummar"
      "y\022C\n\022published_file_ids\030\001 \003(\0132\'.CMsgCREI"
      "temVoteSummary.PublishedFileId\032,\n\017Publis"
      "hedFileId\022\031\n\021published_file_id\030\001 \001(\006\"\372\001\n"
      "\036CMsgCREItemVoteSummaryResponse\022\022\n\007eresu"
      "lt\030\001 \001(\005:\0012\022L\n\023item_vote_summaries\030\002 \003(\013"
      "2/.CMsgCREItemVoteSummaryResponse.ItemVo"
      "teSummary\032v\n\017ItemVoteSummary\022\031\n\021publishe"
      "d_file_id\030\001 \001(\006\022\021\n\tvotes_for\030\002 \001(\005\022\025\n\rvo"
      "tes_against\030\003 \001(\005\022\017\n\007reports\030\004 \001(\005\022\r\n\005sc"
      "ore\030\005 \001(\002\"P\n\"CMsgCREUpdateUserPublishedI"
      "temVote\022\031\n\021published_file_id\030\001 \001(\006\022\017\n\007vo"
      "te_up\030\002 \001(\010\"@\n*CMsgCREUpdateUserPublishe"
      "dItemVoteResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"\253\001"
      "\n&CMsgCREGetUserPublishedItemVoteDetails"
      "\022S\n\022published_file_ids\030\001 \003(\01327.CMsgCREGe"
      "tUserPublishedItemVoteDetails.PublishedF"
      "ileId\032,\n\017PublishedFileId\022\031\n\021published_fi"
      "le_id\030\001 \001(\006\"\352\001\n.CMsgCREGetUserPublishedI"
      "temVoteDetailsResponse\022\022\n\007eresult\030\001 \001(\005:"
      "\0012\022b\n\026user_item_vote_details\030\002 \003(\0132B.CMs"
      "gCREGetUserPublishedItemVoteDetailsRespo"
      "nse.UserItemVoteDetail\032@\n\022UserItemVoteDe"
      "tail\022\031\n\021published_file_id\030\001 \001(\006\022\017\n\004vote\030"
      "\002 \001(\005:\0010\"\271\001\n\030CMsgGameServerPingSample\022\r\n"
      "\005my_ip\030\001 \001(\007\022\021\n\tgs_app_id\030\002 \001(\005\0224\n\ngs_sa"
      "mples\030\003 \003(\0132 .CMsgGameServerPingSample.S"
      "ample\032E\n\006Sample\022\n\n\002ip\030\001 \001(\007\022\023\n\013avg_ping_"
      "ms\030\002 \001(\r\022\032\n\022stddev_ping_ms_x10\030\003 \001(\r\"*\n\026"
      "CMsgFSGetFollowerCount\022\020\n\010steam_id\030\001 \001(\006"
      "\"F\n\036CMsgFSGetFollowerCountResponse\022\022\n\007er"
      "esult\030\001 \001(\005:\0012\022\020\n\005count\030\002 \001(\005:\0010\"(\n\024CMsg"
      "FSGetIsFollowing\022\020\n\010steam_id\030\001 \001(\006\"O\n\034CM"
      "sgFSGetIsFollowingResponse\022\022\n\007eresult\030\001 "
      "\001(\005:\0012\022\033\n\014is_following\030\002 \001(\010:\005false\"3\n\034C"
      "MsgFSEnumerateFollowingList\022\023\n\013start_ind"
      "ex\030\001 \001(\r\"d\n$CMsgFSEnumerateFollowingList"
      "Response\022\022\n\007eresult\030\001 \001(\005:\0012\022\025\n\rtotal_re"
      "sults\030\002 \001(\005\022\021\n\tsteam_ids\030\003 \003(\006\"0\n\037CMsgDP"
      "GetNumberOfCurrentPlayers\022\r\n\005appid\030\001 \001(\r"
      "\"S\n\'CMsgDPGetNumberOfCurrentPlayersRespo"
      "nse\022\022\n\007eresult\030\001 \001(\005:\0012\022\024\n\014player_count\030"
      "\002 \001(\005\"a\n#CMsgClientFriendUserStatusPubli"
      "shed\022\026\n\016friend_steamid\030\001 \001(\006\022\r\n\005appid\030\002 "
      "\001(\r\022\023\n\013status_text\030\003 \001(\t\"b\n\027CMsgClientSe"
      "rviceMethod\022\023\n\013method_name\030\001 \001(\t\022\031\n\021seri"
      "alized_method\030\002 \001(\014\022\027\n\017is_notification\030\003"
      " \001(\010\"Z\n\037CMsgClientServiceMethodResponse\022"
      "\023\n\013method_name\030\001 \001(\t\022\"\n\032serialized_metho"
      "d_response\030\002 \001(\014\"5\n\020CMsgClientUIMode\022\016\n\006"
      "uimode\030\001 \001(\r\022\021\n\tchat_mode\030\002 \001(\r\"<\n&CMsgC"
      "lientVanityURLChangedNotification\022\022\n\nvan"
      "ity_url\030\001 \001(\t\"y\n%CMsgClientAuthorizeLoca"
      "lDeviceRequest\022\032\n\022device_description\030\001 \001"
      "(\t\022\030\n\020owner_account_id\030\002 \001(\r\022\032\n\022local_de"
      "vice_token\030\003 \001(\004\"k\n\036CMsgClientAuthorizeL"
      "ocalDevice\022\022\n\007eresult\030\001 \001(\005:\0012\022\030\n\020owner_"
      "account_id\030\002 \001(\r\022\033\n\023authed_device_token\030"
      "\003 \001(\004\"v\n*CMsgClientAuthorizeLocalDeviceN"
      "otification\022\022\n\007eresult\030\001 \001(\005:\0012\022\030\n\020owner"
      "_account_id\030\002 \001(\r\022\032\n\022local_device_token\030"
      "\003 \001(\004\"n\n\"CMsgClientDeauthorizeDeviceRequ"
      "est\022\"\n\032deauthorization_account_id\030\001 \001(\r\022"
      "$\n\034deauthorization_device_token\030\002 \001(\004\"U\n"
      "\033CMsgClientDeauthorizeDevice\022\022\n\007eresult\030"
      "\001 \001(\005:\0012\022\"\n\032deauthorization_account_id\030\002"
      " \001(\r\"\321\001\n&CMsgClientUseLocalDeviceAuthori"
      "zations\022 \n\030authorization_account_id\030\001 \003("
      "\r\022J\n\rdevice_tokens\030\002 \003(\01323.CMsgClientUse"
      "LocalDeviceAuthorizations.DeviceToken\0329\n"
      "\013DeviceToken\022\030\n\020owner_account_id\030\001 \001(\r\022\020"
      "\n\010token_id\030\002 \001(\004\" \n\036CMsgClientGetAuthori"
      "zedDevices\"\255\002\n&CMsgClientGetAuthorizedDe"
      "vicesResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022S\n\021aut"
      "horized_device\030\002 \003(\01328.CMsgClientGetAuth"
      "orizedDevicesResponse.AuthorizedDevice\032\231"
      "\001\n\020AuthorizedDevice\022\031\n\021auth_device_token"
      "\030\001 \001(\004\022\023\n\013device_name\030\002 \001(\t\022\030\n\020last_acce"
      "ss_time\030\003 \001(\r\022\023\n\013borrower_id\030\004 \001(\r\022\022\n\nis"
      "_pending\030\005 \001(\010\022\022\n\napp_played\030\006 \001(\r\"\302\001\n!C"
      "MsgClientSharedLibraryLockStatus\022H\n\016lock"
      "ed_library\030\001 \003(\01320.CMsgClientSharedLibra"
      "ryLockStatus.LockedLibrary\022\035\n\025own_librar"
      "y_locked_by\030\002 \001(\r\0324\n\rLockedLibrary\022\020\n\010ow"
      "ner_id\030\001 \001(\r\022\021\n\tlocked_by\030\002 \001(\r\"\247\001\n\"CMsg"
      "ClientSharedLibraryStopPlaying\022\024\n\014second"
      "s_left\030\001 \001(\005\022>\n\tstop_apps\030\002 \003(\0132+.CMsgCl"
      "ientSharedLibraryStopPlaying.StopApp\032+\n\007"
      "StopApp\022\016\n\006app_id\030\001 \001(\r\022\020\n\010owner_id\030\002 \001("
      "\r\"\361\001\n\025CMsgClientServiceCall\022\025\n\rsysid_rou"
      "ting\030\001 \001(\014\022\023\n\013call_handle\030\002 \001(\r\022\022\n\nmodul"
      "e_crc\030\003 \001(\r\022\023\n\013module_hash\030\004 \001(\014\022\023\n\013func"
      "tion_id\030\005 \001(\r\022\026\n\016cub_output_max\030\006 \001(\r\022\r\n"
      "\005flags\030\007 \001(\r\022\025\n\rcallparameter\030\010 \001(\014\022\021\n\tp"
      "ing_only\030\t \001(\010\022\035\n\025max_outstanding_calls\030"
      "\n \001(\r\"Z\n\027CMsgClientServiceModule\022\022\n\nmodu"
      "le_crc\030\001 \001(\r\022\023\n\013module_hash\030\002 \001(\014\022\026\n\016mod"
      "ule_content\030\003 \001(\014\"\270\004\n\035CMsgClientServiceC"
      "allResponse\022\025\n\rsysid_routing\030\001 \001(\014\022\023\n\013ca"
      "ll_handle\030\002 \001(\r\022\022\n\nmodule_crc\030\003 \001(\r\022\023\n\013m"
      "odule_hash\030\004 \001(\014\022\023\n\013ecallresult\030\005 \001(\r\022\026\n"
      "\016result_content\030\006 \001(\014\022\027\n\017os_version_info"
      "\030\007 \001(\014\022\023\n\013system_info\030\010 \001(\014\022\024\n\014load_addr"
      "ess\030\t \001(\006\022\030\n\020exception_record\030\n \001(\014\022 \n\030p"
      "ortable_os_version_info\030\013 \001(\014\022\034\n\024portabl"
      "e_system_info\030\014 \001(\014\022\025\n\rwas_converted\030\r \001"
      "(\010\022\027\n\017internal_result\030\016 \001(\r\022\025\n\rcurrent_c"
      "ount\030\017 \001(\r\022\030\n\020last_call_handle\030\020 \001(\r\022\034\n\024"
      "last_call_module_crc\030\021 \001(\r\022\037\n\027last_call_"
      "sysid_routing\030\022 \001(\014\022\030\n\020last_ecallresult\030"
      "\023 \001(\r\022\034\n\024last_callissue_delta\030\024 \001(\r\022\037\n\027l"
      "ast_callcomplete_delta\030\025 \001(\r\"\027\n\025CMsgAMUn"
      "lockStreaming\"K\n\035CMsgAMUnlockStreamingRe"
      "sponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\026\n\016encryption"
      "_key\030\002 \001(\014\"\022\n\020CMsgAMUnlockHEVC\".\n\030CMsgAM"
      "UnlockHEVCResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"M"
      "\n\035CMsgClientPlayingSessionState\022\027\n\017playi"
      "ng_blocked\030\002 \001(\010\022\023\n\013playing_app\030\003 \001(\r\"6\n"
      "\034CMsgClientKickPlayingSession\022\026\n\016only_st"
      "op_game\030\001 \001(\010\"v\n\037CMsgClientVoiceCallPreA"
      "uthorize\022\026\n\016caller_steamid\030\001 \001(\006\022\030\n\020rece"
      "iver_steamid\030\002 \001(\006\022\021\n\tcaller_id\030\003 \001(\005\022\016\n"
      "\006hangup\030\004 \001(\010\"\202\001\n\'CMsgClientVoiceCallPre"
      "AuthorizeResponse\022\026\n\016caller_steamid\030\001 \001("
      "\006\022\030\n\020receiver_steamid\030\002 \001(\006\022\022\n\007eresult\030\003"
      " \001(\005:\0012\022\021\n\tcaller_id\030\004 \001(\005B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 21713);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_clientserver_2.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fclientserver_5f2_2eproto

// ===================================================================

void CMsgClientUCMAddScreenshot_Tag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshot_Tag::kTagNameFieldNumber;
const int CMsgClientUCMAddScreenshot_Tag::kTagValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshot_Tag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMAddScreenshot.Tag)
}
CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag(const CMsgClientUCMAddScreenshot_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_name()) {
    tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  tag_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_value()) {
    tag_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMAddScreenshot.Tag)
}

void CMsgClientUCMAddScreenshot_Tag::SharedCtor() {
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMAddScreenshot_Tag::~CMsgClientUCMAddScreenshot_Tag() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMAddScreenshot.Tag)
  SharedDtor();
}

void CMsgClientUCMAddScreenshot_Tag::SharedDtor() {
  tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot_Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMAddScreenshot_Tag::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMAddScreenshot_Tag& CMsgClientUCMAddScreenshot_Tag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshot_Tag.base);
  return *internal_default_instance();
}


void CMsgClientUCMAddScreenshot_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tag_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tag_value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMAddScreenshot_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMAddScreenshot.Tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_name().data(), static_cast<int>(this->tag_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.Tag.tag_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_value().data(), static_cast<int>(this->tag_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.Tag.tag_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMAddScreenshot.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMAddScreenshot.Tag)
  return false;
#undef DO_
}

void CMsgClientUCMAddScreenshot_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.Tag.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag_name(), output);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_value().data(), static_cast<int>(this->tag_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.Tag.tag_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMAddScreenshot.Tag)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshot_Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.Tag.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag_name(), target);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_value().data(), static_cast<int>(this->tag_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.Tag.tag_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMAddScreenshot.Tag)
  return target;
}

size_t CMsgClientUCMAddScreenshot_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMAddScreenshot.Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string tag_name = 1;
    if (has_tag_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_name());
    }

    // optional string tag_value = 2;
    if (has_tag_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot_Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMAddScreenshot_Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMAddScreenshot.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMAddScreenshot.Tag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag_name();
      tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tag_value();
      tag_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_value_);
    }
  }
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot_Tag::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot_Tag::Swap(CMsgClientUCMAddScreenshot_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshot_Tag::InternalSwap(CMsgClientUCMAddScreenshot_Tag* other) {
  using std::swap;
  tag_name_.Swap(&other->tag_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tag_value_.Swap(&other->tag_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshot_Tag::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMAddScreenshot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshot::kAppidFieldNumber;
const int CMsgClientUCMAddScreenshot::kFilenameFieldNumber;
const int CMsgClientUCMAddScreenshot::kThumbnameFieldNumber;
const int CMsgClientUCMAddScreenshot::kVrFilenameFieldNumber;
const int CMsgClientUCMAddScreenshot::kRtime32CreatedFieldNumber;
const int CMsgClientUCMAddScreenshot::kWidthFieldNumber;
const int CMsgClientUCMAddScreenshot::kHeightFieldNumber;
const int CMsgClientUCMAddScreenshot::kPermissionsFieldNumber;
const int CMsgClientUCMAddScreenshot::kCaptionFieldNumber;
const int CMsgClientUCMAddScreenshot::kShortcutNameFieldNumber;
const int CMsgClientUCMAddScreenshot::kTagFieldNumber;
const int CMsgClientUCMAddScreenshot::kTaggedSteamidFieldNumber;
const int CMsgClientUCMAddScreenshot::kSpoilerTagFieldNumber;
const int CMsgClientUCMAddScreenshot::kTaggedPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMAddScreenshot)
}
CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot(const CMsgClientUCMAddScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tag_(from.tag_),
      tagged_steamid_(from.tagged_steamid_),
      tagged_publishedfileid_(from.tagged_publishedfileid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  thumbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbname()) {
    thumbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbname_);
  }
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_caption()) {
    caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
  }
  shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shortcut_name()) {
    shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcut_name_);
  }
  vr_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vr_filename()) {
    vr_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_filename_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&spoiler_tag_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(spoiler_tag_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMAddScreenshot)
}

void CMsgClientUCMAddScreenshot::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spoiler_tag_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(spoiler_tag_));
}

CMsgClientUCMAddScreenshot::~CMsgClientUCMAddScreenshot() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMAddScreenshot)
  SharedDtor();
}

void CMsgClientUCMAddScreenshot::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caption_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMAddScreenshot::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMAddScreenshot& CMsgClientUCMAddScreenshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshot.base);
  return *internal_default_instance();
}


void CMsgClientUCMAddScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_.Clear();
  tagged_steamid_.Clear();
  tagged_publishedfileid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      thumbname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      caption_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      shortcut_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      vr_filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(width_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spoiler_tag_) -
        reinterpret_cast<char*>(&height_)) + sizeof(spoiler_tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMAddScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMAddScreenshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string thumbname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->thumbname().data(), static_cast<int>(this->thumbname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.thumbname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_created = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_rtime32_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 permissions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_permissions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &permissions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string caption = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caption()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->caption().data(), static_cast<int>(this->caption().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.caption");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string shortcut_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shortcut_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shortcut_name().data(), static_cast<int>(this->shortcut_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.shortcut_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 tagged_steamid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 89u, input, this->mutable_tagged_steamid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_tagged_steamid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool spoiler_tag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_spoiler_tag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spoiler_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 tagged_publishedfileid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 104u, input, this->mutable_tagged_publishedfileid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_tagged_publishedfileid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vr_filename = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vr_filename().data(), static_cast<int>(this->vr_filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMAddScreenshot.vr_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMAddScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMAddScreenshot)
  return false;
#undef DO_
}

void CMsgClientUCMAddScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumbname().data(), static_cast<int>(this->thumbname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.thumbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thumbname(), output);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->rtime32_created(), output);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->height(), output);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->permissions(), output);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.caption");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->caption(), output);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_name().data(), static_cast<int>(this->shortcut_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.shortcut_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->shortcut_name(), output);
  }

  // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->tag(static_cast<int>(i)),
      output);
  }

  // repeated fixed64 tagged_steamid = 11;
  for (int i = 0, n = this->tagged_steamid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      11, this->tagged_steamid(i), output);
  }

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->spoiler_tag(), output);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  for (int i = 0, n = this->tagged_publishedfileid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      13, this->tagged_publishedfileid(i), output);
  }

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_filename().data(), static_cast<int>(this->vr_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.vr_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->vr_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMAddScreenshot)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumbname().data(), static_cast<int>(this->thumbname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.thumbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thumbname(), target);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->rtime32_created(), target);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->height(), target);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->permissions(), target);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.caption");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->caption(), target);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_name().data(), static_cast<int>(this->shortcut_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.shortcut_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->shortcut_name(), target);
  }

  // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->tag(static_cast<int>(i)), deterministic, target);
  }

  // repeated fixed64 tagged_steamid = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(11, this->tagged_steamid_, target);

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->spoiler_tag(), target);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(13, this->tagged_publishedfileid_, target);

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_filename().data(), static_cast<int>(this->vr_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.vr_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->vr_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMAddScreenshot)
  return target;
}

size_t CMsgClientUCMAddScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMAddScreenshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->tag_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tag(static_cast<int>(i)));
    }
  }

  // repeated fixed64 tagged_steamid = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->tagged_steamid_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagged_steamid_size());
    total_size += data_size;
  }

  // repeated uint64 tagged_publishedfileid = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->tagged_publishedfileid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagged_publishedfileid_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 2;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string thumbname = 3;
    if (has_thumbname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thumbname());
    }

    // optional string caption = 8;
    if (has_caption()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->caption());
    }

    // optional string shortcut_name = 9;
    if (has_shortcut_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shortcut_name());
    }

    // optional string vr_filename = 14;
    if (has_vr_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr_filename());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed32 rtime32_created = 4;
    if (has_rtime32_created()) {
      total_size += 1 + 4;
    }

    // optional uint32 width = 5;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 height = 6;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 permissions = 7;
    if (has_permissions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->permissions());
    }

    // optional bool spoiler_tag = 12;
    if (has_spoiler_tag()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMAddScreenshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMAddScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMAddScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot::MergeFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  tagged_steamid_.MergeFrom(from.tagged_steamid_);
  tagged_publishedfileid_.MergeFrom(from.tagged_publishedfileid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_thumbname();
      thumbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_caption();
      caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_shortcut_name();
      shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcut_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_vr_filename();
      vr_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_filename_);
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime32_created_ = from.rtime32_created_;
    }
    if (cached_has_bits & 0x00000080u) {
      width_ = from.width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000200u) {
      permissions_ = from.permissions_;
    }
    if (cached_has_bits & 0x00000400u) {
      spoiler_tag_ = from.spoiler_tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot::CopyFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot::Swap(CMsgClientUCMAddScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshot::InternalSwap(CMsgClientUCMAddScreenshot* other) {
  using std::swap;
  CastToBase(&tag_)->InternalSwap(CastToBase(&other->tag_));
  tagged_steamid_.InternalSwap(&other->tagged_steamid_);
  tagged_publishedfileid_.InternalSwap(&other->tagged_publishedfileid_);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbname_.Swap(&other->thumbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  caption_.Swap(&other->caption_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shortcut_name_.Swap(&other->shortcut_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vr_filename_.Swap(&other->vr_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(rtime32_created_, other->rtime32_created_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(permissions_, other->permissions_);
  swap(spoiler_tag_, other->spoiler_tag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshot::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMAddScreenshotResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshotResponse::kEresultFieldNumber;
const int CMsgClientUCMAddScreenshotResponse::kScreenshotidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshotResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMAddScreenshotResponse)
}
CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse(const CMsgClientUCMAddScreenshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&screenshotid_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(screenshotid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMAddScreenshotResponse)
}

void CMsgClientUCMAddScreenshotResponse::SharedCtor() {
  eresult_ = 2;
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUCMAddScreenshotResponse::~CMsgClientUCMAddScreenshotResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMAddScreenshotResponse)
  SharedDtor();
}

void CMsgClientUCMAddScreenshotResponse::SharedDtor() {
}

void CMsgClientUCMAddScreenshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMAddScreenshotResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMAddScreenshotResponse& CMsgClientUCMAddScreenshotResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMAddScreenshotResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMAddScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    eresult_ = 2;
    screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMAddScreenshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMAddScreenshotResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_screenshotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &screenshotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMAddScreenshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMAddScreenshotResponse)
  return false;
#undef DO_
}

void CMsgClientUCMAddScreenshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->screenshotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMAddScreenshotResponse)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshotResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->screenshotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMAddScreenshotResponse)
  return target;
}

size_t CMsgClientUCMAddScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMAddScreenshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
    if (has_screenshotid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshotResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMAddScreenshotResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMAddScreenshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMAddScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      screenshotid_ = from.screenshotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshotResponse::Swap(CMsgClientUCMAddScreenshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshotResponse::InternalSwap(CMsgClientUCMAddScreenshotResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(screenshotid_, other->screenshotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshotResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeleteScreenshot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeleteScreenshot::kScreenshotidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeleteScreenshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMDeleteScreenshot)
}
CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot(const CMsgClientUCMDeleteScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  screenshotid_ = from.screenshotid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeleteScreenshot)
}

void CMsgClientUCMDeleteScreenshot::SharedCtor() {
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUCMDeleteScreenshot::~CMsgClientUCMDeleteScreenshot() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeleteScreenshot)
  SharedDtor();
}

void CMsgClientUCMDeleteScreenshot::SharedDtor() {
}

void CMsgClientUCMDeleteScreenshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeleteScreenshot::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeleteScreenshot& CMsgClientUCMDeleteScreenshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeleteScreenshot.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeleteScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeleteScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMDeleteScreenshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_screenshotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &screenshotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMDeleteScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMDeleteScreenshot)
  return false;
#undef DO_
}

void CMsgClientUCMDeleteScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->screenshotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMDeleteScreenshot)
}

::google::protobuf::uint8* CMsgClientUCMDeleteScreenshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->screenshotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeleteScreenshot)
  return target;
}

size_t CMsgClientUCMDeleteScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeleteScreenshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (has_screenshotid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeleteScreenshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeleteScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeleteScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_screenshotid()) {
    set_screenshotid(from.screenshotid());
  }
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshot::Swap(CMsgClientUCMDeleteScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeleteScreenshot::InternalSwap(CMsgClientUCMDeleteScreenshot* other) {
  using std::swap;
  swap(screenshotid_, other->screenshotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMDeleteScreenshot::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeleteScreenshotResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeleteScreenshotResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeleteScreenshotResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMDeleteScreenshotResponse)
}
CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse(const CMsgClientUCMDeleteScreenshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeleteScreenshotResponse)
}

void CMsgClientUCMDeleteScreenshotResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUCMDeleteScreenshotResponse::~CMsgClientUCMDeleteScreenshotResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeleteScreenshotResponse)
  SharedDtor();
}

void CMsgClientUCMDeleteScreenshotResponse::SharedDtor() {
}

void CMsgClientUCMDeleteScreenshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeleteScreenshotResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeleteScreenshotResponse& CMsgClientUCMDeleteScreenshotResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeleteScreenshotResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeleteScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeleteScreenshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMDeleteScreenshotResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMDeleteScreenshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMDeleteScreenshotResponse)
  return false;
#undef DO_
}

void CMsgClientUCMDeleteScreenshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMDeleteScreenshotResponse)
}

::google::protobuf::uint8* CMsgClientUCMDeleteScreenshotResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeleteScreenshotResponse)
  return target;
}

size_t CMsgClientUCMDeleteScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeleteScreenshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshotResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeleteScreenshotResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeleteScreenshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeleteScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshotResponse::Swap(CMsgClientUCMDeleteScreenshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeleteScreenshotResponse::InternalSwap(CMsgClientUCMDeleteScreenshotResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMDeleteScreenshotResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishFile::kAppIdFieldNumber;
const int CMsgClientUCMPublishFile::kFileNameFieldNumber;
const int CMsgClientUCMPublishFile::kPreviewFileNameFieldNumber;
const int CMsgClientUCMPublishFile::kConsumerAppIdFieldNumber;
const int CMsgClientUCMPublishFile::kTitleFieldNumber;
const int CMsgClientUCMPublishFile::kDescriptionFieldNumber;
const int CMsgClientUCMPublishFile::kTagsFieldNumber;
const int CMsgClientUCMPublishFile::kWorkshopFileFieldNumber;
const int CMsgClientUCMPublishFile::kVisibilityFieldNumber;
const int CMsgClientUCMPublishFile::kFileTypeFieldNumber;
const int CMsgClientUCMPublishFile::kUrlFieldNumber;
const int CMsgClientUCMPublishFile::kVideoProviderFieldNumber;
const int CMsgClientUCMPublishFile::kVideoAccountNameFieldNumber;
const int CMsgClientUCMPublishFile::kVideoIdentifierFieldNumber;
const int CMsgClientUCMPublishFile::kInProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishFile::CMsgClientUCMPublishFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMPublishFile)
}
CMsgClientUCMPublishFile::CMsgClientUCMPublishFile(const CMsgClientUCMPublishFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_file_name()) {
    preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  video_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_video_account_name()) {
    video_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_account_name_);
  }
  video_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_video_identifier()) {
    video_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_identifier_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&video_provider_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(video_provider_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishFile)
}

void CMsgClientUCMPublishFile::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_provider_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(video_provider_));
}

CMsgClientUCMPublishFile::~CMsgClientUCMPublishFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishFile)
  SharedDtor();
}

void CMsgClientUCMPublishFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMPublishFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishFile::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishFile& CMsgClientUCMPublishFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishFile.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      video_account_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      video_identifier_.ClearNonDefaultToEmptyNoArena();
    }
  }
  app_id_ = 0u;
  if (cached_has_bits & 16128u) {
    ::memset(&consumer_app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&video_provider_) -
        reinterpret_cast<char*>(&consumer_app_id_)) + sizeof(video_provider_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMPublishFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.preview_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consumer_app_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_consumer_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumer_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool workshop_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_workshop_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &workshop_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visibility = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 video_provider = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_video_provider();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &video_provider_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string video_account_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->video_account_name().data(), static_cast<int>(this->video_account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.video_account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string video_identifier = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->video_identifier().data(), static_cast<int>(this->video_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMPublishFile.video_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_progress = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_in_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMPublishFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMPublishFile)
  return false;
#undef DO_
}

void CMsgClientUCMPublishFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.preview_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->preview_file_name(), output);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->consumer_app_id(), output);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tags(i), output);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->workshop_file(), output);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->visibility(), output);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->file_type(), output);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->url(), output);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->video_provider(), output);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_account_name().data(), static_cast<int>(this->video_account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.video_account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->video_account_name(), output);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_identifier().data(), static_cast<int>(this->video_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.video_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->video_identifier(), output);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->in_progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMPublishFile)
}

::google::protobuf::uint8* CMsgClientUCMPublishFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.preview_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->preview_file_name(), target);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->consumer_app_id(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->tags(i), target);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->workshop_file(), target);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->visibility(), target);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->file_type(), target);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->url(), target);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->video_provider(), target);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_account_name().data(), static_cast<int>(this->video_account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.video_account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->video_account_name(), target);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_identifier().data(), static_cast<int>(this->video_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.video_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->video_identifier(), target);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->in_progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishFile)
  return target;
}

size_t CMsgClientUCMPublishFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tags = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string preview_file_name = 3;
    if (has_preview_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_file_name());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string description = 6;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string url = 12;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string video_account_name = 14;
    if (has_video_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->video_account_name());
    }

    // optional string video_identifier = 15;
    if (has_video_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->video_identifier());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint32 consumer_app_id = 4;
    if (has_consumer_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumer_app_id());
    }

    // optional int32 visibility = 10;
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visibility());
    }

    // optional uint32 file_type = 11;
    if (has_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_type());
    }

    // optional bool workshop_file = 9;
    if (has_workshop_file()) {
      total_size += 1 + 1;
    }

    // optional bool in_progress = 16;
    if (has_in_progress()) {
      total_size += 2 + 1;
    }

    // optional uint32 video_provider = 13;
    if (has_video_provider()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->video_provider());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFile::MergeFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_preview_file_name();
      preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_video_account_name();
      video_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_account_name_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_video_identifier();
      video_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_identifier_);
    }
    if (cached_has_bits & 0x00000080u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      consumer_app_id_ = from.consumer_app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      file_type_ = from.file_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      workshop_file_ = from.workshop_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_progress_ = from.in_progress_;
    }
    if (cached_has_bits & 0x00002000u) {
      video_provider_ = from.video_provider_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFile::CopyFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFile::Swap(CMsgClientUCMPublishFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishFile::InternalSwap(CMsgClientUCMPublishFile* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_file_name_.Swap(&other->preview_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  video_account_name_.Swap(&other->video_account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  video_identifier_.Swap(&other->video_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(consumer_app_id_, other->consumer_app_id_);
  swap(visibility_, other->visibility_);
  swap(file_type_, other->file_type_);
  swap(workshop_file_, other->workshop_file_);
  swap(in_progress_, other->in_progress_);
  swap(video_provider_, other->video_provider_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMPublishFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishFileResponse::kEresultFieldNumber;
const int CMsgClientUCMPublishFileResponse::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishFileResponse::kNeedsWorkshopLegalAgreementAcceptanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMPublishFileResponse)
}
CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse(const CMsgClientUCMPublishFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    static_cast<size_t>(reinterpret_cast<char*>(&published_file_id_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_)) + sizeof(published_file_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishFileResponse)
}

void CMsgClientUCMPublishFileResponse::SharedCtor() {
  needs_workshop_legal_agreement_acceptance_ = false;
  eresult_ = 2;
  published_file_id_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUCMPublishFileResponse::~CMsgClientUCMPublishFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishFileResponse)
  SharedDtor();
}

void CMsgClientUCMPublishFileResponse::SharedDtor() {
}

void CMsgClientUCMPublishFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishFileResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishFileResponse& CMsgClientUCMPublishFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishFileResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
    published_file_id_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMPublishFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_needs_workshop_legal_agreement_acceptance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_workshop_legal_agreement_acceptance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMPublishFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMPublishFileResponse)
  return false;
#undef DO_
}

void CMsgClientUCMPublishFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->published_file_id(), output);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needs_workshop_legal_agreement_acceptance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMPublishFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMPublishFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->published_file_id(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needs_workshop_legal_agreement_acceptance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishFileResponse)
  return target;
}

size_t CMsgClientUCMPublishFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
    if (has_needs_workshop_legal_agreement_acceptance()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000004u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFileResponse::Swap(CMsgClientUCMPublishFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishFileResponse::InternalSwap(CMsgClientUCMPublishFileResponse* other) {
  using std::swap;
  swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  swap(eresult_, other->eresult_);
  swap(published_file_id_, other->published_file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMPublishFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile_KeyValueTag::kKeyFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_KeyValueTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}
CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMUpdatePublishedFile_KeyValueTag::~CMsgClientUCMUpdatePublishedFile_KeyValueTag() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFile_KeyValueTag::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFile_KeyValueTag& CMsgClientUCMUpdatePublishedFile_KeyValueTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_KeyValueTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_KeyValueTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFile_KeyValueTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Swap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSwap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile_KeyValueTag::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kOriginalFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kInternalFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kVideoidFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kPreviewTypeFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kUpdateIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}
CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  original_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_original_file_name()) {
    original_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_file_name_);
  }
  internal_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_internal_file_name()) {
    internal_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_file_name_);
  }
  videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_videoid()) {
    videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videoid_);
  }
  ::memcpy(&preview_type_, &from.preview_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_index_) -
    reinterpret_cast<char*>(&preview_type_)) + sizeof(update_index_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedCtor() {
  original_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_type_ = 0u;
  update_index_ = -1;
}

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::~CMsgClientUCMUpdatePublishedFile_AdditionalPreview() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedDtor() {
  original_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      original_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      internal_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      videoid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    preview_type_ = 0u;
    update_index_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string original_file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->original_file_name().data(), static_cast<int>(this->original_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string internal_file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->internal_file_name().data(), static_cast<int>(this->internal_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string videoid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->videoid().data(), static_cast<int>(this->videoid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 preview_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_preview_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preview_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 update_index = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_update_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_file_name().data(), static_cast<int>(this->original_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->original_file_name(), output);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_file_name().data(), static_cast<int>(this->internal_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->internal_file_name(), output);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->videoid().data(), static_cast<int>(this->videoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->videoid(), output);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->preview_type(), output);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->update_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_file_name().data(), static_cast<int>(this->original_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->original_file_name(), target);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_file_name().data(), static_cast<int>(this->internal_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->internal_file_name(), target);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->videoid().data(), static_cast<int>(this->videoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->videoid(), target);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->preview_type(), target);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->update_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_AdditionalPreview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string original_file_name = 1;
    if (has_original_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->original_file_name());
    }

    // optional string internal_file_name = 2;
    if (has_internal_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->internal_file_name());
    }

    // optional string videoid = 3;
    if (has_videoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->videoid());
    }

    // optional uint32 preview_type = 4;
    if (has_preview_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->preview_type());
    }

    // optional int32 update_index = 5 [default = -1];
    if (has_update_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->update_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_AdditionalPreview* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_original_file_name();
      original_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_internal_file_name();
      internal_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_videoid();
      videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videoid_);
    }
    if (cached_has_bits & 0x00000008u) {
      preview_type_ = from.preview_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      update_index_ = from.update_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Swap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSwap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  using std::swap;
  original_file_name_.Swap(&other->original_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  internal_file_name_.Swap(&other->internal_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  videoid_.Swap(&other->videoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(preview_type_, other->preview_type_);
  swap(update_index_, other->update_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile_AdditionalPreview::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile::kAppIdFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPublishedFileIdFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kTitleFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kTagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kVisibilityFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateFileFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdatePreviewFileFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateTitleFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateTagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateVisibilityFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kChangeDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateUrlFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUrlFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateContentManifestFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kContentManifestFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kMetadataFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateMetadataFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kLanguageFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kRemovedKvtagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kKvtagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewsToRemoveFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kClearInProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMUpdatePublishedFile)
}
CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile(const CMsgClientUCMUpdatePublishedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      removed_kvtags_(from.removed_kvtags_),
      kvtags_(from.kvtags_),
      previews_(from.previews_),
      previews_to_remove_(from.previews_to_remove_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_file_name()) {
    preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_change_description()) {
    change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_in_progress_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(clear_in_progress_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFile)
}

void CMsgClientUCMUpdatePublishedFile::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_in_progress_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(clear_in_progress_));
}

CMsgClientUCMUpdatePublishedFile::~CMsgClientUCMUpdatePublishedFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFile)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFile::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFile& CMsgClientUCMUpdatePublishedFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFile.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  removed_kvtags_.Clear();
  kvtags_.Clear();
  previews_.Clear();
  previews_to_remove_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      change_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      metadata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  published_file_id_ = GOOGLE_ULONGLONG(0);
  if (cached_has_bits & 65280u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&update_visibility_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(update_visibility_));
  }
  if (cached_has_bits & 4128768u) {
    ::memset(&update_url_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clear_in_progress_) -
        reinterpret_cast<char*>(&update_url_)) + sizeof(clear_in_progress_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMUpdatePublishedFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 published_file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_file_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.preview_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visibility = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_update_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_preview_file = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_update_preview_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_preview_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_title = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_update_title();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_description = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_update_description();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_tags = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_update_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_visibility = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_update_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string change_description = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_change_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->change_description().data(), static_cast<int>(this->change_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.change_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_url = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_update_url();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_url_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_content_manifest = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_update_content_manifest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_content_manifest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 content_manifest = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {
          set_has_content_manifest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &content_manifest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string metadata = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.metadata");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_metadata = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_update_metadata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 22 [default = 0];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string removed_kvtags = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_removed_kvtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->removed_kvtags(this->removed_kvtags_size() - 1).data(),
            static_cast<int>(this->removed_kvtags(this->removed_kvtags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMUpdatePublishedFile.removed_kvtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kvtags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_previews()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 previews_to_remove = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 208u, input, this->mutable_previews_to_remove())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_previews_to_remove())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool clear_in_progress = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_clear_in_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMUpdatePublishedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMUpdatePublishedFile)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->published_file_id(), output);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.preview_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->preview_file_name(), output);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->tags(i), output);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->visibility(), output);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->update_file(), output);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->update_preview_file(), output);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->update_title(), output);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->update_description(), output);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->update_tags(), output);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->update_visibility(), output);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.change_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->change_description(), output);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->update_url(), output);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->url(), output);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->update_content_manifest(), output);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(19, this->content_manifest(), output);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->metadata(), output);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->update_metadata(), output);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->language(), output);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->removed_kvtags(i).data(), static_cast<int>(this->removed_kvtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->removed_kvtags(i), output);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvtags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->kvtags(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->previews_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->previews(static_cast<int>(i)),
      output);
  }

  // repeated int32 previews_to_remove = 26;
  for (int i = 0, n = this->previews_to_remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      26, this->previews_to_remove(i), output);
  }

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->clear_in_progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMUpdatePublishedFile)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->published_file_id(), target);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.preview_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->preview_file_name(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->tags(i), target);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->visibility(), target);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->update_file(), target);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->update_preview_file(), target);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->update_title(), target);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->update_description(), target);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->update_tags(), target);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->update_visibility(), target);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.change_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->change_description(), target);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->update_url(), target);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->url(), target);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->update_content_manifest(), target);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(19, this->content_manifest(), target);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->metadata(), target);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->update_metadata(), target);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->language(), target);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->removed_kvtags(i).data(), static_cast<int>(this->removed_kvtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(23, this->removed_kvtags(i), target);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvtags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->kvtags(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->previews_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->previews(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 previews_to_remove = 26;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(26, this->previews_to_remove_, target);

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->clear_in_progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFile)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string removed_kvtags = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->removed_kvtags_size());
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->removed_kvtags(i));
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->kvtags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvtags(static_cast<int>(i)));
    }
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->previews_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->previews(static_cast<int>(i)));
    }
  }

  // repeated int32 previews_to_remove = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->previews_to_remove_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->previews_to_remove_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string file_name = 3;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string preview_file_name = 4;
    if (has_preview_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_file_name());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string description = 6;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string change_description = 15;
    if (has_change_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->change_description());
    }

    // optional string url = 17;
    if (has_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string metadata = 20;
    if (has_metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metadata());
    }

    // optional fixed64 published_file_id = 2;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 visibility = 8;
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visibility());
    }

    // optional bool update_file = 9;
    if (has_update_file()) {
      total_size += 1 + 1;
    }

    // optional bool update_preview_file = 10;
    if (has_update_preview_file()) {
      total_size += 1 + 1;
    }

    // optional bool update_title = 11;
    if (has_update_title()) {
      total_size += 1 + 1;
    }

    // optional bool update_description = 12;
    if (has_update_description()) {
      total_size += 1 + 1;
    }

    // optional bool update_tags = 13;
    if (has_update_tags()) {
      total_size += 1 + 1;
    }

    // optional bool update_visibility = 14;
    if (has_update_visibility()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional bool update_url = 16;
    if (has_update_url()) {
      total_size += 2 + 1;
    }

    // optional bool update_content_manifest = 18;
    if (has_update_content_manifest()) {
      total_size += 2 + 1;
    }

    // optional fixed64 content_manifest = 19;
    if (has_content_manifest()) {
      total_size += 2 + 8;
    }

    // optional int32 language = 22 [default = 0];
    if (has_language()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional bool update_metadata = 21;
    if (has_update_metadata()) {
      total_size += 2 + 1;
    }

    // optional bool clear_in_progress = 27;
    if (has_clear_in_progress()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  removed_kvtags_.MergeFrom(from.removed_kvtags_);
  kvtags_.MergeFrom(from.kvtags_);
  previews_.MergeFrom(from.previews_);
  previews_to_remove_.MergeFrom(from.previews_to_remove_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_preview_file_name();
      preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_change_description();
      change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000080u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      update_file_ = from.update_file_;
    }
    if (cached_has_bits & 0x00000800u) {
      update_preview_file_ = from.update_preview_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      update_title_ = from.update_title_;
    }
    if (cached_has_bits & 0x00002000u) {
      update_description_ = from.update_description_;
    }
    if (cached_has_bits & 0x00004000u) {
      update_tags_ = from.update_tags_;
    }
    if (cached_has_bits & 0x00008000u) {
      update_visibility_ = from.update_visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      update_url_ = from.update_url_;
    }
    if (cached_has_bits & 0x00020000u) {
      update_content_manifest_ = from.update_content_manifest_;
    }
    if (cached_has_bits & 0x00040000u) {
      content_manifest_ = from.content_manifest_;
    }
    if (cached_has_bits & 0x00080000u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00100000u) {
      update_metadata_ = from.update_metadata_;
    }
    if (cached_has_bits & 0x00200000u) {
      clear_in_progress_ = from.clear_in_progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile::Swap(CMsgClientUCMUpdatePublishedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile::InternalSwap(CMsgClientUCMUpdatePublishedFile* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  removed_kvtags_.InternalSwap(CastToBase(&other->removed_kvtags_));
  CastToBase(&kvtags_)->InternalSwap(CastToBase(&other->kvtags_));
  CastToBase(&previews_)->InternalSwap(CastToBase(&other->previews_));
  previews_to_remove_.InternalSwap(&other->previews_to_remove_);
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_file_name_.Swap(&other->preview_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  change_description_.Swap(&other->change_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(visibility_, other->visibility_);
  swap(update_file_, other->update_file_);
  swap(update_preview_file_, other->update_preview_file_);
  swap(update_title_, other->update_title_);
  swap(update_description_, other->update_description_);
  swap(update_tags_, other->update_tags_);
  swap(update_visibility_, other->update_visibility_);
  swap(update_url_, other->update_url_);
  swap(update_content_manifest_, other->update_content_manifest_);
  swap(content_manifest_, other->content_manifest_);
  swap(language_, other->language_);
  swap(update_metadata_, other->update_metadata_);
  swap(clear_in_progress_, other->clear_in_progress_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFileResponse::kEresultFieldNumber;
const int CMsgClientUCMUpdatePublishedFileResponse::kNeedsWorkshopLegalAgreementAcceptanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMUpdatePublishedFileResponse)
}
CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse(const CMsgClientUCMUpdatePublishedFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFileResponse)
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedCtor() {
  needs_workshop_legal_agreement_acceptance_ = false;
  eresult_ = 2;
}

CMsgClientUCMUpdatePublishedFileResponse::~CMsgClientUCMUpdatePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFileResponse)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedDtor() {
}

void CMsgClientUCMUpdatePublishedFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFileResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFileResponse& CMsgClientUCMUpdatePublishedFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMUpdatePublishedFileResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMUpdatePublishedFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_needs_workshop_legal_agreement_acceptance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_workshop_legal_agreement_acceptance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMUpdatePublishedFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMUpdatePublishedFileResponse)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->needs_workshop_legal_agreement_acceptance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMUpdatePublishedFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->needs_workshop_legal_agreement_acceptance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
    if (has_needs_workshop_legal_agreement_acceptance()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFileResponse::Swap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFileResponse::InternalSwap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  using std::swap;
  swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeletePublishedFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeletePublishedFile::kPublishedFileIdFieldNumber;
const int CMsgClientUCMDeletePublishedFile::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeletePublishedFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMDeletePublishedFile)
}
CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile(const CMsgClientUCMDeletePublishedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeletePublishedFile)
}

void CMsgClientUCMDeletePublishedFile::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMDeletePublishedFile::~CMsgClientUCMDeletePublishedFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeletePublishedFile)
  SharedDtor();
}

void CMsgClientUCMDeletePublishedFile::SharedDtor() {
}

void CMsgClientUCMDeletePublishedFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeletePublishedFile::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeletePublishedFile& CMsgClientUCMDeletePublishedFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeletePublishedFile.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeletePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeletePublishedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMDeletePublishedFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMDeletePublishedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMDeletePublishedFile)
  return false;
#undef DO_
}

void CMsgClientUCMDeletePublishedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMDeletePublishedFile)
}

::google::protobuf::uint8* CMsgClientUCMDeletePublishedFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeletePublishedFile)
  return target;
}

size_t CMsgClientUCMDeletePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeletePublishedFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeletePublishedFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeletePublishedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeletePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFile::Swap(CMsgClientUCMDeletePublishedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeletePublishedFile::InternalSwap(CMsgClientUCMDeletePublishedFile* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMDeletePublishedFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeletePublishedFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeletePublishedFileResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeletePublishedFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMDeletePublishedFileResponse)
}
CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse(const CMsgClientUCMDeletePublishedFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeletePublishedFileResponse)
}

void CMsgClientUCMDeletePublishedFileResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUCMDeletePublishedFileResponse::~CMsgClientUCMDeletePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeletePublishedFileResponse)
  SharedDtor();
}

void CMsgClientUCMDeletePublishedFileResponse::SharedDtor() {
}

void CMsgClientUCMDeletePublishedFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeletePublishedFileResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeletePublishedFileResponse& CMsgClientUCMDeletePublishedFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMDeletePublishedFileResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeletePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeletePublishedFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMDeletePublishedFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMDeletePublishedFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMDeletePublishedFileResponse)
  return false;
#undef DO_
}

void CMsgClientUCMDeletePublishedFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMDeletePublishedFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMDeletePublishedFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeletePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMDeletePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeletePublishedFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeletePublishedFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeletePublishedFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeletePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFileResponse::Swap(CMsgClientUCMDeletePublishedFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeletePublishedFileResponse::InternalSwap(CMsgClientUCMDeletePublishedFileResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMDeletePublishedFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserPublishedFiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFiles::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFiles::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFiles::kSortOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFiles::CMsgClientUCMEnumerateUserPublishedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserPublishedFiles)
}
CMsgClientUCMEnumerateUserPublishedFiles::CMsgClientUCMEnumerateUserPublishedFiles(const CMsgClientUCMEnumerateUserPublishedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sort_order_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(sort_order_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserPublishedFiles)
}

void CMsgClientUCMEnumerateUserPublishedFiles::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sort_order_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(sort_order_));
}

CMsgClientUCMEnumerateUserPublishedFiles::~CMsgClientUCMEnumerateUserPublishedFiles() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserPublishedFiles)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFiles::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserPublishedFiles::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserPublishedFiles& CMsgClientUCMEnumerateUserPublishedFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFiles.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserPublishedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sort_order_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(sort_order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserPublishedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserPublishedFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sort_order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sort_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserPublishedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserPublishedFiles)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserPublishedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional uint32 sort_order = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sort_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserPublishedFiles)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional uint32 sort_order = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sort_order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserPublishedFiles)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserPublishedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 sort_order = 3;
    if (has_sort_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort_order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserPublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserPublishedFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserPublishedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserPublishedFiles)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFiles::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserPublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      sort_order_ = from.sort_order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserPublishedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserPublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFiles::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserPublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFiles::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFiles::Swap(CMsgClientUCMEnumerateUserPublishedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFiles::InternalSwap(CMsgClientUCMEnumerateUserPublishedFiles* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(sort_order_, other->sort_order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFiles::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SharedCtor() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserPublishedFilesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFilesResponse::CMsgClientUCMEnumerateUserPublishedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserPublishedFilesResponse)
}
CMsgClientUCMEnumerateUserPublishedFilesResponse::CMsgClientUCMEnumerateUserPublishedFilesResponse(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserPublishedFilesResponse)
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SharedCtor() {
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserPublishedFilesResponse::~CMsgClientUCMEnumerateUserPublishedFilesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserPublishedFilesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserPublishedFilesResponse& CMsgClientUCMEnumerateUserPublishedFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserPublishedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserPublishedFilesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserPublishedFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserPublishedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserPublishedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserPublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::Swap(CMsgClientUCMEnumerateUserPublishedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::InternalSwap(CMsgClientUCMEnumerateUserPublishedFilesResponse* other) {
  using std::swap;
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFilesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFiles::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kListTypeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kMatchingFileTypeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFiles::CMsgClientUCMEnumerateUserSubscribedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserSubscribedFiles)
}
CMsgClientUCMEnumerateUserSubscribedFiles::CMsgClientUCMEnumerateUserSubscribedFiles(const CMsgClientUCMEnumerateUserSubscribedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFiles)
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matching_file_type_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(matching_file_type_));
  list_type_ = 1u;
  count_ = 50u;
}

CMsgClientUCMEnumerateUserSubscribedFiles::~CMsgClientUCMEnumerateUserSubscribedFiles() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFiles)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFiles::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFiles& CMsgClientUCMEnumerateUserSubscribedFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFiles.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&matching_file_type_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(matching_file_type_));
    list_type_ = 1u;
    count_ = 50u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 list_type = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_list_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &list_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_matching_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 5 [default = 50];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserSubscribedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserSubscribedFiles)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional uint32 list_type = 3 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->list_type(), output);
  }

  // optional uint32 matching_file_type = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->matching_file_type(), output);
  }

  // optional uint32 count = 5 [default = 50];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserSubscribedFiles)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional uint32 list_type = 3 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->list_type(), target);
  }

  // optional uint32 matching_file_type = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->matching_file_type(), target);
  }

  // optional uint32 count = 5 [default = 50];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFiles)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 matching_file_type = 4 [default = 0];
    if (has_matching_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

    // optional uint32 list_type = 3 [default = 1];
    if (has_list_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->list_type());
    }

    // optional uint32 count = 5 [default = 50];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFiles)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFiles::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      matching_file_type_ = from.matching_file_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      list_type_ = from.list_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFiles::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFiles::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::Swap(CMsgClientUCMEnumerateUserSubscribedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFiles::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFiles* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(matching_file_type_, other->matching_file_type_);
  swap(list_type_, other->list_type_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFiles::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::kRtime32SubscribedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime32_subscribed_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime32_subscribed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime32_subscribed_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime32_subscribed_));
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime32_subscribed_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime32_subscribed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_rtime32_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime32_subscribed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime32_subscribed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (has_rtime32_subscribed()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(rtime32_subscribed_, other->rtime32_subscribed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kSubscribedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesResponse::CMsgClientUCMEnumerateUserSubscribedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesResponse::CMsgClientUCMEnumerateUserSubscribedFilesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SharedCtor() {
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesResponse& CMsgClientUCMEnumerateUserSubscribedFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribed_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscribed_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->subscribed_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->subscribed_files(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->subscribed_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscribed_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::Swap(CMsgClientUCMEnumerateUserSubscribedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesResponse* other) {
  using std::swap;
  CastToBase(&subscribed_files_)->InternalSwap(CastToBase(&other->subscribed_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(start_time_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_time_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(start_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional fixed32 start_time = 3;
    if (has_start_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(start_time_, other->start_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kRtime32SubscribedFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kAppidFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kFileHcontentFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kFileSizeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kRtime32LastUpdatedFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kIsDepotContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_depot_content_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_depot_content_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_rtime32_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 file_hcontent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_file_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_last_updated = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_rtime32_last_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_last_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_depot_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime32_subscribed(), output);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->appid(), output);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->file_hcontent(), output);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->file_size(), output);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->rtime32_last_updated(), output);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_depot_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime32_subscribed(), target);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->appid(), target);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->file_hcontent(), target);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->file_size(), target);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->rtime32_last_updated(), target);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_depot_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (has_rtime32_subscribed()) {
      total_size += 1 + 4;
    }

    // optional uint32 appid = 3;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed64 file_hcontent = 4;
    if (has_file_hcontent()) {
      total_size += 1 + 8;
    }

    // optional uint32 file_size = 5;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional fixed32 rtime32_last_updated = 6;
    if (has_rtime32_last_updated()) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 7;
    if (has_is_depot_content()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      rtime32_last_updated_ = from.rtime32_last_updated_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(rtime32_subscribed_, other->rtime32_subscribed_);
  swap(appid_, other->appid_);
  swap(file_hcontent_, other->file_hcontent_);
  swap(file_size_, other->file_size_);
  swap(rtime32_last_updated_, other->rtime32_last_updated_);
  swap(is_depot_content_, other->is_depot_content_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kSubscribedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedCtor() {
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribed_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscribed_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->subscribed_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->subscribed_files(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->subscribed_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscribed_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  using std::swap;
  CastToBase(&subscribed_files_)->InternalSwap(CastToBase(&other->subscribed_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileSubscribed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileSubscribed::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kAppIdFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kFileHcontentFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kFileSizeFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kRtimeSubscribedFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kIsDepotContentFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kRtimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileSubscribed::CMsgClientUCMPublishedFileSubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileSubscribed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMPublishedFileSubscribed)
}
CMsgClientUCMPublishedFileSubscribed::CMsgClientUCMPublishedFileSubscribed(const CMsgClientUCMPublishedFileSubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_updated_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishedFileSubscribed)
}

void CMsgClientUCMPublishedFileSubscribed::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_updated_));
}

CMsgClientUCMPublishedFileSubscribed::~CMsgClientUCMPublishedFileSubscribed() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishedFileSubscribed)
  SharedDtor();
}

void CMsgClientUCMPublishedFileSubscribed::SharedDtor() {
}

void CMsgClientUCMPublishedFileSubscribed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileSubscribed::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileSubscribed& CMsgClientUCMPublishedFileSubscribed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileSubscribed.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileSubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileSubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMPublishedFileSubscribed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 file_hcontent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_file_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_subscribed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_rtime_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_depot_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_updated = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_rtime_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMPublishedFileSubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMPublishedFileSubscribed)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileSubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional fixed64 file_hcontent = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->file_hcontent(), output);
  }

  // optional uint32 file_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_size(), output);
  }

  // optional uint32 rtime_subscribed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rtime_subscribed(), output);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_depot_content(), output);
  }

  // optional uint32 rtime_updated = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rtime_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMPublishedFileSubscribed)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileSubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional fixed64 file_hcontent = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->file_hcontent(), target);
  }

  // optional uint32 file_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_size(), target);
  }

  // optional uint32 rtime_subscribed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rtime_subscribed(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_depot_content(), target);
  }

  // optional uint32 rtime_updated = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rtime_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishedFileSubscribed)
  return target;
}

size_t CMsgClientUCMPublishedFileSubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishedFileSubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 file_hcontent = 3;
    if (has_file_hcontent()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 file_size = 4;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional uint32 rtime_subscribed = 5;
    if (has_rtime_subscribed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_subscribed());
    }

    // optional bool is_depot_content = 6;
    if (has_is_depot_content()) {
      total_size += 1 + 1;
    }

    // optional uint32 rtime_updated = 7;
    if (has_rtime_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileSubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishedFileSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileSubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileSubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishedFileSubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishedFileSubscribed)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileSubscribed::MergeFrom(const CMsgClientUCMPublishedFileSubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishedFileSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      rtime_subscribed_ = from.rtime_subscribed_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime_updated_ = from.rtime_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileSubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishedFileSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileSubscribed::CopyFrom(const CMsgClientUCMPublishedFileSubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishedFileSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileSubscribed::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileSubscribed::Swap(CMsgClientUCMPublishedFileSubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileSubscribed::InternalSwap(CMsgClientUCMPublishedFileSubscribed* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(file_hcontent_, other->file_hcontent_);
  swap(app_id_, other->app_id_);
  swap(file_size_, other->file_size_);
  swap(rtime_subscribed_, other->rtime_subscribed_);
  swap(is_depot_content_, other->is_depot_content_);
  swap(rtime_updated_, other->rtime_updated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileSubscribed::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileUnsubscribed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileUnsubscribed::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileUnsubscribed::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileUnsubscribed::CMsgClientUCMPublishedFileUnsubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileUnsubscribed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMPublishedFileUnsubscribed)
}
CMsgClientUCMPublishedFileUnsubscribed::CMsgClientUCMPublishedFileUnsubscribed(const CMsgClientUCMPublishedFileUnsubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishedFileUnsubscribed)
}

void CMsgClientUCMPublishedFileUnsubscribed::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMPublishedFileUnsubscribed::~CMsgClientUCMPublishedFileUnsubscribed() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishedFileUnsubscribed)
  SharedDtor();
}

void CMsgClientUCMPublishedFileUnsubscribed::SharedDtor() {
}

void CMsgClientUCMPublishedFileUnsubscribed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileUnsubscribed::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileUnsubscribed& CMsgClientUCMPublishedFileUnsubscribed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileUnsubscribed.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileUnsubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileUnsubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMPublishedFileUnsubscribed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMPublishedFileUnsubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMPublishedFileUnsubscribed)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileUnsubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMPublishedFileUnsubscribed)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileUnsubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishedFileUnsubscribed)
  return target;
}

size_t CMsgClientUCMPublishedFileUnsubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishedFileUnsubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileUnsubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishedFileUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUnsubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileUnsubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishedFileUnsubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishedFileUnsubscribed)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUnsubscribed::MergeFrom(const CMsgClientUCMPublishedFileUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishedFileUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUnsubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishedFileUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUnsubscribed::CopyFrom(const CMsgClientUCMPublishedFileUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishedFileUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUnsubscribed::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUnsubscribed::Swap(CMsgClientUCMPublishedFileUnsubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileUnsubscribed::InternalSwap(CMsgClientUCMPublishedFileUnsubscribed* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileUnsubscribed::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileDeleted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileDeleted::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileDeleted::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileDeleted::CMsgClientUCMPublishedFileDeleted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileDeleted.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMPublishedFileDeleted)
}
CMsgClientUCMPublishedFileDeleted::CMsgClientUCMPublishedFileDeleted(const CMsgClientUCMPublishedFileDeleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishedFileDeleted)
}

void CMsgClientUCMPublishedFileDeleted::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMPublishedFileDeleted::~CMsgClientUCMPublishedFileDeleted() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishedFileDeleted)
  SharedDtor();
}

void CMsgClientUCMPublishedFileDeleted::SharedDtor() {
}

void CMsgClientUCMPublishedFileDeleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileDeleted::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileDeleted& CMsgClientUCMPublishedFileDeleted::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileDeleted.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileDeleted::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileDeleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMPublishedFileDeleted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMPublishedFileDeleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMPublishedFileDeleted)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileDeleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMPublishedFileDeleted)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileDeleted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishedFileDeleted)
  return target;
}

size_t CMsgClientUCMPublishedFileDeleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishedFileDeleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileDeleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishedFileDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileDeleted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileDeleted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishedFileDeleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishedFileDeleted)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileDeleted::MergeFrom(const CMsgClientUCMPublishedFileDeleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishedFileDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileDeleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishedFileDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileDeleted::CopyFrom(const CMsgClientUCMPublishedFileDeleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishedFileDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileDeleted::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileDeleted::Swap(CMsgClientUCMPublishedFileDeleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileDeleted::InternalSwap(CMsgClientUCMPublishedFileDeleted* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileDeleted::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileUpdated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileUpdated::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kAppIdFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kTimeUpdatedFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kHcontentFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kFileSizeFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kIsDepotContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileUpdated.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMPublishedFileUpdated)
}
CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated(const CMsgClientUCMPublishedFileUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishedFileUpdated)
}

void CMsgClientUCMPublishedFileUpdated::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_depot_content_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
}

CMsgClientUCMPublishedFileUpdated::~CMsgClientUCMPublishedFileUpdated() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishedFileUpdated)
  SharedDtor();
}

void CMsgClientUCMPublishedFileUpdated::SharedDtor() {
}

void CMsgClientUCMPublishedFileUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileUpdated::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileUpdated& CMsgClientUCMPublishedFileUpdated::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMPublishedFileUpdated.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_depot_content_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMPublishedFileUpdated)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hcontent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_depot_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMPublishedFileUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMPublishedFileUpdated)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_updated(), output);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->hcontent(), output);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->file_size(), output);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_depot_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMPublishedFileUpdated)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_updated(), target);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->hcontent(), target);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->file_size(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_depot_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishedFileUpdated)
  return target;
}

size_t CMsgClientUCMPublishedFileUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishedFileUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 time_updated = 3;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional fixed64 hcontent = 4;
    if (has_hcontent()) {
      total_size += 1 + 8;
    }

    // optional fixed32 file_size = 5;
    if (has_file_size()) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 6;
    if (has_is_depot_content()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishedFileUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishedFileUpdated)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      hcontent_ = from.hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUpdated::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUpdated::Swap(CMsgClientUCMPublishedFileUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileUpdated::InternalSwap(CMsgClientUCMPublishedFileUpdated* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(time_updated_, other->time_updated_);
  swap(hcontent_, other->hcontent_);
  swap(file_size_, other->file_size_);
  swap(is_depot_content_, other->is_depot_content_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileUpdated::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemChangesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesRequest::kAppIdFieldNumber;
const int CMsgClientWorkshopItemChangesRequest::kLastTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemChangesRequest::kNumItemsNeededFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemChangesRequest)
}
CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest(const CMsgClientWorkshopItemChangesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_items_needed_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemChangesRequest)
}

void CMsgClientWorkshopItemChangesRequest::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_items_needed_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
}

CMsgClientWorkshopItemChangesRequest::~CMsgClientWorkshopItemChangesRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemChangesRequest)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesRequest::SharedDtor() {
}

void CMsgClientWorkshopItemChangesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemChangesRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemChangesRequest& CMsgClientWorkshopItemChangesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesRequest.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_items_needed_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemChangesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemChangesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_last_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_items_needed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_items_needed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_items_needed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemChangesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemChangesRequest)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemChangesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_items_needed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemChangesRequest)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_items_needed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemChangesRequest)
  return target;
}

size_t CMsgClientWorkshopItemChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemChangesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (has_last_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

    // optional uint32 num_items_needed = 3;
    if (has_num_items_needed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_items_needed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemChangesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemChangesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemChangesRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_items_needed_ = from.num_items_needed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesRequest::Swap(CMsgClientWorkshopItemChangesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesRequest::InternalSwap(CMsgClientWorkshopItemChangesRequest* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(last_time_updated_, other->last_time_updated_);
  swap(num_items_needed_, other->num_items_needed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kManifestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
}

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::~CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedDtor() {
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_manifest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (has_manifest_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Swap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(manifest_id_, other->manifest_id_);
  swap(time_updated_, other->time_updated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemChangesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesResponse::kEresultFieldNumber;
const int CMsgClientWorkshopItemChangesResponse::kUpdateTimeFieldNumber;
const int CMsgClientWorkshopItemChangesResponse::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemChangesResponse)
}
CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse(const CMsgClientWorkshopItemChangesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemChangesResponse)
}

void CMsgClientWorkshopItemChangesResponse::SharedCtor() {
  update_time_ = 0u;
  eresult_ = 2;
}

CMsgClientWorkshopItemChangesResponse::~CMsgClientWorkshopItemChangesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemChangesResponse)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesResponse::SharedDtor() {
}

void CMsgClientWorkshopItemChangesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemChangesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemChangesResponse& CMsgClientWorkshopItemChangesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemChangesResponse.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemChangesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemChangesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemChangesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemChangesResponse)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemChangesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_time(), output);
  }

  // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemChangesResponse)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_time(), target);
  }

  // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->workshop_items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemChangesResponse)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemChangesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 update_time = 2;
    if (has_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemChangesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemChangesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemChangesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse::Swap(CMsgClientWorkshopItemChangesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesResponse::InternalSwap(CMsgClientWorkshopItemChangesResponse* other) {
  using std::swap;
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  swap(update_time_, other->update_time_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoRequest_WorkshopItem::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemInfoRequest_WorkshopItem::kTimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoRequest_WorkshopItem::CMsgClientWorkshopItemInfoRequest_WorkshopItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}
CMsgClientWorkshopItemInfoRequest_WorkshopItem::CMsgClientWorkshopItemInfoRequest_WorkshopItem(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
}

CMsgClientWorkshopItemInfoRequest_WorkshopItem::~CMsgClientWorkshopItemInfoRequest_WorkshopItem() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SharedDtor() {
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoRequest_WorkshopItem::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoRequest_WorkshopItem& CMsgClientWorkshopItemInfoRequest_WorkshopItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoRequest_WorkshopItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoRequest_WorkshopItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return target;
}

size_t CMsgClientWorkshopItemInfoRequest_WorkshopItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoRequest_WorkshopItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoRequest_WorkshopItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergeFrom(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::CopyFrom(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::Swap(CMsgClientWorkshopItemInfoRequest_WorkshopItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::InternalSwap(CMsgClientWorkshopItemInfoRequest_WorkshopItem* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(time_updated_, other->time_updated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoRequest_WorkshopItem::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoRequest::kAppIdFieldNumber;
const int CMsgClientWorkshopItemInfoRequest::kLastTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemInfoRequest::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoRequest::CMsgClientWorkshopItemInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemInfoRequest)
}
CMsgClientWorkshopItemInfoRequest::CMsgClientWorkshopItemInfoRequest(const CMsgClientWorkshopItemInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_time_updated_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemInfoRequest)
}

void CMsgClientWorkshopItemInfoRequest::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_time_updated_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
}

CMsgClientWorkshopItemInfoRequest::~CMsgClientWorkshopItemInfoRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemInfoRequest)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoRequest::SharedDtor() {
}

void CMsgClientWorkshopItemInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoRequest& CMsgClientWorkshopItemInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoRequest.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_time_updated_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_last_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemInfoRequest)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // repeated .CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemInfoRequest)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // repeated .CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->workshop_items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemInfoRequest)
  return target;
}

size_t CMsgClientWorkshopItemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (has_last_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemInfoRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoRequest::MergeFrom(const CMsgClientWorkshopItemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoRequest::CopyFrom(const CMsgClientWorkshopItemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoRequest::Swap(CMsgClientWorkshopItemInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoRequest::InternalSwap(CMsgClientWorkshopItemInfoRequest* other) {
  using std::swap;
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  swap(app_id_, other->app_id_);
  swap(last_time_updated_, other->last_time_updated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kManifestIdFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kIsLegacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_legacy_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_legacy_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_legacy_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_legacy_));
}

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::~CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SharedDtor() {
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_legacy_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_legacy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_manifest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_legacy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_legacy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_legacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  // optional bool is_legacy = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_legacy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  // optional bool is_legacy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_legacy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (has_manifest_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional bool is_legacy = 4;
    if (has_is_legacy()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_legacy_ = from.is_legacy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::Swap(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(manifest_id_, other->manifest_id_);
  swap(time_updated_, other->time_updated_);
  swap(is_legacy_, other->is_legacy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoResponse::kEresultFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kUpdateTimeFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kWorkshopItemsFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kPrivateItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoResponse::CMsgClientWorkshopItemInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWorkshopItemInfoResponse)
}
CMsgClientWorkshopItemInfoResponse::CMsgClientWorkshopItemInfoResponse(const CMsgClientWorkshopItemInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_),
      private_items_(from.private_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemInfoResponse)
}

void CMsgClientWorkshopItemInfoResponse::SharedCtor() {
  update_time_ = 0u;
  eresult_ = 2;
}

CMsgClientWorkshopItemInfoResponse::~CMsgClientWorkshopItemInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemInfoResponse)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoResponse::SharedDtor() {
}

void CMsgClientWorkshopItemInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoResponse& CMsgClientWorkshopItemInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientWorkshopItemInfoResponse.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  private_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWorkshopItemInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 private_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 33u, input, this->mutable_private_items())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_private_items())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWorkshopItemInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWorkshopItemInfoResponse)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_time(), output);
  }

  // repeated .CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  // repeated fixed64 private_items = 4;
  for (int i = 0, n = this->private_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      4, this->private_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWorkshopItemInfoResponse)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_time(), target);
  }

  // repeated .CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->workshop_items(static_cast<int>(i)), deterministic, target);
  }

  // repeated fixed64 private_items = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(4, this->private_items_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemInfoResponse)
  return target;
}

size_t CMsgClientWorkshopItemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  // repeated fixed64 private_items = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->private_items_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->private_items_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 update_time = 2;
    if (has_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoResponse::MergeFrom(const CMsgClientWorkshopItemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  private_items_.MergeFrom(from.private_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoResponse::CopyFrom(const CMsgClientWorkshopItemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoResponse::Swap(CMsgClientWorkshopItemInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoResponse::InternalSwap(CMsgClientWorkshopItemInfoResponse* other) {
  using std::swap;
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  private_items_.InternalSwap(&other->private_items_);
  swap(update_time_, other->update_time_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMGetPublishedFilesForUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUser::kAppIdFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kCreatorSteamIdFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kRequiredTagsFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kExcludedTagsFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUser::CMsgClientUCMGetPublishedFilesForUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMGetPublishedFilesForUser)
}
CMsgClientUCMGetPublishedFilesForUser::CMsgClientUCMGetPublishedFilesForUser(const CMsgClientUCMGetPublishedFilesForUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      required_tags_(from.required_tags_),
      excluded_tags_(from.excluded_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&creator_steam_id_, &from.creator_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_index_) -
    reinterpret_cast<char*>(&creator_steam_id_)) + sizeof(start_index_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMGetPublishedFilesForUser)
}

void CMsgClientUCMGetPublishedFilesForUser::SharedCtor() {
  ::memset(&creator_steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_index_) -
      reinterpret_cast<char*>(&creator_steam_id_)) + sizeof(start_index_));
}

CMsgClientUCMGetPublishedFilesForUser::~CMsgClientUCMGetPublishedFilesForUser() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMGetPublishedFilesForUser)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUser::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMGetPublishedFilesForUser::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMGetPublishedFilesForUser& CMsgClientUCMGetPublishedFilesForUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUser.base);
  return *internal_default_instance();
}


void CMsgClientUCMGetPublishedFilesForUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  required_tags_.Clear();
  excluded_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&creator_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_index_) -
        reinterpret_cast<char*>(&creator_steam_id_)) + sizeof(start_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMGetPublishedFilesForUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMGetPublishedFilesForUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 creator_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_creator_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &creator_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required_tags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_tags(this->required_tags_size() - 1).data(),
            static_cast<int>(this->required_tags(this->required_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMGetPublishedFilesForUser.required_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excluded_tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excluded_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excluded_tags(this->excluded_tags_size() - 1).data(),
            static_cast<int>(this->excluded_tags(this->excluded_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMGetPublishedFilesForUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMGetPublishedFilesForUser)
  return false;
#undef DO_
}

void CMsgClientUCMGetPublishedFilesForUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 creator_steam_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->creator_steam_id(), output);
  }

  // repeated string required_tags = 3;
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_tags(i).data(), static_cast<int>(this->required_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMGetPublishedFilesForUser.required_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->required_tags(i), output);
  }

  // repeated string excluded_tags = 4;
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), static_cast<int>(this->excluded_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->excluded_tags(i), output);
  }

  // optional uint32 start_index = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMGetPublishedFilesForUser)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 creator_steam_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->creator_steam_id(), target);
  }

  // repeated string required_tags = 3;
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_tags(i).data(), static_cast<int>(this->required_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMGetPublishedFilesForUser.required_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->required_tags(i), target);
  }

  // repeated string excluded_tags = 4;
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), static_cast<int>(this->excluded_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->excluded_tags(i), target);
  }

  // optional uint32 start_index = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMGetPublishedFilesForUser)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMGetPublishedFilesForUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string required_tags = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_tags_size());
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_tags(i));
  }

  // repeated string excluded_tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excluded_tags_size());
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excluded_tags(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 creator_steam_id = 2;
    if (has_creator_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 5;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMGetPublishedFilesForUser)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMGetPublishedFilesForUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMGetPublishedFilesForUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMGetPublishedFilesForUser)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUser::MergeFrom(const CMsgClientUCMGetPublishedFilesForUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMGetPublishedFilesForUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  required_tags_.MergeFrom(from.required_tags_);
  excluded_tags_.MergeFrom(from.excluded_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      creator_steam_id_ = from.creator_steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_index_ = from.start_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMGetPublishedFilesForUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMGetPublishedFilesForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUser::CopyFrom(const CMsgClientUCMGetPublishedFilesForUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMGetPublishedFilesForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUser::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUser::Swap(CMsgClientUCMGetPublishedFilesForUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUser::InternalSwap(CMsgClientUCMGetPublishedFilesForUser* other) {
  using std::swap;
  required_tags_.InternalSwap(CastToBase(&other->required_tags_));
  excluded_tags_.InternalSwap(CastToBase(&other->excluded_tags_));
  swap(creator_steam_id_, other->creator_steam_id_);
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUser::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}
CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SharedCtor() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::~CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergeFrom(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CopyFrom(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::Swap(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InternalSwap(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMGetPublishedFilesForUserResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUserResponse::kEresultFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUserResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUserResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUserResponse::CMsgClientUCMGetPublishedFilesForUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMGetPublishedFilesForUserResponse)
}
CMsgClientUCMGetPublishedFilesForUserResponse::CMsgClientUCMGetPublishedFilesForUserResponse(const CMsgClientUCMGetPublishedFilesForUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMGetPublishedFilesForUserResponse)
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SharedCtor() {
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMGetPublishedFilesForUserResponse::~CMsgClientUCMGetPublishedFilesForUserResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMGetPublishedFilesForUserResponse)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMGetPublishedFilesForUserResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMGetPublishedFilesForUserResponse& CMsgClientUCMGetPublishedFilesForUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMGetPublishedFilesForUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMGetPublishedFilesForUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMGetPublishedFilesForUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMGetPublishedFilesForUserResponse)
  return false;
#undef DO_
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMGetPublishedFilesForUserResponse)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMGetPublishedFilesForUserResponse)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMGetPublishedFilesForUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMGetPublishedFilesForUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMGetPublishedFilesForUserResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse::MergeFrom(const CMsgClientUCMGetPublishedFilesForUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUserResponse::CopyFrom(const CMsgClientUCMGetPublishedFilesForUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMGetPublishedFilesForUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUserResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::Swap(CMsgClientUCMGetPublishedFilesForUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUserResponse::InternalSwap(CMsgClientUCMGetPublishedFilesForUserResponse* other) {
  using std::swap;
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUserResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMSetUserPublishedFileAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMSetUserPublishedFileAction::kPublishedFileIdFieldNumber;
const int CMsgClientUCMSetUserPublishedFileAction::kAppIdFieldNumber;
const int CMsgClientUCMSetUserPublishedFileAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMSetUserPublishedFileAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMSetUserPublishedFileAction)
}
CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction(const CMsgClientUCMSetUserPublishedFileAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMSetUserPublishedFileAction)
}

void CMsgClientUCMSetUserPublishedFileAction::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
}

CMsgClientUCMSetUserPublishedFileAction::~CMsgClientUCMSetUserPublishedFileAction() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMSetUserPublishedFileAction)
  SharedDtor();
}

void CMsgClientUCMSetUserPublishedFileAction::SharedDtor() {
}

void CMsgClientUCMSetUserPublishedFileAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMSetUserPublishedFileAction::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMSetUserPublishedFileAction& CMsgClientUCMSetUserPublishedFileAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMSetUserPublishedFileAction.base);
  return *internal_default_instance();
}


void CMsgClientUCMSetUserPublishedFileAction::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMSetUserPublishedFileAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMSetUserPublishedFileAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMSetUserPublishedFileAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMSetUserPublishedFileAction)
  return false;
#undef DO_
}

void CMsgClientUCMSetUserPublishedFileAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMSetUserPublishedFileAction)
}

::google::protobuf::uint8* CMsgClientUCMSetUserPublishedFileAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMSetUserPublishedFileAction)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMSetUserPublishedFileAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 action = 3;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMSetUserPublishedFileAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMSetUserPublishedFileAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMSetUserPublishedFileAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileAction::Swap(CMsgClientUCMSetUserPublishedFileAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMSetUserPublishedFileAction::InternalSwap(CMsgClientUCMSetUserPublishedFileAction* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMSetUserPublishedFileAction::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMSetUserPublishedFileActionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMSetUserPublishedFileActionResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMSetUserPublishedFileActionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMSetUserPublishedFileActionResponse)
}
CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse(const CMsgClientUCMSetUserPublishedFileActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMSetUserPublishedFileActionResponse)
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUCMSetUserPublishedFileActionResponse::~CMsgClientUCMSetUserPublishedFileActionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMSetUserPublishedFileActionResponse)
  SharedDtor();
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedDtor() {
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMSetUserPublishedFileActionResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMSetUserPublishedFileActionResponse& CMsgClientUCMSetUserPublishedFileActionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMSetUserPublishedFileActionResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMSetUserPublishedFileActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMSetUserPublishedFileActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMSetUserPublishedFileActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMSetUserPublishedFileActionResponse)
  return false;
#undef DO_
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMSetUserPublishedFileActionResponse)
}

::google::protobuf::uint8* CMsgClientUCMSetUserPublishedFileActionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMSetUserPublishedFileActionResponse)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileActionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMSetUserPublishedFileActionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMSetUserPublishedFileActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMSetUserPublishedFileActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::Swap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMSetUserPublishedFileActionResponse::InternalSwap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMSetUserPublishedFileActionResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumeratePublishedFilesByUserAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kAppIdFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kStartIndexFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumeratePublishedFilesByUserAction)
}
CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
}

CMsgClientUCMEnumeratePublishedFilesByUserAction::~CMsgClientUCMEnumeratePublishedFilesByUserAction() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumeratePublishedFilesByUserAction::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumeratePublishedFilesByUserAction& CMsgClientUCMEnumeratePublishedFilesByUserAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumeratePublishedFilesByUserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumeratePublishedFilesByUserAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return false;
#undef DO_
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional int32 action = 3;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumeratePublishedFilesByUserAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumeratePublishedFilesByUserAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumeratePublishedFilesByUserAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::Swap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserAction::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::kRtimeTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime_time_stamp_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime_time_stamp_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime_time_stamp_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime_time_stamp = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_rtime_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime_time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime_time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime_time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime_time_stamp = 2 [default = 0];
    if (has_rtime_time_stamp()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime_time_stamp_ = from.rtime_time_stamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(rtime_time_stamp_, other->rtime_time_stamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedCtor() {
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  using std::swap;
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientScreenshotsChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientScreenshotsChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientScreenshotsChanged)
}
CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged(const CMsgClientScreenshotsChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientScreenshotsChanged)
}

void CMsgClientScreenshotsChanged::SharedCtor() {
}

CMsgClientScreenshotsChanged::~CMsgClientScreenshotsChanged() {
  // @@protoc_insertion_point(destructor:CMsgClientScreenshotsChanged)
  SharedDtor();
}

void CMsgClientScreenshotsChanged::SharedDtor() {
}

void CMsgClientScreenshotsChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientScreenshotsChanged::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientScreenshotsChanged& CMsgClientScreenshotsChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientScreenshotsChanged.base);
  return *internal_default_instance();
}


void CMsgClientScreenshotsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientScreenshotsChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientScreenshotsChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientScreenshotsChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientScreenshotsChanged)
  return false;
#undef DO_
}

void CMsgClientScreenshotsChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientScreenshotsChanged)
}

::google::protobuf::uint8* CMsgClientScreenshotsChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientScreenshotsChanged)
  return target;
}

size_t CMsgClientScreenshotsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientScreenshotsChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientScreenshotsChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientScreenshotsChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientScreenshotsChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientScreenshotsChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientScreenshotsChanged)
    MergeFrom(*source);
  }
}

void CMsgClientScreenshotsChanged::MergeFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientScreenshotsChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientScreenshotsChanged::CopyFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientScreenshotsChanged::IsInitialized() const {
  return true;
}

void CMsgClientScreenshotsChanged::Swap(CMsgClientScreenshotsChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientScreenshotsChanged::InternalSwap(CMsgClientScreenshotsChanged* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientScreenshotsChanged::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateUserGameInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateUserGameInfo::kSteamidIdgsFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGameidFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGameIpFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGamePortFieldNumber;
const int CMsgClientUpdateUserGameInfo::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateUserGameInfo::CMsgClientUpdateUserGameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateUserGameInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUpdateUserGameInfo)
}
CMsgClientUpdateUserGameInfo::CMsgClientUpdateUserGameInfo(const CMsgClientUpdateUserGameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&steamid_idgs_, &from.steamid_idgs_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_port_) -
    reinterpret_cast<char*>(&steamid_idgs_)) + sizeof(game_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUpdateUserGameInfo)
}

void CMsgClientUpdateUserGameInfo::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_idgs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_port_) -
      reinterpret_cast<char*>(&steamid_idgs_)) + sizeof(game_port_));
}

CMsgClientUpdateUserGameInfo::~CMsgClientUpdateUserGameInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientUpdateUserGameInfo)
  SharedDtor();
}

void CMsgClientUpdateUserGameInfo::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateUserGameInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUpdateUserGameInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateUserGameInfo& CMsgClientUpdateUserGameInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateUserGameInfo.base);
  return *internal_default_instance();
}


void CMsgClientUpdateUserGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&steamid_idgs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_port_) -
        reinterpret_cast<char*>(&steamid_idgs_)) + sizeof(game_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateUserGameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUpdateUserGameInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_idgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_idgs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_idgs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 gameid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_gameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_game_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUpdateUserGameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUpdateUserGameInfo)
  return false;
#undef DO_
}

void CMsgClientUpdateUserGameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_idgs = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_idgs(), output);
  }

  // optional fixed64 gameid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->gameid(), output);
  }

  // optional uint32 game_ip = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_ip(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional bytes token = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUpdateUserGameInfo)
}

::google::protobuf::uint8* CMsgClientUpdateUserGameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_idgs = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_idgs(), target);
  }

  // optional fixed64 gameid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->gameid(), target);
  }

  // optional uint32 game_ip = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_ip(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional bytes token = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUpdateUserGameInfo)
  return target;
}

size_t CMsgClientUpdateUserGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUpdateUserGameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes token = 5;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional fixed64 steamid_idgs = 1;
    if (has_steamid_idgs()) {
      total_size += 1 + 8;
    }

    // optional fixed64 gameid = 2;
    if (has_gameid()) {
      total_size += 1 + 8;
    }

    // optional uint32 game_ip = 3;
    if (has_game_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_ip());
    }

    // optional uint32 game_port = 4;
    if (has_game_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateUserGameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUpdateUserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateUserGameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateUserGameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUpdateUserGameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUpdateUserGameInfo)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateUserGameInfo::MergeFrom(const CMsgClientUpdateUserGameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUpdateUserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_idgs_ = from.steamid_idgs_;
    }
    if (cached_has_bits & 0x00000004u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_ip_ = from.game_ip_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_port_ = from.game_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateUserGameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUpdateUserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateUserGameInfo::CopyFrom(const CMsgClientUpdateUserGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUpdateUserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateUserGameInfo::IsInitialized() const {
  return true;
}

void CMsgClientUpdateUserGameInfo::Swap(CMsgClientUpdateUserGameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateUserGameInfo::InternalSwap(CMsgClientUpdateUserGameInfo* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_idgs_, other->steamid_idgs_);
  swap(gameid_, other->gameid_);
  swap(game_ip_, other->game_ip_);
  swap(game_port_, other->game_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUpdateUserGameInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceUpload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceUpload::kRichPresenceKvFieldNumber;
const int CMsgClientRichPresenceUpload::kSteamidBroadcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceUpload::CMsgClientRichPresenceUpload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceUpload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRichPresenceUpload)
}
CMsgClientRichPresenceUpload::CMsgClientRichPresenceUpload(const CMsgClientRichPresenceUpload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steamid_broadcast_(from.steamid_broadcast_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rich_presence_kv()) {
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientRichPresenceUpload)
}

void CMsgClientRichPresenceUpload::SharedCtor() {
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRichPresenceUpload::~CMsgClientRichPresenceUpload() {
  // @@protoc_insertion_point(destructor:CMsgClientRichPresenceUpload)
  SharedDtor();
}

void CMsgClientRichPresenceUpload::SharedDtor() {
  rich_presence_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRichPresenceUpload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceUpload::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceUpload& CMsgClientRichPresenceUpload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceUpload.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceUpload::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_broadcast_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    rich_presence_kv_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceUpload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRichPresenceUpload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes rich_presence_kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rich_presence_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamid_broadcast = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17u, input, this->mutable_steamid_broadcast())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_broadcast())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRichPresenceUpload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRichPresenceUpload)
  return false;
#undef DO_
}

void CMsgClientRichPresenceUpload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes rich_presence_kv = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rich_presence_kv(), output);
  }

  // repeated fixed64 steamid_broadcast = 2;
  for (int i = 0, n = this->steamid_broadcast_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->steamid_broadcast(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRichPresenceUpload)
}

::google::protobuf::uint8* CMsgClientRichPresenceUpload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes rich_presence_kv = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rich_presence_kv(), target);
  }

  // repeated fixed64 steamid_broadcast = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(2, this->steamid_broadcast_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRichPresenceUpload)
  return target;
}

size_t CMsgClientRichPresenceUpload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRichPresenceUpload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamid_broadcast = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_broadcast_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_broadcast_size());
    total_size += data_size;
  }

  // optional bytes rich_presence_kv = 1;
  if (has_rich_presence_kv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rich_presence_kv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceUpload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRichPresenceUpload)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceUpload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceUpload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRichPresenceUpload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRichPresenceUpload)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceUpload::MergeFrom(const CMsgClientRichPresenceUpload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRichPresenceUpload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_broadcast_.MergeFrom(from.steamid_broadcast_);
  if (from.has_rich_presence_kv()) {
    set_has_rich_presence_kv();
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
}

void CMsgClientRichPresenceUpload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRichPresenceUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceUpload::CopyFrom(const CMsgClientRichPresenceUpload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRichPresenceUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceUpload::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceUpload::Swap(CMsgClientRichPresenceUpload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceUpload::InternalSwap(CMsgClientRichPresenceUpload* other) {
  using std::swap;
  steamid_broadcast_.InternalSwap(&other->steamid_broadcast_);
  rich_presence_kv_.Swap(&other->rich_presence_kv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRichPresenceUpload::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceRequest::kSteamidRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceRequest::CMsgClientRichPresenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRichPresenceRequest)
}
CMsgClientRichPresenceRequest::CMsgClientRichPresenceRequest(const CMsgClientRichPresenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steamid_request_(from.steamid_request_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRichPresenceRequest)
}

void CMsgClientRichPresenceRequest::SharedCtor() {
}

CMsgClientRichPresenceRequest::~CMsgClientRichPresenceRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientRichPresenceRequest)
  SharedDtor();
}

void CMsgClientRichPresenceRequest::SharedDtor() {
}

void CMsgClientRichPresenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceRequest& CMsgClientRichPresenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceRequest.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_request_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRichPresenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steamid_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_steamid_request())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_request())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRichPresenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRichPresenceRequest)
  return false;
#undef DO_
}

void CMsgClientRichPresenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  for (int i = 0, n = this->steamid_request_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steamid_request(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRichPresenceRequest)
}

::google::protobuf::uint8* CMsgClientRichPresenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->steamid_request_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRichPresenceRequest)
  return target;
}

size_t CMsgClientRichPresenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRichPresenceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamid_request = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_request_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_request_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRichPresenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRichPresenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRichPresenceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceRequest::MergeFrom(const CMsgClientRichPresenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRichPresenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_request_.MergeFrom(from.steamid_request_);
}

void CMsgClientRichPresenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRichPresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceRequest::CopyFrom(const CMsgClientRichPresenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRichPresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceRequest::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceRequest::Swap(CMsgClientRichPresenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceRequest::InternalSwap(CMsgClientRichPresenceRequest* other) {
  using std::swap;
  steamid_request_.InternalSwap(&other->steamid_request_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRichPresenceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceInfo_RichPresence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceInfo_RichPresence::kSteamidUserFieldNumber;
const int CMsgClientRichPresenceInfo_RichPresence::kRichPresenceKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceInfo_RichPresence::CMsgClientRichPresenceInfo_RichPresence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceInfo_RichPresence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRichPresenceInfo.RichPresence)
}
CMsgClientRichPresenceInfo_RichPresence::CMsgClientRichPresenceInfo_RichPresence(const CMsgClientRichPresenceInfo_RichPresence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rich_presence_kv()) {
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
  steamid_user_ = from.steamid_user_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRichPresenceInfo.RichPresence)
}

void CMsgClientRichPresenceInfo_RichPresence::SharedCtor() {
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_user_ = GOOGLE_ULONGLONG(0);
}

CMsgClientRichPresenceInfo_RichPresence::~CMsgClientRichPresenceInfo_RichPresence() {
  // @@protoc_insertion_point(destructor:CMsgClientRichPresenceInfo.RichPresence)
  SharedDtor();
}

void CMsgClientRichPresenceInfo_RichPresence::SharedDtor() {
  rich_presence_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRichPresenceInfo_RichPresence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceInfo_RichPresence::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo_RichPresence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceInfo_RichPresence.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceInfo_RichPresence::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    rich_presence_kv_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_user_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceInfo_RichPresence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRichPresenceInfo.RichPresence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rich_presence_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rich_presence_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRichPresenceInfo.RichPresence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRichPresenceInfo.RichPresence)
  return false;
#undef DO_
}

void CMsgClientRichPresenceInfo_RichPresence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_user = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_user(), output);
  }

  // optional bytes rich_presence_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rich_presence_kv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRichPresenceInfo.RichPresence)
}

::google::protobuf::uint8* CMsgClientRichPresenceInfo_RichPresence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_user = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_user(), target);
  }

  // optional bytes rich_presence_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rich_presence_kv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRichPresenceInfo.RichPresence)
  return target;
}

size_t CMsgClientRichPresenceInfo_RichPresence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRichPresenceInfo.RichPresence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes rich_presence_kv = 2;
    if (has_rich_presence_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rich_presence_kv());
    }

    // optional fixed64 steamid_user = 1;
    if (has_steamid_user()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceInfo_RichPresence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRichPresenceInfo.RichPresence)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceInfo_RichPresence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceInfo_RichPresence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRichPresenceInfo.RichPresence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRichPresenceInfo.RichPresence)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceInfo_RichPresence::MergeFrom(const CMsgClientRichPresenceInfo_RichPresence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRichPresenceInfo.RichPresence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_rich_presence_kv();
      rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_user_ = from.steamid_user_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRichPresenceInfo_RichPresence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRichPresenceInfo.RichPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceInfo_RichPresence::CopyFrom(const CMsgClientRichPresenceInfo_RichPresence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRichPresenceInfo.RichPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceInfo_RichPresence::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceInfo_RichPresence::Swap(CMsgClientRichPresenceInfo_RichPresence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceInfo_RichPresence::InternalSwap(CMsgClientRichPresenceInfo_RichPresence* other) {
  using std::swap;
  rich_presence_kv_.Swap(&other->rich_presence_kv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_user_, other->steamid_user_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRichPresenceInfo_RichPresence::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceInfo::kRichPresenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceInfo::CMsgClientRichPresenceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRichPresenceInfo)
}
CMsgClientRichPresenceInfo::CMsgClientRichPresenceInfo(const CMsgClientRichPresenceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rich_presence_(from.rich_presence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRichPresenceInfo)
}

void CMsgClientRichPresenceInfo::SharedCtor() {
}

CMsgClientRichPresenceInfo::~CMsgClientRichPresenceInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientRichPresenceInfo)
  SharedDtor();
}

void CMsgClientRichPresenceInfo::SharedDtor() {
}

void CMsgClientRichPresenceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceInfo& CMsgClientRichPresenceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRichPresenceInfo.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rich_presence_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRichPresenceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rich_presence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRichPresenceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRichPresenceInfo)
  return false;
#undef DO_
}

void CMsgClientRichPresenceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rich_presence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rich_presence(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRichPresenceInfo)
}

::google::protobuf::uint8* CMsgClientRichPresenceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rich_presence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rich_presence(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRichPresenceInfo)
  return target;
}

size_t CMsgClientRichPresenceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRichPresenceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rich_presence_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rich_presence(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRichPresenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRichPresenceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRichPresenceInfo)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceInfo::MergeFrom(const CMsgClientRichPresenceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRichPresenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rich_presence_.MergeFrom(from.rich_presence_);
}

void CMsgClientRichPresenceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRichPresenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceInfo::CopyFrom(const CMsgClientRichPresenceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRichPresenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceInfo::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceInfo::Swap(CMsgClientRichPresenceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceInfo::InternalSwap(CMsgClientRichPresenceInfo* other) {
  using std::swap;
  CastToBase(&rich_presence_)->InternalSwap(CastToBase(&other->rich_presence_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRichPresenceInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckFileSignature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckFileSignature::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckFileSignature::CMsgClientCheckFileSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckFileSignature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCheckFileSignature)
}
CMsgClientCheckFileSignature::CMsgClientCheckFileSignature(const CMsgClientCheckFileSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientCheckFileSignature)
}

void CMsgClientCheckFileSignature::SharedCtor() {
  app_id_ = 0u;
}

CMsgClientCheckFileSignature::~CMsgClientCheckFileSignature() {
  // @@protoc_insertion_point(destructor:CMsgClientCheckFileSignature)
  SharedDtor();
}

void CMsgClientCheckFileSignature::SharedDtor() {
}

void CMsgClientCheckFileSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCheckFileSignature::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckFileSignature& CMsgClientCheckFileSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckFileSignature.base);
  return *internal_default_instance();
}


void CMsgClientCheckFileSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckFileSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCheckFileSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCheckFileSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCheckFileSignature)
  return false;
#undef DO_
}

void CMsgClientCheckFileSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCheckFileSignature)
}

::google::protobuf::uint8* CMsgClientCheckFileSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCheckFileSignature)
  return target;
}

size_t CMsgClientCheckFileSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCheckFileSignature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckFileSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCheckFileSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckFileSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckFileSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCheckFileSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCheckFileSignature)
    MergeFrom(*source);
  }
}

void CMsgClientCheckFileSignature::MergeFrom(const CMsgClientCheckFileSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCheckFileSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app_id()) {
    set_app_id(from.app_id());
  }
}

void CMsgClientCheckFileSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCheckFileSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckFileSignature::CopyFrom(const CMsgClientCheckFileSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCheckFileSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckFileSignature::IsInitialized() const {
  return true;
}

void CMsgClientCheckFileSignature::Swap(CMsgClientCheckFileSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckFileSignature::InternalSwap(CMsgClientCheckFileSignature* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCheckFileSignature::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckFileSignatureResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckFileSignatureResponse::kAppIdFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kPidFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEresultFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kFilenameFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEsignatureresultFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kShaFileFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kSignatureheaderFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kFilesizeFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kGetlasterrorFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEvalvesignaturecheckdetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckFileSignatureResponse::CMsgClientCheckFileSignatureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckFileSignatureResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCheckFileSignatureResponse)
}
CMsgClientCheckFileSignatureResponse::CMsgClientCheckFileSignatureResponse(const CMsgClientCheckFileSignatureResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  signatureheader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signatureheader()) {
    signatureheader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signatureheader_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(evalvesignaturecheckdetail_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientCheckFileSignatureResponse)
}

void CMsgClientCheckFileSignatureResponse::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signatureheader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(evalvesignaturecheckdetail_));
}

CMsgClientCheckFileSignatureResponse::~CMsgClientCheckFileSignatureResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientCheckFileSignatureResponse)
  SharedDtor();
}

void CMsgClientCheckFileSignatureResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signatureheader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckFileSignatureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCheckFileSignatureResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckFileSignatureResponse& CMsgClientCheckFileSignatureResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckFileSignatureResponse.base);
  return *internal_default_instance();
}


void CMsgClientCheckFileSignatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      signatureheader_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&filesize_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(filesize_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&getlasterror_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
        reinterpret_cast<char*>(&getlasterror_)) + sizeof(evalvesignaturecheckdetail_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckFileSignatureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCheckFileSignatureResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientCheckFileSignatureResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 esignatureresult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_esignatureresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &esignatureresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signatureheader = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signatureheader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_getlasterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 evalvesignaturecheckdetail = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_evalvesignaturecheckdetail();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evalvesignaturecheckdetail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCheckFileSignatureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCheckFileSignatureResponse)
  return false;
#undef DO_
}

void CMsgClientCheckFileSignatureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 eresult = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->eresult(), output);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckFileSignatureResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  // optional uint32 esignatureresult = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->esignatureresult(), output);
  }

  // optional bytes sha_file = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->sha_file(), output);
  }

  // optional bytes signatureheader = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->signatureheader(), output);
  }

  // optional uint32 filesize = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->filesize(), output);
  }

  // optional uint32 getlasterror = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->getlasterror(), output);
  }

  // optional uint32 evalvesignaturecheckdetail = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->evalvesignaturecheckdetail(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCheckFileSignatureResponse)
}

::google::protobuf::uint8* CMsgClientCheckFileSignatureResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 eresult = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->eresult(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckFileSignatureResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  // optional uint32 esignatureresult = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->esignatureresult(), target);
  }

  // optional bytes sha_file = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->sha_file(), target);
  }

  // optional bytes signatureheader = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->signatureheader(), target);
  }

  // optional uint32 filesize = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->filesize(), target);
  }

  // optional uint32 getlasterror = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->getlasterror(), target);
  }

  // optional uint32 evalvesignaturecheckdetail = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->evalvesignaturecheckdetail(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCheckFileSignatureResponse)
  return target;
}

size_t CMsgClientCheckFileSignatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCheckFileSignatureResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 4;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 6;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes signatureheader = 7;
    if (has_signatureheader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signatureheader());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 eresult = 3;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 esignatureresult = 5;
    if (has_esignatureresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->esignatureresult());
    }

    // optional uint32 filesize = 8;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint32 getlasterror = 9;
    if (has_getlasterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 evalvesignaturecheckdetail = 10;
    if (has_evalvesignaturecheckdetail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->evalvesignaturecheckdetail());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckFileSignatureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCheckFileSignatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckFileSignatureResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckFileSignatureResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCheckFileSignatureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCheckFileSignatureResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCheckFileSignatureResponse::MergeFrom(const CMsgClientCheckFileSignatureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCheckFileSignatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_signatureheader();
      signatureheader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signatureheader_);
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000040u) {
      esignatureresult_ = from.esignatureresult_;
    }
    if (cached_has_bits & 0x00000080u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000200u) {
      evalvesignaturecheckdetail_ = from.evalvesignaturecheckdetail_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCheckFileSignatureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCheckFileSignatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckFileSignatureResponse::CopyFrom(const CMsgClientCheckFileSignatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCheckFileSignatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckFileSignatureResponse::IsInitialized() const {
  return true;
}

void CMsgClientCheckFileSignatureResponse::Swap(CMsgClientCheckFileSignatureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckFileSignatureResponse::InternalSwap(CMsgClientCheckFileSignatureResponse* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signatureheader_.Swap(&other->signatureheader_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(pid_, other->pid_);
  swap(eresult_, other->eresult_);
  swap(esignatureresult_, other->esignatureresult_);
  swap(filesize_, other->filesize_);
  swap(getlasterror_, other->getlasterror_);
  swap(evalvesignaturecheckdetail_, other->evalvesignaturecheckdetail_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCheckFileSignatureResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientReadMachineAuth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReadMachineAuth::kFilenameFieldNumber;
const int CMsgClientReadMachineAuth::kOffsetFieldNumber;
const int CMsgClientReadMachineAuth::kCubtoreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReadMachineAuth::CMsgClientReadMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientReadMachineAuth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientReadMachineAuth)
}
CMsgClientReadMachineAuth::CMsgClientReadMachineAuth(const CMsgClientReadMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&cubtoread_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(cubtoread_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientReadMachineAuth)
}

void CMsgClientReadMachineAuth::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cubtoread_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(cubtoread_));
}

CMsgClientReadMachineAuth::~CMsgClientReadMachineAuth() {
  // @@protoc_insertion_point(destructor:CMsgClientReadMachineAuth)
  SharedDtor();
}

void CMsgClientReadMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientReadMachineAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientReadMachineAuth::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientReadMachineAuth& CMsgClientReadMachineAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientReadMachineAuth.base);
  return *internal_default_instance();
}


void CMsgClientReadMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cubtoread_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(cubtoread_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientReadMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientReadMachineAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientReadMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubtoread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cubtoread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubtoread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientReadMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientReadMachineAuth)
  return false;
#undef DO_
}

void CMsgClientReadMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReadMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional uint32 cubtoread = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cubtoread(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientReadMachineAuth)
}

::google::protobuf::uint8* CMsgClientReadMachineAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReadMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional uint32 cubtoread = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cubtoread(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientReadMachineAuth)
  return target;
}

size_t CMsgClientReadMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientReadMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional uint32 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubtoread = 3;
    if (has_cubtoread()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubtoread());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientReadMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientReadMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReadMachineAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientReadMachineAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientReadMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientReadMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientReadMachineAuth::MergeFrom(const CMsgClientReadMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientReadMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      cubtoread_ = from.cubtoread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientReadMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientReadMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReadMachineAuth::CopyFrom(const CMsgClientReadMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientReadMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReadMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientReadMachineAuth::Swap(CMsgClientReadMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReadMachineAuth::InternalSwap(CMsgClientReadMachineAuth* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(cubtoread_, other->cubtoread_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientReadMachineAuth::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientReadMachineAuthResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReadMachineAuthResponse::kFilenameFieldNumber;
const int CMsgClientReadMachineAuthResponse::kEresultFieldNumber;
const int CMsgClientReadMachineAuthResponse::kFilesizeFieldNumber;
const int CMsgClientReadMachineAuthResponse::kShaFileFieldNumber;
const int CMsgClientReadMachineAuthResponse::kGetlasterrorFieldNumber;
const int CMsgClientReadMachineAuthResponse::kOffsetFieldNumber;
const int CMsgClientReadMachineAuthResponse::kCubreadFieldNumber;
const int CMsgClientReadMachineAuthResponse::kBytesReadFieldNumber;
const int CMsgClientReadMachineAuthResponse::kFilenameSentryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReadMachineAuthResponse::CMsgClientReadMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientReadMachineAuthResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientReadMachineAuthResponse)
}
CMsgClientReadMachineAuthResponse::CMsgClientReadMachineAuthResponse(const CMsgClientReadMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  bytes_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes_read()) {
    bytes_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_read_);
  }
  filename_sentry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename_sentry()) {
    filename_sentry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_sentry_);
  }
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&cubread_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(cubread_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientReadMachineAuthResponse)
}

void CMsgClientReadMachineAuthResponse::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_sentry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cubread_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(cubread_));
}

CMsgClientReadMachineAuthResponse::~CMsgClientReadMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientReadMachineAuthResponse)
  SharedDtor();
}

void CMsgClientReadMachineAuthResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_read_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_sentry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientReadMachineAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientReadMachineAuthResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientReadMachineAuthResponse& CMsgClientReadMachineAuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientReadMachineAuthResponse.base);
  return *internal_default_instance();
}


void CMsgClientReadMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      bytes_read_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      filename_sentry_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(offset_));
  }
  cubread_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientReadMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientReadMachineAuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientReadMachineAuthResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_getlasterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubread = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_cubread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_read = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_read()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename_sentry = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename_sentry()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename_sentry().data(), static_cast<int>(this->filename_sentry().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientReadMachineAuthResponse.filename_sentry");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientReadMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientReadMachineAuthResponse)
  return false;
#undef DO_
}

void CMsgClientReadMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReadMachineAuthResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getlasterror(), output);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offset(), output);
  }

  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cubread(), output);
  }

  // optional bytes bytes_read = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->bytes_read(), output);
  }

  // optional string filename_sentry = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename_sentry().data(), static_cast<int>(this->filename_sentry().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReadMachineAuthResponse.filename_sentry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->filename_sentry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientReadMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientReadMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReadMachineAuthResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getlasterror(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offset(), target);
  }

  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cubread(), target);
  }

  // optional bytes bytes_read = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->bytes_read(), target);
  }

  // optional string filename_sentry = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename_sentry().data(), static_cast<int>(this->filename_sentry().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReadMachineAuthResponse.filename_sentry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->filename_sentry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientReadMachineAuthResponse)
  return target;
}

size_t CMsgClientReadMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientReadMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 4;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes bytes_read = 8;
    if (has_bytes_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_read());
    }

    // optional string filename_sentry = 9;
    if (has_filename_sentry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename_sentry());
    }

    // optional uint32 eresult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 filesize = 3;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

    // optional uint32 getlasterror = 5;
    if (has_getlasterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 offset = 6;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

  }
  // optional uint32 cubread = 7;
  if (has_cubread()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cubread());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientReadMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientReadMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReadMachineAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientReadMachineAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientReadMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientReadMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientReadMachineAuthResponse::MergeFrom(const CMsgClientReadMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientReadMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_bytes_read();
      bytes_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_read_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_filename_sentry();
      filename_sentry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_sentry_);
    }
    if (cached_has_bits & 0x00000010u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000020u) {
      filesize_ = from.filesize_;
    }
    if (cached_has_bits & 0x00000040u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000080u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_cubread(from.cubread());
  }
}

void CMsgClientReadMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientReadMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReadMachineAuthResponse::CopyFrom(const CMsgClientReadMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientReadMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReadMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientReadMachineAuthResponse::Swap(CMsgClientReadMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReadMachineAuthResponse::InternalSwap(CMsgClientReadMachineAuthResponse* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bytes_read_.Swap(&other->bytes_read_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_sentry_.Swap(&other->filename_sentry_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(filesize_, other->filesize_);
  swap(getlasterror_, other->getlasterror_);
  swap(offset_, other->offset_);
  swap(cubread_, other->cubread_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientReadMachineAuthResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateMachineAuth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateMachineAuth::kFilenameFieldNumber;
const int CMsgClientUpdateMachineAuth::kOffsetFieldNumber;
const int CMsgClientUpdateMachineAuth::kCubtowriteFieldNumber;
const int CMsgClientUpdateMachineAuth::kBytesFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpTypeFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpIdentifierFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpSharedsecretFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpTimedriftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateMachineAuth::CMsgClientUpdateMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateMachineAuth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUpdateMachineAuth)
}
CMsgClientUpdateMachineAuth::CMsgClientUpdateMachineAuth(const CMsgClientUpdateMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes()) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_sharedsecret()) {
    otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&otp_timedrift_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(otp_timedrift_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUpdateMachineAuth)
}

void CMsgClientUpdateMachineAuth::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&otp_timedrift_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(otp_timedrift_));
}

CMsgClientUpdateMachineAuth::~CMsgClientUpdateMachineAuth() {
  // @@protoc_insertion_point(destructor:CMsgClientUpdateMachineAuth)
  SharedDtor();
}

void CMsgClientUpdateMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateMachineAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUpdateMachineAuth::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateMachineAuth& CMsgClientUpdateMachineAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateMachineAuth.base);
  return *internal_default_instance();
}


void CMsgClientUpdateMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      otp_identifier_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      otp_sharedsecret_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&otp_timedrift_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(otp_timedrift_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUpdateMachineAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUpdateMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubtowrite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cubtowrite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubtowrite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_otp_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUpdateMachineAuth.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes otp_sharedsecret = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_otp_sharedsecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_timedrift = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_otp_timedrift();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_timedrift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUpdateMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUpdateMachineAuth)
  return false;
#undef DO_
}

void CMsgClientUpdateMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional uint32 cubtowrite = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cubtowrite(), output);
  }

  // optional bytes bytes = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bytes(), output);
  }

  // optional uint32 otp_type = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->otp_type(), output);
  }

  // optional string otp_identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuth.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->otp_identifier(), output);
  }

  // optional bytes otp_sharedsecret = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->otp_sharedsecret(), output);
  }

  // optional uint32 otp_timedrift = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->otp_timedrift(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUpdateMachineAuth)
}

::google::protobuf::uint8* CMsgClientUpdateMachineAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional uint32 cubtowrite = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cubtowrite(), target);
  }

  // optional bytes bytes = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bytes(), target);
  }

  // optional uint32 otp_type = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->otp_type(), target);
  }

  // optional string otp_identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuth.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->otp_identifier(), target);
  }

  // optional bytes otp_sharedsecret = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->otp_sharedsecret(), target);
  }

  // optional uint32 otp_timedrift = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->otp_timedrift(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUpdateMachineAuth)
  return target;
}

size_t CMsgClientUpdateMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUpdateMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes bytes = 4;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
    }

    // optional string otp_identifier = 6;
    if (has_otp_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional bytes otp_sharedsecret = 7;
    if (has_otp_sharedsecret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->otp_sharedsecret());
    }

    // optional uint32 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubtowrite = 3;
    if (has_cubtowrite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubtowrite());
    }

    // optional uint32 otp_type = 5;
    if (has_otp_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_type());
    }

    // optional uint32 otp_timedrift = 8;
    if (has_otp_timedrift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_timedrift());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUpdateMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateMachineAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateMachineAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUpdateMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUpdateMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateMachineAuth::MergeFrom(const CMsgClientUpdateMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUpdateMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bytes();
      bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_otp_identifier();
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_otp_sharedsecret();
      otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
    }
    if (cached_has_bits & 0x00000010u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000020u) {
      cubtowrite_ = from.cubtowrite_;
    }
    if (cached_has_bits & 0x00000040u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      otp_timedrift_ = from.otp_timedrift_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUpdateMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateMachineAuth::CopyFrom(const CMsgClientUpdateMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUpdateMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientUpdateMachineAuth::Swap(CMsgClientUpdateMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateMachineAuth::InternalSwap(CMsgClientUpdateMachineAuth* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bytes_.Swap(&other->bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_identifier_.Swap(&other->otp_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_sharedsecret_.Swap(&other->otp_sharedsecret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(cubtowrite_, other->cubtowrite_);
  swap(otp_type_, other->otp_type_);
  swap(otp_timedrift_, other->otp_timedrift_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUpdateMachineAuth::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateMachineAuthResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateMachineAuthResponse::kFilenameFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kEresultFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kFilesizeFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kShaFileFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kGetlasterrorFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOffsetFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kCubwroteFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpTypeFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpValueFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateMachineAuthResponse::CMsgClientUpdateMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateMachineAuthResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUpdateMachineAuthResponse)
}
CMsgClientUpdateMachineAuthResponse::CMsgClientUpdateMachineAuthResponse(const CMsgClientUpdateMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(otp_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUpdateMachineAuthResponse)
}

void CMsgClientUpdateMachineAuthResponse::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&otp_value_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(otp_value_));
}

CMsgClientUpdateMachineAuthResponse::~CMsgClientUpdateMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUpdateMachineAuthResponse)
  SharedDtor();
}

void CMsgClientUpdateMachineAuthResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateMachineAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUpdateMachineAuthResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateMachineAuthResponse& CMsgClientUpdateMachineAuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateMachineAuthResponse.base);
  return *internal_default_instance();
}


void CMsgClientUpdateMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      otp_identifier_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cubwrote_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(cubwrote_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&otp_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&otp_value_) -
        reinterpret_cast<char*>(&otp_type_)) + sizeof(otp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUpdateMachineAuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUpdateMachineAuthResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_getlasterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubwrote = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_cubwrote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubwrote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 otp_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_otp_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_otp_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUpdateMachineAuthResponse.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUpdateMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUpdateMachineAuthResponse)
  return false;
#undef DO_
}

void CMsgClientUpdateMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuthResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getlasterror(), output);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offset(), output);
  }

  // optional uint32 cubwrote = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cubwrote(), output);
  }

  // optional int32 otp_type = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->otp_type(), output);
  }

  // optional uint32 otp_value = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->otp_value(), output);
  }

  // optional string otp_identifier = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuthResponse.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->otp_identifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUpdateMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientUpdateMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuthResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getlasterror(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offset(), target);
  }

  // optional uint32 cubwrote = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cubwrote(), target);
  }

  // optional int32 otp_type = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->otp_type(), target);
  }

  // optional uint32 otp_value = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->otp_value(), target);
  }

  // optional string otp_identifier = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateMachineAuthResponse.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->otp_identifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUpdateMachineAuthResponse)
  return target;
}

size_t CMsgClientUpdateMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUpdateMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 4;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string otp_identifier = 10;
    if (has_otp_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional uint32 eresult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 filesize = 3;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

    // optional uint32 getlasterror = 5;
    if (has_getlasterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 offset = 6;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubwrote = 7;
    if (has_cubwrote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubwrote());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 otp_type = 8;
    if (has_otp_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->otp_type());
    }

    // optional uint32 otp_value = 9;
    if (has_otp_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUpdateMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateMachineAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateMachineAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUpdateMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUpdateMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateMachineAuthResponse::MergeFrom(const CMsgClientUpdateMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUpdateMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_otp_identifier();
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000010u) {
      filesize_ = from.filesize_;
    }
    if (cached_has_bits & 0x00000020u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000040u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000080u) {
      cubwrote_ = from.cubwrote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      otp_value_ = from.otp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUpdateMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateMachineAuthResponse::CopyFrom(const CMsgClientUpdateMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUpdateMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientUpdateMachineAuthResponse::Swap(CMsgClientUpdateMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateMachineAuthResponse::InternalSwap(CMsgClientUpdateMachineAuthResponse* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_identifier_.Swap(&other->otp_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(filesize_, other->filesize_);
  swap(getlasterror_, other->getlasterror_);
  swap(offset_, other->offset_);
  swap(cubwrote_, other->cubwrote_);
  swap(otp_type_, other->otp_type_);
  swap(otp_value_, other->otp_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUpdateMachineAuthResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestMachineAuth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestMachineAuth::kFilenameFieldNumber;
const int CMsgClientRequestMachineAuth::kEresultSentryfileFieldNumber;
const int CMsgClientRequestMachineAuth::kFilesizeFieldNumber;
const int CMsgClientRequestMachineAuth::kShaSentryfileFieldNumber;
const int CMsgClientRequestMachineAuth::kLockAccountActionFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpTypeFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpIdentifierFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpSharedsecretFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpValueFieldNumber;
const int CMsgClientRequestMachineAuth::kMachineNameFieldNumber;
const int CMsgClientRequestMachineAuth::kMachineNameUserchosenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestMachineAuth::CMsgClientRequestMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestMachineAuth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestMachineAuth)
}
CMsgClientRequestMachineAuth::CMsgClientRequestMachineAuth(const CMsgClientRequestMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_sentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_sentryfile()) {
    sha_sentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_sentryfile_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_sharedsecret()) {
    otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
  }
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name()) {
    machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
  }
  machine_name_userchosen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name_userchosen()) {
    machine_name_userchosen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_userchosen_);
  }
  ::memcpy(&eresult_sentryfile_, &from.eresult_sentryfile_,
    static_cast<size_t>(reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_sentryfile_)) + sizeof(otp_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestMachineAuth)
}

void CMsgClientRequestMachineAuth::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_sentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_userchosen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_sentryfile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&otp_value_) -
      reinterpret_cast<char*>(&eresult_sentryfile_)) + sizeof(otp_value_));
}

CMsgClientRequestMachineAuth::~CMsgClientRequestMachineAuth() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestMachineAuth)
  SharedDtor();
}

void CMsgClientRequestMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_sentryfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_userchosen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestMachineAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestMachineAuth::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestMachineAuth& CMsgClientRequestMachineAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestMachineAuth.base);
  return *internal_default_instance();
}


void CMsgClientRequestMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_sentryfile_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      otp_identifier_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      otp_sharedsecret_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      machine_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      machine_name_userchosen_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&eresult_sentryfile_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&filesize_) -
        reinterpret_cast<char*>(&eresult_sentryfile_)) + sizeof(filesize_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&lock_account_action_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&otp_value_) -
        reinterpret_cast<char*>(&lock_account_action_)) + sizeof(otp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestMachineAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult_sentryfile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult_sentryfile();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_sentryfile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_sentryfile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_sentryfile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lock_account_action = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_lock_account_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lock_account_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_otp_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestMachineAuth.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes otp_sharedsecret = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_otp_sharedsecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_otp_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name().data(), static_cast<int>(this->machine_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestMachineAuth.machine_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name_userchosen = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name_userchosen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name_userchosen().data(), static_cast<int>(this->machine_name_userchosen().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestMachineAuth.machine_name_userchosen");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestMachineAuth)
  return false;
#undef DO_
}

void CMsgClientRequestMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult_sentryfile = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult_sentryfile(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_sentryfile = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_sentryfile(), output);
  }

  // optional int32 lock_account_action = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lock_account_action(), output);
  }

  // optional uint32 otp_type = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->otp_type(), output);
  }

  // optional string otp_identifier = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->otp_identifier(), output);
  }

  // optional bytes otp_sharedsecret = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->otp_sharedsecret(), output);
  }

  // optional uint32 otp_value = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->otp_value(), output);
  }

  // optional string machine_name = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), static_cast<int>(this->machine_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.machine_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->machine_name(), output);
  }

  // optional string machine_name_userchosen = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name_userchosen().data(), static_cast<int>(this->machine_name_userchosen().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.machine_name_userchosen");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->machine_name_userchosen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestMachineAuth)
}

::google::protobuf::uint8* CMsgClientRequestMachineAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult_sentryfile = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult_sentryfile(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_sentryfile = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_sentryfile(), target);
  }

  // optional int32 lock_account_action = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lock_account_action(), target);
  }

  // optional uint32 otp_type = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->otp_type(), target);
  }

  // optional string otp_identifier = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->otp_identifier(), target);
  }

  // optional bytes otp_sharedsecret = 9;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->otp_sharedsecret(), target);
  }

  // optional uint32 otp_value = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->otp_value(), target);
  }

  // optional string machine_name = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), static_cast<int>(this->machine_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.machine_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->machine_name(), target);
  }

  // optional string machine_name_userchosen = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name_userchosen().data(), static_cast<int>(this->machine_name_userchosen().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestMachineAuth.machine_name_userchosen");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->machine_name_userchosen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestMachineAuth)
  return target;
}

size_t CMsgClientRequestMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_sentryfile = 4;
    if (has_sha_sentryfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_sentryfile());
    }

    // optional string otp_identifier = 8;
    if (has_otp_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional bytes otp_sharedsecret = 9;
    if (has_otp_sharedsecret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->otp_sharedsecret());
    }

    // optional string machine_name = 11;
    if (has_machine_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name());
    }

    // optional string machine_name_userchosen = 12;
    if (has_machine_name_userchosen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name_userchosen());
    }

    // optional uint32 eresult_sentryfile = 2;
    if (has_eresult_sentryfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult_sentryfile());
    }

    // optional uint32 filesize = 3;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 lock_account_action = 6;
    if (has_lock_account_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lock_account_action());
    }

    // optional uint32 otp_type = 7;
    if (has_otp_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_type());
    }

    // optional uint32 otp_value = 10;
    if (has_otp_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestMachineAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestMachineAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientRequestMachineAuth::MergeFrom(const CMsgClientRequestMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_sentryfile();
      sha_sentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_sentryfile_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_otp_identifier();
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_otp_sharedsecret();
      otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_machine_name();
      machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_machine_name_userchosen();
      machine_name_userchosen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_userchosen_);
    }
    if (cached_has_bits & 0x00000040u) {
      eresult_sentryfile_ = from.eresult_sentryfile_;
    }
    if (cached_has_bits & 0x00000080u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      lock_account_action_ = from.lock_account_action_;
    }
    if (cached_has_bits & 0x00000200u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      otp_value_ = from.otp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestMachineAuth::CopyFrom(const CMsgClientRequestMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientRequestMachineAuth::Swap(CMsgClientRequestMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestMachineAuth::InternalSwap(CMsgClientRequestMachineAuth* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_sentryfile_.Swap(&other->sha_sentryfile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_identifier_.Swap(&other->otp_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_sharedsecret_.Swap(&other->otp_sharedsecret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_name_.Swap(&other->machine_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_name_userchosen_.Swap(&other->machine_name_userchosen_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_sentryfile_, other->eresult_sentryfile_);
  swap(filesize_, other->filesize_);
  swap(lock_account_action_, other->lock_account_action_);
  swap(otp_type_, other->otp_type_);
  swap(otp_value_, other->otp_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestMachineAuth::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestMachineAuthResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestMachineAuthResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestMachineAuthResponse::CMsgClientRequestMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestMachineAuthResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestMachineAuthResponse)
}
CMsgClientRequestMachineAuthResponse::CMsgClientRequestMachineAuthResponse(const CMsgClientRequestMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestMachineAuthResponse)
}

void CMsgClientRequestMachineAuthResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientRequestMachineAuthResponse::~CMsgClientRequestMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestMachineAuthResponse)
  SharedDtor();
}

void CMsgClientRequestMachineAuthResponse::SharedDtor() {
}

void CMsgClientRequestMachineAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestMachineAuthResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestMachineAuthResponse& CMsgClientRequestMachineAuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestMachineAuthResponse.base);
  return *internal_default_instance();
}


void CMsgClientRequestMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestMachineAuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestMachineAuthResponse)
  return false;
#undef DO_
}

void CMsgClientRequestMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientRequestMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestMachineAuthResponse)
  return target;
}

size_t CMsgClientRequestMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestMachineAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestMachineAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestMachineAuthResponse::MergeFrom(const CMsgClientRequestMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRequestMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestMachineAuthResponse::CopyFrom(const CMsgClientRequestMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestMachineAuthResponse::Swap(CMsgClientRequestMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestMachineAuthResponse::InternalSwap(CMsgClientRequestMachineAuthResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestMachineAuthResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterKey::CMsgClientRegisterKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRegisterKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRegisterKey)
}
CMsgClientRegisterKey::CMsgClientRegisterKey(const CMsgClientRegisterKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientRegisterKey)
}

void CMsgClientRegisterKey::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRegisterKey::~CMsgClientRegisterKey() {
  // @@protoc_insertion_point(destructor:CMsgClientRegisterKey)
  SharedDtor();
}

void CMsgClientRegisterKey::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRegisterKey::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterKey& CMsgClientRegisterKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRegisterKey.base);
  return *internal_default_instance();
}


void CMsgClientRegisterKey::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRegisterKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRegisterKey.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRegisterKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRegisterKey)
  return false;
#undef DO_
}

void CMsgClientRegisterKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRegisterKey.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRegisterKey)
}

::google::protobuf::uint8* CMsgClientRegisterKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRegisterKey.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRegisterKey)
  return target;
}

size_t CMsgClientRegisterKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRegisterKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRegisterKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRegisterKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRegisterKey)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterKey::MergeFrom(const CMsgClientRegisterKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRegisterKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    set_has_key();
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void CMsgClientRegisterKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRegisterKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterKey::CopyFrom(const CMsgClientRegisterKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRegisterKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterKey::IsInitialized() const {
  return true;
}

void CMsgClientRegisterKey::Swap(CMsgClientRegisterKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterKey::InternalSwap(CMsgClientRegisterKey* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRegisterKey::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPurchaseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPurchaseResponse::kEresultFieldNumber;
const int CMsgClientPurchaseResponse::kPurchaseResultDetailsFieldNumber;
const int CMsgClientPurchaseResponse::kPurchaseReceiptInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPurchaseResponse::CMsgClientPurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientPurchaseResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPurchaseResponse)
}
CMsgClientPurchaseResponse::CMsgClientPurchaseResponse(const CMsgClientPurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  purchase_receipt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_purchase_receipt_info()) {
    purchase_receipt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_receipt_info_);
  }
  ::memcpy(&purchase_result_details_, &from.purchase_result_details_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&purchase_result_details_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPurchaseResponse)
}

void CMsgClientPurchaseResponse::SharedCtor() {
  purchase_receipt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchase_result_details_ = 0;
  eresult_ = 2;
}

CMsgClientPurchaseResponse::~CMsgClientPurchaseResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientPurchaseResponse)
  SharedDtor();
}

void CMsgClientPurchaseResponse::SharedDtor() {
  purchase_receipt_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPurchaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPurchaseResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPurchaseResponse& CMsgClientPurchaseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientPurchaseResponse.base);
  return *internal_default_instance();
}


void CMsgClientPurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    purchase_receipt_info_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    purchase_result_details_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPurchaseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 purchase_result_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_purchase_result_details();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_result_details_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes purchase_receipt_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_purchase_receipt_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPurchaseResponse)
  return false;
#undef DO_
}

void CMsgClientPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 purchase_result_details = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->purchase_result_details(), output);
  }

  // optional bytes purchase_receipt_info = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->purchase_receipt_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPurchaseResponse)
}

::google::protobuf::uint8* CMsgClientPurchaseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 purchase_result_details = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->purchase_result_details(), target);
  }

  // optional bytes purchase_receipt_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->purchase_receipt_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPurchaseResponse)
  return target;
}

size_t CMsgClientPurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes purchase_receipt_info = 3;
    if (has_purchase_receipt_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->purchase_receipt_info());
    }

    // optional int32 purchase_result_details = 2;
    if (has_purchase_result_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_result_details());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPurchaseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPurchaseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPurchaseResponse::MergeFrom(const CMsgClientPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_purchase_receipt_info();
      purchase_receipt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_receipt_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      purchase_result_details_ = from.purchase_result_details_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPurchaseResponse::CopyFrom(const CMsgClientPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgClientPurchaseResponse::Swap(CMsgClientPurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPurchaseResponse::InternalSwap(CMsgClientPurchaseResponse* other) {
  using std::swap;
  purchase_receipt_info_.Swap(&other->purchase_receipt_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(purchase_result_details_, other->purchase_result_details_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPurchaseResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientActivateOEMLicense::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientActivateOEMLicense::kBiosManufacturerFieldNumber;
const int CMsgClientActivateOEMLicense::kBiosSerialnumberFieldNumber;
const int CMsgClientActivateOEMLicense::kLicenseFileFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardManufacturerFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardProductFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardSerialnumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientActivateOEMLicense::CMsgClientActivateOEMLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientActivateOEMLicense.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientActivateOEMLicense)
}
CMsgClientActivateOEMLicense::CMsgClientActivateOEMLicense(const CMsgClientActivateOEMLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bios_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bios_manufacturer()) {
    bios_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_manufacturer_);
  }
  bios_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bios_serialnumber()) {
    bios_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_serialnumber_);
  }
  license_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_license_file()) {
    license_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_file_);
  }
  mainboard_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_manufacturer()) {
    mainboard_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_manufacturer_);
  }
  mainboard_product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_product()) {
    mainboard_product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_product_);
  }
  mainboard_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_serialnumber()) {
    mainboard_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_serialnumber_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientActivateOEMLicense)
}

void CMsgClientActivateOEMLicense::SharedCtor() {
  bios_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bios_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientActivateOEMLicense::~CMsgClientActivateOEMLicense() {
  // @@protoc_insertion_point(destructor:CMsgClientActivateOEMLicense)
  SharedDtor();
}

void CMsgClientActivateOEMLicense::SharedDtor() {
  bios_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bios_serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientActivateOEMLicense::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientActivateOEMLicense::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientActivateOEMLicense& CMsgClientActivateOEMLicense::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientActivateOEMLicense.base);
  return *internal_default_instance();
}


void CMsgClientActivateOEMLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      bios_manufacturer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bios_serialnumber_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      license_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      mainboard_manufacturer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      mainboard_product_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      mainboard_serialnumber_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientActivateOEMLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientActivateOEMLicense)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bios_manufacturer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bios_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bios_manufacturer().data(), static_cast<int>(this->bios_manufacturer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientActivateOEMLicense.bios_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bios_serialnumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bios_serialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bios_serialnumber().data(), static_cast<int>(this->bios_serialnumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientActivateOEMLicense.bios_serialnumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes license_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_license_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_manufacturer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_manufacturer().data(), static_cast<int>(this->mainboard_manufacturer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientActivateOEMLicense.mainboard_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_product = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_product().data(), static_cast<int>(this->mainboard_product().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientActivateOEMLicense.mainboard_product");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_serialnumber = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_serialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_serialnumber().data(), static_cast<int>(this->mainboard_serialnumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientActivateOEMLicense.mainboard_serialnumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientActivateOEMLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientActivateOEMLicense)
  return false;
#undef DO_
}

void CMsgClientActivateOEMLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bios_manufacturer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_manufacturer().data(), static_cast<int>(this->bios_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.bios_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bios_manufacturer(), output);
  }

  // optional string bios_serialnumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_serialnumber().data(), static_cast<int>(this->bios_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.bios_serialnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bios_serialnumber(), output);
  }

  // optional bytes license_file = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->license_file(), output);
  }

  // optional string mainboard_manufacturer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_manufacturer().data(), static_cast<int>(this->mainboard_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.mainboard_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mainboard_manufacturer(), output);
  }

  // optional string mainboard_product = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_product().data(), static_cast<int>(this->mainboard_product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.mainboard_product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mainboard_product(), output);
  }

  // optional string mainboard_serialnumber = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_serialnumber().data(), static_cast<int>(this->mainboard_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.mainboard_serialnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mainboard_serialnumber(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientActivateOEMLicense)
}

::google::protobuf::uint8* CMsgClientActivateOEMLicense::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bios_manufacturer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_manufacturer().data(), static_cast<int>(this->bios_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.bios_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bios_manufacturer(), target);
  }

  // optional string bios_serialnumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_serialnumber().data(), static_cast<int>(this->bios_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.bios_serialnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bios_serialnumber(), target);
  }

  // optional bytes license_file = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->license_file(), target);
  }

  // optional string mainboard_manufacturer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_manufacturer().data(), static_cast<int>(this->mainboard_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.mainboard_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mainboard_manufacturer(), target);
  }

  // optional string mainboard_product = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_product().data(), static_cast<int>(this->mainboard_product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.mainboard_product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mainboard_product(), target);
  }

  // optional string mainboard_serialnumber = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_serialnumber().data(), static_cast<int>(this->mainboard_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientActivateOEMLicense.mainboard_serialnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mainboard_serialnumber(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientActivateOEMLicense)
  return target;
}

size_t CMsgClientActivateOEMLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientActivateOEMLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string bios_manufacturer = 1;
    if (has_bios_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bios_manufacturer());
    }

    // optional string bios_serialnumber = 2;
    if (has_bios_serialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bios_serialnumber());
    }

    // optional bytes license_file = 3;
    if (has_license_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->license_file());
    }

    // optional string mainboard_manufacturer = 4;
    if (has_mainboard_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_manufacturer());
    }

    // optional string mainboard_product = 5;
    if (has_mainboard_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_product());
    }

    // optional string mainboard_serialnumber = 6;
    if (has_mainboard_serialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_serialnumber());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientActivateOEMLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientActivateOEMLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientActivateOEMLicense* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientActivateOEMLicense>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientActivateOEMLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientActivateOEMLicense)
    MergeFrom(*source);
  }
}

void CMsgClientActivateOEMLicense::MergeFrom(const CMsgClientActivateOEMLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientActivateOEMLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bios_manufacturer();
      bios_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_manufacturer_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bios_serialnumber();
      bios_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_serialnumber_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_license_file();
      license_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_file_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_mainboard_manufacturer();
      mainboard_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_manufacturer_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_mainboard_product();
      mainboard_product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_product_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_mainboard_serialnumber();
      mainboard_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_serialnumber_);
    }
  }
}

void CMsgClientActivateOEMLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientActivateOEMLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientActivateOEMLicense::CopyFrom(const CMsgClientActivateOEMLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientActivateOEMLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientActivateOEMLicense::IsInitialized() const {
  return true;
}

void CMsgClientActivateOEMLicense::Swap(CMsgClientActivateOEMLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientActivateOEMLicense::InternalSwap(CMsgClientActivateOEMLicense* other) {
  using std::swap;
  bios_manufacturer_.Swap(&other->bios_manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bios_serialnumber_.Swap(&other->bios_serialnumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  license_file_.Swap(&other->license_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mainboard_manufacturer_.Swap(&other->mainboard_manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mainboard_product_.Swap(&other->mainboard_product_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mainboard_serialnumber_.Swap(&other->mainboard_serialnumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientActivateOEMLicense::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterOEMMachine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterOEMMachine::kOemRegisterFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterOEMMachine::CMsgClientRegisterOEMMachine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRegisterOEMMachine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRegisterOEMMachine)
}
CMsgClientRegisterOEMMachine::CMsgClientRegisterOEMMachine(const CMsgClientRegisterOEMMachine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oem_register_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oem_register_file()) {
    oem_register_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oem_register_file_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientRegisterOEMMachine)
}

void CMsgClientRegisterOEMMachine::SharedCtor() {
  oem_register_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRegisterOEMMachine::~CMsgClientRegisterOEMMachine() {
  // @@protoc_insertion_point(destructor:CMsgClientRegisterOEMMachine)
  SharedDtor();
}

void CMsgClientRegisterOEMMachine::SharedDtor() {
  oem_register_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterOEMMachine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRegisterOEMMachine::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterOEMMachine& CMsgClientRegisterOEMMachine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRegisterOEMMachine.base);
  return *internal_default_instance();
}


void CMsgClientRegisterOEMMachine::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    oem_register_file_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterOEMMachine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRegisterOEMMachine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes oem_register_file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oem_register_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRegisterOEMMachine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRegisterOEMMachine)
  return false;
#undef DO_
}

void CMsgClientRegisterOEMMachine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes oem_register_file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->oem_register_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRegisterOEMMachine)
}

::google::protobuf::uint8* CMsgClientRegisterOEMMachine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes oem_register_file = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->oem_register_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRegisterOEMMachine)
  return target;
}

size_t CMsgClientRegisterOEMMachine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRegisterOEMMachine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes oem_register_file = 1;
  if (has_oem_register_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oem_register_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterOEMMachine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRegisterOEMMachine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterOEMMachine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterOEMMachine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRegisterOEMMachine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRegisterOEMMachine)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterOEMMachine::MergeFrom(const CMsgClientRegisterOEMMachine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRegisterOEMMachine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oem_register_file()) {
    set_has_oem_register_file();
    oem_register_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oem_register_file_);
  }
}

void CMsgClientRegisterOEMMachine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRegisterOEMMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterOEMMachine::CopyFrom(const CMsgClientRegisterOEMMachine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRegisterOEMMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterOEMMachine::IsInitialized() const {
  return true;
}

void CMsgClientRegisterOEMMachine::Swap(CMsgClientRegisterOEMMachine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterOEMMachine::InternalSwap(CMsgClientRegisterOEMMachine* other) {
  using std::swap;
  oem_register_file_.Swap(&other->oem_register_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRegisterOEMMachine::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterOEMMachineResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterOEMMachineResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterOEMMachineResponse::CMsgClientRegisterOEMMachineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRegisterOEMMachineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRegisterOEMMachineResponse)
}
CMsgClientRegisterOEMMachineResponse::CMsgClientRegisterOEMMachineResponse(const CMsgClientRegisterOEMMachineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRegisterOEMMachineResponse)
}

void CMsgClientRegisterOEMMachineResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientRegisterOEMMachineResponse::~CMsgClientRegisterOEMMachineResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRegisterOEMMachineResponse)
  SharedDtor();
}

void CMsgClientRegisterOEMMachineResponse::SharedDtor() {
}

void CMsgClientRegisterOEMMachineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRegisterOEMMachineResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterOEMMachineResponse& CMsgClientRegisterOEMMachineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRegisterOEMMachineResponse.base);
  return *internal_default_instance();
}


void CMsgClientRegisterOEMMachineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterOEMMachineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRegisterOEMMachineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRegisterOEMMachineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRegisterOEMMachineResponse)
  return false;
#undef DO_
}

void CMsgClientRegisterOEMMachineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRegisterOEMMachineResponse)
}

::google::protobuf::uint8* CMsgClientRegisterOEMMachineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRegisterOEMMachineResponse)
  return target;
}

size_t CMsgClientRegisterOEMMachineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRegisterOEMMachineResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterOEMMachineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRegisterOEMMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterOEMMachineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterOEMMachineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRegisterOEMMachineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRegisterOEMMachineResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterOEMMachineResponse::MergeFrom(const CMsgClientRegisterOEMMachineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRegisterOEMMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRegisterOEMMachineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRegisterOEMMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterOEMMachineResponse::CopyFrom(const CMsgClientRegisterOEMMachineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRegisterOEMMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterOEMMachineResponse::IsInitialized() const {
  return true;
}

void CMsgClientRegisterOEMMachineResponse::Swap(CMsgClientRegisterOEMMachineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterOEMMachineResponse::InternalSwap(CMsgClientRegisterOEMMachineResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRegisterOEMMachineResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPurchaseWithMachineID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPurchaseWithMachineID::kPackageIdFieldNumber;
const int CMsgClientPurchaseWithMachineID::kMachineInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPurchaseWithMachineID::CMsgClientPurchaseWithMachineID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientPurchaseWithMachineID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPurchaseWithMachineID)
}
CMsgClientPurchaseWithMachineID::CMsgClientPurchaseWithMachineID(const CMsgClientPurchaseWithMachineID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_info()) {
    machine_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_info_);
  }
  package_id_ = from.package_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientPurchaseWithMachineID)
}

void CMsgClientPurchaseWithMachineID::SharedCtor() {
  machine_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_id_ = 0u;
}

CMsgClientPurchaseWithMachineID::~CMsgClientPurchaseWithMachineID() {
  // @@protoc_insertion_point(destructor:CMsgClientPurchaseWithMachineID)
  SharedDtor();
}

void CMsgClientPurchaseWithMachineID::SharedDtor() {
  machine_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPurchaseWithMachineID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPurchaseWithMachineID::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPurchaseWithMachineID& CMsgClientPurchaseWithMachineID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientPurchaseWithMachineID.base);
  return *internal_default_instance();
}


void CMsgClientPurchaseWithMachineID::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    machine_info_.ClearNonDefaultToEmptyNoArena();
  }
  package_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPurchaseWithMachineID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPurchaseWithMachineID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes machine_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_machine_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPurchaseWithMachineID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPurchaseWithMachineID)
  return false;
#undef DO_
}

void CMsgClientPurchaseWithMachineID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional bytes machine_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->machine_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPurchaseWithMachineID)
}

::google::protobuf::uint8* CMsgClientPurchaseWithMachineID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional bytes machine_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->machine_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPurchaseWithMachineID)
  return target;
}

size_t CMsgClientPurchaseWithMachineID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPurchaseWithMachineID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes machine_info = 2;
    if (has_machine_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->machine_info());
    }

    // optional uint32 package_id = 1;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPurchaseWithMachineID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPurchaseWithMachineID)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPurchaseWithMachineID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPurchaseWithMachineID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPurchaseWithMachineID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPurchaseWithMachineID)
    MergeFrom(*source);
  }
}

void CMsgClientPurchaseWithMachineID::MergeFrom(const CMsgClientPurchaseWithMachineID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPurchaseWithMachineID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine_info();
      machine_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      package_id_ = from.package_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPurchaseWithMachineID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPurchaseWithMachineID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPurchaseWithMachineID::CopyFrom(const CMsgClientPurchaseWithMachineID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPurchaseWithMachineID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPurchaseWithMachineID::IsInitialized() const {
  return true;
}

void CMsgClientPurchaseWithMachineID::Swap(CMsgClientPurchaseWithMachineID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPurchaseWithMachineID::InternalSwap(CMsgClientPurchaseWithMachineID* other) {
  using std::swap;
  machine_info_.Swap(&other->machine_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_id_, other->package_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPurchaseWithMachineID::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_InitiateTradeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_InitiateTradeRequest::kTradeRequestIdFieldNumber;
const int CMsgTrading_InitiateTradeRequest::kOtherSteamidFieldNumber;
const int CMsgTrading_InitiateTradeRequest::kOtherNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_InitiateTradeRequest::CMsgTrading_InitiateTradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_InitiateTradeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTrading_InitiateTradeRequest)
}
CMsgTrading_InitiateTradeRequest::CMsgTrading_InitiateTradeRequest(const CMsgTrading_InitiateTradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_other_name()) {
    other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
  }
  ::memcpy(&other_steamid_, &from.other_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&trade_request_id_) -
    reinterpret_cast<char*>(&other_steamid_)) + sizeof(trade_request_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgTrading_InitiateTradeRequest)
}

void CMsgTrading_InitiateTradeRequest::SharedCtor() {
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&other_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trade_request_id_) -
      reinterpret_cast<char*>(&other_steamid_)) + sizeof(trade_request_id_));
}

CMsgTrading_InitiateTradeRequest::~CMsgTrading_InitiateTradeRequest() {
  // @@protoc_insertion_point(destructor:CMsgTrading_InitiateTradeRequest)
  SharedDtor();
}

void CMsgTrading_InitiateTradeRequest::SharedDtor() {
  other_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTrading_InitiateTradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTrading_InitiateTradeRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_InitiateTradeRequest& CMsgTrading_InitiateTradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_InitiateTradeRequest.base);
  return *internal_default_instance();
}


void CMsgTrading_InitiateTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    other_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&other_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trade_request_id_) -
        reinterpret_cast<char*>(&other_steamid_)) + sizeof(trade_request_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_InitiateTradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTrading_InitiateTradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 trade_request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_trade_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 other_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string other_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->other_name().data(), static_cast<int>(this->other_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTrading_InitiateTradeRequest.other_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTrading_InitiateTradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTrading_InitiateTradeRequest)
  return false;
#undef DO_
}

void CMsgTrading_InitiateTradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 trade_request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->trade_request_id(), output);
  }

  // optional uint64 other_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->other_steamid(), output);
  }

  // optional string other_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_name().data(), static_cast<int>(this->other_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTrading_InitiateTradeRequest.other_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->other_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTrading_InitiateTradeRequest)
}

::google::protobuf::uint8* CMsgTrading_InitiateTradeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 trade_request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->trade_request_id(), target);
  }

  // optional uint64 other_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->other_steamid(), target);
  }

  // optional string other_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_name().data(), static_cast<int>(this->other_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTrading_InitiateTradeRequest.other_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->other_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTrading_InitiateTradeRequest)
  return target;
}

size_t CMsgTrading_InitiateTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTrading_InitiateTradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string other_name = 3;
    if (has_other_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->other_name());
    }

    // optional uint64 other_steamid = 2;
    if (has_other_steamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->other_steamid());
    }

    // optional uint32 trade_request_id = 1;
    if (has_trade_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_request_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_InitiateTradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTrading_InitiateTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_InitiateTradeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_InitiateTradeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTrading_InitiateTradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTrading_InitiateTradeRequest)
    MergeFrom(*source);
  }
}

void CMsgTrading_InitiateTradeRequest::MergeFrom(const CMsgTrading_InitiateTradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTrading_InitiateTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_other_name();
      other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      other_steamid_ = from.other_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      trade_request_id_ = from.trade_request_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgTrading_InitiateTradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTrading_InitiateTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_InitiateTradeRequest::CopyFrom(const CMsgTrading_InitiateTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTrading_InitiateTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_InitiateTradeRequest::IsInitialized() const {
  return true;
}

void CMsgTrading_InitiateTradeRequest::Swap(CMsgTrading_InitiateTradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_InitiateTradeRequest::InternalSwap(CMsgTrading_InitiateTradeRequest* other) {
  using std::swap;
  other_name_.Swap(&other->other_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(other_steamid_, other->other_steamid_);
  swap(trade_request_id_, other->trade_request_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTrading_InitiateTradeRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_InitiateTradeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_InitiateTradeResponse::kResponseFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kTradeRequestIdFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kOtherSteamidFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kSteamguardRequiredDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kNewDeviceCooldownDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kDefaultPasswordResetProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kPasswordResetProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kDefaultEmailChangeProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kEmailChangeProbationDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_InitiateTradeResponse::CMsgTrading_InitiateTradeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_InitiateTradeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTrading_InitiateTradeResponse)
}
CMsgTrading_InitiateTradeResponse::CMsgTrading_InitiateTradeResponse(const CMsgTrading_InitiateTradeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&email_change_probation_days_) -
    reinterpret_cast<char*>(&response_)) + sizeof(email_change_probation_days_));
  // @@protoc_insertion_point(copy_constructor:CMsgTrading_InitiateTradeResponse)
}

void CMsgTrading_InitiateTradeResponse::SharedCtor() {
  ::memset(&response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_change_probation_days_) -
      reinterpret_cast<char*>(&response_)) + sizeof(email_change_probation_days_));
}

CMsgTrading_InitiateTradeResponse::~CMsgTrading_InitiateTradeResponse() {
  // @@protoc_insertion_point(destructor:CMsgTrading_InitiateTradeResponse)
  SharedDtor();
}

void CMsgTrading_InitiateTradeResponse::SharedDtor() {
}

void CMsgTrading_InitiateTradeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTrading_InitiateTradeResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_InitiateTradeResponse& CMsgTrading_InitiateTradeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_InitiateTradeResponse.base);
  return *internal_default_instance();
}


void CMsgTrading_InitiateTradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_email_change_probation_days_) -
        reinterpret_cast<char*>(&response_)) + sizeof(default_email_change_probation_days_));
  }
  email_change_probation_days_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_InitiateTradeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTrading_InitiateTradeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trade_request_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_trade_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 other_steamid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steamguard_required_days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_steamguard_required_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steamguard_required_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_device_cooldown_days = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_new_device_cooldown_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_device_cooldown_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_password_reset_probation_days = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_default_password_reset_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_password_reset_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 password_reset_probation_days = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_password_reset_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &password_reset_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_email_change_probation_days = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_default_email_change_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_email_change_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 email_change_probation_days = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_email_change_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_change_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTrading_InitiateTradeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTrading_InitiateTradeResponse)
  return false;
#undef DO_
}

void CMsgTrading_InitiateTradeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint32 trade_request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->trade_request_id(), output);
  }

  // optional uint64 other_steamid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->other_steamid(), output);
  }

  // optional uint32 steamguard_required_days = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->steamguard_required_days(), output);
  }

  // optional uint32 new_device_cooldown_days = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->new_device_cooldown_days(), output);
  }

  // optional uint32 default_password_reset_probation_days = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->default_password_reset_probation_days(), output);
  }

  // optional uint32 password_reset_probation_days = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->password_reset_probation_days(), output);
  }

  // optional uint32 default_email_change_probation_days = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->default_email_change_probation_days(), output);
  }

  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->email_change_probation_days(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTrading_InitiateTradeResponse)
}

::google::protobuf::uint8* CMsgTrading_InitiateTradeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint32 trade_request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->trade_request_id(), target);
  }

  // optional uint64 other_steamid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->other_steamid(), target);
  }

  // optional uint32 steamguard_required_days = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->steamguard_required_days(), target);
  }

  // optional uint32 new_device_cooldown_days = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->new_device_cooldown_days(), target);
  }

  // optional uint32 default_password_reset_probation_days = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->default_password_reset_probation_days(), target);
  }

  // optional uint32 password_reset_probation_days = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->password_reset_probation_days(), target);
  }

  // optional uint32 default_email_change_probation_days = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->default_email_change_probation_days(), target);
  }

  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->email_change_probation_days(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTrading_InitiateTradeResponse)
  return target;
}

size_t CMsgTrading_InitiateTradeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTrading_InitiateTradeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint32 trade_request_id = 2;
    if (has_trade_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_request_id());
    }

    // optional uint64 other_steamid = 3;
    if (has_other_steamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->other_steamid());
    }

    // optional uint32 steamguard_required_days = 4;
    if (has_steamguard_required_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steamguard_required_days());
    }

    // optional uint32 new_device_cooldown_days = 5;
    if (has_new_device_cooldown_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_device_cooldown_days());
    }

    // optional uint32 default_password_reset_probation_days = 6;
    if (has_default_password_reset_probation_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_password_reset_probation_days());
    }

    // optional uint32 password_reset_probation_days = 7;
    if (has_password_reset_probation_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->password_reset_probation_days());
    }

    // optional uint32 default_email_change_probation_days = 8;
    if (has_default_email_change_probation_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_email_change_probation_days());
    }

  }
  // optional uint32 email_change_probation_days = 9;
  if (has_email_change_probation_days()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->email_change_probation_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_InitiateTradeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTrading_InitiateTradeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_InitiateTradeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_InitiateTradeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTrading_InitiateTradeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTrading_InitiateTradeResponse)
    MergeFrom(*source);
  }
}

void CMsgTrading_InitiateTradeResponse::MergeFrom(const CMsgTrading_InitiateTradeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTrading_InitiateTradeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      trade_request_id_ = from.trade_request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      other_steamid_ = from.other_steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      steamguard_required_days_ = from.steamguard_required_days_;
    }
    if (cached_has_bits & 0x00000010u) {
      new_device_cooldown_days_ = from.new_device_cooldown_days_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_password_reset_probation_days_ = from.default_password_reset_probation_days_;
    }
    if (cached_has_bits & 0x00000040u) {
      password_reset_probation_days_ = from.password_reset_probation_days_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_email_change_probation_days_ = from.default_email_change_probation_days_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_email_change_probation_days(from.email_change_probation_days());
  }
}

void CMsgTrading_InitiateTradeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTrading_InitiateTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_InitiateTradeResponse::CopyFrom(const CMsgTrading_InitiateTradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTrading_InitiateTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_InitiateTradeResponse::IsInitialized() const {
  return true;
}

void CMsgTrading_InitiateTradeResponse::Swap(CMsgTrading_InitiateTradeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_InitiateTradeResponse::InternalSwap(CMsgTrading_InitiateTradeResponse* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(trade_request_id_, other->trade_request_id_);
  swap(other_steamid_, other->other_steamid_);
  swap(steamguard_required_days_, other->steamguard_required_days_);
  swap(new_device_cooldown_days_, other->new_device_cooldown_days_);
  swap(default_password_reset_probation_days_, other->default_password_reset_probation_days_);
  swap(password_reset_probation_days_, other->password_reset_probation_days_);
  swap(default_email_change_probation_days_, other->default_email_change_probation_days_);
  swap(email_change_probation_days_, other->email_change_probation_days_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTrading_InitiateTradeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_CancelTradeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_CancelTradeRequest::kOtherSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_CancelTradeRequest::CMsgTrading_CancelTradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_CancelTradeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTrading_CancelTradeRequest)
}
CMsgTrading_CancelTradeRequest::CMsgTrading_CancelTradeRequest(const CMsgTrading_CancelTradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_steamid_ = from.other_steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgTrading_CancelTradeRequest)
}

void CMsgTrading_CancelTradeRequest::SharedCtor() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgTrading_CancelTradeRequest::~CMsgTrading_CancelTradeRequest() {
  // @@protoc_insertion_point(destructor:CMsgTrading_CancelTradeRequest)
  SharedDtor();
}

void CMsgTrading_CancelTradeRequest::SharedDtor() {
}

void CMsgTrading_CancelTradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTrading_CancelTradeRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_CancelTradeRequest& CMsgTrading_CancelTradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_CancelTradeRequest.base);
  return *internal_default_instance();
}


void CMsgTrading_CancelTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_CancelTradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTrading_CancelTradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTrading_CancelTradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTrading_CancelTradeRequest)
  return false;
#undef DO_
}

void CMsgTrading_CancelTradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->other_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTrading_CancelTradeRequest)
}

::google::protobuf::uint8* CMsgTrading_CancelTradeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->other_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTrading_CancelTradeRequest)
  return target;
}

size_t CMsgTrading_CancelTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTrading_CancelTradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 other_steamid = 1;
  if (has_other_steamid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_steamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_CancelTradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTrading_CancelTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_CancelTradeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_CancelTradeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTrading_CancelTradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTrading_CancelTradeRequest)
    MergeFrom(*source);
  }
}

void CMsgTrading_CancelTradeRequest::MergeFrom(const CMsgTrading_CancelTradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTrading_CancelTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other_steamid()) {
    set_other_steamid(from.other_steamid());
  }
}

void CMsgTrading_CancelTradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTrading_CancelTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_CancelTradeRequest::CopyFrom(const CMsgTrading_CancelTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTrading_CancelTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_CancelTradeRequest::IsInitialized() const {
  return true;
}

void CMsgTrading_CancelTradeRequest::Swap(CMsgTrading_CancelTradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_CancelTradeRequest::InternalSwap(CMsgTrading_CancelTradeRequest* other) {
  using std::swap;
  swap(other_steamid_, other->other_steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTrading_CancelTradeRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_StartSession::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_StartSession::kOtherSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_StartSession::CMsgTrading_StartSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_StartSession.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTrading_StartSession)
}
CMsgTrading_StartSession::CMsgTrading_StartSession(const CMsgTrading_StartSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_steamid_ = from.other_steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgTrading_StartSession)
}

void CMsgTrading_StartSession::SharedCtor() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgTrading_StartSession::~CMsgTrading_StartSession() {
  // @@protoc_insertion_point(destructor:CMsgTrading_StartSession)
  SharedDtor();
}

void CMsgTrading_StartSession::SharedDtor() {
}

void CMsgTrading_StartSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTrading_StartSession::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_StartSession& CMsgTrading_StartSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgTrading_StartSession.base);
  return *internal_default_instance();
}


void CMsgTrading_StartSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_StartSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTrading_StartSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTrading_StartSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTrading_StartSession)
  return false;
#undef DO_
}

void CMsgTrading_StartSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->other_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTrading_StartSession)
}

::google::protobuf::uint8* CMsgTrading_StartSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->other_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTrading_StartSession)
  return target;
}

size_t CMsgTrading_StartSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTrading_StartSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 other_steamid = 1;
  if (has_other_steamid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_steamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_StartSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTrading_StartSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_StartSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_StartSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTrading_StartSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTrading_StartSession)
    MergeFrom(*source);
  }
}

void CMsgTrading_StartSession::MergeFrom(const CMsgTrading_StartSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTrading_StartSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other_steamid()) {
    set_other_steamid(from.other_steamid());
  }
}

void CMsgTrading_StartSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTrading_StartSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_StartSession::CopyFrom(const CMsgTrading_StartSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTrading_StartSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_StartSession::IsInitialized() const {
  return true;
}

void CMsgTrading_StartSession::Swap(CMsgTrading_StartSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_StartSession::InternalSwap(CMsgTrading_StartSession* other) {
  using std::swap;
  swap(other_steamid_, other->other_steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTrading_StartSession::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientEmailChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailChange::kPasswordFieldNumber;
const int CMsgClientEmailChange::kEmailFieldNumber;
const int CMsgClientEmailChange::kCodeFieldNumber;
const int CMsgClientEmailChange::kFinalFieldNumber;
const int CMsgClientEmailChange::kNewmethodFieldNumber;
const int CMsgClientEmailChange::kTwofactorCodeFieldNumber;
const int CMsgClientEmailChange::kSmsCodeFieldNumber;
const int CMsgClientEmailChange::kClientSupportsSmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailChange::CMsgClientEmailChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientEmailChange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientEmailChange)
}
CMsgClientEmailChange::CMsgClientEmailChange(const CMsgClientEmailChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  twofactor_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_twofactor_code()) {
    twofactor_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twofactor_code_);
  }
  sms_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sms_code()) {
    sms_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_code_);
  }
  ::memcpy(&final_, &from.final_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_supports_sms_) -
    reinterpret_cast<char*>(&final_)) + sizeof(client_supports_sms_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientEmailChange)
}

void CMsgClientEmailChange::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twofactor_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_supports_sms_) -
      reinterpret_cast<char*>(&final_)) + sizeof(client_supports_sms_));
}

CMsgClientEmailChange::~CMsgClientEmailChange() {
  // @@protoc_insertion_point(destructor:CMsgClientEmailChange)
  SharedDtor();
}

void CMsgClientEmailChange::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twofactor_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientEmailChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientEmailChange::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmailChange& CMsgClientEmailChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientEmailChange.base);
  return *internal_default_instance();
}


void CMsgClientEmailChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientEmailChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      twofactor_code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      sms_code_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ::memset(&final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_supports_sms_) -
      reinterpret_cast<char*>(&final_)) + sizeof(client_supports_sms_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmailChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientEmailChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmailChange.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmailChange.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmailChange.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool final = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_final();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool newmethod = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_newmethod();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &newmethod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string twofactor_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_twofactor_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->twofactor_code().data(), static_cast<int>(this->twofactor_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmailChange.twofactor_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sms_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sms_code().data(), static_cast<int>(this->sms_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmailChange.sms_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool client_supports_sms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_client_supports_sms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &client_supports_sms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientEmailChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientEmailChange)
  return false;
#undef DO_
}

void CMsgClientEmailChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientEmailChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string email = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // optional string code = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // optional bool final = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->final(), output);
  }

  // optional bool newmethod = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->newmethod(), output);
  }

  // optional string twofactor_code = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->twofactor_code().data(), static_cast<int>(this->twofactor_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.twofactor_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->twofactor_code(), output);
  }

  // optional string sms_code = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_code().data(), static_cast<int>(this->sms_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.sms_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sms_code(), output);
  }

  // optional bool client_supports_sms = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->client_supports_sms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientEmailChange)
}

::google::protobuf::uint8* CMsgClientEmailChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientEmailChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string email = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // optional string code = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // optional bool final = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->final(), target);
  }

  // optional bool newmethod = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->newmethod(), target);
  }

  // optional string twofactor_code = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->twofactor_code().data(), static_cast<int>(this->twofactor_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.twofactor_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->twofactor_code(), target);
  }

  // optional string sms_code = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_code().data(), static_cast<int>(this->sms_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailChange.sms_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sms_code(), target);
  }

  // optional bool client_supports_sms = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->client_supports_sms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientEmailChange)
  return target;
}

size_t CMsgClientEmailChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientEmailChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string email = 2;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string twofactor_code = 6;
    if (has_twofactor_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->twofactor_code());
    }

    // optional string sms_code = 7;
    if (has_sms_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_code());
    }

    // optional bool final = 4;
    if (has_final()) {
      total_size += 1 + 1;
    }

    // optional bool newmethod = 5;
    if (has_newmethod()) {
      total_size += 1 + 1;
    }

    // optional bool client_supports_sms = 8;
    if (has_client_supports_sms()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientEmailChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientEmailChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmailChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientEmailChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientEmailChange)
    MergeFrom(*source);
  }
}

void CMsgClientEmailChange::MergeFrom(const CMsgClientEmailChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientEmailChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_twofactor_code();
      twofactor_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twofactor_code_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_sms_code();
      sms_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_code_);
    }
    if (cached_has_bits & 0x00000020u) {
      final_ = from.final_;
    }
    if (cached_has_bits & 0x00000040u) {
      newmethod_ = from.newmethod_;
    }
    if (cached_has_bits & 0x00000080u) {
      client_supports_sms_ = from.client_supports_sms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientEmailChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailChange::CopyFrom(const CMsgClientEmailChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientEmailChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailChange::IsInitialized() const {
  return true;
}

void CMsgClientEmailChange::Swap(CMsgClientEmailChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailChange::InternalSwap(CMsgClientEmailChange* other) {
  using std::swap;
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  twofactor_code_.Swap(&other->twofactor_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sms_code_.Swap(&other->sms_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(final_, other->final_);
  swap(newmethod_, other->newmethod_);
  swap(client_supports_sms_, other->client_supports_sms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientEmailChange::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientEmailChangeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailChangeResponse::kEresultFieldNumber;
const int CMsgClientEmailChangeResponse::kRequiresSmsCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailChangeResponse::CMsgClientEmailChangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientEmailChangeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientEmailChangeResponse)
}
CMsgClientEmailChangeResponse::CMsgClientEmailChangeResponse(const CMsgClientEmailChangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requires_sms_code_, &from.requires_sms_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&requires_sms_code_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientEmailChangeResponse)
}

void CMsgClientEmailChangeResponse::SharedCtor() {
  requires_sms_code_ = false;
  eresult_ = 2;
}

CMsgClientEmailChangeResponse::~CMsgClientEmailChangeResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientEmailChangeResponse)
  SharedDtor();
}

void CMsgClientEmailChangeResponse::SharedDtor() {
}

void CMsgClientEmailChangeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientEmailChangeResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmailChangeResponse& CMsgClientEmailChangeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientEmailChangeResponse.base);
  return *internal_default_instance();
}


void CMsgClientEmailChangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientEmailChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    requires_sms_code_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmailChangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientEmailChangeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool requires_sms_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_requires_sms_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &requires_sms_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientEmailChangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientEmailChangeResponse)
  return false;
#undef DO_
}

void CMsgClientEmailChangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientEmailChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool requires_sms_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->requires_sms_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientEmailChangeResponse)
}

::google::protobuf::uint8* CMsgClientEmailChangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientEmailChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool requires_sms_code = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->requires_sms_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientEmailChangeResponse)
  return target;
}

size_t CMsgClientEmailChangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientEmailChangeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool requires_sms_code = 2;
    if (has_requires_sms_code()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientEmailChangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientEmailChangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailChangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmailChangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientEmailChangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientEmailChangeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientEmailChangeResponse::MergeFrom(const CMsgClientEmailChangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientEmailChangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      requires_sms_code_ = from.requires_sms_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailChangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientEmailChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailChangeResponse::CopyFrom(const CMsgClientEmailChangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientEmailChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailChangeResponse::IsInitialized() const {
  return true;
}

void CMsgClientEmailChangeResponse::Swap(CMsgClientEmailChangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailChangeResponse::InternalSwap(CMsgClientEmailChangeResponse* other) {
  using std::swap;
  swap(requires_sms_code_, other->requires_sms_code_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientEmailChangeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetCDNAuthToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetCDNAuthToken::kDepotIdFieldNumber;
const int CMsgClientGetCDNAuthToken::kHostNameFieldNumber;
const int CMsgClientGetCDNAuthToken::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetCDNAuthToken::CMsgClientGetCDNAuthToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetCDNAuthToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetCDNAuthToken)
}
CMsgClientGetCDNAuthToken::CMsgClientGetCDNAuthToken(const CMsgClientGetCDNAuthToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&depot_id_, &from.depot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetCDNAuthToken)
}

void CMsgClientGetCDNAuthToken::SharedCtor() {
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depot_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
}

CMsgClientGetCDNAuthToken::~CMsgClientGetCDNAuthToken() {
  // @@protoc_insertion_point(destructor:CMsgClientGetCDNAuthToken)
  SharedDtor();
}

void CMsgClientGetCDNAuthToken::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetCDNAuthToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetCDNAuthToken::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetCDNAuthToken& CMsgClientGetCDNAuthToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetCDNAuthToken.base);
  return *internal_default_instance();
}


void CMsgClientGetCDNAuthToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&depot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetCDNAuthToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetCDNAuthToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetCDNAuthToken.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetCDNAuthToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetCDNAuthToken)
  return false;
#undef DO_
}

void CMsgClientGetCDNAuthToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depot_id(), output);
  }

  // optional string host_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetCDNAuthToken.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_name(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetCDNAuthToken)
}

::google::protobuf::uint8* CMsgClientGetCDNAuthToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depot_id(), target);
  }

  // optional string host_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetCDNAuthToken.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_name(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetCDNAuthToken)
  return target;
}

size_t CMsgClientGetCDNAuthToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetCDNAuthToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string host_name = 2;
    if (has_host_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional uint32 depot_id = 1;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetCDNAuthToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetCDNAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetCDNAuthToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetCDNAuthToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetCDNAuthToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetCDNAuthToken)
    MergeFrom(*source);
  }
}

void CMsgClientGetCDNAuthToken::MergeFrom(const CMsgClientGetCDNAuthToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetCDNAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetCDNAuthToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetCDNAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetCDNAuthToken::CopyFrom(const CMsgClientGetCDNAuthToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetCDNAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetCDNAuthToken::IsInitialized() const {
  return true;
}

void CMsgClientGetCDNAuthToken::Swap(CMsgClientGetCDNAuthToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetCDNAuthToken::InternalSwap(CMsgClientGetCDNAuthToken* other) {
  using std::swap;
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(depot_id_, other->depot_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetCDNAuthToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetDepotDecryptionKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetDepotDecryptionKey::kDepotIdFieldNumber;
const int CMsgClientGetDepotDecryptionKey::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetDepotDecryptionKey::CMsgClientGetDepotDecryptionKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetDepotDecryptionKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetDepotDecryptionKey)
}
CMsgClientGetDepotDecryptionKey::CMsgClientGetDepotDecryptionKey(const CMsgClientGetDepotDecryptionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&depot_id_, &from.depot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetDepotDecryptionKey)
}

void CMsgClientGetDepotDecryptionKey::SharedCtor() {
  ::memset(&depot_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
}

CMsgClientGetDepotDecryptionKey::~CMsgClientGetDepotDecryptionKey() {
  // @@protoc_insertion_point(destructor:CMsgClientGetDepotDecryptionKey)
  SharedDtor();
}

void CMsgClientGetDepotDecryptionKey::SharedDtor() {
}

void CMsgClientGetDepotDecryptionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetDepotDecryptionKey::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetDepotDecryptionKey& CMsgClientGetDepotDecryptionKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetDepotDecryptionKey.base);
  return *internal_default_instance();
}


void CMsgClientGetDepotDecryptionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&depot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetDepotDecryptionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetDepotDecryptionKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetDepotDecryptionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetDepotDecryptionKey)
  return false;
#undef DO_
}

void CMsgClientGetDepotDecryptionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depot_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetDepotDecryptionKey)
}

::google::protobuf::uint8* CMsgClientGetDepotDecryptionKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depot_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetDepotDecryptionKey)
  return target;
}

size_t CMsgClientGetDepotDecryptionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetDepotDecryptionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 depot_id = 1;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetDepotDecryptionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetDepotDecryptionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetDepotDecryptionKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetDepotDecryptionKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetDepotDecryptionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetDepotDecryptionKey)
    MergeFrom(*source);
  }
}

void CMsgClientGetDepotDecryptionKey::MergeFrom(const CMsgClientGetDepotDecryptionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetDepotDecryptionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetDepotDecryptionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetDepotDecryptionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetDepotDecryptionKey::CopyFrom(const CMsgClientGetDepotDecryptionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetDepotDecryptionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetDepotDecryptionKey::IsInitialized() const {
  return true;
}

void CMsgClientGetDepotDecryptionKey::Swap(CMsgClientGetDepotDecryptionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetDepotDecryptionKey::InternalSwap(CMsgClientGetDepotDecryptionKey* other) {
  using std::swap;
  swap(depot_id_, other->depot_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetDepotDecryptionKey::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetDepotDecryptionKeyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetDepotDecryptionKeyResponse::kEresultFieldNumber;
const int CMsgClientGetDepotDecryptionKeyResponse::kDepotIdFieldNumber;
const int CMsgClientGetDepotDecryptionKeyResponse::kDepotEncryptionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetDepotDecryptionKeyResponse::CMsgClientGetDepotDecryptionKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetDepotDecryptionKeyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetDepotDecryptionKeyResponse)
}
CMsgClientGetDepotDecryptionKeyResponse::CMsgClientGetDepotDecryptionKeyResponse(const CMsgClientGetDepotDecryptionKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  depot_encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_depot_encryption_key()) {
    depot_encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depot_encryption_key_);
  }
  ::memcpy(&depot_id_, &from.depot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&depot_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetDepotDecryptionKeyResponse)
}

void CMsgClientGetDepotDecryptionKeyResponse::SharedCtor() {
  depot_encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depot_id_ = 0u;
  eresult_ = 2;
}

CMsgClientGetDepotDecryptionKeyResponse::~CMsgClientGetDepotDecryptionKeyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetDepotDecryptionKeyResponse)
  SharedDtor();
}

void CMsgClientGetDepotDecryptionKeyResponse::SharedDtor() {
  depot_encryption_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetDepotDecryptionKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetDepotDecryptionKeyResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetDepotDecryptionKeyResponse& CMsgClientGetDepotDecryptionKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetDepotDecryptionKeyResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetDepotDecryptionKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    depot_encryption_key_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    depot_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetDepotDecryptionKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetDepotDecryptionKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes depot_encryption_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_depot_encryption_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetDepotDecryptionKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetDepotDecryptionKeyResponse)
  return false;
#undef DO_
}

void CMsgClientGetDepotDecryptionKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 depot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depot_id(), output);
  }

  // optional bytes depot_encryption_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->depot_encryption_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetDepotDecryptionKeyResponse)
}

::google::protobuf::uint8* CMsgClientGetDepotDecryptionKeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 depot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depot_id(), target);
  }

  // optional bytes depot_encryption_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->depot_encryption_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetDepotDecryptionKeyResponse)
  return target;
}

size_t CMsgClientGetDepotDecryptionKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetDepotDecryptionKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes depot_encryption_key = 3;
    if (has_depot_encryption_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->depot_encryption_key());
    }

    // optional uint32 depot_id = 2;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetDepotDecryptionKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetDepotDecryptionKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetDepotDecryptionKeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetDepotDecryptionKeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetDepotDecryptionKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetDepotDecryptionKeyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetDepotDecryptionKeyResponse::MergeFrom(const CMsgClientGetDepotDecryptionKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetDepotDecryptionKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_depot_encryption_key();
      depot_encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depot_encryption_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetDepotDecryptionKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetDepotDecryptionKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetDepotDecryptionKeyResponse::CopyFrom(const CMsgClientGetDepotDecryptionKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetDepotDecryptionKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetDepotDecryptionKeyResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetDepotDecryptionKeyResponse::Swap(CMsgClientGetDepotDecryptionKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetDepotDecryptionKeyResponse::InternalSwap(CMsgClientGetDepotDecryptionKeyResponse* other) {
  using std::swap;
  depot_encryption_key_.Swap(&other->depot_encryption_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(depot_id_, other->depot_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetDepotDecryptionKeyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckAppBetaPassword::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPassword::kAppIdFieldNumber;
const int CMsgClientCheckAppBetaPassword::kBetapasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPassword::CMsgClientCheckAppBetaPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPassword.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCheckAppBetaPassword)
}
CMsgClientCheckAppBetaPassword::CMsgClientCheckAppBetaPassword(const CMsgClientCheckAppBetaPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betapassword()) {
    betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientCheckAppBetaPassword)
}

void CMsgClientCheckAppBetaPassword::SharedCtor() {
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientCheckAppBetaPassword::~CMsgClientCheckAppBetaPassword() {
  // @@protoc_insertion_point(destructor:CMsgClientCheckAppBetaPassword)
  SharedDtor();
}

void CMsgClientCheckAppBetaPassword::SharedDtor() {
  betapassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckAppBetaPassword::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCheckAppBetaPassword::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckAppBetaPassword& CMsgClientCheckAppBetaPassword::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPassword.base);
  return *internal_default_instance();
}


void CMsgClientCheckAppBetaPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    betapassword_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckAppBetaPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCheckAppBetaPassword)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string betapassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betapassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betapassword().data(), static_cast<int>(this->betapassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientCheckAppBetaPassword.betapassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCheckAppBetaPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCheckAppBetaPassword)
  return false;
#undef DO_
}

void CMsgClientCheckAppBetaPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckAppBetaPassword.betapassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->betapassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCheckAppBetaPassword)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckAppBetaPassword.betapassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->betapassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCheckAppBetaPassword)
  return target;
}

size_t CMsgClientCheckAppBetaPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCheckAppBetaPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string betapassword = 2;
    if (has_betapassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betapassword());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckAppBetaPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCheckAppBetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckAppBetaPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCheckAppBetaPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCheckAppBetaPassword)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPassword::MergeFrom(const CMsgClientCheckAppBetaPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCheckAppBetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_betapassword();
      betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCheckAppBetaPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCheckAppBetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPassword::CopyFrom(const CMsgClientCheckAppBetaPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCheckAppBetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPassword::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPassword::Swap(CMsgClientCheckAppBetaPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPassword::InternalSwap(CMsgClientCheckAppBetaPassword* other) {
  using std::swap;
  betapassword_.Swap(&other->betapassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPassword::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPasswordResponse_BetaPassword::kBetanameFieldNumber;
const int CMsgClientCheckAppBetaPasswordResponse_BetaPassword::kBetapasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CMsgClientCheckAppBetaPasswordResponse_BetaPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}
CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CMsgClientCheckAppBetaPasswordResponse_BetaPassword(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  betaname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betaname()) {
    betaname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betaname_);
  }
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betapassword()) {
    betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SharedCtor() {
  betaname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientCheckAppBetaPasswordResponse_BetaPassword::~CMsgClientCheckAppBetaPasswordResponse_BetaPassword() {
  // @@protoc_insertion_point(destructor:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  SharedDtor();
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SharedDtor() {
  betaname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betapassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword.base);
  return *internal_default_instance();
}


void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      betaname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      betapassword_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string betaname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betaname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betaname().data(), static_cast<int>(this->betaname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string betapassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betapassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betapassword().data(), static_cast<int>(this->betapassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return false;
#undef DO_
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string betaname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betaname().data(), static_cast<int>(this->betaname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->betaname(), output);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->betapassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string betaname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betaname().data(), static_cast<int>(this->betaname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->betaname(), target);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->betapassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return target;
}

size_t CMsgClientCheckAppBetaPasswordResponse_BetaPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string betaname = 1;
    if (has_betaname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betaname());
    }

    // optional string betapassword = 2;
    if (has_betapassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betapassword());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPasswordResponse_BetaPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckAppBetaPasswordResponse_BetaPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergeFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_betaname();
      betaname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betaname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_betapassword();
      betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
    }
  }
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CopyFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::Swap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InternalSwap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
  using std::swap;
  betaname_.Swap(&other->betaname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  betapassword_.Swap(&other->betapassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPasswordResponse_BetaPassword::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckAppBetaPasswordResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPasswordResponse::kEresultFieldNumber;
const int CMsgClientCheckAppBetaPasswordResponse::kBetapasswordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPasswordResponse::CMsgClientCheckAppBetaPasswordResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPasswordResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCheckAppBetaPasswordResponse)
}
CMsgClientCheckAppBetaPasswordResponse::CMsgClientCheckAppBetaPasswordResponse(const CMsgClientCheckAppBetaPasswordResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      betapasswords_(from.betapasswords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientCheckAppBetaPasswordResponse)
}

void CMsgClientCheckAppBetaPasswordResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientCheckAppBetaPasswordResponse::~CMsgClientCheckAppBetaPasswordResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientCheckAppBetaPasswordResponse)
  SharedDtor();
}

void CMsgClientCheckAppBetaPasswordResponse::SharedDtor() {
}

void CMsgClientCheckAppBetaPasswordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCheckAppBetaPasswordResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckAppBetaPasswordResponse& CMsgClientCheckAppBetaPasswordResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCheckAppBetaPasswordResponse.base);
  return *internal_default_instance();
}


void CMsgClientCheckAppBetaPasswordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  betapasswords_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckAppBetaPasswordResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCheckAppBetaPasswordResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_betapasswords()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCheckAppBetaPasswordResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCheckAppBetaPasswordResponse)
  return false;
#undef DO_
}

void CMsgClientCheckAppBetaPasswordResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->betapasswords_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->betapasswords(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCheckAppBetaPasswordResponse)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPasswordResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->betapasswords_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->betapasswords(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCheckAppBetaPasswordResponse)
  return target;
}

size_t CMsgClientCheckAppBetaPasswordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCheckAppBetaPasswordResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->betapasswords_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->betapasswords(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckAppBetaPasswordResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCheckAppBetaPasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPasswordResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckAppBetaPasswordResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCheckAppBetaPasswordResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCheckAppBetaPasswordResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPasswordResponse::MergeFrom(const CMsgClientCheckAppBetaPasswordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCheckAppBetaPasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  betapasswords_.MergeFrom(from.betapasswords_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientCheckAppBetaPasswordResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCheckAppBetaPasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPasswordResponse::CopyFrom(const CMsgClientCheckAppBetaPasswordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCheckAppBetaPasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPasswordResponse::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPasswordResponse::Swap(CMsgClientCheckAppBetaPasswordResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPasswordResponse::InternalSwap(CMsgClientCheckAppBetaPasswordResponse* other) {
  using std::swap;
  CastToBase(&betapasswords_)->InternalSwap(CastToBase(&other->betapasswords_));
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPasswordResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateAppJobReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateAppJobReport::kAppIdFieldNumber;
const int CMsgClientUpdateAppJobReport::kDepotIdsFieldNumber;
const int CMsgClientUpdateAppJobReport::kAppStateFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobAppErrorFieldNumber;
const int CMsgClientUpdateAppJobReport::kErrorDetailsFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobDurationFieldNumber;
const int CMsgClientUpdateAppJobReport::kFilesValidationFailedFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobBytesDownloadedFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobBytesStagedFieldNumber;
const int CMsgClientUpdateAppJobReport::kBytesComittedFieldNumber;
const int CMsgClientUpdateAppJobReport::kStartAppStateFieldNumber;
const int CMsgClientUpdateAppJobReport::kStatsMachineIdFieldNumber;
const int CMsgClientUpdateAppJobReport::kBranchNameFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesDownloadedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesStagedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesRestoredFieldNumber;
const int CMsgClientUpdateAppJobReport::kIsBorrowedFieldNumber;
const int CMsgClientUpdateAppJobReport::kIsFreeWeekendFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesLegacyFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesPatchedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesSavedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateAppJobReport::CMsgClientUpdateAppJobReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateAppJobReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUpdateAppJobReport)
}
CMsgClientUpdateAppJobReport::CMsgClientUpdateAppJobReport(const CMsgClientUpdateAppJobReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      depot_ids_(from.depot_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_details()) {
    error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_details_);
  }
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_branch_name()) {
    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_free_weekend_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(is_free_weekend_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUpdateAppJobReport)
}

void CMsgClientUpdateAppJobReport::SharedCtor() {
  error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_free_weekend_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(is_free_weekend_));
}

CMsgClientUpdateAppJobReport::~CMsgClientUpdateAppJobReport() {
  // @@protoc_insertion_point(destructor:CMsgClientUpdateAppJobReport)
  SharedDtor();
}

void CMsgClientUpdateAppJobReport::SharedDtor() {
  error_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateAppJobReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUpdateAppJobReport::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateAppJobReport& CMsgClientUpdateAppJobReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUpdateAppJobReport.base);
  return *internal_default_instance();
}


void CMsgClientUpdateAppJobReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depot_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      error_details_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      branch_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&job_bytes_staged_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(job_bytes_staged_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&files_validation_failed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_bytes_legacy_) -
        reinterpret_cast<char*>(&files_validation_failed_)) + sizeof(total_bytes_legacy_));
  }
  if (cached_has_bits & 983040u) {
    ::memset(&total_bytes_patched_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_free_weekend_) -
        reinterpret_cast<char*>(&total_bytes_patched_)) + sizeof(is_free_weekend_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateAppJobReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUpdateAppJobReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 depot_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_depot_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_depot_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 job_app_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_job_app_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_app_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_details = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_details()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_details().data(), static_cast<int>(this->error_details().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUpdateAppJobReport.error_details");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 job_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_job_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 files_validation_failed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_files_validation_failed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &files_validation_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 job_bytes_downloaded = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_job_bytes_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &job_bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 job_bytes_staged = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_job_bytes_staged();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &job_bytes_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_comitted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_bytes_comitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_comitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_app_state = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_start_app_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_app_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 stats_machine_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_stats_machine_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &stats_machine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string branch_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->branch_name().data(), static_cast<int>(this->branch_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUpdateAppJobReport.branch_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_downloaded = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_total_bytes_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_staged = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_total_bytes_staged();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_restored = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_total_bytes_restored();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_restored_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_borrowed = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_is_borrowed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_borrowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_free_weekend = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_is_free_weekend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_weekend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_legacy = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_total_bytes_legacy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_legacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_patched = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_total_bytes_patched();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_patched_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_saved = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_total_bytes_saved();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_saved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUpdateAppJobReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUpdateAppJobReport)
  return false;
#undef DO_
}

void CMsgClientUpdateAppJobReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // repeated uint32 depot_ids = 2;
  for (int i = 0, n = this->depot_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->depot_ids(i), output);
  }

  // optional uint32 app_state = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_state(), output);
  }

  // optional uint32 job_app_error = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->job_app_error(), output);
  }

  // optional string error_details = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_details().data(), static_cast<int>(this->error_details().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateAppJobReport.error_details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->error_details(), output);
  }

  // optional uint32 job_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->job_duration(), output);
  }

  // optional uint32 files_validation_failed = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->files_validation_failed(), output);
  }

  // optional uint64 job_bytes_downloaded = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->job_bytes_downloaded(), output);
  }

  // optional uint64 job_bytes_staged = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->job_bytes_staged(), output);
  }

  // optional uint64 bytes_comitted = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->bytes_comitted(), output);
  }

  // optional uint32 start_app_state = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->start_app_state(), output);
  }

  // optional fixed64 stats_machine_id = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(12, this->stats_machine_id(), output);
  }

  // optional string branch_name = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateAppJobReport.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->branch_name(), output);
  }

  // optional uint64 total_bytes_downloaded = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->total_bytes_downloaded(), output);
  }

  // optional uint64 total_bytes_staged = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->total_bytes_staged(), output);
  }

  // optional uint64 total_bytes_restored = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->total_bytes_restored(), output);
  }

  // optional bool is_borrowed = 17;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->is_borrowed(), output);
  }

  // optional bool is_free_weekend = 18;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_free_weekend(), output);
  }

  // optional uint64 total_bytes_legacy = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->total_bytes_legacy(), output);
  }

  // optional uint64 total_bytes_patched = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->total_bytes_patched(), output);
  }

  // optional uint64 total_bytes_saved = 21;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->total_bytes_saved(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUpdateAppJobReport)
}

::google::protobuf::uint8* CMsgClientUpdateAppJobReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // repeated uint32 depot_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->depot_ids_, target);

  // optional uint32 app_state = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_state(), target);
  }

  // optional uint32 job_app_error = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->job_app_error(), target);
  }

  // optional string error_details = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_details().data(), static_cast<int>(this->error_details().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateAppJobReport.error_details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->error_details(), target);
  }

  // optional uint32 job_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->job_duration(), target);
  }

  // optional uint32 files_validation_failed = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->files_validation_failed(), target);
  }

  // optional uint64 job_bytes_downloaded = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->job_bytes_downloaded(), target);
  }

  // optional uint64 job_bytes_staged = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->job_bytes_staged(), target);
  }

  // optional uint64 bytes_comitted = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->bytes_comitted(), target);
  }

  // optional uint32 start_app_state = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->start_app_state(), target);
  }

  // optional fixed64 stats_machine_id = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(12, this->stats_machine_id(), target);
  }

  // optional string branch_name = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUpdateAppJobReport.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->branch_name(), target);
  }

  // optional uint64 total_bytes_downloaded = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->total_bytes_downloaded(), target);
  }

  // optional uint64 total_bytes_staged = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->total_bytes_staged(), target);
  }

  // optional uint64 total_bytes_restored = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->total_bytes_restored(), target);
  }

  // optional bool is_borrowed = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->is_borrowed(), target);
  }

  // optional bool is_free_weekend = 18;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_free_weekend(), target);
  }

  // optional uint64 total_bytes_legacy = 19;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->total_bytes_legacy(), target);
  }

  // optional uint64 total_bytes_patched = 20;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->total_bytes_patched(), target);
  }

  // optional uint64 total_bytes_saved = 21;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->total_bytes_saved(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUpdateAppJobReport)
  return target;
}

size_t CMsgClientUpdateAppJobReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUpdateAppJobReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 depot_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->depot_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->depot_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string error_details = 5;
    if (has_error_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_details());
    }

    // optional string branch_name = 13;
    if (has_branch_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 app_state = 3;
    if (has_app_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_state());
    }

    // optional uint32 job_app_error = 4;
    if (has_job_app_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job_app_error());
    }

    // optional uint32 job_duration = 6;
    if (has_job_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job_duration());
    }

    // optional uint64 job_bytes_downloaded = 8;
    if (has_job_bytes_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->job_bytes_downloaded());
    }

    // optional uint64 job_bytes_staged = 9;
    if (has_job_bytes_staged()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->job_bytes_staged());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 files_validation_failed = 7;
    if (has_files_validation_failed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->files_validation_failed());
    }

    // optional uint32 start_app_state = 11;
    if (has_start_app_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_app_state());
    }

    // optional uint64 bytes_comitted = 10;
    if (has_bytes_comitted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_comitted());
    }

    // optional fixed64 stats_machine_id = 12;
    if (has_stats_machine_id()) {
      total_size += 1 + 8;
    }

    // optional uint64 total_bytes_downloaded = 14;
    if (has_total_bytes_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_downloaded());
    }

    // optional uint64 total_bytes_staged = 15;
    if (has_total_bytes_staged()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_staged());
    }

    // optional uint64 total_bytes_restored = 16;
    if (has_total_bytes_restored()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_restored());
    }

    // optional uint64 total_bytes_legacy = 19;
    if (has_total_bytes_legacy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_legacy());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional uint64 total_bytes_patched = 20;
    if (has_total_bytes_patched()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_patched());
    }

    // optional uint64 total_bytes_saved = 21;
    if (has_total_bytes_saved()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_saved());
    }

    // optional bool is_borrowed = 17;
    if (has_is_borrowed()) {
      total_size += 2 + 1;
    }

    // optional bool is_free_weekend = 18;
    if (has_is_free_weekend()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateAppJobReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUpdateAppJobReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateAppJobReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateAppJobReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUpdateAppJobReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUpdateAppJobReport)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateAppJobReport::MergeFrom(const CMsgClientUpdateAppJobReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUpdateAppJobReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depot_ids_.MergeFrom(from.depot_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_details();
      error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_details_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_branch_name();
      branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_state_ = from.app_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      job_app_error_ = from.job_app_error_;
    }
    if (cached_has_bits & 0x00000020u) {
      job_duration_ = from.job_duration_;
    }
    if (cached_has_bits & 0x00000040u) {
      job_bytes_downloaded_ = from.job_bytes_downloaded_;
    }
    if (cached_has_bits & 0x00000080u) {
      job_bytes_staged_ = from.job_bytes_staged_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      files_validation_failed_ = from.files_validation_failed_;
    }
    if (cached_has_bits & 0x00000200u) {
      start_app_state_ = from.start_app_state_;
    }
    if (cached_has_bits & 0x00000400u) {
      bytes_comitted_ = from.bytes_comitted_;
    }
    if (cached_has_bits & 0x00000800u) {
      stats_machine_id_ = from.stats_machine_id_;
    }
    if (cached_has_bits & 0x00001000u) {
      total_bytes_downloaded_ = from.total_bytes_downloaded_;
    }
    if (cached_has_bits & 0x00002000u) {
      total_bytes_staged_ = from.total_bytes_staged_;
    }
    if (cached_has_bits & 0x00004000u) {
      total_bytes_restored_ = from.total_bytes_restored_;
    }
    if (cached_has_bits & 0x00008000u) {
      total_bytes_legacy_ = from.total_bytes_legacy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      total_bytes_patched_ = from.total_bytes_patched_;
    }
    if (cached_has_bits & 0x00020000u) {
      total_bytes_saved_ = from.total_bytes_saved_;
    }
    if (cached_has_bits & 0x00040000u) {
      is_borrowed_ = from.is_borrowed_;
    }
    if (cached_has_bits & 0x00080000u) {
      is_free_weekend_ = from.is_free_weekend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateAppJobReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUpdateAppJobReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateAppJobReport::CopyFrom(const CMsgClientUpdateAppJobReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUpdateAppJobReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateAppJobReport::IsInitialized() const {
  return true;
}

void CMsgClientUpdateAppJobReport::Swap(CMsgClientUpdateAppJobReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateAppJobReport::InternalSwap(CMsgClientUpdateAppJobReport* other) {
  using std::swap;
  depot_ids_.InternalSwap(&other->depot_ids_);
  error_details_.Swap(&other->error_details_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_name_.Swap(&other->branch_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(app_state_, other->app_state_);
  swap(job_app_error_, other->job_app_error_);
  swap(job_duration_, other->job_duration_);
  swap(job_bytes_downloaded_, other->job_bytes_downloaded_);
  swap(job_bytes_staged_, other->job_bytes_staged_);
  swap(files_validation_failed_, other->files_validation_failed_);
  swap(start_app_state_, other->start_app_state_);
  swap(bytes_comitted_, other->bytes_comitted_);
  swap(stats_machine_id_, other->stats_machine_id_);
  swap(total_bytes_downloaded_, other->total_bytes_downloaded_);
  swap(total_bytes_staged_, other->total_bytes_staged_);
  swap(total_bytes_restored_, other->total_bytes_restored_);
  swap(total_bytes_legacy_, other->total_bytes_legacy_);
  swap(total_bytes_patched_, other->total_bytes_patched_);
  swap(total_bytes_saved_, other->total_bytes_saved_);
  swap(is_borrowed_, other->is_borrowed_);
  swap(is_free_weekend_, other->is_free_weekend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUpdateAppJobReport::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPContentStatsReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPContentStatsReport::kStatsMachineIdFieldNumber;
const int CMsgClientDPContentStatsReport::kCountryCodeFieldNumber;
const int CMsgClientDPContentStatsReport::kOsTypeFieldNumber;
const int CMsgClientDPContentStatsReport::kLanguageFieldNumber;
const int CMsgClientDPContentStatsReport::kNumInstallFoldersFieldNumber;
const int CMsgClientDPContentStatsReport::kNumInstalledGamesFieldNumber;
const int CMsgClientDPContentStatsReport::kSizeInstalledGamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPContentStatsReport::CMsgClientDPContentStatsReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPContentStatsReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDPContentStatsReport)
}
CMsgClientDPContentStatsReport::CMsgClientDPContentStatsReport(const CMsgClientDPContentStatsReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&stats_machine_id_, &from.stats_machine_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_installed_games_) -
    reinterpret_cast<char*>(&stats_machine_id_)) + sizeof(size_installed_games_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientDPContentStatsReport)
}

void CMsgClientDPContentStatsReport::SharedCtor() {
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stats_machine_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_installed_games_) -
      reinterpret_cast<char*>(&stats_machine_id_)) + sizeof(size_installed_games_));
}

CMsgClientDPContentStatsReport::~CMsgClientDPContentStatsReport() {
  // @@protoc_insertion_point(destructor:CMsgClientDPContentStatsReport)
  SharedDtor();
}

void CMsgClientDPContentStatsReport::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPContentStatsReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDPContentStatsReport::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPContentStatsReport& CMsgClientDPContentStatsReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPContentStatsReport.base);
  return *internal_default_instance();
}


void CMsgClientDPContentStatsReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    country_code_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&stats_machine_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_installed_games_) -
        reinterpret_cast<char*>(&stats_machine_id_)) + sizeof(size_installed_games_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPContentStatsReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDPContentStatsReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 stats_machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_stats_machine_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &stats_machine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientDPContentStatsReport.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 os_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_os_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_install_folders = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_num_install_folders();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_install_folders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_installed_games = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_num_installed_games();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_installed_games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 size_installed_games = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_size_installed_games();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_installed_games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDPContentStatsReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDPContentStatsReport)
  return false;
#undef DO_
}

void CMsgClientDPContentStatsReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 stats_machine_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->stats_machine_id(), output);
  }

  // optional string country_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientDPContentStatsReport.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->country_code(), output);
  }

  // optional int32 os_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->os_type(), output);
  }

  // optional int32 language = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->language(), output);
  }

  // optional uint32 num_install_folders = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_install_folders(), output);
  }

  // optional uint32 num_installed_games = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->num_installed_games(), output);
  }

  // optional uint64 size_installed_games = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->size_installed_games(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDPContentStatsReport)
}

::google::protobuf::uint8* CMsgClientDPContentStatsReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 stats_machine_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->stats_machine_id(), target);
  }

  // optional string country_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientDPContentStatsReport.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->country_code(), target);
  }

  // optional int32 os_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->os_type(), target);
  }

  // optional int32 language = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->language(), target);
  }

  // optional uint32 num_install_folders = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_install_folders(), target);
  }

  // optional uint32 num_installed_games = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->num_installed_games(), target);
  }

  // optional uint64 size_installed_games = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->size_installed_games(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDPContentStatsReport)
  return target;
}

size_t CMsgClientDPContentStatsReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDPContentStatsReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string country_code = 2;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional fixed64 stats_machine_id = 1;
    if (has_stats_machine_id()) {
      total_size += 1 + 8;
    }

    // optional int32 os_type = 3;
    if (has_os_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->os_type());
    }

    // optional int32 language = 4;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional uint32 num_install_folders = 5;
    if (has_num_install_folders()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_install_folders());
    }

    // optional uint32 num_installed_games = 6;
    if (has_num_installed_games()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_installed_games());
    }

    // optional uint64 size_installed_games = 7;
    if (has_size_installed_games()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->size_installed_games());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPContentStatsReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDPContentStatsReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPContentStatsReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPContentStatsReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDPContentStatsReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDPContentStatsReport)
    MergeFrom(*source);
  }
}

void CMsgClientDPContentStatsReport::MergeFrom(const CMsgClientDPContentStatsReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDPContentStatsReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country_code();
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      stats_machine_id_ = from.stats_machine_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      os_type_ = from.os_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_install_folders_ = from.num_install_folders_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_installed_games_ = from.num_installed_games_;
    }
    if (cached_has_bits & 0x00000040u) {
      size_installed_games_ = from.size_installed_games_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPContentStatsReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDPContentStatsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPContentStatsReport::CopyFrom(const CMsgClientDPContentStatsReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDPContentStatsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPContentStatsReport::IsInitialized() const {
  return true;
}

void CMsgClientDPContentStatsReport::Swap(CMsgClientDPContentStatsReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPContentStatsReport::InternalSwap(CMsgClientDPContentStatsReport* other) {
  using std::swap;
  country_code_.Swap(&other->country_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stats_machine_id_, other->stats_machine_id_);
  swap(os_type_, other->os_type_);
  swap(language_, other->language_);
  swap(num_install_folders_, other->num_install_folders_);
  swap(num_installed_games_, other->num_installed_games_);
  swap(size_installed_games_, other->size_installed_games_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDPContentStatsReport::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetCDNAuthTokenResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetCDNAuthTokenResponse::kEresultFieldNumber;
const int CMsgClientGetCDNAuthTokenResponse::kTokenFieldNumber;
const int CMsgClientGetCDNAuthTokenResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetCDNAuthTokenResponse::CMsgClientGetCDNAuthTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetCDNAuthTokenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetCDNAuthTokenResponse)
}
CMsgClientGetCDNAuthTokenResponse::CMsgClientGetCDNAuthTokenResponse(const CMsgClientGetCDNAuthTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&expiration_time_, &from.expiration_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&expiration_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetCDNAuthTokenResponse)
}

void CMsgClientGetCDNAuthTokenResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_time_ = 0u;
  eresult_ = 2u;
}

CMsgClientGetCDNAuthTokenResponse::~CMsgClientGetCDNAuthTokenResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetCDNAuthTokenResponse)
  SharedDtor();
}

void CMsgClientGetCDNAuthTokenResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetCDNAuthTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetCDNAuthTokenResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetCDNAuthTokenResponse& CMsgClientGetCDNAuthTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetCDNAuthTokenResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetCDNAuthTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    expiration_time_ = 0u;
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetCDNAuthTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetCDNAuthTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetCDNAuthTokenResponse.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_expiration_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetCDNAuthTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetCDNAuthTokenResponse)
  return false;
#undef DO_
}

void CMsgClientGetCDNAuthTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetCDNAuthTokenResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetCDNAuthTokenResponse)
}

::google::protobuf::uint8* CMsgClientGetCDNAuthTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetCDNAuthTokenResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetCDNAuthTokenResponse)
  return target;
}

size_t CMsgClientGetCDNAuthTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetCDNAuthTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional uint32 expiration_time = 3;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetCDNAuthTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetCDNAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetCDNAuthTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetCDNAuthTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetCDNAuthTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetCDNAuthTokenResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetCDNAuthTokenResponse::MergeFrom(const CMsgClientGetCDNAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetCDNAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetCDNAuthTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetCDNAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetCDNAuthTokenResponse::CopyFrom(const CMsgClientGetCDNAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetCDNAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetCDNAuthTokenResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetCDNAuthTokenResponse::Swap(CMsgClientGetCDNAuthTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetCDNAuthTokenResponse::InternalSwap(CMsgClientGetCDNAuthTokenResponse* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expiration_time_, other->expiration_time_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetCDNAuthTokenResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDownloadRateStatistics_StatsInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDownloadRateStatistics_StatsInfo::kSourceTypeFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kSourceIdFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kSecondsFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kBytesFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kHostNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDownloadRateStatistics_StatsInfo::CMsgDownloadRateStatistics_StatsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDownloadRateStatistics_StatsInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDownloadRateStatistics.StatsInfo)
}
CMsgDownloadRateStatistics_StatsInfo::CMsgDownloadRateStatistics_StatsInfo(const CMsgDownloadRateStatistics_StatsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&source_type_, &from.source_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&source_type_)) + sizeof(seconds_));
  // @@protoc_insertion_point(copy_constructor:CMsgDownloadRateStatistics.StatsInfo)
}

void CMsgDownloadRateStatistics_StatsInfo::SharedCtor() {
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seconds_) -
      reinterpret_cast<char*>(&source_type_)) + sizeof(seconds_));
}

CMsgDownloadRateStatistics_StatsInfo::~CMsgDownloadRateStatistics_StatsInfo() {
  // @@protoc_insertion_point(destructor:CMsgDownloadRateStatistics.StatsInfo)
  SharedDtor();
}

void CMsgDownloadRateStatistics_StatsInfo::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDownloadRateStatistics_StatsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDownloadRateStatistics_StatsInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics_StatsInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDownloadRateStatistics_StatsInfo.base);
  return *internal_default_instance();
}


void CMsgDownloadRateStatistics_StatsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&source_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seconds_) -
        reinterpret_cast<char*>(&source_type_)) + sizeof(seconds_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDownloadRateStatistics_StatsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDownloadRateStatistics.StatsInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_source_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDownloadRateStatistics.StatsInfo.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDownloadRateStatistics.StatsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDownloadRateStatistics.StatsInfo)
  return false;
#undef DO_
}

void CMsgDownloadRateStatistics_StatsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_type(), output);
  }

  // optional uint32 source_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_id(), output);
  }

  // optional uint32 seconds = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seconds(), output);
  }

  // optional uint64 bytes = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bytes(), output);
  }

  // optional string host_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDownloadRateStatistics.StatsInfo.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->host_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDownloadRateStatistics.StatsInfo)
}

::google::protobuf::uint8* CMsgDownloadRateStatistics_StatsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_type(), target);
  }

  // optional uint32 source_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_id(), target);
  }

  // optional uint32 seconds = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seconds(), target);
  }

  // optional uint64 bytes = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bytes(), target);
  }

  // optional string host_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDownloadRateStatistics.StatsInfo.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->host_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDownloadRateStatistics.StatsInfo)
  return target;
}

size_t CMsgDownloadRateStatistics_StatsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDownloadRateStatistics.StatsInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string host_name = 5;
    if (has_host_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional uint32 source_type = 1;
    if (has_source_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_type());
    }

    // optional uint32 source_id = 2;
    if (has_source_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_id());
    }

    // optional uint64 bytes = 4;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

    // optional uint32 seconds = 3;
    if (has_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDownloadRateStatistics_StatsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDownloadRateStatistics.StatsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDownloadRateStatistics_StatsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDownloadRateStatistics_StatsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDownloadRateStatistics.StatsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDownloadRateStatistics.StatsInfo)
    MergeFrom(*source);
  }
}

void CMsgDownloadRateStatistics_StatsInfo::MergeFrom(const CMsgDownloadRateStatistics_StatsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDownloadRateStatistics.StatsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      source_type_ = from.source_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_id_ = from.source_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      bytes_ = from.bytes_;
    }
    if (cached_has_bits & 0x00000010u) {
      seconds_ = from.seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDownloadRateStatistics_StatsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDownloadRateStatistics.StatsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDownloadRateStatistics_StatsInfo::CopyFrom(const CMsgDownloadRateStatistics_StatsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDownloadRateStatistics.StatsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDownloadRateStatistics_StatsInfo::IsInitialized() const {
  return true;
}

void CMsgDownloadRateStatistics_StatsInfo::Swap(CMsgDownloadRateStatistics_StatsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDownloadRateStatistics_StatsInfo::InternalSwap(CMsgDownloadRateStatistics_StatsInfo* other) {
  using std::swap;
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_type_, other->source_type_);
  swap(source_id_, other->source_id_);
  swap(bytes_, other->bytes_);
  swap(seconds_, other->seconds_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDownloadRateStatistics_StatsInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDownloadRateStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDownloadRateStatistics::kCellIdFieldNumber;
const int CMsgDownloadRateStatistics::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDownloadRateStatistics::CMsgDownloadRateStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDownloadRateStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDownloadRateStatistics)
}
CMsgDownloadRateStatistics::CMsgDownloadRateStatistics(const CMsgDownloadRateStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cell_id_ = from.cell_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgDownloadRateStatistics)
}

void CMsgDownloadRateStatistics::SharedCtor() {
  cell_id_ = 0u;
}

CMsgDownloadRateStatistics::~CMsgDownloadRateStatistics() {
  // @@protoc_insertion_point(destructor:CMsgDownloadRateStatistics)
  SharedDtor();
}

void CMsgDownloadRateStatistics::SharedDtor() {
}

void CMsgDownloadRateStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDownloadRateStatistics::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDownloadRateStatistics& CMsgDownloadRateStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDownloadRateStatistics.base);
  return *internal_default_instance();
}


void CMsgDownloadRateStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  cell_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDownloadRateStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDownloadRateStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cell_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDownloadRateStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDownloadRateStatistics)
  return false;
#undef DO_
}

void CMsgDownloadRateStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 cell_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cell_id(), output);
  }

  // repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDownloadRateStatistics)
}

::google::protobuf::uint8* CMsgDownloadRateStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 cell_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cell_id(), target);
  }

  // repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stats(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDownloadRateStatistics)
  return target;
}

size_t CMsgDownloadRateStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDownloadRateStatistics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // optional uint32 cell_id = 1;
  if (has_cell_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cell_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDownloadRateStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDownloadRateStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDownloadRateStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDownloadRateStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDownloadRateStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDownloadRateStatistics)
    MergeFrom(*source);
  }
}

void CMsgDownloadRateStatistics::MergeFrom(const CMsgDownloadRateStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDownloadRateStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_cell_id()) {
    set_cell_id(from.cell_id());
  }
}

void CMsgDownloadRateStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDownloadRateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDownloadRateStatistics::CopyFrom(const CMsgDownloadRateStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDownloadRateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDownloadRateStatistics::IsInitialized() const {
  return true;
}

void CMsgDownloadRateStatistics::Swap(CMsgDownloadRateStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDownloadRateStatistics::InternalSwap(CMsgDownloadRateStatistics* other) {
  using std::swap;
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  swap(cell_id_, other->cell_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDownloadRateStatistics::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestAccountData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestAccountData::kAccountOrEmailFieldNumber;
const int CMsgClientRequestAccountData::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestAccountData::CMsgClientRequestAccountData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestAccountData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestAccountData)
}
CMsgClientRequestAccountData::CMsgClientRequestAccountData(const CMsgClientRequestAccountData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_or_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_or_email()) {
    account_or_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_or_email_);
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestAccountData)
}

void CMsgClientRequestAccountData::SharedCtor() {
  account_or_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0u;
}

CMsgClientRequestAccountData::~CMsgClientRequestAccountData() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestAccountData)
  SharedDtor();
}

void CMsgClientRequestAccountData::SharedDtor() {
  account_or_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestAccountData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestAccountData::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestAccountData& CMsgClientRequestAccountData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestAccountData.base);
  return *internal_default_instance();
}


void CMsgClientRequestAccountData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_or_email_.ClearNonDefaultToEmptyNoArena();
  }
  action_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestAccountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestAccountData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_or_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_or_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_or_email().data(), static_cast<int>(this->account_or_email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestAccountData.account_or_email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestAccountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestAccountData)
  return false;
#undef DO_
}

void CMsgClientRequestAccountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_or_email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_or_email().data(), static_cast<int>(this->account_or_email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountData.account_or_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_or_email(), output);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestAccountData)
}

::google::protobuf::uint8* CMsgClientRequestAccountData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_or_email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_or_email().data(), static_cast<int>(this->account_or_email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountData.account_or_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_or_email(), target);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestAccountData)
  return target;
}

size_t CMsgClientRequestAccountData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestAccountData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account_or_email = 1;
    if (has_account_or_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_or_email());
    }

    // optional uint32 action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestAccountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestAccountData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestAccountData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestAccountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestAccountData)
    MergeFrom(*source);
  }
}

void CMsgClientRequestAccountData::MergeFrom(const CMsgClientRequestAccountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_or_email();
      account_or_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_or_email_);
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestAccountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestAccountData::CopyFrom(const CMsgClientRequestAccountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestAccountData::IsInitialized() const {
  return true;
}

void CMsgClientRequestAccountData::Swap(CMsgClientRequestAccountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestAccountData::InternalSwap(CMsgClientRequestAccountData* other) {
  using std::swap;
  account_or_email_.Swap(&other->account_or_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestAccountData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestAccountDataResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestAccountDataResponse::kActionFieldNumber;
const int CMsgClientRequestAccountDataResponse::kEresultFieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameFieldNumber;
const int CMsgClientRequestAccountDataResponse::kCtMatchesFieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion1FieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion2FieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestAccountDataResponse::CMsgClientRequestAccountDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestAccountDataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestAccountDataResponse)
}
CMsgClientRequestAccountDataResponse::CMsgClientRequestAccountDataResponse(const CMsgClientRequestAccountDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  account_name_suggestion1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion1()) {
    account_name_suggestion1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion1_);
  }
  account_name_suggestion2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion2()) {
    account_name_suggestion2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion2_);
  }
  account_name_suggestion3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion3()) {
    account_name_suggestion3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion3_);
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&ct_matches_) -
    reinterpret_cast<char*>(&action_)) + sizeof(ct_matches_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestAccountDataResponse)
}

void CMsgClientRequestAccountDataResponse::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ct_matches_) -
      reinterpret_cast<char*>(&action_)) + sizeof(ct_matches_));
}

CMsgClientRequestAccountDataResponse::~CMsgClientRequestAccountDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestAccountDataResponse)
  SharedDtor();
}

void CMsgClientRequestAccountDataResponse::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestAccountDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestAccountDataResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestAccountDataResponse& CMsgClientRequestAccountDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestAccountDataResponse.base);
  return *internal_default_instance();
}


void CMsgClientRequestAccountDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      account_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      account_name_suggestion1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      account_name_suggestion2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      account_name_suggestion3_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&action_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ct_matches_) -
        reinterpret_cast<char*>(&action_)) + sizeof(ct_matches_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestAccountDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestAccountDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestAccountDataResponse.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ct_matches = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ct_matches();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ct_matches_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion1().data(), static_cast<int>(this->account_name_suggestion1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestAccountDataResponse.account_name_suggestion1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion2().data(), static_cast<int>(this->account_name_suggestion2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestAccountDataResponse.account_name_suggestion2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion3().data(), static_cast<int>(this->account_name_suggestion3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestAccountDataResponse.account_name_suggestion3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestAccountDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestAccountDataResponse)
  return false;
#undef DO_
}

void CMsgClientRequestAccountDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 action = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->action(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional string account_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account_name(), output);
  }

  // optional uint32 ct_matches = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ct_matches(), output);
  }

  // optional string account_name_suggestion1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion1().data(), static_cast<int>(this->account_name_suggestion1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name_suggestion1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->account_name_suggestion1(), output);
  }

  // optional string account_name_suggestion2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion2().data(), static_cast<int>(this->account_name_suggestion2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name_suggestion2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_name_suggestion2(), output);
  }

  // optional string account_name_suggestion3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion3().data(), static_cast<int>(this->account_name_suggestion3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name_suggestion3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->account_name_suggestion3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestAccountDataResponse)
}

::google::protobuf::uint8* CMsgClientRequestAccountDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 action = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->action(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional string account_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account_name(), target);
  }

  // optional uint32 ct_matches = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ct_matches(), target);
  }

  // optional string account_name_suggestion1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion1().data(), static_cast<int>(this->account_name_suggestion1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name_suggestion1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->account_name_suggestion1(), target);
  }

  // optional string account_name_suggestion2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion2().data(), static_cast<int>(this->account_name_suggestion2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name_suggestion2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_name_suggestion2(), target);
  }

  // optional string account_name_suggestion3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion3().data(), static_cast<int>(this->account_name_suggestion3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestAccountDataResponse.account_name_suggestion3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->account_name_suggestion3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestAccountDataResponse)
  return target;
}

size_t CMsgClientRequestAccountDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestAccountDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string account_name = 3;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string account_name_suggestion1 = 5;
    if (has_account_name_suggestion1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion1());
    }

    // optional string account_name_suggestion2 = 6;
    if (has_account_name_suggestion2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion2());
    }

    // optional string account_name_suggestion3 = 7;
    if (has_account_name_suggestion3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion3());
    }

    // optional uint32 action = 1;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

    // optional uint32 eresult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 ct_matches = 4;
    if (has_ct_matches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ct_matches());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestAccountDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestAccountDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestAccountDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestAccountDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestAccountDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestAccountDataResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestAccountDataResponse::MergeFrom(const CMsgClientRequestAccountDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestAccountDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account_name_suggestion1();
      account_name_suggestion1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_account_name_suggestion2();
      account_name_suggestion2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion2_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_account_name_suggestion3();
      account_name_suggestion3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion3_);
    }
    if (cached_has_bits & 0x00000010u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000040u) {
      ct_matches_ = from.ct_matches_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestAccountDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestAccountDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestAccountDataResponse::CopyFrom(const CMsgClientRequestAccountDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestAccountDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestAccountDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestAccountDataResponse::Swap(CMsgClientRequestAccountDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestAccountDataResponse::InternalSwap(CMsgClientRequestAccountDataResponse* other) {
  using std::swap;
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_suggestion1_.Swap(&other->account_name_suggestion1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_suggestion2_.Swap(&other->account_name_suggestion2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_suggestion3_.Swap(&other->account_name_suggestion3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(eresult_, other->eresult_);
  swap(ct_matches_, other->ct_matches_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestAccountDataResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStats::kGameidFieldNumber;
const int CMsgClientUGSGetGlobalStats::kHistoryDaysRequestedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kTimeLastRequestedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kFirstDayCachedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kDaysCachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStats::CMsgClientUGSGetGlobalStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUGSGetGlobalStats)
}
CMsgClientUGSGetGlobalStats::CMsgClientUGSGetGlobalStats(const CMsgClientUGSGetGlobalStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    static_cast<size_t>(reinterpret_cast<char*>(&days_cached_) -
    reinterpret_cast<char*>(&gameid_)) + sizeof(days_cached_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUGSGetGlobalStats)
}

void CMsgClientUGSGetGlobalStats::SharedCtor() {
  ::memset(&gameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_cached_) -
      reinterpret_cast<char*>(&gameid_)) + sizeof(days_cached_));
}

CMsgClientUGSGetGlobalStats::~CMsgClientUGSGetGlobalStats() {
  // @@protoc_insertion_point(destructor:CMsgClientUGSGetGlobalStats)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStats::SharedDtor() {
}

void CMsgClientUGSGetGlobalStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStats::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStats& CMsgClientUGSGetGlobalStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStats.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&gameid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&days_cached_) -
        reinterpret_cast<char*>(&gameid_)) + sizeof(days_cached_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUGSGetGlobalStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 history_days_requested = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_history_days_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &history_days_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_last_requested = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_time_last_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_last_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 first_day_cached = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_first_day_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_day_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days_cached = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_days_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUGSGetGlobalStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUGSGetGlobalStats)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gameid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // optional uint32 history_days_requested = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->history_days_requested(), output);
  }

  // optional fixed32 time_last_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->time_last_requested(), output);
  }

  // optional uint32 first_day_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->first_day_cached(), output);
  }

  // optional uint32 days_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->days_cached(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUGSGetGlobalStats)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gameid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // optional uint32 history_days_requested = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->history_days_requested(), target);
  }

  // optional fixed32 time_last_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->time_last_requested(), target);
  }

  // optional uint32 first_day_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->first_day_cached(), target);
  }

  // optional uint32 days_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->days_cached(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUGSGetGlobalStats)
  return target;
}

size_t CMsgClientUGSGetGlobalStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUGSGetGlobalStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 gameid = 1;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gameid());
    }

    // optional uint32 history_days_requested = 2;
    if (has_history_days_requested()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->history_days_requested());
    }

    // optional fixed32 time_last_requested = 3;
    if (has_time_last_requested()) {
      total_size += 1 + 4;
    }

    // optional uint32 first_day_cached = 4;
    if (has_first_day_cached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->first_day_cached());
    }

    // optional uint32 days_cached = 5;
    if (has_days_cached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days_cached());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUGSGetGlobalStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUGSGetGlobalStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUGSGetGlobalStats)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStats::MergeFrom(const CMsgClientUGSGetGlobalStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUGSGetGlobalStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00000002u) {
      history_days_requested_ = from.history_days_requested_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_last_requested_ = from.time_last_requested_;
    }
    if (cached_has_bits & 0x00000008u) {
      first_day_cached_ = from.first_day_cached_;
    }
    if (cached_has_bits & 0x00000010u) {
      days_cached_ = from.days_cached_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUGSGetGlobalStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStats::CopyFrom(const CMsgClientUGSGetGlobalStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUGSGetGlobalStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStats::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStats::Swap(CMsgClientUGSGetGlobalStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStats::InternalSwap(CMsgClientUGSGetGlobalStats* other) {
  using std::swap;
  swap(gameid_, other->gameid_);
  swap(history_days_requested_, other->history_days_requested_);
  swap(time_last_requested_, other->time_last_requested_);
  swap(first_day_cached_, other->first_day_cached_);
  swap(days_cached_, other->days_cached_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse_Day_Stat::kStatIdFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse_Day_Stat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CMsgClientUGSGetGlobalStatsResponse_Day_Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}
CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CMsgClientUGSGetGlobalStatsResponse_Day_Stat(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_, &from.data_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_id_) -
    reinterpret_cast<char*>(&data_)) + sizeof(stat_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(stat_id_));
}

CMsgClientUGSGetGlobalStatsResponse_Day_Stat::~CMsgClientUGSGetGlobalStatsResponse_Day_Stat() {
  // @@protoc_insertion_point(destructor:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day_Stat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&data_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_id_) -
        reinterpret_cast<char*>(&data_)) + sizeof(stat_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stat_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stat_id(), output);
  }

  // optional int64 data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stat_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stat_id(), target);
  }

  // optional int64 data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse_Day_Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->data());
    }

    // optional int32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stat_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse_Day_Stat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStatsResponse_Day_Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      data_ = from.data_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_id_ = from.stat_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::Swap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(stat_id_, other->stat_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse_Day_Stat::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStatsResponse_Day::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse_Day::kDayIdFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse_Day::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse_Day::CMsgClientUGSGetGlobalStatsResponse_Day()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUGSGetGlobalStatsResponse.Day)
}
CMsgClientUGSGetGlobalStatsResponse_Day::CMsgClientUGSGetGlobalStatsResponse_Day(const CMsgClientUGSGetGlobalStatsResponse_Day& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  day_id_ = from.day_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUGSGetGlobalStatsResponse.Day)
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SharedCtor() {
  day_id_ = 0u;
}

CMsgClientUGSGetGlobalStatsResponse_Day::~CMsgClientUGSGetGlobalStatsResponse_Day() {
  // @@protoc_insertion_point(destructor:CMsgClientUGSGetGlobalStatsResponse.Day)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStatsResponse_Day::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse_Day::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStatsResponse_Day::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  day_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStatsResponse_Day::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 day_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_day_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUGSGetGlobalStatsResponse.Day)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUGSGetGlobalStatsResponse.Day)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 day_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day_id(), output);
  }

  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUGSGetGlobalStatsResponse.Day)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse_Day::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 day_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day_id(), target);
  }

  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stats(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUGSGetGlobalStatsResponse.Day)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse_Day::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // optional uint32 day_id = 1;
  if (has_day_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->day_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse_Day* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStatsResponse_Day>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUGSGetGlobalStatsResponse.Day)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUGSGetGlobalStatsResponse.Day)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_day_id()) {
    set_day_id(from.day_id());
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse_Day::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUGSGetGlobalStatsResponse.Day)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse_Day::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::Swap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse_Day::InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
  using std::swap;
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  swap(day_id_, other->day_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse_Day::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse::kEresultFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kTimestampFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kDayCurrentFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse::CMsgClientUGSGetGlobalStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUGSGetGlobalStatsResponse)
}
CMsgClientUGSGetGlobalStatsResponse::CMsgClientUGSGetGlobalStatsResponse(const CMsgClientUGSGetGlobalStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      days_(from.days_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUGSGetGlobalStatsResponse)
}

void CMsgClientUGSGetGlobalStatsResponse::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_current_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(day_current_));
  eresult_ = 2;
}

CMsgClientUGSGetGlobalStatsResponse::~CMsgClientUGSGetGlobalStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUGSGetGlobalStatsResponse)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStatsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStatsResponse& CMsgClientUGSGetGlobalStatsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUGSGetGlobalStatsResponse.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  days_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&day_current_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(day_current_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUGSGetGlobalStatsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 day_current = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_day_current();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_days()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUGSGetGlobalStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUGSGetGlobalStatsResponse)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed32 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->timestamp(), output);
  }

  // optional int32 day_current = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day_current(), output);
  }

  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->days_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->days(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUGSGetGlobalStatsResponse)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed32 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->timestamp(), target);
  }

  // optional int32 day_current = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day_current(), target);
  }

  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->days_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->days(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUGSGetGlobalStatsResponse)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUGSGetGlobalStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->days_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->days(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed32 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

    // optional int32 day_current = 3;
    if (has_day_current()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_current());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUGSGetGlobalStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUGSGetGlobalStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUGSGetGlobalStatsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUGSGetGlobalStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  days_.MergeFrom(from.days_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      day_current_ = from.day_current_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUGSGetGlobalStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUGSGetGlobalStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse::Swap(CMsgClientUGSGetGlobalStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse::InternalSwap(CMsgClientUGSGetGlobalStatsResponse* other) {
  using std::swap;
  CastToBase(&days_)->InternalSwap(CastToBase(&other->days_));
  swap(timestamp_, other->timestamp_);
  swap(day_current_, other->day_current_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerData_Player::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerData_Player::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerData_Player::CMsgGameServerData_Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerData_Player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerData.Player)
}
CMsgGameServerData_Player::CMsgGameServerData_Player(const CMsgGameServerData_Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerData.Player)
}

void CMsgGameServerData_Player::SharedCtor() {
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGameServerData_Player::~CMsgGameServerData_Player() {
  // @@protoc_insertion_point(destructor:CMsgGameServerData.Player)
  SharedDtor();
}

void CMsgGameServerData_Player::SharedDtor() {
}

void CMsgGameServerData_Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameServerData_Player::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerData_Player& CMsgGameServerData_Player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerData_Player.base);
  return *internal_default_instance();
}


void CMsgGameServerData_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerData_Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerData.Player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerData.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerData.Player)
  return false;
#undef DO_
}

void CMsgGameServerData_Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerData.Player)
}

::google::protobuf::uint8* CMsgGameServerData_Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerData.Player)
  return target;
}

size_t CMsgGameServerData_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerData.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerData_Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerData.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerData_Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerData_Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerData.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerData.Player)
    MergeFrom(*source);
  }
}

void CMsgGameServerData_Player::MergeFrom(const CMsgGameServerData_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerData.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgGameServerData_Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerData.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerData_Player::CopyFrom(const CMsgGameServerData_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerData.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerData_Player::IsInitialized() const {
  return true;
}

void CMsgGameServerData_Player::Swap(CMsgGameServerData_Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerData_Player::InternalSwap(CMsgGameServerData_Player* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameServerData_Player::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerData::kSteamIdGsFieldNumber;
const int CMsgGameServerData::kIpFieldNumber;
const int CMsgGameServerData::kQueryPortFieldNumber;
const int CMsgGameServerData::kGamePortFieldNumber;
const int CMsgGameServerData::kSourcetvPortFieldNumber;
const int CMsgGameServerData::kNameFieldNumber;
const int CMsgGameServerData::kAppIdFieldNumber;
const int CMsgGameServerData::kGamedirFieldNumber;
const int CMsgGameServerData::kVersionFieldNumber;
const int CMsgGameServerData::kProductFieldNumber;
const int CMsgGameServerData::kRegionFieldNumber;
const int CMsgGameServerData::kPlayersFieldNumber;
const int CMsgGameServerData::kMaxPlayersFieldNumber;
const int CMsgGameServerData::kBotCountFieldNumber;
const int CMsgGameServerData::kPasswordFieldNumber;
const int CMsgGameServerData::kSecureFieldNumber;
const int CMsgGameServerData::kDedicatedFieldNumber;
const int CMsgGameServerData::kOsFieldNumber;
const int CMsgGameServerData::kGameDataFieldNumber;
const int CMsgGameServerData::kGameDataVersionFieldNumber;
const int CMsgGameServerData::kGameTypeFieldNumber;
const int CMsgGameServerData::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerData::CMsgGameServerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerData)
}
CMsgGameServerData::CMsgGameServerData(const CMsgGameServerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamedir()) {
    gamedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedir_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product()) {
    product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region()) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os()) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data()) {
    game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
  }
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_type()) {
    game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
  }
  map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_map()) {
    map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_data_version_) -
    reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(game_data_version_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerData)
}

void CMsgGameServerData::SharedCtor() {
  gamedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_data_version_) -
      reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(game_data_version_));
}

CMsgGameServerData::~CMsgGameServerData() {
  // @@protoc_insertion_point(destructor:CMsgGameServerData)
  SharedDtor();
}

void CMsgGameServerData::SharedDtor() {
  gamedir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameServerData::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerData& CMsgGameServerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerData.base);
  return *internal_default_instance();
}


void CMsgGameServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      gamedir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      product_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      region_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      os_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      game_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      game_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      map_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 65024u) {
    ::memset(&steam_id_gs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_players_) -
        reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(max_players_));
  }
  if (cached_has_bits & 2031616u) {
    ::memset(&bot_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_data_version_) -
        reinterpret_cast<char*>(&bot_count_)) + sizeof(game_data_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_gs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_query_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sourcetv_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_sourcetv_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourcetv_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gamedir = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamedir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamedir().data(), static_cast<int>(this->gamedir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.gamedir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string product = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product().data(), static_cast<int>(this->product().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.product");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.region");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgGameServerData.Player players = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_players = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_max_players();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bot_count = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_bot_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bot_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool password = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_password();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &password_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool secure = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_secure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dedicated = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_dedicated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dedicated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string os = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.os");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_data = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_data().data(), static_cast<int>(this->game_data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.game_data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_data_version = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_game_data_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_type().data(), static_cast<int>(this->game_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.game_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string map = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map().data(), static_cast<int>(this->map().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.map");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerData)
  return false;
#undef DO_
}

void CMsgGameServerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_gs(), output);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip(), output);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->query_port(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional uint32 sourcetv_port = 5;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sourcetv_port(), output);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_id(), output);
  }

  // optional string gamedir = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamedir().data(), static_cast<int>(this->gamedir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.gamedir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->gamedir(), output);
  }

  // optional string version = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->version(), output);
  }

  // optional string product = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), static_cast<int>(this->product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->product(), output);
  }

  // optional string region = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->region(), output);
  }

  // repeated .CMsgGameServerData.Player players = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->players(static_cast<int>(i)),
      output);
  }

  // optional uint32 max_players = 12;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->max_players(), output);
  }

  // optional uint32 bot_count = 13;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->bot_count(), output);
  }

  // optional bool password = 14;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->password(), output);
  }

  // optional bool secure = 15;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->secure(), output);
  }

  // optional bool dedicated = 16;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->dedicated(), output);
  }

  // optional string os = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->os(), output);
  }

  // optional string game_data = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_data().data(), static_cast<int>(this->game_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.game_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->game_data(), output);
  }

  // optional uint32 game_data_version = 19;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->game_data_version(), output);
  }

  // optional string game_type = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), static_cast<int>(this->game_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.game_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->game_type(), output);
  }

  // optional string map = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map().data(), static_cast<int>(this->map().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.map");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->map(), output);
  }

  // optional string name = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerData)
}

::google::protobuf::uint8* CMsgGameServerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_gs(), target);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip(), target);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->query_port(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional uint32 sourcetv_port = 5;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sourcetv_port(), target);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_id(), target);
  }

  // optional string gamedir = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamedir().data(), static_cast<int>(this->gamedir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.gamedir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->gamedir(), target);
  }

  // optional string version = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->version(), target);
  }

  // optional string product = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), static_cast<int>(this->product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->product(), target);
  }

  // optional string region = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->region(), target);
  }

  // repeated .CMsgGameServerData.Player players = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->players(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 max_players = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->max_players(), target);
  }

  // optional uint32 bot_count = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->bot_count(), target);
  }

  // optional bool password = 14;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->password(), target);
  }

  // optional bool secure = 15;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->secure(), target);
  }

  // optional bool dedicated = 16;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->dedicated(), target);
  }

  // optional string os = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->os(), target);
  }

  // optional string game_data = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_data().data(), static_cast<int>(this->game_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.game_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->game_data(), target);
  }

  // optional uint32 game_data_version = 19;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->game_data_version(), target);
  }

  // optional string game_type = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), static_cast<int>(this->game_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.game_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->game_type(), target);
  }

  // optional string map = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map().data(), static_cast<int>(this->map().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.map");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->map(), target);
  }

  // optional string name = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerData)
  return target;
}

size_t CMsgGameServerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGameServerData.Player players = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string gamedir = 7;
    if (has_gamedir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamedir());
    }

    // optional string version = 8;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string product = 9;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product());
    }

    // optional string region = 10;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region());
    }

    // optional string os = 17;
    if (has_os()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os());
    }

    // optional string game_data = 18;
    if (has_game_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_data());
    }

    // optional string game_type = 20;
    if (has_game_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_type());
    }

    // optional string map = 21;
    if (has_map()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->map());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string name = 22;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional fixed64 steam_id_gs = 1;
    if (has_steam_id_gs()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional uint32 query_port = 3;
    if (has_query_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

    // optional uint32 game_port = 4;
    if (has_game_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

    // optional uint32 sourcetv_port = 5;
    if (has_sourcetv_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sourcetv_port());
    }

    // optional uint32 app_id = 6;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 max_players = 12;
    if (has_max_players()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_players());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional uint32 bot_count = 13;
    if (has_bot_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bot_count());
    }

    // optional bool password = 14;
    if (has_password()) {
      total_size += 1 + 1;
    }

    // optional bool secure = 15;
    if (has_secure()) {
      total_size += 1 + 1;
    }

    // optional bool dedicated = 16;
    if (has_dedicated()) {
      total_size += 2 + 1;
    }

    // optional uint32 game_data_version = 19;
    if (has_game_data_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_data_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerData)
    MergeFrom(*source);
  }
}

void CMsgGameServerData::MergeFrom(const CMsgGameServerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gamedir();
      gamedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedir_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_product();
      product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_region();
      region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_os();
      os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_game_data();
      game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_game_type();
      game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_map();
      map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000200u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000400u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000800u) {
      query_port_ = from.query_port_;
    }
    if (cached_has_bits & 0x00001000u) {
      game_port_ = from.game_port_;
    }
    if (cached_has_bits & 0x00002000u) {
      sourcetv_port_ = from.sourcetv_port_;
    }
    if (cached_has_bits & 0x00004000u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      max_players_ = from.max_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      bot_count_ = from.bot_count_;
    }
    if (cached_has_bits & 0x00020000u) {
      password_ = from.password_;
    }
    if (cached_has_bits & 0x00040000u) {
      secure_ = from.secure_;
    }
    if (cached_has_bits & 0x00080000u) {
      dedicated_ = from.dedicated_;
    }
    if (cached_has_bits & 0x00100000u) {
      game_data_version_ = from.game_data_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerData::CopyFrom(const CMsgGameServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerData::IsInitialized() const {
  return true;
}

void CMsgGameServerData::Swap(CMsgGameServerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerData::InternalSwap(CMsgGameServerData* other) {
  using std::swap;
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  gamedir_.Swap(&other->gamedir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  product_.Swap(&other->product_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_data_.Swap(&other->game_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_type_.Swap(&other->game_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  map_.Swap(&other->map_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_gs_, other->steam_id_gs_);
  swap(ip_, other->ip_);
  swap(query_port_, other->query_port_);
  swap(game_port_, other->game_port_);
  swap(sourcetv_port_, other->sourcetv_port_);
  swap(app_id_, other->app_id_);
  swap(max_players_, other->max_players_);
  swap(bot_count_, other->bot_count_);
  swap(password_, other->password_);
  swap(secure_, other->secure_);
  swap(dedicated_, other->dedicated_);
  swap(game_data_version_, other->game_data_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameServerData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerRemove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerRemove::kSteamIdFieldNumber;
const int CMsgGameServerRemove::kIpFieldNumber;
const int CMsgGameServerRemove::kQueryPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerRemove::CMsgGameServerRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerRemove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerRemove)
}
CMsgGameServerRemove::CMsgGameServerRemove(const CMsgGameServerRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_port_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(query_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerRemove)
}

void CMsgGameServerRemove::SharedCtor() {
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_port_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(query_port_));
}

CMsgGameServerRemove::~CMsgGameServerRemove() {
  // @@protoc_insertion_point(destructor:CMsgGameServerRemove)
  SharedDtor();
}

void CMsgGameServerRemove::SharedDtor() {
}

void CMsgGameServerRemove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameServerRemove::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerRemove& CMsgGameServerRemove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerRemove.base);
  return *internal_default_instance();
}


void CMsgGameServerRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&query_port_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(query_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerRemove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_query_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerRemove)
  return false;
#undef DO_
}

void CMsgGameServerRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip(), output);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->query_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerRemove)
}

::google::protobuf::uint8* CMsgGameServerRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip(), target);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->query_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerRemove)
  return target;
}

size_t CMsgGameServerRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerRemove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional uint32 query_port = 3;
    if (has_query_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerRemove)
    MergeFrom(*source);
  }
}

void CMsgGameServerRemove::MergeFrom(const CMsgGameServerRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000004u) {
      query_port_ = from.query_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerRemove::CopyFrom(const CMsgGameServerRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerRemove::IsInitialized() const {
  return true;
}

void CMsgGameServerRemove::Swap(CMsgGameServerRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerRemove::InternalSwap(CMsgGameServerRemove* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(ip_, other->ip_);
  swap(query_port_, other->query_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameServerRemove::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGMSServerQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGMSServerQuery::kAppIdFieldNumber;
const int CMsgClientGMSServerQuery::kGeoLocationIpFieldNumber;
const int CMsgClientGMSServerQuery::kRegionCodeFieldNumber;
const int CMsgClientGMSServerQuery::kFilterTextFieldNumber;
const int CMsgClientGMSServerQuery::kMaxServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGMSServerQuery::CMsgClientGMSServerQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGMSServerQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGMSServerQuery)
}
CMsgClientGMSServerQuery::CMsgClientGMSServerQuery(const CMsgClientGMSServerQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filter_text()) {
    filter_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_text_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_servers_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(max_servers_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGMSServerQuery)
}

void CMsgClientGMSServerQuery::SharedCtor() {
  filter_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_servers_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(max_servers_));
}

CMsgClientGMSServerQuery::~CMsgClientGMSServerQuery() {
  // @@protoc_insertion_point(destructor:CMsgClientGMSServerQuery)
  SharedDtor();
}

void CMsgClientGMSServerQuery::SharedDtor() {
  filter_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGMSServerQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGMSServerQuery::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGMSServerQuery& CMsgClientGMSServerQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGMSServerQuery.base);
  return *internal_default_instance();
}


void CMsgClientGMSServerQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filter_text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_servers_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(max_servers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGMSServerQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGMSServerQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 geo_location_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_geo_location_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geo_location_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 region_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_region_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filter_text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter_text().data(), static_cast<int>(this->filter_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGMSServerQuery.filter_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_servers = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_max_servers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_servers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGMSServerQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGMSServerQuery)
  return false;
#undef DO_
}

void CMsgClientGMSServerQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 geo_location_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->geo_location_ip(), output);
  }

  // optional uint32 region_code = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->region_code(), output);
  }

  // optional string filter_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_text().data(), static_cast<int>(this->filter_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGMSServerQuery.filter_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filter_text(), output);
  }

  // optional uint32 max_servers = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->max_servers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGMSServerQuery)
}

::google::protobuf::uint8* CMsgClientGMSServerQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 geo_location_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->geo_location_ip(), target);
  }

  // optional uint32 region_code = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->region_code(), target);
  }

  // optional string filter_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_text().data(), static_cast<int>(this->filter_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGMSServerQuery.filter_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filter_text(), target);
  }

  // optional uint32 max_servers = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->max_servers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGMSServerQuery)
  return target;
}

size_t CMsgClientGMSServerQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGMSServerQuery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string filter_text = 4;
    if (has_filter_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filter_text());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 geo_location_ip = 2;
    if (has_geo_location_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->geo_location_ip());
    }

    // optional uint32 region_code = 3;
    if (has_region_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->region_code());
    }

    // optional uint32 max_servers = 5;
    if (has_max_servers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_servers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGMSServerQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGMSServerQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGMSServerQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGMSServerQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGMSServerQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGMSServerQuery)
    MergeFrom(*source);
  }
}

void CMsgClientGMSServerQuery::MergeFrom(const CMsgClientGMSServerQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGMSServerQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filter_text();
      filter_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      geo_location_ip_ = from.geo_location_ip_;
    }
    if (cached_has_bits & 0x00000008u) {
      region_code_ = from.region_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_servers_ = from.max_servers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGMSServerQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGMSServerQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGMSServerQuery::CopyFrom(const CMsgClientGMSServerQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGMSServerQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGMSServerQuery::IsInitialized() const {
  return true;
}

void CMsgClientGMSServerQuery::Swap(CMsgClientGMSServerQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGMSServerQuery::InternalSwap(CMsgClientGMSServerQuery* other) {
  using std::swap;
  filter_text_.Swap(&other->filter_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(geo_location_ip_, other->geo_location_ip_);
  swap(region_code_, other->region_code_);
  swap(max_servers_, other->max_servers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGMSServerQuery::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGMSClientServerQueryResponse_Server::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGMSClientServerQueryResponse_Server::kServerIpFieldNumber;
const int CMsgGMSClientServerQueryResponse_Server::kServerPortFieldNumber;
const int CMsgGMSClientServerQueryResponse_Server::kAuthPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGMSClientServerQueryResponse_Server::CMsgGMSClientServerQueryResponse_Server()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGMSClientServerQueryResponse_Server.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGMSClientServerQueryResponse.Server)
}
CMsgGMSClientServerQueryResponse_Server::CMsgGMSClientServerQueryResponse_Server(const CMsgGMSClientServerQueryResponse_Server& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_ip_, &from.server_ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_players_) -
    reinterpret_cast<char*>(&server_ip_)) + sizeof(auth_players_));
  // @@protoc_insertion_point(copy_constructor:CMsgGMSClientServerQueryResponse.Server)
}

void CMsgGMSClientServerQueryResponse_Server::SharedCtor() {
  ::memset(&server_ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_players_) -
      reinterpret_cast<char*>(&server_ip_)) + sizeof(auth_players_));
}

CMsgGMSClientServerQueryResponse_Server::~CMsgGMSClientServerQueryResponse_Server() {
  // @@protoc_insertion_point(destructor:CMsgGMSClientServerQueryResponse.Server)
  SharedDtor();
}

void CMsgGMSClientServerQueryResponse_Server::SharedDtor() {
}

void CMsgGMSClientServerQueryResponse_Server::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGMSClientServerQueryResponse_Server::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGMSClientServerQueryResponse_Server& CMsgGMSClientServerQueryResponse_Server::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGMSClientServerQueryResponse_Server.base);
  return *internal_default_instance();
}


void CMsgGMSClientServerQueryResponse_Server::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&server_ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_players_) -
        reinterpret_cast<char*>(&server_ip_)) + sizeof(auth_players_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGMSClientServerQueryResponse_Server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGMSClientServerQueryResponse.Server)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_auth_players();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGMSClientServerQueryResponse.Server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGMSClientServerQueryResponse.Server)
  return false;
#undef DO_
}

void CMsgGMSClientServerQueryResponse_Server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_ip(), output);
  }

  // optional uint32 server_port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_port(), output);
  }

  // optional uint32 auth_players = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->auth_players(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGMSClientServerQueryResponse.Server)
}

::google::protobuf::uint8* CMsgGMSClientServerQueryResponse_Server::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_ip(), target);
  }

  // optional uint32 server_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_port(), target);
  }

  // optional uint32 auth_players = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->auth_players(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGMSClientServerQueryResponse.Server)
  return target;
}

size_t CMsgGMSClientServerQueryResponse_Server::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGMSClientServerQueryResponse.Server)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 server_ip = 1;
    if (has_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_ip());
    }

    // optional uint32 server_port = 2;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 auth_players = 3;
    if (has_auth_players()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_players());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGMSClientServerQueryResponse_Server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGMSClientServerQueryResponse.Server)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGMSClientServerQueryResponse_Server* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGMSClientServerQueryResponse_Server>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGMSClientServerQueryResponse.Server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGMSClientServerQueryResponse.Server)
    MergeFrom(*source);
  }
}

void CMsgGMSClientServerQueryResponse_Server::MergeFrom(const CMsgGMSClientServerQueryResponse_Server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGMSClientServerQueryResponse.Server)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      server_ip_ = from.server_ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      server_port_ = from.server_port_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_players_ = from.auth_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGMSClientServerQueryResponse_Server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGMSClientServerQueryResponse.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGMSClientServerQueryResponse_Server::CopyFrom(const CMsgGMSClientServerQueryResponse_Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGMSClientServerQueryResponse.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGMSClientServerQueryResponse_Server::IsInitialized() const {
  return true;
}

void CMsgGMSClientServerQueryResponse_Server::Swap(CMsgGMSClientServerQueryResponse_Server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGMSClientServerQueryResponse_Server::InternalSwap(CMsgGMSClientServerQueryResponse_Server* other) {
  using std::swap;
  swap(server_ip_, other->server_ip_);
  swap(server_port_, other->server_port_);
  swap(auth_players_, other->auth_players_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGMSClientServerQueryResponse_Server::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGMSClientServerQueryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGMSClientServerQueryResponse::kServersFieldNumber;
const int CMsgGMSClientServerQueryResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGMSClientServerQueryResponse::CMsgGMSClientServerQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGMSClientServerQueryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGMSClientServerQueryResponse)
}
CMsgGMSClientServerQueryResponse::CMsgGMSClientServerQueryResponse(const CMsgGMSClientServerQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGMSClientServerQueryResponse)
}

void CMsgGMSClientServerQueryResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGMSClientServerQueryResponse::~CMsgGMSClientServerQueryResponse() {
  // @@protoc_insertion_point(destructor:CMsgGMSClientServerQueryResponse)
  SharedDtor();
}

void CMsgGMSClientServerQueryResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGMSClientServerQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGMSClientServerQueryResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGMSClientServerQueryResponse& CMsgGMSClientServerQueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGMSClientServerQueryResponse.base);
  return *internal_default_instance();
}


void CMsgGMSClientServerQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGMSClientServerQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGMSClientServerQueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGMSClientServerQueryResponse.Server servers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGMSClientServerQueryResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGMSClientServerQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGMSClientServerQueryResponse)
  return false;
#undef DO_
}

void CMsgGMSClientServerQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGMSClientServerQueryResponse.Server servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->servers(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGMSClientServerQueryResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGMSClientServerQueryResponse)
}

::google::protobuf::uint8* CMsgGMSClientServerQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGMSClientServerQueryResponse.Server servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->servers(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGMSClientServerQueryResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGMSClientServerQueryResponse)
  return target;
}

size_t CMsgGMSClientServerQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGMSClientServerQueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGMSClientServerQueryResponse.Server servers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->servers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servers(static_cast<int>(i)));
    }
  }

  // optional string error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGMSClientServerQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGMSClientServerQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGMSClientServerQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGMSClientServerQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGMSClientServerQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGMSClientServerQueryResponse)
    MergeFrom(*source);
  }
}

void CMsgGMSClientServerQueryResponse::MergeFrom(const CMsgGMSClientServerQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGMSClientServerQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void CMsgGMSClientServerQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGMSClientServerQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGMSClientServerQueryResponse::CopyFrom(const CMsgGMSClientServerQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGMSClientServerQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGMSClientServerQueryResponse::IsInitialized() const {
  return true;
}

void CMsgGMSClientServerQueryResponse::Swap(CMsgGMSClientServerQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGMSClientServerQueryResponse::InternalSwap(CMsgGMSClientServerQueryResponse* other) {
  using std::swap;
  CastToBase(&servers_)->InternalSwap(CastToBase(&other->servers_));
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGMSClientServerQueryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerOutOfDate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerOutOfDate::kSteamIdGsFieldNumber;
const int CMsgGameServerOutOfDate::kRejectFieldNumber;
const int CMsgGameServerOutOfDate::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerOutOfDate::CMsgGameServerOutOfDate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerOutOfDate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerOutOfDate)
}
CMsgGameServerOutOfDate::CMsgGameServerOutOfDate(const CMsgGameServerOutOfDate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    static_cast<size_t>(reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(reject_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerOutOfDate)
}

void CMsgGameServerOutOfDate::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(reject_));
}

CMsgGameServerOutOfDate::~CMsgGameServerOutOfDate() {
  // @@protoc_insertion_point(destructor:CMsgGameServerOutOfDate)
  SharedDtor();
}

void CMsgGameServerOutOfDate::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerOutOfDate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameServerOutOfDate::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerOutOfDate& CMsgGameServerOutOfDate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerOutOfDate.base);
  return *internal_default_instance();
}


void CMsgGameServerOutOfDate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steam_id_gs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reject_) -
        reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(reject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerOutOfDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerOutOfDate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_gs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_reject();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerOutOfDate.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerOutOfDate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerOutOfDate)
  return false;
#undef DO_
}

void CMsgGameServerOutOfDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_gs(), output);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reject(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerOutOfDate.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerOutOfDate)
}

::google::protobuf::uint8* CMsgGameServerOutOfDate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_gs(), target);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reject(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerOutOfDate.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerOutOfDate)
  return target;
}

size_t CMsgGameServerOutOfDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerOutOfDate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional fixed64 steam_id_gs = 1;
    if (has_steam_id_gs()) {
      total_size += 1 + 8;
    }

    // optional bool reject = 2;
    if (has_reject()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerOutOfDate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerOutOfDate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerOutOfDate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerOutOfDate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerOutOfDate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerOutOfDate)
    MergeFrom(*source);
  }
}

void CMsgGameServerOutOfDate::MergeFrom(const CMsgGameServerOutOfDate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerOutOfDate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000004u) {
      reject_ = from.reject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerOutOfDate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerOutOfDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerOutOfDate::CopyFrom(const CMsgGameServerOutOfDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerOutOfDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerOutOfDate::IsInitialized() const {
  return true;
}

void CMsgGameServerOutOfDate::Swap(CMsgGameServerOutOfDate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerOutOfDate::InternalSwap(CMsgGameServerOutOfDate* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_gs_, other->steam_id_gs_);
  swap(reject_, other->reject_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameServerOutOfDate::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRedeemGuestPass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRedeemGuestPass::kGuestPassIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRedeemGuestPass::CMsgClientRedeemGuestPass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRedeemGuestPass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRedeemGuestPass)
}
CMsgClientRedeemGuestPass::CMsgClientRedeemGuestPass(const CMsgClientRedeemGuestPass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guest_pass_id_ = from.guest_pass_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRedeemGuestPass)
}

void CMsgClientRedeemGuestPass::SharedCtor() {
  guest_pass_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientRedeemGuestPass::~CMsgClientRedeemGuestPass() {
  // @@protoc_insertion_point(destructor:CMsgClientRedeemGuestPass)
  SharedDtor();
}

void CMsgClientRedeemGuestPass::SharedDtor() {
}

void CMsgClientRedeemGuestPass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRedeemGuestPass::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRedeemGuestPass& CMsgClientRedeemGuestPass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRedeemGuestPass.base);
  return *internal_default_instance();
}


void CMsgClientRedeemGuestPass::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guest_pass_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRedeemGuestPass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRedeemGuestPass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 guest_pass_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_guest_pass_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &guest_pass_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRedeemGuestPass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRedeemGuestPass)
  return false;
#undef DO_
}

void CMsgClientRedeemGuestPass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 guest_pass_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->guest_pass_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRedeemGuestPass)
}

::google::protobuf::uint8* CMsgClientRedeemGuestPass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 guest_pass_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->guest_pass_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRedeemGuestPass)
  return target;
}

size_t CMsgClientRedeemGuestPass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRedeemGuestPass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 guest_pass_id = 1;
  if (has_guest_pass_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRedeemGuestPass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRedeemGuestPass)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRedeemGuestPass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRedeemGuestPass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRedeemGuestPass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRedeemGuestPass)
    MergeFrom(*source);
  }
}

void CMsgClientRedeemGuestPass::MergeFrom(const CMsgClientRedeemGuestPass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRedeemGuestPass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guest_pass_id()) {
    set_guest_pass_id(from.guest_pass_id());
  }
}

void CMsgClientRedeemGuestPass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRedeemGuestPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRedeemGuestPass::CopyFrom(const CMsgClientRedeemGuestPass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRedeemGuestPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRedeemGuestPass::IsInitialized() const {
  return true;
}

void CMsgClientRedeemGuestPass::Swap(CMsgClientRedeemGuestPass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRedeemGuestPass::InternalSwap(CMsgClientRedeemGuestPass* other) {
  using std::swap;
  swap(guest_pass_id_, other->guest_pass_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRedeemGuestPass::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRedeemGuestPassResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRedeemGuestPassResponse::kEresultFieldNumber;
const int CMsgClientRedeemGuestPassResponse::kPackageIdFieldNumber;
const int CMsgClientRedeemGuestPassResponse::kMustOwnAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRedeemGuestPassResponse::CMsgClientRedeemGuestPassResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRedeemGuestPassResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRedeemGuestPassResponse)
}
CMsgClientRedeemGuestPassResponse::CMsgClientRedeemGuestPassResponse(const CMsgClientRedeemGuestPassResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&package_id_, &from.package_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&package_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRedeemGuestPassResponse)
}

void CMsgClientRedeemGuestPassResponse::SharedCtor() {
  ::memset(&package_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&must_own_appid_) -
      reinterpret_cast<char*>(&package_id_)) + sizeof(must_own_appid_));
  eresult_ = 2u;
}

CMsgClientRedeemGuestPassResponse::~CMsgClientRedeemGuestPassResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRedeemGuestPassResponse)
  SharedDtor();
}

void CMsgClientRedeemGuestPassResponse::SharedDtor() {
}

void CMsgClientRedeemGuestPassResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRedeemGuestPassResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRedeemGuestPassResponse& CMsgClientRedeemGuestPassResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRedeemGuestPassResponse.base);
  return *internal_default_instance();
}


void CMsgClientRedeemGuestPassResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&package_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&must_own_appid_) -
        reinterpret_cast<char*>(&package_id_)) + sizeof(must_own_appid_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRedeemGuestPassResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRedeemGuestPassResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 must_own_appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_must_own_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &must_own_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRedeemGuestPassResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRedeemGuestPassResponse)
  return false;
#undef DO_
}

void CMsgClientRedeemGuestPassResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->package_id(), output);
  }

  // optional uint32 must_own_appid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->must_own_appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRedeemGuestPassResponse)
}

::google::protobuf::uint8* CMsgClientRedeemGuestPassResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->package_id(), target);
  }

  // optional uint32 must_own_appid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->must_own_appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRedeemGuestPassResponse)
  return target;
}

size_t CMsgClientRedeemGuestPassResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRedeemGuestPassResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 package_id = 2;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional uint32 must_own_appid = 3;
    if (has_must_own_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->must_own_appid());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRedeemGuestPassResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRedeemGuestPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRedeemGuestPassResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRedeemGuestPassResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRedeemGuestPassResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRedeemGuestPassResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRedeemGuestPassResponse::MergeFrom(const CMsgClientRedeemGuestPassResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRedeemGuestPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      must_own_appid_ = from.must_own_appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRedeemGuestPassResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRedeemGuestPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRedeemGuestPassResponse::CopyFrom(const CMsgClientRedeemGuestPassResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRedeemGuestPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRedeemGuestPassResponse::IsInitialized() const {
  return true;
}

void CMsgClientRedeemGuestPassResponse::Swap(CMsgClientRedeemGuestPassResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRedeemGuestPassResponse::InternalSwap(CMsgClientRedeemGuestPassResponse* other) {
  using std::swap;
  swap(package_id_, other->package_id_);
  swap(must_own_appid_, other->must_own_appid_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRedeemGuestPassResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClanActivityCounts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClanActivityCounts::kSteamidClansFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClanActivityCounts::CMsgClientGetClanActivityCounts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetClanActivityCounts.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClanActivityCounts)
}
CMsgClientGetClanActivityCounts::CMsgClientGetClanActivityCounts(const CMsgClientGetClanActivityCounts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steamid_clans_(from.steamid_clans_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClanActivityCounts)
}

void CMsgClientGetClanActivityCounts::SharedCtor() {
}

CMsgClientGetClanActivityCounts::~CMsgClientGetClanActivityCounts() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClanActivityCounts)
  SharedDtor();
}

void CMsgClientGetClanActivityCounts::SharedDtor() {
}

void CMsgClientGetClanActivityCounts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClanActivityCounts::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClanActivityCounts& CMsgClientGetClanActivityCounts::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetClanActivityCounts.base);
  return *internal_default_instance();
}


void CMsgClientGetClanActivityCounts::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_clans_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClanActivityCounts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClanActivityCounts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 steamid_clans = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_steamid_clans())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_steamid_clans())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClanActivityCounts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClanActivityCounts)
  return false;
#undef DO_
}

void CMsgClientGetClanActivityCounts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  for (int i = 0, n = this->steamid_clans_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->steamid_clans(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClanActivityCounts)
}

::google::protobuf::uint8* CMsgClientGetClanActivityCounts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->steamid_clans_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClanActivityCounts)
  return target;
}

size_t CMsgClientGetClanActivityCounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClanActivityCounts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 steamid_clans = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->steamid_clans_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_clans_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClanActivityCounts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClanActivityCounts)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClanActivityCounts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClanActivityCounts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClanActivityCounts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClanActivityCounts)
    MergeFrom(*source);
  }
}

void CMsgClientGetClanActivityCounts::MergeFrom(const CMsgClientGetClanActivityCounts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClanActivityCounts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_clans_.MergeFrom(from.steamid_clans_);
}

void CMsgClientGetClanActivityCounts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClanActivityCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClanActivityCounts::CopyFrom(const CMsgClientGetClanActivityCounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClanActivityCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClanActivityCounts::IsInitialized() const {
  return true;
}

void CMsgClientGetClanActivityCounts::Swap(CMsgClientGetClanActivityCounts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClanActivityCounts::InternalSwap(CMsgClientGetClanActivityCounts* other) {
  using std::swap;
  steamid_clans_.InternalSwap(&other->steamid_clans_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClanActivityCounts::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClanActivityCountsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClanActivityCountsResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClanActivityCountsResponse::CMsgClientGetClanActivityCountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetClanActivityCountsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClanActivityCountsResponse)
}
CMsgClientGetClanActivityCountsResponse::CMsgClientGetClanActivityCountsResponse(const CMsgClientGetClanActivityCountsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClanActivityCountsResponse)
}

void CMsgClientGetClanActivityCountsResponse::SharedCtor() {
  eresult_ = 2u;
}

CMsgClientGetClanActivityCountsResponse::~CMsgClientGetClanActivityCountsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClanActivityCountsResponse)
  SharedDtor();
}

void CMsgClientGetClanActivityCountsResponse::SharedDtor() {
}

void CMsgClientGetClanActivityCountsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClanActivityCountsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClanActivityCountsResponse& CMsgClientGetClanActivityCountsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetClanActivityCountsResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetClanActivityCountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClanActivityCountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClanActivityCountsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClanActivityCountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClanActivityCountsResponse)
  return false;
#undef DO_
}

void CMsgClientGetClanActivityCountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClanActivityCountsResponse)
}

::google::protobuf::uint8* CMsgClientGetClanActivityCountsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClanActivityCountsResponse)
  return target;
}

size_t CMsgClientGetClanActivityCountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClanActivityCountsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClanActivityCountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClanActivityCountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClanActivityCountsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClanActivityCountsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClanActivityCountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClanActivityCountsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetClanActivityCountsResponse::MergeFrom(const CMsgClientGetClanActivityCountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClanActivityCountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientGetClanActivityCountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClanActivityCountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClanActivityCountsResponse::CopyFrom(const CMsgClientGetClanActivityCountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClanActivityCountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClanActivityCountsResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetClanActivityCountsResponse::Swap(CMsgClientGetClanActivityCountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClanActivityCountsResponse::InternalSwap(CMsgClientGetClanActivityCountsResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClanActivityCountsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientOGSReportString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOGSReportString::kAccumulatedFieldNumber;
const int CMsgClientOGSReportString::kSessionidFieldNumber;
const int CMsgClientOGSReportString::kSeverityFieldNumber;
const int CMsgClientOGSReportString::kFormatterFieldNumber;
const int CMsgClientOGSReportString::kVarargsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOGSReportString::CMsgClientOGSReportString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientOGSReportString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientOGSReportString)
}
CMsgClientOGSReportString::CMsgClientOGSReportString(const CMsgClientOGSReportString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  formatter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_formatter()) {
    formatter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatter_);
  }
  varargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_varargs()) {
    varargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varargs_);
  }
  ::memcpy(&sessionid_, &from.sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&sessionid_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientOGSReportString)
}

void CMsgClientOGSReportString::SharedCtor() {
  formatter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&sessionid_)) + sizeof(severity_));
}

CMsgClientOGSReportString::~CMsgClientOGSReportString() {
  // @@protoc_insertion_point(destructor:CMsgClientOGSReportString)
  SharedDtor();
}

void CMsgClientOGSReportString::SharedDtor() {
  formatter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varargs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientOGSReportString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientOGSReportString::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientOGSReportString& CMsgClientOGSReportString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientOGSReportString.base);
  return *internal_default_instance();
}


void CMsgClientOGSReportString::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      formatter_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      varargs_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&sessionid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&severity_) -
        reinterpret_cast<char*>(&sessionid_)) + sizeof(severity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientOGSReportString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientOGSReportString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool accumulated = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_accumulated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accumulated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 sessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sessionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 severity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_severity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &severity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string formatter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formatter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->formatter().data(), static_cast<int>(this->formatter().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientOGSReportString.formatter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes varargs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_varargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientOGSReportString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientOGSReportString)
  return false;
#undef DO_
}

void CMsgClientOGSReportString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool accumulated = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->accumulated(), output);
  }

  // optional uint64 sessionid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sessionid(), output);
  }

  // optional int32 severity = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->severity(), output);
  }

  // optional string formatter = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formatter().data(), static_cast<int>(this->formatter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientOGSReportString.formatter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->formatter(), output);
  }

  // optional bytes varargs = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->varargs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientOGSReportString)
}

::google::protobuf::uint8* CMsgClientOGSReportString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool accumulated = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->accumulated(), target);
  }

  // optional uint64 sessionid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sessionid(), target);
  }

  // optional int32 severity = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->severity(), target);
  }

  // optional string formatter = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formatter().data(), static_cast<int>(this->formatter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientOGSReportString.formatter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->formatter(), target);
  }

  // optional bytes varargs = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->varargs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientOGSReportString)
  return target;
}

size_t CMsgClientOGSReportString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientOGSReportString)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string formatter = 4;
    if (has_formatter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->formatter());
    }

    // optional bytes varargs = 5;
    if (has_varargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->varargs());
    }

    // optional uint64 sessionid = 2;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sessionid());
    }

    // optional bool accumulated = 1;
    if (has_accumulated()) {
      total_size += 1 + 1;
    }

    // optional int32 severity = 3;
    if (has_severity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->severity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientOGSReportString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientOGSReportString)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOGSReportString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientOGSReportString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientOGSReportString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientOGSReportString)
    MergeFrom(*source);
  }
}

void CMsgClientOGSReportString::MergeFrom(const CMsgClientOGSReportString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientOGSReportString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_formatter();
      formatter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatter_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_varargs();
      varargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varargs_);
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_ = from.sessionid_;
    }
    if (cached_has_bits & 0x00000008u) {
      accumulated_ = from.accumulated_;
    }
    if (cached_has_bits & 0x00000010u) {
      severity_ = from.severity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientOGSReportString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientOGSReportString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOGSReportString::CopyFrom(const CMsgClientOGSReportString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientOGSReportString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOGSReportString::IsInitialized() const {
  return true;
}

void CMsgClientOGSReportString::Swap(CMsgClientOGSReportString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOGSReportString::InternalSwap(CMsgClientOGSReportString* other) {
  using std::swap;
  formatter_.Swap(&other->formatter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  varargs_.Swap(&other->varargs_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sessionid_, other->sessionid_);
  swap(accumulated_, other->accumulated_);
  swap(severity_, other->severity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientOGSReportString::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientOGSReportBug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOGSReportBug::kSessionidFieldNumber;
const int CMsgClientOGSReportBug::kBugtextFieldNumber;
const int CMsgClientOGSReportBug::kScreenshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOGSReportBug::CMsgClientOGSReportBug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientOGSReportBug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientOGSReportBug)
}
CMsgClientOGSReportBug::CMsgClientOGSReportBug(const CMsgClientOGSReportBug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bugtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bugtext()) {
    bugtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bugtext_);
  }
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenshot()) {
    screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
  }
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientOGSReportBug)
}

void CMsgClientOGSReportBug::SharedCtor() {
  bugtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientOGSReportBug::~CMsgClientOGSReportBug() {
  // @@protoc_insertion_point(destructor:CMsgClientOGSReportBug)
  SharedDtor();
}

void CMsgClientOGSReportBug::SharedDtor() {
  bugtext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenshot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientOGSReportBug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientOGSReportBug::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientOGSReportBug& CMsgClientOGSReportBug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientOGSReportBug.base);
  return *internal_default_instance();
}


void CMsgClientOGSReportBug::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bugtext_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      screenshot_.ClearNonDefaultToEmptyNoArena();
    }
  }
  sessionid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientOGSReportBug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientOGSReportBug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sessionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bugtext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bugtext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bugtext().data(), static_cast<int>(this->bugtext().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientOGSReportBug.bugtext");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes screenshot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_screenshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientOGSReportBug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientOGSReportBug)
  return false;
#undef DO_
}

void CMsgClientOGSReportBug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sessionid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  // optional string bugtext = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bugtext().data(), static_cast<int>(this->bugtext().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientOGSReportBug.bugtext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bugtext(), output);
  }

  // optional bytes screenshot = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->screenshot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientOGSReportBug)
}

::google::protobuf::uint8* CMsgClientOGSReportBug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sessionid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  // optional string bugtext = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bugtext().data(), static_cast<int>(this->bugtext().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientOGSReportBug.bugtext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bugtext(), target);
  }

  // optional bytes screenshot = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->screenshot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientOGSReportBug)
  return target;
}

size_t CMsgClientOGSReportBug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientOGSReportBug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string bugtext = 2;
    if (has_bugtext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bugtext());
    }

    // optional bytes screenshot = 3;
    if (has_screenshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->screenshot());
    }

    // optional uint64 sessionid = 1;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientOGSReportBug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientOGSReportBug)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOGSReportBug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientOGSReportBug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientOGSReportBug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientOGSReportBug)
    MergeFrom(*source);
  }
}

void CMsgClientOGSReportBug::MergeFrom(const CMsgClientOGSReportBug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientOGSReportBug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bugtext();
      bugtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bugtext_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_screenshot();
      screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_ = from.sessionid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientOGSReportBug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientOGSReportBug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOGSReportBug::CopyFrom(const CMsgClientOGSReportBug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientOGSReportBug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOGSReportBug::IsInitialized() const {
  return true;
}

void CMsgClientOGSReportBug::Swap(CMsgClientOGSReportBug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOGSReportBug::InternalSwap(CMsgClientOGSReportBug* other) {
  using std::swap;
  bugtext_.Swap(&other->bugtext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  screenshot_.Swap(&other->screenshot_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sessionid_, other->sessionid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientOGSReportBug::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSAssociateWithClan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSAssociateWithClan::kSteamIdClanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSAssociateWithClan::CMsgGSAssociateWithClan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSAssociateWithClan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSAssociateWithClan)
}
CMsgGSAssociateWithClan::CMsgGSAssociateWithClan(const CMsgGSAssociateWithClan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_clan_ = from.steam_id_clan_;
  // @@protoc_insertion_point(copy_constructor:CMsgGSAssociateWithClan)
}

void CMsgGSAssociateWithClan::SharedCtor() {
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
}

CMsgGSAssociateWithClan::~CMsgGSAssociateWithClan() {
  // @@protoc_insertion_point(destructor:CMsgGSAssociateWithClan)
  SharedDtor();
}

void CMsgGSAssociateWithClan::SharedDtor() {
}

void CMsgGSAssociateWithClan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSAssociateWithClan::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSAssociateWithClan& CMsgGSAssociateWithClan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSAssociateWithClan.base);
  return *internal_default_instance();
}


void CMsgGSAssociateWithClan::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_clan_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSAssociateWithClan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSAssociateWithClan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSAssociateWithClan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSAssociateWithClan)
  return false;
#undef DO_
}

void CMsgGSAssociateWithClan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_clan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSAssociateWithClan)
}

::google::protobuf::uint8* CMsgGSAssociateWithClan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_clan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSAssociateWithClan)
  return target;
}

size_t CMsgGSAssociateWithClan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSAssociateWithClan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id_clan = 1;
  if (has_steam_id_clan()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSAssociateWithClan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSAssociateWithClan)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSAssociateWithClan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSAssociateWithClan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSAssociateWithClan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSAssociateWithClan)
    MergeFrom(*source);
  }
}

void CMsgGSAssociateWithClan::MergeFrom(const CMsgGSAssociateWithClan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSAssociateWithClan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id_clan()) {
    set_steam_id_clan(from.steam_id_clan());
  }
}

void CMsgGSAssociateWithClan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSAssociateWithClan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSAssociateWithClan::CopyFrom(const CMsgGSAssociateWithClan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSAssociateWithClan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSAssociateWithClan::IsInitialized() const {
  return true;
}

void CMsgGSAssociateWithClan::Swap(CMsgGSAssociateWithClan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSAssociateWithClan::InternalSwap(CMsgGSAssociateWithClan* other) {
  using std::swap;
  swap(steam_id_clan_, other->steam_id_clan_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSAssociateWithClan::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSAssociateWithClanResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSAssociateWithClanResponse::kSteamIdClanFieldNumber;
const int CMsgGSAssociateWithClanResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSAssociateWithClanResponse::CMsgGSAssociateWithClanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSAssociateWithClanResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSAssociateWithClanResponse)
}
CMsgGSAssociateWithClanResponse::CMsgGSAssociateWithClanResponse(const CMsgGSAssociateWithClanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_clan_, &from.steam_id_clan_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_clan_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSAssociateWithClanResponse)
}

void CMsgGSAssociateWithClanResponse::SharedCtor() {
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
  eresult_ = 2u;
}

CMsgGSAssociateWithClanResponse::~CMsgGSAssociateWithClanResponse() {
  // @@protoc_insertion_point(destructor:CMsgGSAssociateWithClanResponse)
  SharedDtor();
}

void CMsgGSAssociateWithClanResponse::SharedDtor() {
}

void CMsgGSAssociateWithClanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSAssociateWithClanResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSAssociateWithClanResponse& CMsgGSAssociateWithClanResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSAssociateWithClanResponse.base);
  return *internal_default_instance();
}


void CMsgGSAssociateWithClanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    steam_id_clan_ = GOOGLE_ULONGLONG(0);
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSAssociateWithClanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSAssociateWithClanResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSAssociateWithClanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSAssociateWithClanResponse)
  return false;
#undef DO_
}

void CMsgGSAssociateWithClanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_clan(), output);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSAssociateWithClanResponse)
}

::google::protobuf::uint8* CMsgGSAssociateWithClanResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_clan(), target);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSAssociateWithClanResponse)
  return target;
}

size_t CMsgGSAssociateWithClanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSAssociateWithClanResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id_clan = 1;
    if (has_steam_id_clan()) {
      total_size += 1 + 8;
    }

    // optional uint32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSAssociateWithClanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSAssociateWithClanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSAssociateWithClanResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSAssociateWithClanResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSAssociateWithClanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSAssociateWithClanResponse)
    MergeFrom(*source);
  }
}

void CMsgGSAssociateWithClanResponse::MergeFrom(const CMsgGSAssociateWithClanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSAssociateWithClanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_clan_ = from.steam_id_clan_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSAssociateWithClanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSAssociateWithClanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSAssociateWithClanResponse::CopyFrom(const CMsgGSAssociateWithClanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSAssociateWithClanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSAssociateWithClanResponse::IsInitialized() const {
  return true;
}

void CMsgGSAssociateWithClanResponse::Swap(CMsgGSAssociateWithClanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSAssociateWithClanResponse::InternalSwap(CMsgGSAssociateWithClanResponse* other) {
  using std::swap;
  swap(steam_id_clan_, other->steam_id_clan_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSAssociateWithClanResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSComputeNewPlayerCompatibility::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSComputeNewPlayerCompatibility::kSteamIdCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSComputeNewPlayerCompatibility::CMsgGSComputeNewPlayerCompatibility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSComputeNewPlayerCompatibility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSComputeNewPlayerCompatibility)
}
CMsgGSComputeNewPlayerCompatibility::CMsgGSComputeNewPlayerCompatibility(const CMsgGSComputeNewPlayerCompatibility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_candidate_ = from.steam_id_candidate_;
  // @@protoc_insertion_point(copy_constructor:CMsgGSComputeNewPlayerCompatibility)
}

void CMsgGSComputeNewPlayerCompatibility::SharedCtor() {
  steam_id_candidate_ = GOOGLE_ULONGLONG(0);
}

CMsgGSComputeNewPlayerCompatibility::~CMsgGSComputeNewPlayerCompatibility() {
  // @@protoc_insertion_point(destructor:CMsgGSComputeNewPlayerCompatibility)
  SharedDtor();
}

void CMsgGSComputeNewPlayerCompatibility::SharedDtor() {
}

void CMsgGSComputeNewPlayerCompatibility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSComputeNewPlayerCompatibility::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSComputeNewPlayerCompatibility& CMsgGSComputeNewPlayerCompatibility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSComputeNewPlayerCompatibility.base);
  return *internal_default_instance();
}


void CMsgGSComputeNewPlayerCompatibility::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_candidate_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSComputeNewPlayerCompatibility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSComputeNewPlayerCompatibility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_candidate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_candidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSComputeNewPlayerCompatibility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSComputeNewPlayerCompatibility)
  return false;
#undef DO_
}

void CMsgGSComputeNewPlayerCompatibility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_candidate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSComputeNewPlayerCompatibility)
}

::google::protobuf::uint8* CMsgGSComputeNewPlayerCompatibility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_candidate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSComputeNewPlayerCompatibility)
  return target;
}

size_t CMsgGSComputeNewPlayerCompatibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSComputeNewPlayerCompatibility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id_candidate = 1;
  if (has_steam_id_candidate()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSComputeNewPlayerCompatibility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSComputeNewPlayerCompatibility)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSComputeNewPlayerCompatibility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSComputeNewPlayerCompatibility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSComputeNewPlayerCompatibility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSComputeNewPlayerCompatibility)
    MergeFrom(*source);
  }
}

void CMsgGSComputeNewPlayerCompatibility::MergeFrom(const CMsgGSComputeNewPlayerCompatibility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSComputeNewPlayerCompatibility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id_candidate()) {
    set_steam_id_candidate(from.steam_id_candidate());
  }
}

void CMsgGSComputeNewPlayerCompatibility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSComputeNewPlayerCompatibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSComputeNewPlayerCompatibility::CopyFrom(const CMsgGSComputeNewPlayerCompatibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSComputeNewPlayerCompatibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSComputeNewPlayerCompatibility::IsInitialized() const {
  return true;
}

void CMsgGSComputeNewPlayerCompatibility::Swap(CMsgGSComputeNewPlayerCompatibility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSComputeNewPlayerCompatibility::InternalSwap(CMsgGSComputeNewPlayerCompatibility* other) {
  using std::swap;
  swap(steam_id_candidate_, other->steam_id_candidate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSComputeNewPlayerCompatibility::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSComputeNewPlayerCompatibilityResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSComputeNewPlayerCompatibilityResponse::kSteamIdCandidateFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kEresultFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kIsClanMemberFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtDontLikeYouFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtYouDontLikeFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtClanmembersDontLikeYouFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSComputeNewPlayerCompatibilityResponse::CMsgGSComputeNewPlayerCompatibilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSComputeNewPlayerCompatibilityResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSComputeNewPlayerCompatibilityResponse)
}
CMsgGSComputeNewPlayerCompatibilityResponse::CMsgGSComputeNewPlayerCompatibilityResponse(const CMsgGSComputeNewPlayerCompatibilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_candidate_, &from.steam_id_candidate_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_candidate_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSComputeNewPlayerCompatibilityResponse)
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SharedCtor() {
  ::memset(&steam_id_candidate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ct_clanmembers_dont_like_you_) -
      reinterpret_cast<char*>(&steam_id_candidate_)) + sizeof(ct_clanmembers_dont_like_you_));
  eresult_ = 2u;
}

CMsgGSComputeNewPlayerCompatibilityResponse::~CMsgGSComputeNewPlayerCompatibilityResponse() {
  // @@protoc_insertion_point(destructor:CMsgGSComputeNewPlayerCompatibilityResponse)
  SharedDtor();
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SharedDtor() {
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSComputeNewPlayerCompatibilityResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSComputeNewPlayerCompatibilityResponse& CMsgGSComputeNewPlayerCompatibilityResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGSComputeNewPlayerCompatibilityResponse.base);
  return *internal_default_instance();
}


void CMsgGSComputeNewPlayerCompatibilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&steam_id_candidate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ct_clanmembers_dont_like_you_) -
        reinterpret_cast<char*>(&steam_id_candidate_)) + sizeof(ct_clanmembers_dont_like_you_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSComputeNewPlayerCompatibilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_candidate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_candidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_clan_member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_clan_member();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clan_member_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_dont_like_you = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ct_dont_like_you();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_dont_like_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_you_dont_like = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ct_you_dont_like();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_you_dont_like_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_clanmembers_dont_like_you = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ct_clanmembers_dont_like_you();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_clanmembers_dont_like_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSComputeNewPlayerCompatibilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSComputeNewPlayerCompatibilityResponse)
  return false;
#undef DO_
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_candidate(), output);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional bool is_clan_member = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_clan_member(), output);
  }

  // optional int32 ct_dont_like_you = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ct_dont_like_you(), output);
  }

  // optional int32 ct_you_dont_like = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ct_you_dont_like(), output);
  }

  // optional int32 ct_clanmembers_dont_like_you = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ct_clanmembers_dont_like_you(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSComputeNewPlayerCompatibilityResponse)
}

::google::protobuf::uint8* CMsgGSComputeNewPlayerCompatibilityResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_candidate(), target);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional bool is_clan_member = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_clan_member(), target);
  }

  // optional int32 ct_dont_like_you = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ct_dont_like_you(), target);
  }

  // optional int32 ct_you_dont_like = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ct_you_dont_like(), target);
  }

  // optional int32 ct_clanmembers_dont_like_you = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ct_clanmembers_dont_like_you(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSComputeNewPlayerCompatibilityResponse)
  return target;
}

size_t CMsgGSComputeNewPlayerCompatibilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional fixed64 steam_id_candidate = 1;
    if (has_steam_id_candidate()) {
      total_size += 1 + 8;
    }

    // optional bool is_clan_member = 3;
    if (has_is_clan_member()) {
      total_size += 1 + 1;
    }

    // optional int32 ct_dont_like_you = 4;
    if (has_ct_dont_like_you()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_dont_like_you());
    }

    // optional int32 ct_you_dont_like = 5;
    if (has_ct_you_dont_like()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_you_dont_like());
    }

    // optional int32 ct_clanmembers_dont_like_you = 6;
    if (has_ct_clanmembers_dont_like_you()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_clanmembers_dont_like_you());
    }

    // optional uint32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSComputeNewPlayerCompatibilityResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSComputeNewPlayerCompatibilityResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSComputeNewPlayerCompatibilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSComputeNewPlayerCompatibilityResponse)
    MergeFrom(*source);
  }
}

void CMsgGSComputeNewPlayerCompatibilityResponse::MergeFrom(const CMsgGSComputeNewPlayerCompatibilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_candidate_ = from.steam_id_candidate_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_clan_member_ = from.is_clan_member_;
    }
    if (cached_has_bits & 0x00000004u) {
      ct_dont_like_you_ = from.ct_dont_like_you_;
    }
    if (cached_has_bits & 0x00000008u) {
      ct_you_dont_like_ = from.ct_you_dont_like_;
    }
    if (cached_has_bits & 0x00000010u) {
      ct_clanmembers_dont_like_you_ = from.ct_clanmembers_dont_like_you_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSComputeNewPlayerCompatibilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSComputeNewPlayerCompatibilityResponse::CopyFrom(const CMsgGSComputeNewPlayerCompatibilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSComputeNewPlayerCompatibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSComputeNewPlayerCompatibilityResponse::IsInitialized() const {
  return true;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::Swap(CMsgGSComputeNewPlayerCompatibilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSComputeNewPlayerCompatibilityResponse::InternalSwap(CMsgGSComputeNewPlayerCompatibilityResponse* other) {
  using std::swap;
  swap(steam_id_candidate_, other->steam_id_candidate_);
  swap(is_clan_member_, other->is_clan_member_);
  swap(ct_dont_like_you_, other->ct_dont_like_you_);
  swap(ct_you_dont_like_, other->ct_you_dont_like_);
  swap(ct_clanmembers_dont_like_you_, other->ct_clanmembers_dont_like_you_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSComputeNewPlayerCompatibilityResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSentLogs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSentLogs::CMsgClientSentLogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSentLogs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSentLogs)
}
CMsgClientSentLogs::CMsgClientSentLogs(const CMsgClientSentLogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientSentLogs)
}

void CMsgClientSentLogs::SharedCtor() {
}

CMsgClientSentLogs::~CMsgClientSentLogs() {
  // @@protoc_insertion_point(destructor:CMsgClientSentLogs)
  SharedDtor();
}

void CMsgClientSentLogs::SharedDtor() {
}

void CMsgClientSentLogs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSentLogs::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSentLogs& CMsgClientSentLogs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSentLogs.base);
  return *internal_default_instance();
}


void CMsgClientSentLogs::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSentLogs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSentLogs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSentLogs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSentLogs)
  return false;
#undef DO_
}

void CMsgClientSentLogs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSentLogs)
}

::google::protobuf::uint8* CMsgClientSentLogs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSentLogs)
  return target;
}

size_t CMsgClientSentLogs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSentLogs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSentLogs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSentLogs)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSentLogs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSentLogs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSentLogs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSentLogs)
    MergeFrom(*source);
  }
}

void CMsgClientSentLogs::MergeFrom(const CMsgClientSentLogs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSentLogs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientSentLogs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSentLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSentLogs::CopyFrom(const CMsgClientSentLogs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSentLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSentLogs::IsInitialized() const {
  return true;
}

void CMsgClientSentLogs::Swap(CMsgClientSentLogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSentLogs::InternalSwap(CMsgClientSentLogs* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSentLogs::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCClient::kAppidFieldNumber;
const int CMsgGCClient::kMsgtypeFieldNumber;
const int CMsgGCClient::kPayloadFieldNumber;
const int CMsgGCClient::kSteamidFieldNumber;
const int CMsgGCClient::kGcnameFieldNumber;
const int CMsgGCClient::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCClient::CMsgGCClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGCClient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCClient)
}
CMsgGCClient::CMsgGCClient(const CMsgGCClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  gcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gcname()) {
    gcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcname_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCClient)
}

void CMsgGCClient::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ip_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(ip_));
}

CMsgGCClient::~CMsgGCClient() {
  // @@protoc_insertion_point(destructor:CMsgGCClient)
  SharedDtor();
}

void CMsgGCClient::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGCClient::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCClient& CMsgGCClient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGCClient.base);
  return *internal_default_instance();
}


void CMsgGCClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      payload_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      gcname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ip_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCClient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gcname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gcname().data(), static_cast<int>(this->gcname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCClient.gcname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCClient)
  return false;
#undef DO_
}

void CMsgGCClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 msgtype = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgtype(), output);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->payload(), output);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steamid(), output);
  }

  // optional string gcname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gcname().data(), static_cast<int>(this->gcname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClient.gcname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gcname(), output);
  }

  // optional uint32 ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCClient)
}

::google::protobuf::uint8* CMsgGCClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 msgtype = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgtype(), target);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->payload(), target);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steamid(), target);
  }

  // optional string gcname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gcname().data(), static_cast<int>(this->gcname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClient.gcname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gcname(), target);
  }

  // optional uint32 ip = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCClient)
  return target;
}

size_t CMsgGCClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes payload = 3;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }

    // optional string gcname = 5;
    if (has_gcname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gcname());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 msgtype = 2;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional fixed64 steamid = 4;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 6;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCClient)
    MergeFrom(*source);
  }
}

void CMsgGCClient::MergeFrom(const CMsgGCClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gcname();
      gcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcname_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      ip_ = from.ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCClient::CopyFrom(const CMsgGCClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCClient::IsInitialized() const {
  return true;
}

void CMsgGCClient::Swap(CMsgGCClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCClient::InternalSwap(CMsgGCClient* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gcname_.Swap(&other->gcname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(msgtype_, other->msgtype_);
  swap(steamid_, other->steamid_);
  swap(ip_, other->ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGCClient::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestFreeLicense::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFreeLicense::kAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFreeLicense::CMsgClientRequestFreeLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestFreeLicense.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestFreeLicense)
}
CMsgClientRequestFreeLicense::CMsgClientRequestFreeLicense(const CMsgClientRequestFreeLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      appids_(from.appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestFreeLicense)
}

void CMsgClientRequestFreeLicense::SharedCtor() {
}

CMsgClientRequestFreeLicense::~CMsgClientRequestFreeLicense() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestFreeLicense)
  SharedDtor();
}

void CMsgClientRequestFreeLicense::SharedDtor() {
}

void CMsgClientRequestFreeLicense::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestFreeLicense::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestFreeLicense& CMsgClientRequestFreeLicense::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestFreeLicense.base);
  return *internal_default_instance();
}


void CMsgClientRequestFreeLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestFreeLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestFreeLicense)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 appids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_appids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestFreeLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestFreeLicense)
  return false;
#undef DO_
}

void CMsgClientRequestFreeLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  for (int i = 0, n = this->appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestFreeLicense)
}

::google::protobuf::uint8* CMsgClientRequestFreeLicense::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestFreeLicense)
  return target;
}

size_t CMsgClientRequestFreeLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestFreeLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 appids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->appids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestFreeLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFreeLicense* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestFreeLicense>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestFreeLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestFreeLicense)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFreeLicense::MergeFrom(const CMsgClientRequestFreeLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appids_.MergeFrom(from.appids_);
}

void CMsgClientRequestFreeLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFreeLicense::CopyFrom(const CMsgClientRequestFreeLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFreeLicense::IsInitialized() const {
  return true;
}

void CMsgClientRequestFreeLicense::Swap(CMsgClientRequestFreeLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFreeLicense::InternalSwap(CMsgClientRequestFreeLicense* other) {
  using std::swap;
  appids_.InternalSwap(&other->appids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestFreeLicense::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestFreeLicenseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFreeLicenseResponse::kEresultFieldNumber;
const int CMsgClientRequestFreeLicenseResponse::kGrantedPackageidsFieldNumber;
const int CMsgClientRequestFreeLicenseResponse::kGrantedAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFreeLicenseResponse::CMsgClientRequestFreeLicenseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestFreeLicenseResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestFreeLicenseResponse)
}
CMsgClientRequestFreeLicenseResponse::CMsgClientRequestFreeLicenseResponse(const CMsgClientRequestFreeLicenseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      granted_packageids_(from.granted_packageids_),
      granted_appids_(from.granted_appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestFreeLicenseResponse)
}

void CMsgClientRequestFreeLicenseResponse::SharedCtor() {
  eresult_ = 2u;
}

CMsgClientRequestFreeLicenseResponse::~CMsgClientRequestFreeLicenseResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestFreeLicenseResponse)
  SharedDtor();
}

void CMsgClientRequestFreeLicenseResponse::SharedDtor() {
}

void CMsgClientRequestFreeLicenseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestFreeLicenseResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestFreeLicenseResponse& CMsgClientRequestFreeLicenseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestFreeLicenseResponse.base);
  return *internal_default_instance();
}


void CMsgClientRequestFreeLicenseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granted_packageids_.Clear();
  granted_appids_.Clear();
  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestFreeLicenseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestFreeLicenseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_packageids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_granted_packageids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_packageids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_appids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_granted_appids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestFreeLicenseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestFreeLicenseResponse)
  return false;
#undef DO_
}

void CMsgClientRequestFreeLicenseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // repeated uint32 granted_packageids = 2;
  for (int i = 0, n = this->granted_packageids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->granted_packageids(i), output);
  }

  // repeated uint32 granted_appids = 3;
  for (int i = 0, n = this->granted_appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->granted_appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestFreeLicenseResponse)
}

::google::protobuf::uint8* CMsgClientRequestFreeLicenseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // repeated uint32 granted_packageids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->granted_packageids_, target);

  // repeated uint32 granted_appids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->granted_appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestFreeLicenseResponse)
  return target;
}

size_t CMsgClientRequestFreeLicenseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestFreeLicenseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 granted_packageids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_packageids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_packageids_size());
    total_size += data_size;
  }

  // repeated uint32 granted_appids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_appids_size());
    total_size += data_size;
  }

  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestFreeLicenseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFreeLicenseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestFreeLicenseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestFreeLicenseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestFreeLicenseResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFreeLicenseResponse::MergeFrom(const CMsgClientRequestFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_packageids_.MergeFrom(from.granted_packageids_);
  granted_appids_.MergeFrom(from.granted_appids_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRequestFreeLicenseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFreeLicenseResponse::CopyFrom(const CMsgClientRequestFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFreeLicenseResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestFreeLicenseResponse::Swap(CMsgClientRequestFreeLicenseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFreeLicenseResponse::InternalSwap(CMsgClientRequestFreeLicenseResponse* other) {
  using std::swap;
  granted_packageids_.InternalSwap(&other->granted_packageids_);
  granted_appids_.InternalSwap(&other->granted_appids_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestFreeLicenseResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDRMDownloadRequestWithCrashData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMDownloadRequestWithCrashData::kDownloadFlagsFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kDownloadTypesKnownFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidDrmFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidSplitFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidMergeFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kModuleNameFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kModulePathFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kCrashDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMDownloadRequestWithCrashData::CMsgDRMDownloadRequestWithCrashData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDRMDownloadRequestWithCrashData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDRMDownloadRequestWithCrashData)
}
CMsgDRMDownloadRequestWithCrashData::CMsgDRMDownloadRequestWithCrashData(const CMsgDRMDownloadRequestWithCrashData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_drm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_drm()) {
    guid_drm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_drm_);
  }
  guid_split_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_split()) {
    guid_split_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_split_);
  }
  guid_merge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_merge()) {
    guid_merge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_merge_);
  }
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_name()) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_path()) {
    module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
  }
  crash_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_crash_data()) {
    crash_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crash_data_);
  }
  ::memcpy(&download_flags_, &from.download_flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&download_types_known_) -
    reinterpret_cast<char*>(&download_flags_)) + sizeof(download_types_known_));
  // @@protoc_insertion_point(copy_constructor:CMsgDRMDownloadRequestWithCrashData)
}

void CMsgDRMDownloadRequestWithCrashData::SharedCtor() {
  guid_drm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_split_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_merge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crash_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&download_flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_types_known_) -
      reinterpret_cast<char*>(&download_flags_)) + sizeof(download_types_known_));
}

CMsgDRMDownloadRequestWithCrashData::~CMsgDRMDownloadRequestWithCrashData() {
  // @@protoc_insertion_point(destructor:CMsgDRMDownloadRequestWithCrashData)
  SharedDtor();
}

void CMsgDRMDownloadRequestWithCrashData::SharedDtor() {
  guid_drm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_split_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_merge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crash_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMDownloadRequestWithCrashData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDRMDownloadRequestWithCrashData::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDRMDownloadRequestWithCrashData& CMsgDRMDownloadRequestWithCrashData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDRMDownloadRequestWithCrashData.base);
  return *internal_default_instance();
}


void CMsgDRMDownloadRequestWithCrashData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      guid_drm_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      guid_split_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      guid_merge_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      module_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      module_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      crash_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&download_flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&download_types_known_) -
        reinterpret_cast<char*>(&download_flags_)) + sizeof(download_types_known_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDRMDownloadRequestWithCrashData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDRMDownloadRequestWithCrashData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 download_flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_download_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_types_known = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_download_types_known();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_types_known_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_drm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_drm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_split = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_split()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_merge = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_merge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_name().data(), static_cast<int>(this->module_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDRMDownloadRequestWithCrashData.module_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_path = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_path().data(), static_cast<int>(this->module_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDRMDownloadRequestWithCrashData.module_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes crash_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_crash_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDRMDownloadRequestWithCrashData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDRMDownloadRequestWithCrashData)
  return false;
#undef DO_
}

void CMsgDRMDownloadRequestWithCrashData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 download_flags = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->download_flags(), output);
  }

  // optional uint32 download_types_known = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->download_types_known(), output);
  }

  // optional bytes guid_drm = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->guid_drm(), output);
  }

  // optional bytes guid_split = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->guid_split(), output);
  }

  // optional bytes guid_merge = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->guid_merge(), output);
  }

  // optional string module_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadRequestWithCrashData.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->module_name(), output);
  }

  // optional string module_path = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadRequestWithCrashData.module_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->module_path(), output);
  }

  // optional bytes crash_data = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->crash_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDRMDownloadRequestWithCrashData)
}

::google::protobuf::uint8* CMsgDRMDownloadRequestWithCrashData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 download_flags = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->download_flags(), target);
  }

  // optional uint32 download_types_known = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->download_types_known(), target);
  }

  // optional bytes guid_drm = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->guid_drm(), target);
  }

  // optional bytes guid_split = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->guid_split(), target);
  }

  // optional bytes guid_merge = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->guid_merge(), target);
  }

  // optional string module_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadRequestWithCrashData.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->module_name(), target);
  }

  // optional string module_path = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadRequestWithCrashData.module_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->module_path(), target);
  }

  // optional bytes crash_data = 8;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->crash_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDRMDownloadRequestWithCrashData)
  return target;
}

size_t CMsgDRMDownloadRequestWithCrashData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDRMDownloadRequestWithCrashData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes guid_drm = 3;
    if (has_guid_drm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_drm());
    }

    // optional bytes guid_split = 4;
    if (has_guid_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_split());
    }

    // optional bytes guid_merge = 5;
    if (has_guid_merge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_merge());
    }

    // optional string module_name = 6;
    if (has_module_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_name());
    }

    // optional string module_path = 7;
    if (has_module_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_path());
    }

    // optional bytes crash_data = 8;
    if (has_crash_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->crash_data());
    }

    // optional uint32 download_flags = 1;
    if (has_download_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_flags());
    }

    // optional uint32 download_types_known = 2;
    if (has_download_types_known()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_types_known());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDRMDownloadRequestWithCrashData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDRMDownloadRequestWithCrashData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMDownloadRequestWithCrashData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDRMDownloadRequestWithCrashData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDRMDownloadRequestWithCrashData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDRMDownloadRequestWithCrashData)
    MergeFrom(*source);
  }
}

void CMsgDRMDownloadRequestWithCrashData::MergeFrom(const CMsgDRMDownloadRequestWithCrashData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDRMDownloadRequestWithCrashData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid_drm();
      guid_drm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_drm_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_guid_split();
      guid_split_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_split_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_guid_merge();
      guid_merge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_merge_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_module_name();
      module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_module_path();
      module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_crash_data();
      crash_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crash_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      download_flags_ = from.download_flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      download_types_known_ = from.download_types_known_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMDownloadRequestWithCrashData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDRMDownloadRequestWithCrashData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMDownloadRequestWithCrashData::CopyFrom(const CMsgDRMDownloadRequestWithCrashData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDRMDownloadRequestWithCrashData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMDownloadRequestWithCrashData::IsInitialized() const {
  return true;
}

void CMsgDRMDownloadRequestWithCrashData::Swap(CMsgDRMDownloadRequestWithCrashData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMDownloadRequestWithCrashData::InternalSwap(CMsgDRMDownloadRequestWithCrashData* other) {
  using std::swap;
  guid_drm_.Swap(&other->guid_drm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_split_.Swap(&other->guid_split_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_merge_.Swap(&other->guid_merge_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_name_.Swap(&other->module_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_path_.Swap(&other->module_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crash_data_.Swap(&other->crash_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(download_flags_, other->download_flags_);
  swap(download_types_known_, other->download_types_known_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDRMDownloadRequestWithCrashData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDRMDownloadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMDownloadResponse::kEresultFieldNumber;
const int CMsgDRMDownloadResponse::kAppIdFieldNumber;
const int CMsgDRMDownloadResponse::kBlobDownloadTypeFieldNumber;
const int CMsgDRMDownloadResponse::kMergeGuidFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileDfsIpFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileDfsPortFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileUrlFieldNumber;
const int CMsgDRMDownloadResponse::kModulePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMDownloadResponse::CMsgDRMDownloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDRMDownloadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDRMDownloadResponse)
}
CMsgDRMDownloadResponse::CMsgDRMDownloadResponse(const CMsgDRMDownloadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merge_guid()) {
    merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
  }
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_file_url()) {
    download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
  }
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_path()) {
    module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgDRMDownloadResponse)
}

void CMsgDRMDownloadResponse::SharedCtor() {
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_file_dfs_port_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
  eresult_ = 2u;
}

CMsgDRMDownloadResponse::~CMsgDRMDownloadResponse() {
  // @@protoc_insertion_point(destructor:CMsgDRMDownloadResponse)
  SharedDtor();
}

void CMsgDRMDownloadResponse::SharedDtor() {
  merge_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDRMDownloadResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDRMDownloadResponse& CMsgDRMDownloadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDRMDownloadResponse.base);
  return *internal_default_instance();
}


void CMsgDRMDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      merge_guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      download_file_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      module_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&download_file_dfs_port_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDRMDownloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDRMDownloadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_blob_download_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blob_download_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merge_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merge_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_download_file_dfs_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_download_file_dfs_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string download_file_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDRMDownloadResponse.download_file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_path = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_path().data(), static_cast<int>(this->module_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDRMDownloadResponse.module_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDRMDownloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDRMDownloadResponse)
  return false;
#undef DO_
}

void CMsgDRMDownloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blob_download_type(), output);
  }

  // optional bytes merge_guid = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->merge_guid(), output);
  }

  // optional uint32 download_file_dfs_ip = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->download_file_dfs_ip(), output);
  }

  // optional uint32 download_file_dfs_port = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->download_file_dfs_port(), output);
  }

  // optional string download_file_url = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadResponse.download_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->download_file_url(), output);
  }

  // optional string module_path = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadResponse.module_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->module_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDRMDownloadResponse)
}

::google::protobuf::uint8* CMsgDRMDownloadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blob_download_type(), target);
  }

  // optional bytes merge_guid = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->merge_guid(), target);
  }

  // optional uint32 download_file_dfs_ip = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->download_file_dfs_ip(), target);
  }

  // optional uint32 download_file_dfs_port = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->download_file_dfs_port(), target);
  }

  // optional string download_file_url = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadResponse.download_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->download_file_url(), target);
  }

  // optional string module_path = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMDownloadResponse.module_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->module_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDRMDownloadResponse)
  return target;
}

size_t CMsgDRMDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDRMDownloadResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes merge_guid = 4;
    if (has_merge_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merge_guid());
    }

    // optional string download_file_url = 7;
    if (has_download_file_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_file_url());
    }

    // optional string module_path = 8;
    if (has_module_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_path());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 blob_download_type = 3;
    if (has_blob_download_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blob_download_type());
    }

    // optional uint32 download_file_dfs_ip = 5;
    if (has_download_file_dfs_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_ip());
    }

    // optional uint32 download_file_dfs_port = 6;
    if (has_download_file_dfs_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_port());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDRMDownloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDRMDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMDownloadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDRMDownloadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDRMDownloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDRMDownloadResponse)
    MergeFrom(*source);
  }
}

void CMsgDRMDownloadResponse::MergeFrom(const CMsgDRMDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDRMDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_merge_guid();
      merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_download_file_url();
      download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_module_path();
      module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      blob_download_type_ = from.blob_download_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      download_file_dfs_ip_ = from.download_file_dfs_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_file_dfs_port_ = from.download_file_dfs_port_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMDownloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDRMDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMDownloadResponse::CopyFrom(const CMsgDRMDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDRMDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMDownloadResponse::IsInitialized() const {
  return true;
}

void CMsgDRMDownloadResponse::Swap(CMsgDRMDownloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMDownloadResponse::InternalSwap(CMsgDRMDownloadResponse* other) {
  using std::swap;
  merge_guid_.Swap(&other->merge_guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  download_file_url_.Swap(&other->download_file_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_path_.Swap(&other->module_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(blob_download_type_, other->blob_download_type_);
  swap(download_file_dfs_ip_, other->download_file_dfs_ip_);
  swap(download_file_dfs_port_, other->download_file_dfs_port_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDRMDownloadResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDRMFinalResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMFinalResult::kEResultFieldNumber;
const int CMsgDRMFinalResult::kAppIdFieldNumber;
const int CMsgDRMFinalResult::kBlobDownloadTypeFieldNumber;
const int CMsgDRMFinalResult::kErrorDetailFieldNumber;
const int CMsgDRMFinalResult::kMergeGuidFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileDfsIpFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileDfsPortFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMFinalResult::CMsgDRMFinalResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDRMFinalResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDRMFinalResult)
}
CMsgDRMFinalResult::CMsgDRMFinalResult(const CMsgDRMFinalResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merge_guid()) {
    merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
  }
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_file_url()) {
    download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgDRMFinalResult)
}

void CMsgDRMFinalResult::SharedCtor() {
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_file_dfs_port_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
  eresult_ = 2u;
}

CMsgDRMFinalResult::~CMsgDRMFinalResult() {
  // @@protoc_insertion_point(destructor:CMsgDRMFinalResult)
  SharedDtor();
}

void CMsgDRMFinalResult::SharedDtor() {
  merge_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMFinalResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDRMFinalResult::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDRMFinalResult& CMsgDRMFinalResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDRMFinalResult.base);
  return *internal_default_instance();
}


void CMsgDRMFinalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      merge_guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      download_file_url_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&download_file_dfs_port_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDRMFinalResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDRMFinalResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_blob_download_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blob_download_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 error_detail = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_error_detail();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_detail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merge_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merge_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_download_file_dfs_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_download_file_dfs_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string download_file_url = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgDRMFinalResult.download_file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDRMFinalResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDRMFinalResult)
  return false;
#undef DO_
}

void CMsgDRMFinalResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blob_download_type(), output);
  }

  // optional uint32 error_detail = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->error_detail(), output);
  }

  // optional bytes merge_guid = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->merge_guid(), output);
  }

  // optional uint32 download_file_dfs_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->download_file_dfs_ip(), output);
  }

  // optional uint32 download_file_dfs_port = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->download_file_dfs_port(), output);
  }

  // optional string download_file_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMFinalResult.download_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->download_file_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDRMFinalResult)
}

::google::protobuf::uint8* CMsgDRMFinalResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blob_download_type(), target);
  }

  // optional uint32 error_detail = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->error_detail(), target);
  }

  // optional bytes merge_guid = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->merge_guid(), target);
  }

  // optional uint32 download_file_dfs_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->download_file_dfs_ip(), target);
  }

  // optional uint32 download_file_dfs_port = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->download_file_dfs_port(), target);
  }

  // optional string download_file_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgDRMFinalResult.download_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->download_file_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDRMFinalResult)
  return target;
}

size_t CMsgDRMFinalResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDRMFinalResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes merge_guid = 5;
    if (has_merge_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merge_guid());
    }

    // optional string download_file_url = 8;
    if (has_download_file_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_file_url());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 blob_download_type = 3;
    if (has_blob_download_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blob_download_type());
    }

    // optional uint32 error_detail = 4;
    if (has_error_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_detail());
    }

    // optional uint32 download_file_dfs_ip = 6;
    if (has_download_file_dfs_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_ip());
    }

    // optional uint32 download_file_dfs_port = 7;
    if (has_download_file_dfs_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_port());
    }

    // optional uint32 eResult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDRMFinalResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDRMFinalResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMFinalResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDRMFinalResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDRMFinalResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDRMFinalResult)
    MergeFrom(*source);
  }
}

void CMsgDRMFinalResult::MergeFrom(const CMsgDRMFinalResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDRMFinalResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_merge_guid();
      merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_download_file_url();
      download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      blob_download_type_ = from.blob_download_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      error_detail_ = from.error_detail_;
    }
    if (cached_has_bits & 0x00000020u) {
      download_file_dfs_ip_ = from.download_file_dfs_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_file_dfs_port_ = from.download_file_dfs_port_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMFinalResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDRMFinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMFinalResult::CopyFrom(const CMsgDRMFinalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDRMFinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMFinalResult::IsInitialized() const {
  return true;
}

void CMsgDRMFinalResult::Swap(CMsgDRMFinalResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMFinalResult::InternalSwap(CMsgDRMFinalResult* other) {
  using std::swap;
  merge_guid_.Swap(&other->merge_guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  download_file_url_.Swap(&other->download_file_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(blob_download_type_, other->blob_download_type_);
  swap(error_detail_, other->error_detail_);
  swap(download_file_dfs_ip_, other->download_file_dfs_ip_);
  swap(download_file_dfs_port_, other->download_file_dfs_port_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDRMFinalResult::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPCheckSpecialSurvey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPCheckSpecialSurvey::kSurveyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPCheckSpecialSurvey::CMsgClientDPCheckSpecialSurvey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPCheckSpecialSurvey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDPCheckSpecialSurvey)
}
CMsgClientDPCheckSpecialSurvey::CMsgClientDPCheckSpecialSurvey(const CMsgClientDPCheckSpecialSurvey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientDPCheckSpecialSurvey)
}

void CMsgClientDPCheckSpecialSurvey::SharedCtor() {
  survey_id_ = 0u;
}

CMsgClientDPCheckSpecialSurvey::~CMsgClientDPCheckSpecialSurvey() {
  // @@protoc_insertion_point(destructor:CMsgClientDPCheckSpecialSurvey)
  SharedDtor();
}

void CMsgClientDPCheckSpecialSurvey::SharedDtor() {
}

void CMsgClientDPCheckSpecialSurvey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDPCheckSpecialSurvey::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPCheckSpecialSurvey& CMsgClientDPCheckSpecialSurvey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPCheckSpecialSurvey.base);
  return *internal_default_instance();
}


void CMsgClientDPCheckSpecialSurvey::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPCheckSpecialSurvey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDPCheckSpecialSurvey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_survey_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDPCheckSpecialSurvey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDPCheckSpecialSurvey)
  return false;
#undef DO_
}

void CMsgClientDPCheckSpecialSurvey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->survey_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDPCheckSpecialSurvey)
}

::google::protobuf::uint8* CMsgClientDPCheckSpecialSurvey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->survey_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDPCheckSpecialSurvey)
  return target;
}

size_t CMsgClientDPCheckSpecialSurvey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDPCheckSpecialSurvey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 survey_id = 1;
  if (has_survey_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->survey_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPCheckSpecialSurvey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDPCheckSpecialSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPCheckSpecialSurvey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPCheckSpecialSurvey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDPCheckSpecialSurvey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDPCheckSpecialSurvey)
    MergeFrom(*source);
  }
}

void CMsgClientDPCheckSpecialSurvey::MergeFrom(const CMsgClientDPCheckSpecialSurvey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDPCheckSpecialSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_survey_id()) {
    set_survey_id(from.survey_id());
  }
}

void CMsgClientDPCheckSpecialSurvey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDPCheckSpecialSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPCheckSpecialSurvey::CopyFrom(const CMsgClientDPCheckSpecialSurvey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDPCheckSpecialSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPCheckSpecialSurvey::IsInitialized() const {
  return true;
}

void CMsgClientDPCheckSpecialSurvey::Swap(CMsgClientDPCheckSpecialSurvey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPCheckSpecialSurvey::InternalSwap(CMsgClientDPCheckSpecialSurvey* other) {
  using std::swap;
  swap(survey_id_, other->survey_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDPCheckSpecialSurvey::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPCheckSpecialSurveyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPCheckSpecialSurveyResponse::kEResultFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kStateFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kNameFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kCustomUrlFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kIncludeSoftwareFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPCheckSpecialSurveyResponse::CMsgClientDPCheckSpecialSurveyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPCheckSpecialSurveyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDPCheckSpecialSurveyResponse)
}
CMsgClientDPCheckSpecialSurveyResponse::CMsgClientDPCheckSpecialSurveyResponse(const CMsgClientDPCheckSpecialSurveyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  custom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_url()) {
    custom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_url_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&state_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientDPCheckSpecialSurveyResponse)
}

void CMsgClientDPCheckSpecialSurveyResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_software_) -
      reinterpret_cast<char*>(&state_)) + sizeof(include_software_));
  eresult_ = 2u;
}

CMsgClientDPCheckSpecialSurveyResponse::~CMsgClientDPCheckSpecialSurveyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientDPCheckSpecialSurveyResponse)
  SharedDtor();
}

void CMsgClientDPCheckSpecialSurveyResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPCheckSpecialSurveyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDPCheckSpecialSurveyResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPCheckSpecialSurveyResponse& CMsgClientDPCheckSpecialSurveyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPCheckSpecialSurveyResponse.base);
  return *internal_default_instance();
}


void CMsgClientDPCheckSpecialSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      custom_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&include_software_) -
        reinterpret_cast<char*>(&state_)) + sizeof(include_software_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPCheckSpecialSurveyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDPCheckSpecialSurveyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientDPCheckSpecialSurveyResponse.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->custom_url().data(), static_cast<int>(this->custom_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientDPCheckSpecialSurveyResponse.custom_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool include_software = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_include_software();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_software_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDPCheckSpecialSurveyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDPCheckSpecialSurveyResponse)
  return false;
#undef DO_
}

void CMsgClientDPCheckSpecialSurveyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientDPCheckSpecialSurveyResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string custom_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_url().data(), static_cast<int>(this->custom_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientDPCheckSpecialSurveyResponse.custom_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->custom_url(), output);
  }

  // optional bool include_software = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->include_software(), output);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDPCheckSpecialSurveyResponse)
}

::google::protobuf::uint8* CMsgClientDPCheckSpecialSurveyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientDPCheckSpecialSurveyResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string custom_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_url().data(), static_cast<int>(this->custom_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientDPCheckSpecialSurveyResponse.custom_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->custom_url(), target);
  }

  // optional bool include_software = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->include_software(), target);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDPCheckSpecialSurveyResponse)
  return target;
}

size_t CMsgClientDPCheckSpecialSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDPCheckSpecialSurveyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string custom_url = 4;
    if (has_custom_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_url());
    }

    // optional bytes token = 6;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional bool include_software = 5;
    if (has_include_software()) {
      total_size += 1 + 1;
    }

    // optional uint32 eResult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPCheckSpecialSurveyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDPCheckSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPCheckSpecialSurveyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPCheckSpecialSurveyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDPCheckSpecialSurveyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDPCheckSpecialSurveyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDPCheckSpecialSurveyResponse::MergeFrom(const CMsgClientDPCheckSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDPCheckSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_custom_url();
      custom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000010u) {
      include_software_ = from.include_software_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPCheckSpecialSurveyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDPCheckSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPCheckSpecialSurveyResponse::CopyFrom(const CMsgClientDPCheckSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDPCheckSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPCheckSpecialSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientDPCheckSpecialSurveyResponse::Swap(CMsgClientDPCheckSpecialSurveyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPCheckSpecialSurveyResponse::InternalSwap(CMsgClientDPCheckSpecialSurveyResponse* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  custom_url_.Swap(&other->custom_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(include_software_, other->include_software_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDPCheckSpecialSurveyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPSendSpecialSurveyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPSendSpecialSurveyResponse::kSurveyIdFieldNumber;
const int CMsgClientDPSendSpecialSurveyResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPSendSpecialSurveyResponse::CMsgClientDPSendSpecialSurveyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPSendSpecialSurveyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDPSendSpecialSurveyResponse)
}
CMsgClientDPSendSpecialSurveyResponse::CMsgClientDPSendSpecialSurveyResponse(const CMsgClientDPSendSpecialSurveyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientDPSendSpecialSurveyResponse)
}

void CMsgClientDPSendSpecialSurveyResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  survey_id_ = 0u;
}

CMsgClientDPSendSpecialSurveyResponse::~CMsgClientDPSendSpecialSurveyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientDPSendSpecialSurveyResponse)
  SharedDtor();
}

void CMsgClientDPSendSpecialSurveyResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPSendSpecialSurveyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDPSendSpecialSurveyResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPSendSpecialSurveyResponse& CMsgClientDPSendSpecialSurveyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPSendSpecialSurveyResponse.base);
  return *internal_default_instance();
}


void CMsgClientDPSendSpecialSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPSendSpecialSurveyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDPSendSpecialSurveyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_survey_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDPSendSpecialSurveyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDPSendSpecialSurveyResponse)
  return false;
#undef DO_
}

void CMsgClientDPSendSpecialSurveyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->survey_id(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDPSendSpecialSurveyResponse)
}

::google::protobuf::uint8* CMsgClientDPSendSpecialSurveyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->survey_id(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDPSendSpecialSurveyResponse)
  return target;
}

size_t CMsgClientDPSendSpecialSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDPSendSpecialSurveyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional uint32 survey_id = 1;
    if (has_survey_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->survey_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPSendSpecialSurveyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDPSendSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPSendSpecialSurveyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPSendSpecialSurveyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDPSendSpecialSurveyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDPSendSpecialSurveyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDPSendSpecialSurveyResponse::MergeFrom(const CMsgClientDPSendSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDPSendSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      survey_id_ = from.survey_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPSendSpecialSurveyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDPSendSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPSendSpecialSurveyResponse::CopyFrom(const CMsgClientDPSendSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDPSendSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPSendSpecialSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientDPSendSpecialSurveyResponse::Swap(CMsgClientDPSendSpecialSurveyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPSendSpecialSurveyResponse::InternalSwap(CMsgClientDPSendSpecialSurveyResponse* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(survey_id_, other->survey_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDPSendSpecialSurveyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPSendSpecialSurveyResponseReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPSendSpecialSurveyResponseReply::kEResultFieldNumber;
const int CMsgClientDPSendSpecialSurveyResponseReply::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPSendSpecialSurveyResponseReply::CMsgClientDPSendSpecialSurveyResponseReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPSendSpecialSurveyResponseReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDPSendSpecialSurveyResponseReply)
}
CMsgClientDPSendSpecialSurveyResponseReply::CMsgClientDPSendSpecialSurveyResponseReply(const CMsgClientDPSendSpecialSurveyResponseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientDPSendSpecialSurveyResponseReply)
}

void CMsgClientDPSendSpecialSurveyResponseReply::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2u;
}

CMsgClientDPSendSpecialSurveyResponseReply::~CMsgClientDPSendSpecialSurveyResponseReply() {
  // @@protoc_insertion_point(destructor:CMsgClientDPSendSpecialSurveyResponseReply)
  SharedDtor();
}

void CMsgClientDPSendSpecialSurveyResponseReply::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPSendSpecialSurveyResponseReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDPSendSpecialSurveyResponseReply::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPSendSpecialSurveyResponseReply& CMsgClientDPSendSpecialSurveyResponseReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDPSendSpecialSurveyResponseReply.base);
  return *internal_default_instance();
}


void CMsgClientDPSendSpecialSurveyResponseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPSendSpecialSurveyResponseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDPSendSpecialSurveyResponseReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDPSendSpecialSurveyResponseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDPSendSpecialSurveyResponseReply)
  return false;
#undef DO_
}

void CMsgClientDPSendSpecialSurveyResponseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDPSendSpecialSurveyResponseReply)
}

::google::protobuf::uint8* CMsgClientDPSendSpecialSurveyResponseReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDPSendSpecialSurveyResponseReply)
  return target;
}

size_t CMsgClientDPSendSpecialSurveyResponseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDPSendSpecialSurveyResponseReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint32 eResult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPSendSpecialSurveyResponseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDPSendSpecialSurveyResponseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPSendSpecialSurveyResponseReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPSendSpecialSurveyResponseReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDPSendSpecialSurveyResponseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDPSendSpecialSurveyResponseReply)
    MergeFrom(*source);
  }
}

void CMsgClientDPSendSpecialSurveyResponseReply::MergeFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDPSendSpecialSurveyResponseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPSendSpecialSurveyResponseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDPSendSpecialSurveyResponseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPSendSpecialSurveyResponseReply::CopyFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDPSendSpecialSurveyResponseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPSendSpecialSurveyResponseReply::IsInitialized() const {
  return true;
}

void CMsgClientDPSendSpecialSurveyResponseReply::Swap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPSendSpecialSurveyResponseReply::InternalSwap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDPSendSpecialSurveyResponseReply::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestForgottenPasswordEmail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestForgottenPasswordEmail::kAccountNameFieldNumber;
const int CMsgClientRequestForgottenPasswordEmail::kPasswordTriedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestForgottenPasswordEmail::CMsgClientRequestForgottenPasswordEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestForgottenPasswordEmail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestForgottenPasswordEmail)
}
CMsgClientRequestForgottenPasswordEmail::CMsgClientRequestForgottenPasswordEmail(const CMsgClientRequestForgottenPasswordEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_tried_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password_tried()) {
    password_tried_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_tried_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestForgottenPasswordEmail)
}

void CMsgClientRequestForgottenPasswordEmail::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_tried_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRequestForgottenPasswordEmail::~CMsgClientRequestForgottenPasswordEmail() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestForgottenPasswordEmail)
  SharedDtor();
}

void CMsgClientRequestForgottenPasswordEmail::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_tried_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestForgottenPasswordEmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestForgottenPasswordEmail::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestForgottenPasswordEmail& CMsgClientRequestForgottenPasswordEmail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestForgottenPasswordEmail.base);
  return *internal_default_instance();
}


void CMsgClientRequestForgottenPasswordEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_tried_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestForgottenPasswordEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestForgottenPasswordEmail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestForgottenPasswordEmail.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password_tried = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password_tried()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password_tried().data(), static_cast<int>(this->password_tried().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientRequestForgottenPasswordEmail.password_tried");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestForgottenPasswordEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestForgottenPasswordEmail)
  return false;
#undef DO_
}

void CMsgClientRequestForgottenPasswordEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestForgottenPasswordEmail.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string password_tried = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password_tried().data(), static_cast<int>(this->password_tried().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestForgottenPasswordEmail.password_tried");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password_tried(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestForgottenPasswordEmail)
}

::google::protobuf::uint8* CMsgClientRequestForgottenPasswordEmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestForgottenPasswordEmail.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string password_tried = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password_tried().data(), static_cast<int>(this->password_tried().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientRequestForgottenPasswordEmail.password_tried");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password_tried(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestForgottenPasswordEmail)
  return target;
}

size_t CMsgClientRequestForgottenPasswordEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestForgottenPasswordEmail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account_name = 1;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string password_tried = 2;
    if (has_password_tried()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password_tried());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestForgottenPasswordEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestForgottenPasswordEmail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestForgottenPasswordEmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestForgottenPasswordEmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestForgottenPasswordEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestForgottenPasswordEmail)
    MergeFrom(*source);
  }
}

void CMsgClientRequestForgottenPasswordEmail::MergeFrom(const CMsgClientRequestForgottenPasswordEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestForgottenPasswordEmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password_tried();
      password_tried_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_tried_);
    }
  }
}

void CMsgClientRequestForgottenPasswordEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestForgottenPasswordEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestForgottenPasswordEmail::CopyFrom(const CMsgClientRequestForgottenPasswordEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestForgottenPasswordEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestForgottenPasswordEmail::IsInitialized() const {
  return true;
}

void CMsgClientRequestForgottenPasswordEmail::Swap(CMsgClientRequestForgottenPasswordEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestForgottenPasswordEmail::InternalSwap(CMsgClientRequestForgottenPasswordEmail* other) {
  using std::swap;
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_tried_.Swap(&other->password_tried_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestForgottenPasswordEmail::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestForgottenPasswordEmailResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestForgottenPasswordEmailResponse::kEResultFieldNumber;
const int CMsgClientRequestForgottenPasswordEmailResponse::kUseSecretQuestionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestForgottenPasswordEmailResponse::CMsgClientRequestForgottenPasswordEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestForgottenPasswordEmailResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestForgottenPasswordEmailResponse)
}
CMsgClientRequestForgottenPasswordEmailResponse::CMsgClientRequestForgottenPasswordEmailResponse(const CMsgClientRequestForgottenPasswordEmailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_secret_question_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(use_secret_question_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestForgottenPasswordEmailResponse)
}

void CMsgClientRequestForgottenPasswordEmailResponse::SharedCtor() {
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_secret_question_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(use_secret_question_));
}

CMsgClientRequestForgottenPasswordEmailResponse::~CMsgClientRequestForgottenPasswordEmailResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestForgottenPasswordEmailResponse)
  SharedDtor();
}

void CMsgClientRequestForgottenPasswordEmailResponse::SharedDtor() {
}

void CMsgClientRequestForgottenPasswordEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestForgottenPasswordEmailResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestForgottenPasswordEmailResponse& CMsgClientRequestForgottenPasswordEmailResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestForgottenPasswordEmailResponse.base);
  return *internal_default_instance();
}


void CMsgClientRequestForgottenPasswordEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_secret_question_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(use_secret_question_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestForgottenPasswordEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestForgottenPasswordEmailResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_secret_question = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_use_secret_question();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_secret_question_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestForgottenPasswordEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestForgottenPasswordEmailResponse)
  return false;
#undef DO_
}

void CMsgClientRequestForgottenPasswordEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bool use_secret_question = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_secret_question(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestForgottenPasswordEmailResponse)
}

::google::protobuf::uint8* CMsgClientRequestForgottenPasswordEmailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bool use_secret_question = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_secret_question(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestForgottenPasswordEmailResponse)
  return target;
}

size_t CMsgClientRequestForgottenPasswordEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestForgottenPasswordEmailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 eResult = 1;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional bool use_secret_question = 2;
    if (has_use_secret_question()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestForgottenPasswordEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestForgottenPasswordEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestForgottenPasswordEmailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestForgottenPasswordEmailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestForgottenPasswordEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestForgottenPasswordEmailResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestForgottenPasswordEmailResponse::MergeFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestForgottenPasswordEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      use_secret_question_ = from.use_secret_question_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestForgottenPasswordEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestForgottenPasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestForgottenPasswordEmailResponse::CopyFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestForgottenPasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestForgottenPasswordEmailResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestForgottenPasswordEmailResponse::Swap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestForgottenPasswordEmailResponse::InternalSwap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(use_secret_question_, other->use_secret_question_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestForgottenPasswordEmailResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientItemAnnouncements::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientItemAnnouncements::kCountNewItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientItemAnnouncements::CMsgClientItemAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientItemAnnouncements.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientItemAnnouncements)
}
CMsgClientItemAnnouncements::CMsgClientItemAnnouncements(const CMsgClientItemAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_new_items_ = from.count_new_items_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientItemAnnouncements)
}

void CMsgClientItemAnnouncements::SharedCtor() {
  count_new_items_ = 0u;
}

CMsgClientItemAnnouncements::~CMsgClientItemAnnouncements() {
  // @@protoc_insertion_point(destructor:CMsgClientItemAnnouncements)
  SharedDtor();
}

void CMsgClientItemAnnouncements::SharedDtor() {
}

void CMsgClientItemAnnouncements::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientItemAnnouncements::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientItemAnnouncements& CMsgClientItemAnnouncements::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientItemAnnouncements.base);
  return *internal_default_instance();
}


void CMsgClientItemAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_new_items_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientItemAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientItemAnnouncements)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count_new_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_count_new_items();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientItemAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientItemAnnouncements)
  return false;
#undef DO_
}

void CMsgClientItemAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_items = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count_new_items(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientItemAnnouncements)
}

::google::protobuf::uint8* CMsgClientItemAnnouncements::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_items = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count_new_items(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientItemAnnouncements)
  return target;
}

size_t CMsgClientItemAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientItemAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 count_new_items = 1;
  if (has_count_new_items()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_new_items());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientItemAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientItemAnnouncements* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientItemAnnouncements>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientItemAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientItemAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgClientItemAnnouncements::MergeFrom(const CMsgClientItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_count_new_items()) {
    set_count_new_items(from.count_new_items());
  }
}

void CMsgClientItemAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientItemAnnouncements::CopyFrom(const CMsgClientItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientItemAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientItemAnnouncements::Swap(CMsgClientItemAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientItemAnnouncements::InternalSwap(CMsgClientItemAnnouncements* other) {
  using std::swap;
  swap(count_new_items_, other->count_new_items_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientItemAnnouncements::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestItemAnnouncements::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestItemAnnouncements::CMsgClientRequestItemAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestItemAnnouncements.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestItemAnnouncements)
}
CMsgClientRequestItemAnnouncements::CMsgClientRequestItemAnnouncements(const CMsgClientRequestItemAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestItemAnnouncements)
}

void CMsgClientRequestItemAnnouncements::SharedCtor() {
}

CMsgClientRequestItemAnnouncements::~CMsgClientRequestItemAnnouncements() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestItemAnnouncements)
  SharedDtor();
}

void CMsgClientRequestItemAnnouncements::SharedDtor() {
}

void CMsgClientRequestItemAnnouncements::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestItemAnnouncements::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestItemAnnouncements& CMsgClientRequestItemAnnouncements::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestItemAnnouncements.base);
  return *internal_default_instance();
}


void CMsgClientRequestItemAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestItemAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestItemAnnouncements)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestItemAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestItemAnnouncements)
  return false;
#undef DO_
}

void CMsgClientRequestItemAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestItemAnnouncements)
}

::google::protobuf::uint8* CMsgClientRequestItemAnnouncements::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestItemAnnouncements)
  return target;
}

size_t CMsgClientRequestItemAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestItemAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestItemAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestItemAnnouncements* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestItemAnnouncements>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestItemAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestItemAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgClientRequestItemAnnouncements::MergeFrom(const CMsgClientRequestItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestItemAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestItemAnnouncements::CopyFrom(const CMsgClientRequestItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestItemAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientRequestItemAnnouncements::Swap(CMsgClientRequestItemAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestItemAnnouncements::InternalSwap(CMsgClientRequestItemAnnouncements* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestItemAnnouncements::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUserNotifications_Notification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUserNotifications_Notification::kUserNotificationTypeFieldNumber;
const int CMsgClientUserNotifications_Notification::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUserNotifications_Notification::CMsgClientUserNotifications_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUserNotifications_Notification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUserNotifications.Notification)
}
CMsgClientUserNotifications_Notification::CMsgClientUserNotifications_Notification(const CMsgClientUserNotifications_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_notification_type_, &from.user_notification_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_notification_type_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUserNotifications.Notification)
}

void CMsgClientUserNotifications_Notification::SharedCtor() {
  ::memset(&user_notification_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&user_notification_type_)) + sizeof(count_));
}

CMsgClientUserNotifications_Notification::~CMsgClientUserNotifications_Notification() {
  // @@protoc_insertion_point(destructor:CMsgClientUserNotifications.Notification)
  SharedDtor();
}

void CMsgClientUserNotifications_Notification::SharedDtor() {
}

void CMsgClientUserNotifications_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUserNotifications_Notification::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUserNotifications_Notification& CMsgClientUserNotifications_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUserNotifications_Notification.base);
  return *internal_default_instance();
}


void CMsgClientUserNotifications_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&user_notification_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&user_notification_type_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUserNotifications_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUserNotifications.Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_notification_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_notification_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_notification_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUserNotifications.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUserNotifications.Notification)
  return false;
#undef DO_
}

void CMsgClientUserNotifications_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 user_notification_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_notification_type(), output);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUserNotifications.Notification)
}

::google::protobuf::uint8* CMsgClientUserNotifications_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 user_notification_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_notification_type(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUserNotifications.Notification)
  return target;
}

size_t CMsgClientUserNotifications_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUserNotifications.Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 user_notification_type = 1;
    if (has_user_notification_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_notification_type());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUserNotifications_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUserNotifications.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUserNotifications_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUserNotifications_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUserNotifications.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUserNotifications.Notification)
    MergeFrom(*source);
  }
}

void CMsgClientUserNotifications_Notification::MergeFrom(const CMsgClientUserNotifications_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUserNotifications.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      user_notification_type_ = from.user_notification_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUserNotifications_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUserNotifications.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUserNotifications_Notification::CopyFrom(const CMsgClientUserNotifications_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUserNotifications.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUserNotifications_Notification::IsInitialized() const {
  return true;
}

void CMsgClientUserNotifications_Notification::Swap(CMsgClientUserNotifications_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUserNotifications_Notification::InternalSwap(CMsgClientUserNotifications_Notification* other) {
  using std::swap;
  swap(user_notification_type_, other->user_notification_type_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUserNotifications_Notification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUserNotifications::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUserNotifications::kNotificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUserNotifications::CMsgClientUserNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUserNotifications.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUserNotifications)
}
CMsgClientUserNotifications::CMsgClientUserNotifications(const CMsgClientUserNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      notifications_(from.notifications_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientUserNotifications)
}

void CMsgClientUserNotifications::SharedCtor() {
}

CMsgClientUserNotifications::~CMsgClientUserNotifications() {
  // @@protoc_insertion_point(destructor:CMsgClientUserNotifications)
  SharedDtor();
}

void CMsgClientUserNotifications::SharedDtor() {
}

void CMsgClientUserNotifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUserNotifications::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUserNotifications& CMsgClientUserNotifications::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUserNotifications.base);
  return *internal_default_instance();
}


void CMsgClientUserNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUserNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUserNotifications)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientUserNotifications.Notification notifications = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUserNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUserNotifications)
  return false;
#undef DO_
}

void CMsgClientUserNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUserNotifications.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->notifications(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUserNotifications)
}

::google::protobuf::uint8* CMsgClientUserNotifications::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUserNotifications.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notifications(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUserNotifications)
  return target;
}

size_t CMsgClientUserNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUserNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUserNotifications.Notification notifications = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notifications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notifications(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUserNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUserNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUserNotifications* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUserNotifications>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUserNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUserNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientUserNotifications::MergeFrom(const CMsgClientUserNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUserNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void CMsgClientUserNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUserNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUserNotifications::CopyFrom(const CMsgClientUserNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUserNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUserNotifications::IsInitialized() const {
  return true;
}

void CMsgClientUserNotifications::Swap(CMsgClientUserNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUserNotifications::InternalSwap(CMsgClientUserNotifications* other) {
  using std::swap;
  CastToBase(&notifications_)->InternalSwap(CastToBase(&other->notifications_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUserNotifications::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCommentNotifications::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCommentNotifications::kCountNewCommentsFieldNumber;
const int CMsgClientCommentNotifications::kCountNewCommentsOwnerFieldNumber;
const int CMsgClientCommentNotifications::kCountNewCommentsSubscriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCommentNotifications::CMsgClientCommentNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCommentNotifications.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCommentNotifications)
}
CMsgClientCommentNotifications::CMsgClientCommentNotifications(const CMsgClientCommentNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_new_comments_, &from.count_new_comments_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
    reinterpret_cast<char*>(&count_new_comments_)) + sizeof(count_new_comments_subscriptions_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientCommentNotifications)
}

void CMsgClientCommentNotifications::SharedCtor() {
  ::memset(&count_new_comments_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
      reinterpret_cast<char*>(&count_new_comments_)) + sizeof(count_new_comments_subscriptions_));
}

CMsgClientCommentNotifications::~CMsgClientCommentNotifications() {
  // @@protoc_insertion_point(destructor:CMsgClientCommentNotifications)
  SharedDtor();
}

void CMsgClientCommentNotifications::SharedDtor() {
}

void CMsgClientCommentNotifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCommentNotifications::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCommentNotifications& CMsgClientCommentNotifications::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientCommentNotifications.base);
  return *internal_default_instance();
}


void CMsgClientCommentNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&count_new_comments_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
        reinterpret_cast<char*>(&count_new_comments_)) + sizeof(count_new_comments_subscriptions_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCommentNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCommentNotifications)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count_new_comments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_count_new_comments();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_new_comments_owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count_new_comments_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_new_comments_subscriptions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count_new_comments_subscriptions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_subscriptions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCommentNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCommentNotifications)
  return false;
#undef DO_
}

void CMsgClientCommentNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_comments = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count_new_comments(), output);
  }

  // optional uint32 count_new_comments_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count_new_comments_owner(), output);
  }

  // optional uint32 count_new_comments_subscriptions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count_new_comments_subscriptions(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCommentNotifications)
}

::google::protobuf::uint8* CMsgClientCommentNotifications::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_comments = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count_new_comments(), target);
  }

  // optional uint32 count_new_comments_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count_new_comments_owner(), target);
  }

  // optional uint32 count_new_comments_subscriptions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count_new_comments_subscriptions(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCommentNotifications)
  return target;
}

size_t CMsgClientCommentNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCommentNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 count_new_comments = 1;
    if (has_count_new_comments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments());
    }

    // optional uint32 count_new_comments_owner = 2;
    if (has_count_new_comments_owner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments_owner());
    }

    // optional uint32 count_new_comments_subscriptions = 3;
    if (has_count_new_comments_subscriptions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments_subscriptions());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCommentNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCommentNotifications* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCommentNotifications>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCommentNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCommentNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientCommentNotifications::MergeFrom(const CMsgClientCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      count_new_comments_ = from.count_new_comments_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_new_comments_owner_ = from.count_new_comments_owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_new_comments_subscriptions_ = from.count_new_comments_subscriptions_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCommentNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCommentNotifications::CopyFrom(const CMsgClientCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCommentNotifications::IsInitialized() const {
  return true;
}

void CMsgClientCommentNotifications::Swap(CMsgClientCommentNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCommentNotifications::InternalSwap(CMsgClientCommentNotifications* other) {
  using std::swap;
  swap(count_new_comments_, other->count_new_comments_);
  swap(count_new_comments_owner_, other->count_new_comments_owner_);
  swap(count_new_comments_subscriptions_, other->count_new_comments_subscriptions_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCommentNotifications::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestCommentNotifications::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestCommentNotifications::CMsgClientRequestCommentNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestCommentNotifications.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestCommentNotifications)
}
CMsgClientRequestCommentNotifications::CMsgClientRequestCommentNotifications(const CMsgClientRequestCommentNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestCommentNotifications)
}

void CMsgClientRequestCommentNotifications::SharedCtor() {
}

CMsgClientRequestCommentNotifications::~CMsgClientRequestCommentNotifications() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestCommentNotifications)
  SharedDtor();
}

void CMsgClientRequestCommentNotifications::SharedDtor() {
}

void CMsgClientRequestCommentNotifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestCommentNotifications::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestCommentNotifications& CMsgClientRequestCommentNotifications::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestCommentNotifications.base);
  return *internal_default_instance();
}


void CMsgClientRequestCommentNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestCommentNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestCommentNotifications)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestCommentNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestCommentNotifications)
  return false;
#undef DO_
}

void CMsgClientRequestCommentNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestCommentNotifications)
}

::google::protobuf::uint8* CMsgClientRequestCommentNotifications::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestCommentNotifications)
  return target;
}

size_t CMsgClientRequestCommentNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestCommentNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestCommentNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestCommentNotifications* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestCommentNotifications>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestCommentNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestCommentNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientRequestCommentNotifications::MergeFrom(const CMsgClientRequestCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestCommentNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestCommentNotifications::CopyFrom(const CMsgClientRequestCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestCommentNotifications::IsInitialized() const {
  return true;
}

void CMsgClientRequestCommentNotifications::Swap(CMsgClientRequestCommentNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestCommentNotifications::InternalSwap(CMsgClientRequestCommentNotifications* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestCommentNotifications::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientOfflineMessageNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOfflineMessageNotification::kOfflineMessagesFieldNumber;
const int CMsgClientOfflineMessageNotification::kFriendsWithOfflineMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOfflineMessageNotification::CMsgClientOfflineMessageNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientOfflineMessageNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientOfflineMessageNotification)
}
CMsgClientOfflineMessageNotification::CMsgClientOfflineMessageNotification(const CMsgClientOfflineMessageNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friends_with_offline_messages_(from.friends_with_offline_messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offline_messages_ = from.offline_messages_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientOfflineMessageNotification)
}

void CMsgClientOfflineMessageNotification::SharedCtor() {
  offline_messages_ = 0u;
}

CMsgClientOfflineMessageNotification::~CMsgClientOfflineMessageNotification() {
  // @@protoc_insertion_point(destructor:CMsgClientOfflineMessageNotification)
  SharedDtor();
}

void CMsgClientOfflineMessageNotification::SharedDtor() {
}

void CMsgClientOfflineMessageNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientOfflineMessageNotification::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientOfflineMessageNotification& CMsgClientOfflineMessageNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientOfflineMessageNotification.base);
  return *internal_default_instance();
}


void CMsgClientOfflineMessageNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_with_offline_messages_.Clear();
  offline_messages_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientOfflineMessageNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientOfflineMessageNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 offline_messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_offline_messages();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offline_messages_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friends_with_offline_messages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_friends_with_offline_messages())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friends_with_offline_messages())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientOfflineMessageNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientOfflineMessageNotification)
  return false;
#undef DO_
}

void CMsgClientOfflineMessageNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 offline_messages = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offline_messages(), output);
  }

  // repeated uint32 friends_with_offline_messages = 2;
  for (int i = 0, n = this->friends_with_offline_messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->friends_with_offline_messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientOfflineMessageNotification)
}

::google::protobuf::uint8* CMsgClientOfflineMessageNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 offline_messages = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offline_messages(), target);
  }

  // repeated uint32 friends_with_offline_messages = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->friends_with_offline_messages_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientOfflineMessageNotification)
  return target;
}

size_t CMsgClientOfflineMessageNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientOfflineMessageNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 friends_with_offline_messages = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friends_with_offline_messages_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friends_with_offline_messages_size());
    total_size += data_size;
  }

  // optional uint32 offline_messages = 1;
  if (has_offline_messages()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offline_messages());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientOfflineMessageNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientOfflineMessageNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOfflineMessageNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientOfflineMessageNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientOfflineMessageNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientOfflineMessageNotification)
    MergeFrom(*source);
  }
}

void CMsgClientOfflineMessageNotification::MergeFrom(const CMsgClientOfflineMessageNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientOfflineMessageNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_with_offline_messages_.MergeFrom(from.friends_with_offline_messages_);
  if (from.has_offline_messages()) {
    set_offline_messages(from.offline_messages());
  }
}

void CMsgClientOfflineMessageNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientOfflineMessageNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOfflineMessageNotification::CopyFrom(const CMsgClientOfflineMessageNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientOfflineMessageNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOfflineMessageNotification::IsInitialized() const {
  return true;
}

void CMsgClientOfflineMessageNotification::Swap(CMsgClientOfflineMessageNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOfflineMessageNotification::InternalSwap(CMsgClientOfflineMessageNotification* other) {
  using std::swap;
  friends_with_offline_messages_.InternalSwap(&other->friends_with_offline_messages_);
  swap(offline_messages_, other->offline_messages_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientOfflineMessageNotification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestOfflineMessageCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestOfflineMessageCount::CMsgClientRequestOfflineMessageCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestOfflineMessageCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestOfflineMessageCount)
}
CMsgClientRequestOfflineMessageCount::CMsgClientRequestOfflineMessageCount(const CMsgClientRequestOfflineMessageCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestOfflineMessageCount)
}

void CMsgClientRequestOfflineMessageCount::SharedCtor() {
}

CMsgClientRequestOfflineMessageCount::~CMsgClientRequestOfflineMessageCount() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestOfflineMessageCount)
  SharedDtor();
}

void CMsgClientRequestOfflineMessageCount::SharedDtor() {
}

void CMsgClientRequestOfflineMessageCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestOfflineMessageCount::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestOfflineMessageCount& CMsgClientRequestOfflineMessageCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientRequestOfflineMessageCount.base);
  return *internal_default_instance();
}


void CMsgClientRequestOfflineMessageCount::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestOfflineMessageCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestOfflineMessageCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestOfflineMessageCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestOfflineMessageCount)
  return false;
#undef DO_
}

void CMsgClientRequestOfflineMessageCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestOfflineMessageCount)
}

::google::protobuf::uint8* CMsgClientRequestOfflineMessageCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestOfflineMessageCount)
  return target;
}

size_t CMsgClientRequestOfflineMessageCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestOfflineMessageCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestOfflineMessageCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestOfflineMessageCount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestOfflineMessageCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestOfflineMessageCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestOfflineMessageCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestOfflineMessageCount)
    MergeFrom(*source);
  }
}

void CMsgClientRequestOfflineMessageCount::MergeFrom(const CMsgClientRequestOfflineMessageCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestOfflineMessageCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestOfflineMessageCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestOfflineMessageCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestOfflineMessageCount::CopyFrom(const CMsgClientRequestOfflineMessageCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestOfflineMessageCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestOfflineMessageCount::IsInitialized() const {
  return true;
}

void CMsgClientRequestOfflineMessageCount::Swap(CMsgClientRequestOfflineMessageCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestOfflineMessageCount::InternalSwap(CMsgClientRequestOfflineMessageCount* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestOfflineMessageCount::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistory::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistory::CMsgClientChatGetFriendMessageHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientChatGetFriendMessageHistory)
}
CMsgClientChatGetFriendMessageHistory::CMsgClientChatGetFriendMessageHistory(const CMsgClientChatGetFriendMessageHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientChatGetFriendMessageHistory)
}

void CMsgClientChatGetFriendMessageHistory::SharedCtor() {
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientChatGetFriendMessageHistory::~CMsgClientChatGetFriendMessageHistory() {
  // @@protoc_insertion_point(destructor:CMsgClientChatGetFriendMessageHistory)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistory::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistory::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistory& CMsgClientChatGetFriendMessageHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistory.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientChatGetFriendMessageHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientChatGetFriendMessageHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientChatGetFriendMessageHistory)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientChatGetFriendMessageHistory)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientChatGetFriendMessageHistory)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientChatGetFriendMessageHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientChatGetFriendMessageHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientChatGetFriendMessageHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientChatGetFriendMessageHistory)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistory::MergeFrom(const CMsgClientChatGetFriendMessageHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientChatGetFriendMessageHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgClientChatGetFriendMessageHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientChatGetFriendMessageHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistory::CopyFrom(const CMsgClientChatGetFriendMessageHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientChatGetFriendMessageHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistory::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistory::Swap(CMsgClientChatGetFriendMessageHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistory::InternalSwap(CMsgClientChatGetFriendMessageHistory* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistory::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kAccountidFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kTimestampFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kMessageFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kUnreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}
CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&unread_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(unread_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unread_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(unread_));
}

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::~CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage() {
  // @@protoc_insertion_point(destructor:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&accountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unread_) -
        reinterpret_cast<char*>(&accountid_)) + sizeof(unread_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool unread = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_unread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional bool unread = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->unread(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional bool unread = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->unread(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional bool unread = 4;
    if (has_unread()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      unread_ = from.unread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::Swap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(timestamp_, other->timestamp_);
  swap(unread_, other->unread_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistoryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistoryResponse::kSteamidFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse::kSuccessFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryResponse::CMsgClientChatGetFriendMessageHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientChatGetFriendMessageHistoryResponse)
}
CMsgClientChatGetFriendMessageHistoryResponse::CMsgClientChatGetFriendMessageHistoryResponse(const CMsgClientChatGetFriendMessageHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientChatGetFriendMessageHistoryResponse)
}

void CMsgClientChatGetFriendMessageHistoryResponse::SharedCtor() {
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(success_));
}

CMsgClientChatGetFriendMessageHistoryResponse::~CMsgClientChatGetFriendMessageHistoryResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientChatGetFriendMessageHistoryResponse)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryResponse::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistoryResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistoryResponse& CMsgClientChatGetFriendMessageHistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryResponse.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&success_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(success_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientChatGetFriendMessageHistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientChatGetFriendMessageHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientChatGetFriendMessageHistoryResponse)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 success = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  // repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->messages(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientChatGetFriendMessageHistoryResponse)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 success = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  // repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientChatGetFriendMessageHistoryResponse)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientChatGetFriendMessageHistoryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientChatGetFriendMessageHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientChatGetFriendMessageHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientChatGetFriendMessageHistoryResponse)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse::MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientChatGetFriendMessageHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientChatGetFriendMessageHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryResponse::CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientChatGetFriendMessageHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryResponse::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryResponse::Swap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryResponse::InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
  using std::swap;
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  swap(steamid_, other->steamid_);
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CMsgClientChatGetFriendMessageHistoryForOfflineMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}
CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CMsgClientChatGetFriendMessageHistoryForOfflineMessages(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SharedCtor() {
}

CMsgClientChatGetFriendMessageHistoryForOfflineMessages::~CMsgClientChatGetFriendMessageHistoryForOfflineMessages() {
  // @@protoc_insertion_point(destructor:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& CMsgClientChatGetFriendMessageHistoryForOfflineMessages::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryForOfflineMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryForOfflineMessages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistoryForOfflineMessages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergeFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CopyFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryForOfflineMessages::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::Swap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InternalSwap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryForOfflineMessages::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFSGetFriendsSteamLevels::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevels::kAccountidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevels::CMsgClientFSGetFriendsSteamLevels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevels.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFSGetFriendsSteamLevels)
}
CMsgClientFSGetFriendsSteamLevels::CMsgClientFSGetFriendsSteamLevels(const CMsgClientFSGetFriendsSteamLevels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      accountids_(from.accountids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientFSGetFriendsSteamLevels)
}

void CMsgClientFSGetFriendsSteamLevels::SharedCtor() {
}

CMsgClientFSGetFriendsSteamLevels::~CMsgClientFSGetFriendsSteamLevels() {
  // @@protoc_insertion_point(destructor:CMsgClientFSGetFriendsSteamLevels)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevels::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevels::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFSGetFriendsSteamLevels::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFSGetFriendsSteamLevels& CMsgClientFSGetFriendsSteamLevels::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevels.base);
  return *internal_default_instance();
}


void CMsgClientFSGetFriendsSteamLevels::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFSGetFriendsSteamLevels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFSGetFriendsSteamLevels)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_accountids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFSGetFriendsSteamLevels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFSGetFriendsSteamLevels)
  return false;
#undef DO_
}

void CMsgClientFSGetFriendsSteamLevels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  for (int i = 0, n = this->accountids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->accountids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFSGetFriendsSteamLevels)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->accountids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFSGetFriendsSteamLevels)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFSGetFriendsSteamLevels)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 accountids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->accountids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->accountids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFSGetFriendsSteamLevels)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFSGetFriendsSteamLevels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFSGetFriendsSteamLevels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFSGetFriendsSteamLevels)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevels::MergeFrom(const CMsgClientFSGetFriendsSteamLevels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFSGetFriendsSteamLevels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accountids_.MergeFrom(from.accountids_);
}

void CMsgClientFSGetFriendsSteamLevels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFSGetFriendsSteamLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevels::CopyFrom(const CMsgClientFSGetFriendsSteamLevels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFSGetFriendsSteamLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevels::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevels::Swap(CMsgClientFSGetFriendsSteamLevels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevels::InternalSwap(CMsgClientFSGetFriendsSteamLevels* other) {
  using std::swap;
  accountids_.InternalSwap(&other->accountids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevels::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevelsResponse_Friend::kAccountidFieldNumber;
const int CMsgClientFSGetFriendsSteamLevelsResponse_Friend::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CMsgClientFSGetFriendsSteamLevelsResponse_Friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}
CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CMsgClientFSGetFriendsSteamLevelsResponse_Friend(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(level_));
}

CMsgClientFSGetFriendsSteamLevelsResponse_Friend::~CMsgClientFSGetFriendsSteamLevelsResponse_Friend() {
  // @@protoc_insertion_point(destructor:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse_Friend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend.base);
  return *internal_default_instance();
}


void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&accountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&accountid_)) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return false;
#undef DO_
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevelsResponse_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevelsResponse_Friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFSGetFriendsSteamLevelsResponse_Friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::Swap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevelsResponse_Friend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFSGetFriendsSteamLevelsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevelsResponse::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevelsResponse::CMsgClientFSGetFriendsSteamLevelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFSGetFriendsSteamLevelsResponse)
}
CMsgClientFSGetFriendsSteamLevelsResponse::CMsgClientFSGetFriendsSteamLevelsResponse(const CMsgClientFSGetFriendsSteamLevelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientFSGetFriendsSteamLevelsResponse)
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SharedCtor() {
}

CMsgClientFSGetFriendsSteamLevelsResponse::~CMsgClientFSGetFriendsSteamLevelsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientFSGetFriendsSteamLevelsResponse)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFSGetFriendsSteamLevelsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFSGetFriendsSteamLevelsResponse& CMsgClientFSGetFriendsSteamLevelsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse.base);
  return *internal_default_instance();
}


void CMsgClientFSGetFriendsSteamLevelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFSGetFriendsSteamLevelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFSGetFriendsSteamLevelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFSGetFriendsSteamLevelsResponse)
  return false;
#undef DO_
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->friends(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFSGetFriendsSteamLevelsResponse)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevelsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->friends(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFSGetFriendsSteamLevelsResponse)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->friends_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friends(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevelsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFSGetFriendsSteamLevelsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFSGetFriendsSteamLevelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFSGetFriendsSteamLevelsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse::MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
}

void CMsgClientFSGetFriendsSteamLevelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevelsResponse::CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFSGetFriendsSteamLevelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevelsResponse::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::Swap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevelsResponse::InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
  using std::swap;
  CastToBase(&friends_)->InternalSwap(CastToBase(&other->friends_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevelsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientEmailAddrInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailAddrInfo::kEmailAddressFieldNumber;
const int CMsgClientEmailAddrInfo::kEmailIsValidatedFieldNumber;
const int CMsgClientEmailAddrInfo::kEmailValidationChangedFieldNumber;
const int CMsgClientEmailAddrInfo::kCredentialChangeRequiresCodeFieldNumber;
const int CMsgClientEmailAddrInfo::kPasswordOrSecretqaChangeRequiresCodeFieldNumber;
const int CMsgClientEmailAddrInfo::kRemindUserAboutEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailAddrInfo::CMsgClientEmailAddrInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientEmailAddrInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientEmailAddrInfo)
}
CMsgClientEmailAddrInfo::CMsgClientEmailAddrInfo(const CMsgClientEmailAddrInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email_address()) {
    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  ::memcpy(&email_is_validated_, &from.email_is_validated_,
    static_cast<size_t>(reinterpret_cast<char*>(&remind_user_about_email_) -
    reinterpret_cast<char*>(&email_is_validated_)) + sizeof(remind_user_about_email_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientEmailAddrInfo)
}

void CMsgClientEmailAddrInfo::SharedCtor() {
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&email_is_validated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remind_user_about_email_) -
      reinterpret_cast<char*>(&email_is_validated_)) + sizeof(remind_user_about_email_));
}

CMsgClientEmailAddrInfo::~CMsgClientEmailAddrInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientEmailAddrInfo)
  SharedDtor();
}

void CMsgClientEmailAddrInfo::SharedDtor() {
  email_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientEmailAddrInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientEmailAddrInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmailAddrInfo& CMsgClientEmailAddrInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientEmailAddrInfo.base);
  return *internal_default_instance();
}


void CMsgClientEmailAddrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    email_address_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&email_is_validated_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&remind_user_about_email_) -
        reinterpret_cast<char*>(&email_is_validated_)) + sizeof(remind_user_about_email_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmailAddrInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientEmailAddrInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email_address().data(), static_cast<int>(this->email_address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmailAddrInfo.email_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool email_is_validated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_email_is_validated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_is_validated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool email_validation_changed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_email_validation_changed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_validation_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool credential_change_requires_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_credential_change_requires_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &credential_change_requires_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool password_or_secretqa_change_requires_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_password_or_secretqa_change_requires_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &password_or_secretqa_change_requires_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool remind_user_about_email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_remind_user_about_email();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remind_user_about_email_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientEmailAddrInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientEmailAddrInfo)
  return false;
#undef DO_
}

void CMsgClientEmailAddrInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailAddrInfo.email_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email_address(), output);
  }

  // optional bool email_is_validated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->email_is_validated(), output);
  }

  // optional bool email_validation_changed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->email_validation_changed(), output);
  }

  // optional bool credential_change_requires_code = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->credential_change_requires_code(), output);
  }

  // optional bool password_or_secretqa_change_requires_code = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->password_or_secretqa_change_requires_code(), output);
  }

  // optional bool remind_user_about_email = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->remind_user_about_email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientEmailAddrInfo)
}

::google::protobuf::uint8* CMsgClientEmailAddrInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmailAddrInfo.email_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email_address(), target);
  }

  // optional bool email_is_validated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->email_is_validated(), target);
  }

  // optional bool email_validation_changed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->email_validation_changed(), target);
  }

  // optional bool credential_change_requires_code = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->credential_change_requires_code(), target);
  }

  // optional bool password_or_secretqa_change_requires_code = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->password_or_secretqa_change_requires_code(), target);
  }

  // optional bool remind_user_about_email = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->remind_user_about_email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientEmailAddrInfo)
  return target;
}

size_t CMsgClientEmailAddrInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientEmailAddrInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string email_address = 1;
    if (has_email_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email_address());
    }

    // optional bool email_is_validated = 2;
    if (has_email_is_validated()) {
      total_size += 1 + 1;
    }

    // optional bool email_validation_changed = 3;
    if (has_email_validation_changed()) {
      total_size += 1 + 1;
    }

    // optional bool credential_change_requires_code = 4;
    if (has_credential_change_requires_code()) {
      total_size += 1 + 1;
    }

    // optional bool password_or_secretqa_change_requires_code = 5;
    if (has_password_or_secretqa_change_requires_code()) {
      total_size += 1 + 1;
    }

    // optional bool remind_user_about_email = 6;
    if (has_remind_user_about_email()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientEmailAddrInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientEmailAddrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailAddrInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmailAddrInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientEmailAddrInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientEmailAddrInfo)
    MergeFrom(*source);
  }
}

void CMsgClientEmailAddrInfo::MergeFrom(const CMsgClientEmailAddrInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientEmailAddrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email_address();
      email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
    }
    if (cached_has_bits & 0x00000002u) {
      email_is_validated_ = from.email_is_validated_;
    }
    if (cached_has_bits & 0x00000004u) {
      email_validation_changed_ = from.email_validation_changed_;
    }
    if (cached_has_bits & 0x00000008u) {
      credential_change_requires_code_ = from.credential_change_requires_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      password_or_secretqa_change_requires_code_ = from.password_or_secretqa_change_requires_code_;
    }
    if (cached_has_bits & 0x00000020u) {
      remind_user_about_email_ = from.remind_user_about_email_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailAddrInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientEmailAddrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailAddrInfo::CopyFrom(const CMsgClientEmailAddrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientEmailAddrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailAddrInfo::IsInitialized() const {
  return true;
}

void CMsgClientEmailAddrInfo::Swap(CMsgClientEmailAddrInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailAddrInfo::InternalSwap(CMsgClientEmailAddrInfo* other) {
  using std::swap;
  email_address_.Swap(&other->email_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(email_is_validated_, other->email_is_validated_);
  swap(email_validation_changed_, other->email_validation_changed_);
  swap(credential_change_requires_code_, other->credential_change_requires_code_);
  swap(password_or_secretqa_change_requires_code_, other->password_or_secretqa_change_requires_code_);
  swap(remind_user_about_email_, other->remind_user_about_email_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientEmailAddrInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREEnumeratePublishedFiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFiles::kAppIdFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kQueryTypeFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kStartIndexFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kDaysFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kCountFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kTagsFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kUserTagsFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kMatchingFileTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFiles::CMsgCREEnumeratePublishedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREEnumeratePublishedFiles)
}
CMsgCREEnumeratePublishedFiles::CMsgCREEnumeratePublishedFiles(const CMsgCREEnumeratePublishedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      user_tags_(from.user_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&matching_file_type_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(matching_file_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgCREEnumeratePublishedFiles)
}

void CMsgCREEnumeratePublishedFiles::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(count_));
  matching_file_type_ = 13u;
}

CMsgCREEnumeratePublishedFiles::~CMsgCREEnumeratePublishedFiles() {
  // @@protoc_insertion_point(destructor:CMsgCREEnumeratePublishedFiles)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFiles::SharedDtor() {
}

void CMsgCREEnumeratePublishedFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREEnumeratePublishedFiles::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREEnumeratePublishedFiles& CMsgCREEnumeratePublishedFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFiles.base);
  return *internal_default_instance();
}


void CMsgCREEnumeratePublishedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  user_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(count_));
    matching_file_type_ = 13u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREEnumeratePublishedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREEnumeratePublishedFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 query_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_query_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgCREEnumeratePublishedFiles.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string user_tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_user_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_tags(this->user_tags_size() - 1).data(),
            static_cast<int>(this->user_tags(this->user_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgCREEnumeratePublishedFiles.user_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 8 [default = 13];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_matching_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREEnumeratePublishedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREEnumeratePublishedFiles)
  return false;
#undef DO_
}

void CMsgCREEnumeratePublishedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 query_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->query_type(), output);
  }

  // optional uint32 start_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start_index(), output);
  }

  // optional uint32 days = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->days(), output);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // repeated string tags = 6;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgCREEnumeratePublishedFiles.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->tags(i), output);
  }

  // repeated string user_tags = 7;
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_tags(i).data(), static_cast<int>(this->user_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgCREEnumeratePublishedFiles.user_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->user_tags(i), output);
  }

  // optional uint32 matching_file_type = 8 [default = 13];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->matching_file_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREEnumeratePublishedFiles)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 query_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->query_type(), target);
  }

  // optional uint32 start_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start_index(), target);
  }

  // optional uint32 days = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->days(), target);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // repeated string tags = 6;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgCREEnumeratePublishedFiles.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->tags(i), target);
  }

  // repeated string user_tags = 7;
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_tags(i).data(), static_cast<int>(this->user_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgCREEnumeratePublishedFiles.user_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->user_tags(i), target);
  }

  // optional uint32 matching_file_type = 8 [default = 13];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->matching_file_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREEnumeratePublishedFiles)
  return target;
}

size_t CMsgCREEnumeratePublishedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREEnumeratePublishedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tags = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string user_tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_tags_size());
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->user_tags(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 query_type = 2;
    if (has_query_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_type());
    }

    // optional uint32 start_index = 3;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 days = 4;
    if (has_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days());
    }

    // optional uint32 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 matching_file_type = 8 [default = 13];
    if (has_matching_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREEnumeratePublishedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREEnumeratePublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREEnumeratePublishedFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREEnumeratePublishedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREEnumeratePublishedFiles)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFiles::MergeFrom(const CMsgCREEnumeratePublishedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREEnumeratePublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  user_tags_.MergeFrom(from.user_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      query_type_ = from.query_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      days_ = from.days_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000020u) {
      matching_file_type_ = from.matching_file_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREEnumeratePublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFiles::CopyFrom(const CMsgCREEnumeratePublishedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREEnumeratePublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFiles::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFiles::Swap(CMsgCREEnumeratePublishedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFiles::InternalSwap(CMsgCREEnumeratePublishedFiles* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  user_tags_.InternalSwap(CastToBase(&other->user_tags_));
  swap(app_id_, other->app_id_);
  swap(query_type_, other->query_type_);
  swap(start_index_, other->start_index_);
  swap(days_, other->days_);
  swap(count_, other->count_);
  swap(matching_file_type_, other->matching_file_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFiles::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kVotesForFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kVotesAgainstFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kReportsFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}
CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
}

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::~CMsgCREEnumeratePublishedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_votes_for();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_votes_against();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_against_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_reports();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->votes_for(), output);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->votes_against(), output);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reports(), output);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->votes_for(), target);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->votes_against(), target);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reports(), target);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional int32 votes_for = 2;
    if (has_votes_for()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_for());
    }

    // optional int32 votes_against = 3;
    if (has_votes_against()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_against());
    }

    // optional int32 reports = 4;
    if (has_reports()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reports());
    }

    // optional float score = 5;
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergeFrom(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_for_ = from.votes_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_against_ = from.votes_against_;
    }
    if (cached_has_bits & 0x00000008u) {
      reports_ = from.reports_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CopyFrom(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::Swap(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InternalSwap(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(votes_for_, other->votes_for_);
  swap(votes_against_, other->votes_against_);
  swap(reports_, other->reports_);
  swap(score_, other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREEnumeratePublishedFilesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFilesResponse::kEresultFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse::kPublishedFilesFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFilesResponse::CMsgCREEnumeratePublishedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFilesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREEnumeratePublishedFilesResponse)
}
CMsgCREEnumeratePublishedFilesResponse::CMsgCREEnumeratePublishedFilesResponse(const CMsgCREEnumeratePublishedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgCREEnumeratePublishedFilesResponse)
}

void CMsgCREEnumeratePublishedFilesResponse::SharedCtor() {
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgCREEnumeratePublishedFilesResponse::~CMsgCREEnumeratePublishedFilesResponse() {
  // @@protoc_insertion_point(destructor:CMsgCREEnumeratePublishedFilesResponse)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFilesResponse::SharedDtor() {
}

void CMsgCREEnumeratePublishedFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREEnumeratePublishedFilesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREEnumeratePublishedFilesResponse& CMsgCREEnumeratePublishedFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREEnumeratePublishedFilesResponse.base);
  return *internal_default_instance();
}


void CMsgCREEnumeratePublishedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREEnumeratePublishedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREEnumeratePublishedFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREEnumeratePublishedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREEnumeratePublishedFilesResponse)
  return false;
#undef DO_
}

void CMsgCREEnumeratePublishedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREEnumeratePublishedFilesResponse)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREEnumeratePublishedFilesResponse)
  return target;
}

size_t CMsgCREEnumeratePublishedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREEnumeratePublishedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREEnumeratePublishedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREEnumeratePublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREEnumeratePublishedFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREEnumeratePublishedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREEnumeratePublishedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFilesResponse::MergeFrom(const CMsgCREEnumeratePublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREEnumeratePublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREEnumeratePublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFilesResponse::CopyFrom(const CMsgCREEnumeratePublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREEnumeratePublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFilesResponse::Swap(CMsgCREEnumeratePublishedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFilesResponse::InternalSwap(CMsgCREEnumeratePublishedFilesResponse* other) {
  using std::swap;
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFilesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummary_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummary_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummary_PublishedFileId::CMsgCREItemVoteSummary_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummary_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREItemVoteSummary.PublishedFileId)
}
CMsgCREItemVoteSummary_PublishedFileId::CMsgCREItemVoteSummary_PublishedFileId(const CMsgCREItemVoteSummary_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCREItemVoteSummary.PublishedFileId)
}

void CMsgCREItemVoteSummary_PublishedFileId::SharedCtor() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgCREItemVoteSummary_PublishedFileId::~CMsgCREItemVoteSummary_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgCREItemVoteSummary.PublishedFileId)
  SharedDtor();
}

void CMsgCREItemVoteSummary_PublishedFileId::SharedDtor() {
}

void CMsgCREItemVoteSummary_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummary_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummary_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummary_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummary_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREItemVoteSummary.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREItemVoteSummary.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREItemVoteSummary.PublishedFileId)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummary_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREItemVoteSummary.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREItemVoteSummary_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREItemVoteSummary.PublishedFileId)
  return target;
}

size_t CMsgCREItemVoteSummary_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREItemVoteSummary.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummary_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREItemVoteSummary.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummary_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummary_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREItemVoteSummary.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREItemVoteSummary.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummary_PublishedFileId::MergeFrom(const CMsgCREItemVoteSummary_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREItemVoteSummary.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgCREItemVoteSummary_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREItemVoteSummary.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummary_PublishedFileId::CopyFrom(const CMsgCREItemVoteSummary_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREItemVoteSummary.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummary_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummary_PublishedFileId::Swap(CMsgCREItemVoteSummary_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummary_PublishedFileId::InternalSwap(CMsgCREItemVoteSummary_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummary_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummary::kPublishedFileIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummary::CMsgCREItemVoteSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREItemVoteSummary)
}
CMsgCREItemVoteSummary::CMsgCREItemVoteSummary(const CMsgCREItemVoteSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      published_file_ids_(from.published_file_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgCREItemVoteSummary)
}

void CMsgCREItemVoteSummary::SharedCtor() {
}

CMsgCREItemVoteSummary::~CMsgCREItemVoteSummary() {
  // @@protoc_insertion_point(destructor:CMsgCREItemVoteSummary)
  SharedDtor();
}

void CMsgCREItemVoteSummary::SharedDtor() {
}

void CMsgCREItemVoteSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummary::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummary& CMsgCREItemVoteSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummary.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREItemVoteSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_file_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREItemVoteSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREItemVoteSummary)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->published_file_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREItemVoteSummary)
}

::google::protobuf::uint8* CMsgCREItemVoteSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->published_file_ids(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREItemVoteSummary)
  return target;
}

size_t CMsgCREItemVoteSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREItemVoteSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->published_file_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_file_ids(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREItemVoteSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREItemVoteSummary)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummary::MergeFrom(const CMsgCREItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_file_ids_.MergeFrom(from.published_file_ids_);
}

void CMsgCREItemVoteSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummary::CopyFrom(const CMsgCREItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummary::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummary::Swap(CMsgCREItemVoteSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummary::InternalSwap(CMsgCREItemVoteSummary* other) {
  using std::swap;
  CastToBase(&published_file_ids_)->InternalSwap(CastToBase(&other->published_file_ids_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummary::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kPublishedFileIdFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kVotesForFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kVotesAgainstFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kReportsFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CMsgCREItemVoteSummaryResponse_ItemVoteSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}
CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CMsgCREItemVoteSummaryResponse_ItemVoteSummary(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
}

CMsgCREItemVoteSummaryResponse_ItemVoteSummary::~CMsgCREItemVoteSummaryResponse_ItemVoteSummary() {
  // @@protoc_insertion_point(destructor:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  SharedDtor();
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SharedDtor() {
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse_ItemVoteSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_votes_for();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_votes_against();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_against_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_reports();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->votes_for(), output);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->votes_against(), output);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reports(), output);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}

::google::protobuf::uint8* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->votes_for(), target);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->votes_against(), target);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reports(), target);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return target;
}

size_t CMsgCREItemVoteSummaryResponse_ItemVoteSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional int32 votes_for = 2;
    if (has_votes_for()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_for());
    }

    // optional int32 votes_against = 3;
    if (has_votes_against()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_against());
    }

    // optional int32 reports = 4;
    if (has_reports()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reports());
    }

    // optional float score = 5;
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummaryResponse_ItemVoteSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummaryResponse_ItemVoteSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergeFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_for_ = from.votes_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_against_ = from.votes_against_;
    }
    if (cached_has_bits & 0x00000008u) {
      reports_ = from.reports_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CopyFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::Swap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InternalSwap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(votes_for_, other->votes_for_);
  swap(votes_against_, other->votes_against_);
  swap(reports_, other->reports_);
  swap(score_, other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummaryResponse_ItemVoteSummary::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummaryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummaryResponse::kEresultFieldNumber;
const int CMsgCREItemVoteSummaryResponse::kItemVoteSummariesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummaryResponse::CMsgCREItemVoteSummaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummaryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREItemVoteSummaryResponse)
}
CMsgCREItemVoteSummaryResponse::CMsgCREItemVoteSummaryResponse(const CMsgCREItemVoteSummaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      item_vote_summaries_(from.item_vote_summaries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgCREItemVoteSummaryResponse)
}

void CMsgCREItemVoteSummaryResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgCREItemVoteSummaryResponse::~CMsgCREItemVoteSummaryResponse() {
  // @@protoc_insertion_point(destructor:CMsgCREItemVoteSummaryResponse)
  SharedDtor();
}

void CMsgCREItemVoteSummaryResponse::SharedDtor() {
}

void CMsgCREItemVoteSummaryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummaryResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummaryResponse& CMsgCREItemVoteSummaryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREItemVoteSummaryResponse.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_vote_summaries_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREItemVoteSummaryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item_vote_summaries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREItemVoteSummaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREItemVoteSummaryResponse)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_vote_summaries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->item_vote_summaries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREItemVoteSummaryResponse)
}

::google::protobuf::uint8* CMsgCREItemVoteSummaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_vote_summaries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->item_vote_summaries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREItemVoteSummaryResponse)
  return target;
}

size_t CMsgCREItemVoteSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREItemVoteSummaryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_vote_summaries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item_vote_summaries(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREItemVoteSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREItemVoteSummaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREItemVoteSummaryResponse)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummaryResponse::MergeFrom(const CMsgCREItemVoteSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREItemVoteSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_vote_summaries_.MergeFrom(from.item_vote_summaries_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREItemVoteSummaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREItemVoteSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummaryResponse::CopyFrom(const CMsgCREItemVoteSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREItemVoteSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummaryResponse::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummaryResponse::Swap(CMsgCREItemVoteSummaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummaryResponse::InternalSwap(CMsgCREItemVoteSummaryResponse* other) {
  using std::swap;
  CastToBase(&item_vote_summaries_)->InternalSwap(CastToBase(&other->item_vote_summaries_));
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummaryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREUpdateUserPublishedItemVote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREUpdateUserPublishedItemVote::kPublishedFileIdFieldNumber;
const int CMsgCREUpdateUserPublishedItemVote::kVoteUpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREUpdateUserPublishedItemVote::CMsgCREUpdateUserPublishedItemVote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREUpdateUserPublishedItemVote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREUpdateUserPublishedItemVote)
}
CMsgCREUpdateUserPublishedItemVote::CMsgCREUpdateUserPublishedItemVote(const CMsgCREUpdateUserPublishedItemVote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_up_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_up_));
  // @@protoc_insertion_point(copy_constructor:CMsgCREUpdateUserPublishedItemVote)
}

void CMsgCREUpdateUserPublishedItemVote::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_up_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_up_));
}

CMsgCREUpdateUserPublishedItemVote::~CMsgCREUpdateUserPublishedItemVote() {
  // @@protoc_insertion_point(destructor:CMsgCREUpdateUserPublishedItemVote)
  SharedDtor();
}

void CMsgCREUpdateUserPublishedItemVote::SharedDtor() {
}

void CMsgCREUpdateUserPublishedItemVote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREUpdateUserPublishedItemVote::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREUpdateUserPublishedItemVote& CMsgCREUpdateUserPublishedItemVote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREUpdateUserPublishedItemVote.base);
  return *internal_default_instance();
}


void CMsgCREUpdateUserPublishedItemVote::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vote_up_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_up_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREUpdateUserPublishedItemVote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREUpdateUserPublishedItemVote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vote_up = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_vote_up();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vote_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREUpdateUserPublishedItemVote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREUpdateUserPublishedItemVote)
  return false;
#undef DO_
}

void CMsgCREUpdateUserPublishedItemVote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional bool vote_up = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vote_up(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREUpdateUserPublishedItemVote)
}

::google::protobuf::uint8* CMsgCREUpdateUserPublishedItemVote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional bool vote_up = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vote_up(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREUpdateUserPublishedItemVote)
  return target;
}

size_t CMsgCREUpdateUserPublishedItemVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREUpdateUserPublishedItemVote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional bool vote_up = 2;
    if (has_vote_up()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREUpdateUserPublishedItemVote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREUpdateUserPublishedItemVote)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREUpdateUserPublishedItemVote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREUpdateUserPublishedItemVote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREUpdateUserPublishedItemVote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREUpdateUserPublishedItemVote)
    MergeFrom(*source);
  }
}

void CMsgCREUpdateUserPublishedItemVote::MergeFrom(const CMsgCREUpdateUserPublishedItemVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREUpdateUserPublishedItemVote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      vote_up_ = from.vote_up_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREUpdateUserPublishedItemVote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREUpdateUserPublishedItemVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREUpdateUserPublishedItemVote::CopyFrom(const CMsgCREUpdateUserPublishedItemVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREUpdateUserPublishedItemVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREUpdateUserPublishedItemVote::IsInitialized() const {
  return true;
}

void CMsgCREUpdateUserPublishedItemVote::Swap(CMsgCREUpdateUserPublishedItemVote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREUpdateUserPublishedItemVote::InternalSwap(CMsgCREUpdateUserPublishedItemVote* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(vote_up_, other->vote_up_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREUpdateUserPublishedItemVote::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREUpdateUserPublishedItemVoteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREUpdateUserPublishedItemVoteResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREUpdateUserPublishedItemVoteResponse::CMsgCREUpdateUserPublishedItemVoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREUpdateUserPublishedItemVoteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREUpdateUserPublishedItemVoteResponse)
}
CMsgCREUpdateUserPublishedItemVoteResponse::CMsgCREUpdateUserPublishedItemVoteResponse(const CMsgCREUpdateUserPublishedItemVoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgCREUpdateUserPublishedItemVoteResponse)
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgCREUpdateUserPublishedItemVoteResponse::~CMsgCREUpdateUserPublishedItemVoteResponse() {
  // @@protoc_insertion_point(destructor:CMsgCREUpdateUserPublishedItemVoteResponse)
  SharedDtor();
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SharedDtor() {
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREUpdateUserPublishedItemVoteResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREUpdateUserPublishedItemVoteResponse& CMsgCREUpdateUserPublishedItemVoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREUpdateUserPublishedItemVoteResponse.base);
  return *internal_default_instance();
}


void CMsgCREUpdateUserPublishedItemVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREUpdateUserPublishedItemVoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREUpdateUserPublishedItemVoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREUpdateUserPublishedItemVoteResponse)
  return false;
#undef DO_
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREUpdateUserPublishedItemVoteResponse)
}

::google::protobuf::uint8* CMsgCREUpdateUserPublishedItemVoteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREUpdateUserPublishedItemVoteResponse)
  return target;
}

size_t CMsgCREUpdateUserPublishedItemVoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREUpdateUserPublishedItemVoteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREUpdateUserPublishedItemVoteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREUpdateUserPublishedItemVoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREUpdateUserPublishedItemVoteResponse)
    MergeFrom(*source);
  }
}

void CMsgCREUpdateUserPublishedItemVoteResponse::MergeFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREUpdateUserPublishedItemVoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREUpdateUserPublishedItemVoteResponse::CopyFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREUpdateUserPublishedItemVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREUpdateUserPublishedItemVoteResponse::IsInitialized() const {
  return true;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::Swap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREUpdateUserPublishedItemVoteResponse::InternalSwap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREUpdateUserPublishedItemVoteResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}
CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SharedCtor() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::~CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::Swap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InternalSwap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetails::kPublishedFileIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetails::CMsgCREGetUserPublishedItemVoteDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREGetUserPublishedItemVoteDetails)
}
CMsgCREGetUserPublishedItemVoteDetails::CMsgCREGetUserPublishedItemVoteDetails(const CMsgCREGetUserPublishedItemVoteDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      published_file_ids_(from.published_file_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgCREGetUserPublishedItemVoteDetails)
}

void CMsgCREGetUserPublishedItemVoteDetails::SharedCtor() {
}

CMsgCREGetUserPublishedItemVoteDetails::~CMsgCREGetUserPublishedItemVoteDetails() {
  // @@protoc_insertion_point(destructor:CMsgCREGetUserPublishedItemVoteDetails)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetails::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetails::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetails& CMsgCREGetUserPublishedItemVoteDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetails.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREGetUserPublishedItemVoteDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_file_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREGetUserPublishedItemVoteDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREGetUserPublishedItemVoteDetails)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->published_file_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREGetUserPublishedItemVoteDetails)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->published_file_ids(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREGetUserPublishedItemVoteDetails)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREGetUserPublishedItemVoteDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->published_file_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_file_ids(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREGetUserPublishedItemVoteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREGetUserPublishedItemVoteDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREGetUserPublishedItemVoteDetails)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetails::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREGetUserPublishedItemVoteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_file_ids_.MergeFrom(from.published_file_ids_);
}

void CMsgCREGetUserPublishedItemVoteDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREGetUserPublishedItemVoteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetails::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREGetUserPublishedItemVoteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetails::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetails::Swap(CMsgCREGetUserPublishedItemVoteDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetails::InternalSwap(CMsgCREGetUserPublishedItemVoteDetails* other) {
  using std::swap;
  CastToBase(&published_file_ids_)->InternalSwap(CastToBase(&other->published_file_ids_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetails::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::kPublishedFileIdFieldNumber;
const int CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::kVoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}
CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_));
  // @@protoc_insertion_point(copy_constructor:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_));
}

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::~CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail() {
  // @@protoc_insertion_point(destructor:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vote_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_vote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 vote = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vote(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 vote = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vote(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional int32 vote = 2 [default = 0];
    if (has_vote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      vote_ = from.vote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(vote_, other->vote_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetailsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetailsResponse::kEresultFieldNumber;
const int CMsgCREGetUserPublishedItemVoteDetailsResponse::kUserItemVoteDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetailsResponse::CMsgCREGetUserPublishedItemVoteDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCREGetUserPublishedItemVoteDetailsResponse)
}
CMsgCREGetUserPublishedItemVoteDetailsResponse::CMsgCREGetUserPublishedItemVoteDetailsResponse(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      user_item_vote_details_(from.user_item_vote_details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgCREGetUserPublishedItemVoteDetailsResponse)
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgCREGetUserPublishedItemVoteDetailsResponse::~CMsgCREGetUserPublishedItemVoteDetailsResponse() {
  // @@protoc_insertion_point(destructor:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetailsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetailsResponse& CMsgCREGetUserPublishedItemVoteDetailsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_item_vote_details_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_item_vote_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_item_vote_details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->user_item_vote_details(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCREGetUserPublishedItemVoteDetailsResponse)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetailsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_item_vote_details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->user_item_vote_details(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->user_item_vote_details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_item_vote_details(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetailsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetailsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCREGetUserPublishedItemVoteDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCREGetUserPublishedItemVoteDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_item_vote_details_.MergeFrom(from.user_item_vote_details_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCREGetUserPublishedItemVoteDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
  using std::swap;
  CastToBase(&user_item_vote_details_)->InternalSwap(CastToBase(&other->user_item_vote_details_));
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetailsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerPingSample_Sample::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerPingSample_Sample::kIpFieldNumber;
const int CMsgGameServerPingSample_Sample::kAvgPingMsFieldNumber;
const int CMsgGameServerPingSample_Sample::kStddevPingMsX10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerPingSample_Sample::CMsgGameServerPingSample_Sample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerPingSample_Sample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerPingSample.Sample)
}
CMsgGameServerPingSample_Sample::CMsgGameServerPingSample_Sample(const CMsgGameServerPingSample_Sample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ip_, &from.ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
    reinterpret_cast<char*>(&ip_)) + sizeof(stddev_ping_ms_x10_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerPingSample.Sample)
}

void CMsgGameServerPingSample_Sample::SharedCtor() {
  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(stddev_ping_ms_x10_));
}

CMsgGameServerPingSample_Sample::~CMsgGameServerPingSample_Sample() {
  // @@protoc_insertion_point(destructor:CMsgGameServerPingSample.Sample)
  SharedDtor();
}

void CMsgGameServerPingSample_Sample::SharedDtor() {
}

void CMsgGameServerPingSample_Sample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameServerPingSample_Sample::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerPingSample_Sample& CMsgGameServerPingSample_Sample::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerPingSample_Sample.base);
  return *internal_default_instance();
}


void CMsgGameServerPingSample_Sample::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
        reinterpret_cast<char*>(&ip_)) + sizeof(stddev_ping_ms_x10_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerPingSample_Sample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerPingSample.Sample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 avg_ping_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_avg_ping_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avg_ping_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stddev_ping_ms_x10 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_stddev_ping_ms_x10();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stddev_ping_ms_x10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerPingSample.Sample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerPingSample.Sample)
  return false;
#undef DO_
}

void CMsgGameServerPingSample_Sample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ip(), output);
  }

  // optional uint32 avg_ping_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avg_ping_ms(), output);
  }

  // optional uint32 stddev_ping_ms_x10 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stddev_ping_ms_x10(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerPingSample.Sample)
}

::google::protobuf::uint8* CMsgGameServerPingSample_Sample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ip(), target);
  }

  // optional uint32 avg_ping_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avg_ping_ms(), target);
  }

  // optional uint32 stddev_ping_ms_x10 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stddev_ping_ms_x10(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerPingSample.Sample)
  return target;
}

size_t CMsgGameServerPingSample_Sample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerPingSample.Sample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed32 ip = 1;
    if (has_ip()) {
      total_size += 1 + 4;
    }

    // optional uint32 avg_ping_ms = 2;
    if (has_avg_ping_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->avg_ping_ms());
    }

    // optional uint32 stddev_ping_ms_x10 = 3;
    if (has_stddev_ping_ms_x10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stddev_ping_ms_x10());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerPingSample_Sample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerPingSample.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerPingSample_Sample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerPingSample_Sample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerPingSample.Sample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerPingSample.Sample)
    MergeFrom(*source);
  }
}

void CMsgGameServerPingSample_Sample::MergeFrom(const CMsgGameServerPingSample_Sample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerPingSample.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      avg_ping_ms_ = from.avg_ping_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      stddev_ping_ms_x10_ = from.stddev_ping_ms_x10_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerPingSample_Sample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerPingSample.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerPingSample_Sample::CopyFrom(const CMsgGameServerPingSample_Sample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerPingSample.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerPingSample_Sample::IsInitialized() const {
  return true;
}

void CMsgGameServerPingSample_Sample::Swap(CMsgGameServerPingSample_Sample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerPingSample_Sample::InternalSwap(CMsgGameServerPingSample_Sample* other) {
  using std::swap;
  swap(ip_, other->ip_);
  swap(avg_ping_ms_, other->avg_ping_ms_);
  swap(stddev_ping_ms_x10_, other->stddev_ping_ms_x10_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameServerPingSample_Sample::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerPingSample::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerPingSample::kMyIpFieldNumber;
const int CMsgGameServerPingSample::kGsAppIdFieldNumber;
const int CMsgGameServerPingSample::kGsSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerPingSample::CMsgGameServerPingSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerPingSample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerPingSample)
}
CMsgGameServerPingSample::CMsgGameServerPingSample(const CMsgGameServerPingSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      gs_samples_(from.gs_samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&my_ip_, &from.my_ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&gs_app_id_) -
    reinterpret_cast<char*>(&my_ip_)) + sizeof(gs_app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerPingSample)
}

void CMsgGameServerPingSample::SharedCtor() {
  ::memset(&my_ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gs_app_id_) -
      reinterpret_cast<char*>(&my_ip_)) + sizeof(gs_app_id_));
}

CMsgGameServerPingSample::~CMsgGameServerPingSample() {
  // @@protoc_insertion_point(destructor:CMsgGameServerPingSample)
  SharedDtor();
}

void CMsgGameServerPingSample::SharedDtor() {
}

void CMsgGameServerPingSample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameServerPingSample::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerPingSample& CMsgGameServerPingSample::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgGameServerPingSample.base);
  return *internal_default_instance();
}


void CMsgGameServerPingSample::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gs_samples_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&my_ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gs_app_id_) -
        reinterpret_cast<char*>(&my_ip_)) + sizeof(gs_app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerPingSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerPingSample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 my_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_my_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &my_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gs_app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gs_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gs_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgGameServerPingSample.Sample gs_samples = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gs_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerPingSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerPingSample)
  return false;
#undef DO_
}

void CMsgGameServerPingSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 my_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->my_ip(), output);
  }

  // optional int32 gs_app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gs_app_id(), output);
  }

  // repeated .CMsgGameServerPingSample.Sample gs_samples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gs_samples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->gs_samples(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerPingSample)
}

::google::protobuf::uint8* CMsgGameServerPingSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 my_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->my_ip(), target);
  }

  // optional int32 gs_app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gs_app_id(), target);
  }

  // repeated .CMsgGameServerPingSample.Sample gs_samples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gs_samples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->gs_samples(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerPingSample)
  return target;
}

size_t CMsgGameServerPingSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerPingSample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGameServerPingSample.Sample gs_samples = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->gs_samples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gs_samples(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed32 my_ip = 1;
    if (has_my_ip()) {
      total_size += 1 + 4;
    }

    // optional int32 gs_app_id = 2;
    if (has_gs_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gs_app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerPingSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerPingSample)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerPingSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerPingSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerPingSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerPingSample)
    MergeFrom(*source);
  }
}

void CMsgGameServerPingSample::MergeFrom(const CMsgGameServerPingSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerPingSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gs_samples_.MergeFrom(from.gs_samples_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      my_ip_ = from.my_ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      gs_app_id_ = from.gs_app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerPingSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerPingSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerPingSample::CopyFrom(const CMsgGameServerPingSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerPingSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerPingSample::IsInitialized() const {
  return true;
}

void CMsgGameServerPingSample::Swap(CMsgGameServerPingSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerPingSample::InternalSwap(CMsgGameServerPingSample* other) {
  using std::swap;
  CastToBase(&gs_samples_)->InternalSwap(CastToBase(&other->gs_samples_));
  swap(my_ip_, other->my_ip_);
  swap(gs_app_id_, other->gs_app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameServerPingSample::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetFollowerCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetFollowerCount::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetFollowerCount::CMsgFSGetFollowerCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetFollowerCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFSGetFollowerCount)
}
CMsgFSGetFollowerCount::CMsgFSGetFollowerCount(const CMsgFSGetFollowerCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgFSGetFollowerCount)
}

void CMsgFSGetFollowerCount::SharedCtor() {
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgFSGetFollowerCount::~CMsgFSGetFollowerCount() {
  // @@protoc_insertion_point(destructor:CMsgFSGetFollowerCount)
  SharedDtor();
}

void CMsgFSGetFollowerCount::SharedDtor() {
}

void CMsgFSGetFollowerCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFSGetFollowerCount::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetFollowerCount& CMsgFSGetFollowerCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetFollowerCount.base);
  return *internal_default_instance();
}


void CMsgFSGetFollowerCount::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetFollowerCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFSGetFollowerCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFSGetFollowerCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFSGetFollowerCount)
  return false;
#undef DO_
}

void CMsgFSGetFollowerCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFSGetFollowerCount)
}

::google::protobuf::uint8* CMsgFSGetFollowerCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFSGetFollowerCount)
  return target;
}

size_t CMsgFSGetFollowerCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFSGetFollowerCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetFollowerCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFSGetFollowerCount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetFollowerCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetFollowerCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFSGetFollowerCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFSGetFollowerCount)
    MergeFrom(*source);
  }
}

void CMsgFSGetFollowerCount::MergeFrom(const CMsgFSGetFollowerCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFSGetFollowerCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgFSGetFollowerCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFSGetFollowerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetFollowerCount::CopyFrom(const CMsgFSGetFollowerCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFSGetFollowerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetFollowerCount::IsInitialized() const {
  return true;
}

void CMsgFSGetFollowerCount::Swap(CMsgFSGetFollowerCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetFollowerCount::InternalSwap(CMsgFSGetFollowerCount* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFSGetFollowerCount::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetFollowerCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetFollowerCountResponse::kEresultFieldNumber;
const int CMsgFSGetFollowerCountResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetFollowerCountResponse::CMsgFSGetFollowerCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetFollowerCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFSGetFollowerCountResponse)
}
CMsgFSGetFollowerCountResponse::CMsgFSGetFollowerCountResponse(const CMsgFSGetFollowerCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&count_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgFSGetFollowerCountResponse)
}

void CMsgFSGetFollowerCountResponse::SharedCtor() {
  count_ = 0;
  eresult_ = 2;
}

CMsgFSGetFollowerCountResponse::~CMsgFSGetFollowerCountResponse() {
  // @@protoc_insertion_point(destructor:CMsgFSGetFollowerCountResponse)
  SharedDtor();
}

void CMsgFSGetFollowerCountResponse::SharedDtor() {
}

void CMsgFSGetFollowerCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFSGetFollowerCountResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetFollowerCountResponse& CMsgFSGetFollowerCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetFollowerCountResponse.base);
  return *internal_default_instance();
}


void CMsgFSGetFollowerCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetFollowerCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFSGetFollowerCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFSGetFollowerCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFSGetFollowerCountResponse)
  return false;
#undef DO_
}

void CMsgFSGetFollowerCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 count = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFSGetFollowerCountResponse)
}

::google::protobuf::uint8* CMsgFSGetFollowerCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 count = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFSGetFollowerCountResponse)
  return target;
}

size_t CMsgFSGetFollowerCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFSGetFollowerCountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 count = 2 [default = 0];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetFollowerCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFSGetFollowerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetFollowerCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetFollowerCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFSGetFollowerCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFSGetFollowerCountResponse)
    MergeFrom(*source);
  }
}

void CMsgFSGetFollowerCountResponse::MergeFrom(const CMsgFSGetFollowerCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFSGetFollowerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSGetFollowerCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFSGetFollowerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetFollowerCountResponse::CopyFrom(const CMsgFSGetFollowerCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFSGetFollowerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetFollowerCountResponse::IsInitialized() const {
  return true;
}

void CMsgFSGetFollowerCountResponse::Swap(CMsgFSGetFollowerCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetFollowerCountResponse::InternalSwap(CMsgFSGetFollowerCountResponse* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFSGetFollowerCountResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetIsFollowing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetIsFollowing::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetIsFollowing::CMsgFSGetIsFollowing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetIsFollowing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFSGetIsFollowing)
}
CMsgFSGetIsFollowing::CMsgFSGetIsFollowing(const CMsgFSGetIsFollowing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgFSGetIsFollowing)
}

void CMsgFSGetIsFollowing::SharedCtor() {
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgFSGetIsFollowing::~CMsgFSGetIsFollowing() {
  // @@protoc_insertion_point(destructor:CMsgFSGetIsFollowing)
  SharedDtor();
}

void CMsgFSGetIsFollowing::SharedDtor() {
}

void CMsgFSGetIsFollowing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFSGetIsFollowing::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetIsFollowing& CMsgFSGetIsFollowing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetIsFollowing.base);
  return *internal_default_instance();
}


void CMsgFSGetIsFollowing::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetIsFollowing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFSGetIsFollowing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFSGetIsFollowing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFSGetIsFollowing)
  return false;
#undef DO_
}

void CMsgFSGetIsFollowing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFSGetIsFollowing)
}

::google::protobuf::uint8* CMsgFSGetIsFollowing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFSGetIsFollowing)
  return target;
}

size_t CMsgFSGetIsFollowing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFSGetIsFollowing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetIsFollowing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFSGetIsFollowing)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetIsFollowing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetIsFollowing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFSGetIsFollowing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFSGetIsFollowing)
    MergeFrom(*source);
  }
}

void CMsgFSGetIsFollowing::MergeFrom(const CMsgFSGetIsFollowing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFSGetIsFollowing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgFSGetIsFollowing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFSGetIsFollowing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetIsFollowing::CopyFrom(const CMsgFSGetIsFollowing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFSGetIsFollowing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetIsFollowing::IsInitialized() const {
  return true;
}

void CMsgFSGetIsFollowing::Swap(CMsgFSGetIsFollowing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetIsFollowing::InternalSwap(CMsgFSGetIsFollowing* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFSGetIsFollowing::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetIsFollowingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetIsFollowingResponse::kEresultFieldNumber;
const int CMsgFSGetIsFollowingResponse::kIsFollowingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetIsFollowingResponse::CMsgFSGetIsFollowingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetIsFollowingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFSGetIsFollowingResponse)
}
CMsgFSGetIsFollowingResponse::CMsgFSGetIsFollowingResponse(const CMsgFSGetIsFollowingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_following_, &from.is_following_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&is_following_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgFSGetIsFollowingResponse)
}

void CMsgFSGetIsFollowingResponse::SharedCtor() {
  is_following_ = false;
  eresult_ = 2;
}

CMsgFSGetIsFollowingResponse::~CMsgFSGetIsFollowingResponse() {
  // @@protoc_insertion_point(destructor:CMsgFSGetIsFollowingResponse)
  SharedDtor();
}

void CMsgFSGetIsFollowingResponse::SharedDtor() {
}

void CMsgFSGetIsFollowingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFSGetIsFollowingResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetIsFollowingResponse& CMsgFSGetIsFollowingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSGetIsFollowingResponse.base);
  return *internal_default_instance();
}


void CMsgFSGetIsFollowingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    is_following_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetIsFollowingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFSGetIsFollowingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_following = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_following();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_following_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFSGetIsFollowingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFSGetIsFollowingResponse)
  return false;
#undef DO_
}

void CMsgFSGetIsFollowingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool is_following = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_following(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFSGetIsFollowingResponse)
}

::google::protobuf::uint8* CMsgFSGetIsFollowingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool is_following = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_following(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFSGetIsFollowingResponse)
  return target;
}

size_t CMsgFSGetIsFollowingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFSGetIsFollowingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool is_following = 2 [default = false];
    if (has_is_following()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetIsFollowingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFSGetIsFollowingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetIsFollowingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetIsFollowingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFSGetIsFollowingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFSGetIsFollowingResponse)
    MergeFrom(*source);
  }
}

void CMsgFSGetIsFollowingResponse::MergeFrom(const CMsgFSGetIsFollowingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFSGetIsFollowingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      is_following_ = from.is_following_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSGetIsFollowingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFSGetIsFollowingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetIsFollowingResponse::CopyFrom(const CMsgFSGetIsFollowingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFSGetIsFollowingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetIsFollowingResponse::IsInitialized() const {
  return true;
}

void CMsgFSGetIsFollowingResponse::Swap(CMsgFSGetIsFollowingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetIsFollowingResponse::InternalSwap(CMsgFSGetIsFollowingResponse* other) {
  using std::swap;
  swap(is_following_, other->is_following_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFSGetIsFollowingResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSEnumerateFollowingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSEnumerateFollowingList::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSEnumerateFollowingList::CMsgFSEnumerateFollowingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSEnumerateFollowingList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFSEnumerateFollowingList)
}
CMsgFSEnumerateFollowingList::CMsgFSEnumerateFollowingList(const CMsgFSEnumerateFollowingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_index_ = from.start_index_;
  // @@protoc_insertion_point(copy_constructor:CMsgFSEnumerateFollowingList)
}

void CMsgFSEnumerateFollowingList::SharedCtor() {
  start_index_ = 0u;
}

CMsgFSEnumerateFollowingList::~CMsgFSEnumerateFollowingList() {
  // @@protoc_insertion_point(destructor:CMsgFSEnumerateFollowingList)
  SharedDtor();
}

void CMsgFSEnumerateFollowingList::SharedDtor() {
}

void CMsgFSEnumerateFollowingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFSEnumerateFollowingList::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSEnumerateFollowingList& CMsgFSEnumerateFollowingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSEnumerateFollowingList.base);
  return *internal_default_instance();
}


void CMsgFSEnumerateFollowingList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSEnumerateFollowingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFSEnumerateFollowingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 start_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFSEnumerateFollowingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFSEnumerateFollowingList)
  return false;
#undef DO_
}

void CMsgFSEnumerateFollowingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 start_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFSEnumerateFollowingList)
}

::google::protobuf::uint8* CMsgFSEnumerateFollowingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 start_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFSEnumerateFollowingList)
  return target;
}

size_t CMsgFSEnumerateFollowingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFSEnumerateFollowingList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 start_index = 1;
  if (has_start_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSEnumerateFollowingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFSEnumerateFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSEnumerateFollowingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSEnumerateFollowingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFSEnumerateFollowingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFSEnumerateFollowingList)
    MergeFrom(*source);
  }
}

void CMsgFSEnumerateFollowingList::MergeFrom(const CMsgFSEnumerateFollowingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFSEnumerateFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_index()) {
    set_start_index(from.start_index());
  }
}

void CMsgFSEnumerateFollowingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFSEnumerateFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSEnumerateFollowingList::CopyFrom(const CMsgFSEnumerateFollowingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFSEnumerateFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSEnumerateFollowingList::IsInitialized() const {
  return true;
}

void CMsgFSEnumerateFollowingList::Swap(CMsgFSEnumerateFollowingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSEnumerateFollowingList::InternalSwap(CMsgFSEnumerateFollowingList* other) {
  using std::swap;
  swap(start_index_, other->start_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFSEnumerateFollowingList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSEnumerateFollowingListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSEnumerateFollowingListResponse::kEresultFieldNumber;
const int CMsgFSEnumerateFollowingListResponse::kTotalResultsFieldNumber;
const int CMsgFSEnumerateFollowingListResponse::kSteamIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSEnumerateFollowingListResponse::CMsgFSEnumerateFollowingListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSEnumerateFollowingListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFSEnumerateFollowingListResponse)
}
CMsgFSEnumerateFollowingListResponse::CMsgFSEnumerateFollowingListResponse(const CMsgFSEnumerateFollowingListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steam_ids_(from.steam_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgFSEnumerateFollowingListResponse)
}

void CMsgFSEnumerateFollowingListResponse::SharedCtor() {
  total_results_ = 0;
  eresult_ = 2;
}

CMsgFSEnumerateFollowingListResponse::~CMsgFSEnumerateFollowingListResponse() {
  // @@protoc_insertion_point(destructor:CMsgFSEnumerateFollowingListResponse)
  SharedDtor();
}

void CMsgFSEnumerateFollowingListResponse::SharedDtor() {
}

void CMsgFSEnumerateFollowingListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFSEnumerateFollowingListResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSEnumerateFollowingListResponse& CMsgFSEnumerateFollowingListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgFSEnumerateFollowingListResponse.base);
  return *internal_default_instance();
}


void CMsgFSEnumerateFollowingListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    total_results_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSEnumerateFollowingListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFSEnumerateFollowingListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steam_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steam_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steam_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFSEnumerateFollowingListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFSEnumerateFollowingListResponse)
  return false;
#undef DO_
}

void CMsgFSEnumerateFollowingListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 total_results = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_results(), output);
  }

  // repeated fixed64 steam_ids = 3;
  for (int i = 0, n = this->steam_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steam_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFSEnumerateFollowingListResponse)
}

::google::protobuf::uint8* CMsgFSEnumerateFollowingListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 total_results = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_results(), target);
  }

  // repeated fixed64 steam_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(3, this->steam_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFSEnumerateFollowingListResponse)
  return target;
}

size_t CMsgFSEnumerateFollowingListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFSEnumerateFollowingListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steam_ids = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->steam_ids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steam_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 total_results = 2;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSEnumerateFollowingListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFSEnumerateFollowingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSEnumerateFollowingListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSEnumerateFollowingListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFSEnumerateFollowingListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFSEnumerateFollowingListResponse)
    MergeFrom(*source);
  }
}

void CMsgFSEnumerateFollowingListResponse::MergeFrom(const CMsgFSEnumerateFollowingListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFSEnumerateFollowingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steam_ids_.MergeFrom(from.steam_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSEnumerateFollowingListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFSEnumerateFollowingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSEnumerateFollowingListResponse::CopyFrom(const CMsgFSEnumerateFollowingListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFSEnumerateFollowingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSEnumerateFollowingListResponse::IsInitialized() const {
  return true;
}

void CMsgFSEnumerateFollowingListResponse::Swap(CMsgFSEnumerateFollowingListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSEnumerateFollowingListResponse::InternalSwap(CMsgFSEnumerateFollowingListResponse* other) {
  using std::swap;
  steam_ids_.InternalSwap(&other->steam_ids_);
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFSEnumerateFollowingListResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDPGetNumberOfCurrentPlayers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDPGetNumberOfCurrentPlayers::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDPGetNumberOfCurrentPlayers::CMsgDPGetNumberOfCurrentPlayers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDPGetNumberOfCurrentPlayers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDPGetNumberOfCurrentPlayers)
}
CMsgDPGetNumberOfCurrentPlayers::CMsgDPGetNumberOfCurrentPlayers(const CMsgDPGetNumberOfCurrentPlayers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CMsgDPGetNumberOfCurrentPlayers)
}

void CMsgDPGetNumberOfCurrentPlayers::SharedCtor() {
  appid_ = 0u;
}

CMsgDPGetNumberOfCurrentPlayers::~CMsgDPGetNumberOfCurrentPlayers() {
  // @@protoc_insertion_point(destructor:CMsgDPGetNumberOfCurrentPlayers)
  SharedDtor();
}

void CMsgDPGetNumberOfCurrentPlayers::SharedDtor() {
}

void CMsgDPGetNumberOfCurrentPlayers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDPGetNumberOfCurrentPlayers::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDPGetNumberOfCurrentPlayers& CMsgDPGetNumberOfCurrentPlayers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDPGetNumberOfCurrentPlayers.base);
  return *internal_default_instance();
}


void CMsgDPGetNumberOfCurrentPlayers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDPGetNumberOfCurrentPlayers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDPGetNumberOfCurrentPlayers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDPGetNumberOfCurrentPlayers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDPGetNumberOfCurrentPlayers)
  return false;
#undef DO_
}

void CMsgDPGetNumberOfCurrentPlayers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDPGetNumberOfCurrentPlayers)
}

::google::protobuf::uint8* CMsgDPGetNumberOfCurrentPlayers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPGetNumberOfCurrentPlayers)
  return target;
}

size_t CMsgDPGetNumberOfCurrentPlayers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDPGetNumberOfCurrentPlayers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDPGetNumberOfCurrentPlayers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDPGetNumberOfCurrentPlayers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDPGetNumberOfCurrentPlayers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPGetNumberOfCurrentPlayers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDPGetNumberOfCurrentPlayers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDPGetNumberOfCurrentPlayers)
    MergeFrom(*source);
  }
}

void CMsgDPGetNumberOfCurrentPlayers::MergeFrom(const CMsgDPGetNumberOfCurrentPlayers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDPGetNumberOfCurrentPlayers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CMsgDPGetNumberOfCurrentPlayers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDPGetNumberOfCurrentPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPGetNumberOfCurrentPlayers::CopyFrom(const CMsgDPGetNumberOfCurrentPlayers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDPGetNumberOfCurrentPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPGetNumberOfCurrentPlayers::IsInitialized() const {
  return true;
}

void CMsgDPGetNumberOfCurrentPlayers::Swap(CMsgDPGetNumberOfCurrentPlayers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPGetNumberOfCurrentPlayers::InternalSwap(CMsgDPGetNumberOfCurrentPlayers* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDPGetNumberOfCurrentPlayers::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDPGetNumberOfCurrentPlayersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDPGetNumberOfCurrentPlayersResponse::kEresultFieldNumber;
const int CMsgDPGetNumberOfCurrentPlayersResponse::kPlayerCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDPGetNumberOfCurrentPlayersResponse::CMsgDPGetNumberOfCurrentPlayersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDPGetNumberOfCurrentPlayersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDPGetNumberOfCurrentPlayersResponse)
}
CMsgDPGetNumberOfCurrentPlayersResponse::CMsgDPGetNumberOfCurrentPlayersResponse(const CMsgDPGetNumberOfCurrentPlayersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_count_, &from.player_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&player_count_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgDPGetNumberOfCurrentPlayersResponse)
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SharedCtor() {
  player_count_ = 0;
  eresult_ = 2;
}

CMsgDPGetNumberOfCurrentPlayersResponse::~CMsgDPGetNumberOfCurrentPlayersResponse() {
  // @@protoc_insertion_point(destructor:CMsgDPGetNumberOfCurrentPlayersResponse)
  SharedDtor();
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SharedDtor() {
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDPGetNumberOfCurrentPlayersResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDPGetNumberOfCurrentPlayersResponse& CMsgDPGetNumberOfCurrentPlayersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgDPGetNumberOfCurrentPlayersResponse.base);
  return *internal_default_instance();
}


void CMsgDPGetNumberOfCurrentPlayersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    player_count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDPGetNumberOfCurrentPlayersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDPGetNumberOfCurrentPlayersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDPGetNumberOfCurrentPlayersResponse)
  return false;
#undef DO_
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 player_count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDPGetNumberOfCurrentPlayersResponse)
}

::google::protobuf::uint8* CMsgDPGetNumberOfCurrentPlayersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 player_count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPGetNumberOfCurrentPlayersResponse)
  return target;
}

size_t CMsgDPGetNumberOfCurrentPlayersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 player_count = 2;
    if (has_player_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDPGetNumberOfCurrentPlayersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPGetNumberOfCurrentPlayersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDPGetNumberOfCurrentPlayersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDPGetNumberOfCurrentPlayersResponse)
    MergeFrom(*source);
  }
}

void CMsgDPGetNumberOfCurrentPlayersResponse::MergeFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_count_ = from.player_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDPGetNumberOfCurrentPlayersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPGetNumberOfCurrentPlayersResponse::CopyFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDPGetNumberOfCurrentPlayersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPGetNumberOfCurrentPlayersResponse::IsInitialized() const {
  return true;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::Swap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPGetNumberOfCurrentPlayersResponse::InternalSwap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
  using std::swap;
  swap(player_count_, other->player_count_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDPGetNumberOfCurrentPlayersResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendUserStatusPublished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendUserStatusPublished::kFriendSteamidFieldNumber;
const int CMsgClientFriendUserStatusPublished::kAppidFieldNumber;
const int CMsgClientFriendUserStatusPublished::kStatusTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendUserStatusPublished::CMsgClientFriendUserStatusPublished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFriendUserStatusPublished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendUserStatusPublished)
}
CMsgClientFriendUserStatusPublished::CMsgClientFriendUserStatusPublished(const CMsgClientFriendUserStatusPublished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status_text()) {
    status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
  }
  ::memcpy(&friend_steamid_, &from.friend_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&friend_steamid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendUserStatusPublished)
}

void CMsgClientFriendUserStatusPublished::SharedCtor() {
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&friend_steamid_)) + sizeof(appid_));
}

CMsgClientFriendUserStatusPublished::~CMsgClientFriendUserStatusPublished() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendUserStatusPublished)
  SharedDtor();
}

void CMsgClientFriendUserStatusPublished::SharedDtor() {
  status_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendUserStatusPublished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendUserStatusPublished::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendUserStatusPublished& CMsgClientFriendUserStatusPublished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientFriendUserStatusPublished.base);
  return *internal_default_instance();
}


void CMsgClientFriendUserStatusPublished::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&friend_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&friend_steamid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendUserStatusPublished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendUserStatusPublished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 friend_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_friend_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &friend_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string status_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status_text().data(), static_cast<int>(this->status_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendUserStatusPublished.status_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendUserStatusPublished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendUserStatusPublished)
  return false;
#undef DO_
}

void CMsgClientFriendUserStatusPublished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friend_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->friend_steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional string status_text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_text().data(), static_cast<int>(this->status_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendUserStatusPublished.status_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendUserStatusPublished)
}

::google::protobuf::uint8* CMsgClientFriendUserStatusPublished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friend_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->friend_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional string status_text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_text().data(), static_cast<int>(this->status_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendUserStatusPublished.status_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendUserStatusPublished)
  return target;
}

size_t CMsgClientFriendUserStatusPublished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendUserStatusPublished)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string status_text = 3;
    if (has_status_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status_text());
    }

    // optional fixed64 friend_steamid = 1;
    if (has_friend_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendUserStatusPublished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendUserStatusPublished)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendUserStatusPublished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendUserStatusPublished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendUserStatusPublished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendUserStatusPublished)
    MergeFrom(*source);
  }
}

void CMsgClientFriendUserStatusPublished::MergeFrom(const CMsgClientFriendUserStatusPublished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendUserStatusPublished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status_text();
      status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      friend_steamid_ = from.friend_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendUserStatusPublished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendUserStatusPublished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendUserStatusPublished::CopyFrom(const CMsgClientFriendUserStatusPublished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendUserStatusPublished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendUserStatusPublished::IsInitialized() const {
  return true;
}

void CMsgClientFriendUserStatusPublished::Swap(CMsgClientFriendUserStatusPublished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendUserStatusPublished::InternalSwap(CMsgClientFriendUserStatusPublished* other) {
  using std::swap;
  status_text_.Swap(&other->status_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(friend_steamid_, other->friend_steamid_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendUserStatusPublished::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceMethod::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceMethod::kMethodNameFieldNumber;
const int CMsgClientServiceMethod::kSerializedMethodFieldNumber;
const int CMsgClientServiceMethod::kIsNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceMethod::CMsgClientServiceMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceMethod.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServiceMethod)
}
CMsgClientServiceMethod::CMsgClientServiceMethod(const CMsgClientServiceMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  serialized_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_method()) {
    serialized_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_);
  }
  is_notification_ = from.is_notification_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientServiceMethod)
}

void CMsgClientServiceMethod::SharedCtor() {
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_notification_ = false;
}

CMsgClientServiceMethod::~CMsgClientServiceMethod() {
  // @@protoc_insertion_point(destructor:CMsgClientServiceMethod)
  SharedDtor();
}

void CMsgClientServiceMethod::SharedDtor() {
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServiceMethod::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceMethod& CMsgClientServiceMethod::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceMethod.base);
  return *internal_default_instance();
}


void CMsgClientServiceMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      method_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      serialized_method_.ClearNonDefaultToEmptyNoArena();
    }
  }
  is_notification_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServiceMethod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientServiceMethod.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_notification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_notification();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_notification_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServiceMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServiceMethod)
  return false;
#undef DO_
}

void CMsgClientServiceMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientServiceMethod.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method_name(), output);
  }

  // optional bytes serialized_method = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_method(), output);
  }

  // optional bool is_notification = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_notification(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServiceMethod)
}

::google::protobuf::uint8* CMsgClientServiceMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientServiceMethod.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method_name(), target);
  }

  // optional bytes serialized_method = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_method(), target);
  }

  // optional bool is_notification = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_notification(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServiceMethod)
  return target;
}

size_t CMsgClientServiceMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServiceMethod)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string method_name = 1;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional bytes serialized_method = 2;
    if (has_serialized_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_method());
    }

    // optional bool is_notification = 3;
    if (has_is_notification()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServiceMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServiceMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServiceMethod)
    MergeFrom(*source);
  }
}

void CMsgClientServiceMethod::MergeFrom(const CMsgClientServiceMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServiceMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serialized_method();
      serialized_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_);
    }
    if (cached_has_bits & 0x00000004u) {
      is_notification_ = from.is_notification_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServiceMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceMethod::CopyFrom(const CMsgClientServiceMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServiceMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceMethod::IsInitialized() const {
  return true;
}

void CMsgClientServiceMethod::Swap(CMsgClientServiceMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceMethod::InternalSwap(CMsgClientServiceMethod* other) {
  using std::swap;
  method_name_.Swap(&other->method_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialized_method_.Swap(&other->serialized_method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_notification_, other->is_notification_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServiceMethod::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceMethodResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceMethodResponse::kMethodNameFieldNumber;
const int CMsgClientServiceMethodResponse::kSerializedMethodResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceMethodResponse::CMsgClientServiceMethodResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceMethodResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServiceMethodResponse)
}
CMsgClientServiceMethodResponse::CMsgClientServiceMethodResponse(const CMsgClientServiceMethodResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  serialized_method_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_method_response()) {
    serialized_method_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_response_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientServiceMethodResponse)
}

void CMsgClientServiceMethodResponse::SharedCtor() {
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientServiceMethodResponse::~CMsgClientServiceMethodResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientServiceMethodResponse)
  SharedDtor();
}

void CMsgClientServiceMethodResponse::SharedDtor() {
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServiceMethodResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceMethodResponse& CMsgClientServiceMethodResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceMethodResponse.base);
  return *internal_default_instance();
}


void CMsgClientServiceMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      method_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      serialized_method_response_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceMethodResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServiceMethodResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientServiceMethodResponse.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_method_response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_method_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServiceMethodResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServiceMethodResponse)
  return false;
#undef DO_
}

void CMsgClientServiceMethodResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientServiceMethodResponse.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method_name(), output);
  }

  // optional bytes serialized_method_response = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_method_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServiceMethodResponse)
}

::google::protobuf::uint8* CMsgClientServiceMethodResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientServiceMethodResponse.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method_name(), target);
  }

  // optional bytes serialized_method_response = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_method_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServiceMethodResponse)
  return target;
}

size_t CMsgClientServiceMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServiceMethodResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string method_name = 1;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional bytes serialized_method_response = 2;
    if (has_serialized_method_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_method_response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceMethodResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServiceMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceMethodResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceMethodResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServiceMethodResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServiceMethodResponse)
    MergeFrom(*source);
  }
}

void CMsgClientServiceMethodResponse::MergeFrom(const CMsgClientServiceMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServiceMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serialized_method_response();
      serialized_method_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_response_);
    }
  }
}

void CMsgClientServiceMethodResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServiceMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceMethodResponse::CopyFrom(const CMsgClientServiceMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServiceMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceMethodResponse::IsInitialized() const {
  return true;
}

void CMsgClientServiceMethodResponse::Swap(CMsgClientServiceMethodResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceMethodResponse::InternalSwap(CMsgClientServiceMethodResponse* other) {
  using std::swap;
  method_name_.Swap(&other->method_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialized_method_response_.Swap(&other->serialized_method_response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServiceMethodResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUIMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUIMode::kUimodeFieldNumber;
const int CMsgClientUIMode::kChatModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUIMode::CMsgClientUIMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUIMode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUIMode)
}
CMsgClientUIMode::CMsgClientUIMode(const CMsgClientUIMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uimode_, &from.uimode_,
    static_cast<size_t>(reinterpret_cast<char*>(&chat_mode_) -
    reinterpret_cast<char*>(&uimode_)) + sizeof(chat_mode_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUIMode)
}

void CMsgClientUIMode::SharedCtor() {
  ::memset(&uimode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_mode_) -
      reinterpret_cast<char*>(&uimode_)) + sizeof(chat_mode_));
}

CMsgClientUIMode::~CMsgClientUIMode() {
  // @@protoc_insertion_point(destructor:CMsgClientUIMode)
  SharedDtor();
}

void CMsgClientUIMode::SharedDtor() {
}

void CMsgClientUIMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUIMode::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUIMode& CMsgClientUIMode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUIMode.base);
  return *internal_default_instance();
}


void CMsgClientUIMode::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&uimode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chat_mode_) -
        reinterpret_cast<char*>(&uimode_)) + sizeof(chat_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUIMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUIMode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uimode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uimode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uimode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 chat_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chat_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chat_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUIMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUIMode)
  return false;
#undef DO_
}

void CMsgClientUIMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 uimode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uimode(), output);
  }

  // optional uint32 chat_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chat_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUIMode)
}

::google::protobuf::uint8* CMsgClientUIMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 uimode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uimode(), target);
  }

  // optional uint32 chat_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chat_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUIMode)
  return target;
}

size_t CMsgClientUIMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUIMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 uimode = 1;
    if (has_uimode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uimode());
    }

    // optional uint32 chat_mode = 2;
    if (has_chat_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chat_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUIMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUIMode)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUIMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUIMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUIMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUIMode)
    MergeFrom(*source);
  }
}

void CMsgClientUIMode::MergeFrom(const CMsgClientUIMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUIMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uimode_ = from.uimode_;
    }
    if (cached_has_bits & 0x00000002u) {
      chat_mode_ = from.chat_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUIMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUIMode::CopyFrom(const CMsgClientUIMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUIMode::IsInitialized() const {
  return true;
}

void CMsgClientUIMode::Swap(CMsgClientUIMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUIMode::InternalSwap(CMsgClientUIMode* other) {
  using std::swap;
  swap(uimode_, other->uimode_);
  swap(chat_mode_, other->chat_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUIMode::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientVanityURLChangedNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVanityURLChangedNotification::kVanityUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVanityURLChangedNotification::CMsgClientVanityURLChangedNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientVanityURLChangedNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientVanityURLChangedNotification)
}
CMsgClientVanityURLChangedNotification::CMsgClientVanityURLChangedNotification(const CMsgClientVanityURLChangedNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vanity_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vanity_url()) {
    vanity_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanity_url_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientVanityURLChangedNotification)
}

void CMsgClientVanityURLChangedNotification::SharedCtor() {
  vanity_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientVanityURLChangedNotification::~CMsgClientVanityURLChangedNotification() {
  // @@protoc_insertion_point(destructor:CMsgClientVanityURLChangedNotification)
  SharedDtor();
}

void CMsgClientVanityURLChangedNotification::SharedDtor() {
  vanity_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientVanityURLChangedNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientVanityURLChangedNotification::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientVanityURLChangedNotification& CMsgClientVanityURLChangedNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientVanityURLChangedNotification.base);
  return *internal_default_instance();
}


void CMsgClientVanityURLChangedNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vanity_url_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientVanityURLChangedNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientVanityURLChangedNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vanity_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vanity_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vanity_url().data(), static_cast<int>(this->vanity_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientVanityURLChangedNotification.vanity_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientVanityURLChangedNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientVanityURLChangedNotification)
  return false;
#undef DO_
}

void CMsgClientVanityURLChangedNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vanity_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vanity_url().data(), static_cast<int>(this->vanity_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientVanityURLChangedNotification.vanity_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vanity_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientVanityURLChangedNotification)
}

::google::protobuf::uint8* CMsgClientVanityURLChangedNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vanity_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vanity_url().data(), static_cast<int>(this->vanity_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientVanityURLChangedNotification.vanity_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vanity_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientVanityURLChangedNotification)
  return target;
}

size_t CMsgClientVanityURLChangedNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientVanityURLChangedNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string vanity_url = 1;
  if (has_vanity_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vanity_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientVanityURLChangedNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientVanityURLChangedNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVanityURLChangedNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientVanityURLChangedNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientVanityURLChangedNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientVanityURLChangedNotification)
    MergeFrom(*source);
  }
}

void CMsgClientVanityURLChangedNotification::MergeFrom(const CMsgClientVanityURLChangedNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientVanityURLChangedNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vanity_url()) {
    set_has_vanity_url();
    vanity_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanity_url_);
  }
}

void CMsgClientVanityURLChangedNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientVanityURLChangedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVanityURLChangedNotification::CopyFrom(const CMsgClientVanityURLChangedNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientVanityURLChangedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVanityURLChangedNotification::IsInitialized() const {
  return true;
}

void CMsgClientVanityURLChangedNotification::Swap(CMsgClientVanityURLChangedNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVanityURLChangedNotification::InternalSwap(CMsgClientVanityURLChangedNotification* other) {
  using std::swap;
  vanity_url_.Swap(&other->vanity_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientVanityURLChangedNotification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthorizeLocalDeviceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDeviceRequest::kDeviceDescriptionFieldNumber;
const int CMsgClientAuthorizeLocalDeviceRequest::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDeviceRequest::kLocalDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDeviceRequest::CMsgClientAuthorizeLocalDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientAuthorizeLocalDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAuthorizeLocalDeviceRequest)
}
CMsgClientAuthorizeLocalDeviceRequest::CMsgClientAuthorizeLocalDeviceRequest(const CMsgClientAuthorizeLocalDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_description()) {
    device_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_description_);
  }
  ::memcpy(&local_device_token_, &from.local_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAuthorizeLocalDeviceRequest)
}

void CMsgClientAuthorizeLocalDeviceRequest::SharedCtor() {
  device_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
}

CMsgClientAuthorizeLocalDeviceRequest::~CMsgClientAuthorizeLocalDeviceRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientAuthorizeLocalDeviceRequest)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDeviceRequest::SharedDtor() {
  device_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAuthorizeLocalDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAuthorizeLocalDeviceRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthorizeLocalDeviceRequest& CMsgClientAuthorizeLocalDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientAuthorizeLocalDeviceRequest.base);
  return *internal_default_instance();
}


void CMsgClientAuthorizeLocalDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    device_description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&local_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthorizeLocalDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAuthorizeLocalDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string device_description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_description().data(), static_cast<int>(this->device_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientAuthorizeLocalDeviceRequest.device_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_local_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAuthorizeLocalDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAuthorizeLocalDeviceRequest)
  return false;
#undef DO_
}

void CMsgClientAuthorizeLocalDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_description().data(), static_cast<int>(this->device_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAuthorizeLocalDeviceRequest.device_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_description(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->local_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAuthorizeLocalDeviceRequest)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_description().data(), static_cast<int>(this->device_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAuthorizeLocalDeviceRequest.device_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_description(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->local_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAuthorizeLocalDeviceRequest)
  return target;
}

size_t CMsgClientAuthorizeLocalDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAuthorizeLocalDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string device_description = 1;
    if (has_device_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_description());
    }

    // optional uint64 local_device_token = 3;
    if (has_local_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthorizeLocalDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAuthorizeLocalDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthorizeLocalDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAuthorizeLocalDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAuthorizeLocalDeviceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDeviceRequest::MergeFrom(const CMsgClientAuthorizeLocalDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAuthorizeLocalDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_description();
      device_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      local_device_token_ = from.local_device_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      owner_account_id_ = from.owner_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAuthorizeLocalDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDeviceRequest::CopyFrom(const CMsgClientAuthorizeLocalDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAuthorizeLocalDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDeviceRequest::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDeviceRequest::Swap(CMsgClientAuthorizeLocalDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDeviceRequest::InternalSwap(CMsgClientAuthorizeLocalDeviceRequest* other) {
  using std::swap;
  device_description_.Swap(&other->device_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_device_token_, other->local_device_token_);
  swap(owner_account_id_, other->owner_account_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDeviceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthorizeLocalDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDevice::kEresultFieldNumber;
const int CMsgClientAuthorizeLocalDevice::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDevice::kAuthedDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDevice::CMsgClientAuthorizeLocalDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientAuthorizeLocalDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAuthorizeLocalDevice)
}
CMsgClientAuthorizeLocalDevice::CMsgClientAuthorizeLocalDevice(const CMsgClientAuthorizeLocalDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&authed_device_token_, &from.authed_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&authed_device_token_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAuthorizeLocalDevice)
}

void CMsgClientAuthorizeLocalDevice::SharedCtor() {
  ::memset(&authed_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&authed_device_token_)) + sizeof(owner_account_id_));
  eresult_ = 2;
}

CMsgClientAuthorizeLocalDevice::~CMsgClientAuthorizeLocalDevice() {
  // @@protoc_insertion_point(destructor:CMsgClientAuthorizeLocalDevice)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDevice::SharedDtor() {
}

void CMsgClientAuthorizeLocalDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAuthorizeLocalDevice::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthorizeLocalDevice& CMsgClientAuthorizeLocalDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientAuthorizeLocalDevice.base);
  return *internal_default_instance();
}


void CMsgClientAuthorizeLocalDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&authed_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&authed_device_token_)) + sizeof(owner_account_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthorizeLocalDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAuthorizeLocalDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 authed_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_authed_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &authed_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAuthorizeLocalDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAuthorizeLocalDevice)
  return false;
#undef DO_
}

void CMsgClientAuthorizeLocalDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 authed_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->authed_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAuthorizeLocalDevice)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 authed_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->authed_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAuthorizeLocalDevice)
  return target;
}

size_t CMsgClientAuthorizeLocalDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAuthorizeLocalDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 authed_device_token = 3;
    if (has_authed_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->authed_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthorizeLocalDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAuthorizeLocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthorizeLocalDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAuthorizeLocalDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAuthorizeLocalDevice)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDevice::MergeFrom(const CMsgClientAuthorizeLocalDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAuthorizeLocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      authed_device_token_ = from.authed_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAuthorizeLocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDevice::CopyFrom(const CMsgClientAuthorizeLocalDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAuthorizeLocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDevice::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDevice::Swap(CMsgClientAuthorizeLocalDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDevice::InternalSwap(CMsgClientAuthorizeLocalDevice* other) {
  using std::swap;
  swap(authed_device_token_, other->authed_device_token_);
  swap(owner_account_id_, other->owner_account_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDevice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthorizeLocalDeviceNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDeviceNotification::kEresultFieldNumber;
const int CMsgClientAuthorizeLocalDeviceNotification::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDeviceNotification::kLocalDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDeviceNotification::CMsgClientAuthorizeLocalDeviceNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientAuthorizeLocalDeviceNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAuthorizeLocalDeviceNotification)
}
CMsgClientAuthorizeLocalDeviceNotification::CMsgClientAuthorizeLocalDeviceNotification(const CMsgClientAuthorizeLocalDeviceNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&local_device_token_, &from.local_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&local_device_token_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAuthorizeLocalDeviceNotification)
}

void CMsgClientAuthorizeLocalDeviceNotification::SharedCtor() {
  ::memset(&local_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
  eresult_ = 2;
}

CMsgClientAuthorizeLocalDeviceNotification::~CMsgClientAuthorizeLocalDeviceNotification() {
  // @@protoc_insertion_point(destructor:CMsgClientAuthorizeLocalDeviceNotification)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDeviceNotification::SharedDtor() {
}

void CMsgClientAuthorizeLocalDeviceNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAuthorizeLocalDeviceNotification::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthorizeLocalDeviceNotification& CMsgClientAuthorizeLocalDeviceNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientAuthorizeLocalDeviceNotification.base);
  return *internal_default_instance();
}


void CMsgClientAuthorizeLocalDeviceNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&local_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthorizeLocalDeviceNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAuthorizeLocalDeviceNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_local_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAuthorizeLocalDeviceNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAuthorizeLocalDeviceNotification)
  return false;
#undef DO_
}

void CMsgClientAuthorizeLocalDeviceNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->local_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAuthorizeLocalDeviceNotification)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDeviceNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->local_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAuthorizeLocalDeviceNotification)
  return target;
}

size_t CMsgClientAuthorizeLocalDeviceNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAuthorizeLocalDeviceNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 local_device_token = 3;
    if (has_local_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthorizeLocalDeviceNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAuthorizeLocalDeviceNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDeviceNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthorizeLocalDeviceNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAuthorizeLocalDeviceNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAuthorizeLocalDeviceNotification)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDeviceNotification::MergeFrom(const CMsgClientAuthorizeLocalDeviceNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAuthorizeLocalDeviceNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      local_device_token_ = from.local_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDeviceNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAuthorizeLocalDeviceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDeviceNotification::CopyFrom(const CMsgClientAuthorizeLocalDeviceNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAuthorizeLocalDeviceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDeviceNotification::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDeviceNotification::Swap(CMsgClientAuthorizeLocalDeviceNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDeviceNotification::InternalSwap(CMsgClientAuthorizeLocalDeviceNotification* other) {
  using std::swap;
  swap(local_device_token_, other->local_device_token_);
  swap(owner_account_id_, other->owner_account_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDeviceNotification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeauthorizeDeviceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeauthorizeDeviceRequest::kDeauthorizationAccountIdFieldNumber;
const int CMsgClientDeauthorizeDeviceRequest::kDeauthorizationDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeauthorizeDeviceRequest::CMsgClientDeauthorizeDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDeauthorizeDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDeauthorizeDeviceRequest)
}
CMsgClientDeauthorizeDeviceRequest::CMsgClientDeauthorizeDeviceRequest(const CMsgClientDeauthorizeDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deauthorization_device_token_, &from.deauthorization_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&deauthorization_account_id_) -
    reinterpret_cast<char*>(&deauthorization_device_token_)) + sizeof(deauthorization_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientDeauthorizeDeviceRequest)
}

void CMsgClientDeauthorizeDeviceRequest::SharedCtor() {
  ::memset(&deauthorization_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deauthorization_account_id_) -
      reinterpret_cast<char*>(&deauthorization_device_token_)) + sizeof(deauthorization_account_id_));
}

CMsgClientDeauthorizeDeviceRequest::~CMsgClientDeauthorizeDeviceRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientDeauthorizeDeviceRequest)
  SharedDtor();
}

void CMsgClientDeauthorizeDeviceRequest::SharedDtor() {
}

void CMsgClientDeauthorizeDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDeauthorizeDeviceRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeauthorizeDeviceRequest& CMsgClientDeauthorizeDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDeauthorizeDeviceRequest.base);
  return *internal_default_instance();
}


void CMsgClientDeauthorizeDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&deauthorization_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&deauthorization_account_id_) -
        reinterpret_cast<char*>(&deauthorization_device_token_)) + sizeof(deauthorization_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeauthorizeDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDeauthorizeDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 deauthorization_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_deauthorization_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deauthorization_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 deauthorization_device_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_deauthorization_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deauthorization_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDeauthorizeDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDeauthorizeDeviceRequest)
  return false;
#undef DO_
}

void CMsgClientDeauthorizeDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 deauthorization_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->deauthorization_account_id(), output);
  }

  // optional uint64 deauthorization_device_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deauthorization_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDeauthorizeDeviceRequest)
}

::google::protobuf::uint8* CMsgClientDeauthorizeDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 deauthorization_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->deauthorization_account_id(), target);
  }

  // optional uint64 deauthorization_device_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deauthorization_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDeauthorizeDeviceRequest)
  return target;
}

size_t CMsgClientDeauthorizeDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDeauthorizeDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 deauthorization_device_token = 2;
    if (has_deauthorization_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deauthorization_device_token());
    }

    // optional uint32 deauthorization_account_id = 1;
    if (has_deauthorization_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deauthorization_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeauthorizeDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDeauthorizeDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeauthorizeDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeauthorizeDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDeauthorizeDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDeauthorizeDeviceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientDeauthorizeDeviceRequest::MergeFrom(const CMsgClientDeauthorizeDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDeauthorizeDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      deauthorization_device_token_ = from.deauthorization_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      deauthorization_account_id_ = from.deauthorization_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeauthorizeDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDeauthorizeDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeauthorizeDeviceRequest::CopyFrom(const CMsgClientDeauthorizeDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDeauthorizeDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeauthorizeDeviceRequest::IsInitialized() const {
  return true;
}

void CMsgClientDeauthorizeDeviceRequest::Swap(CMsgClientDeauthorizeDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeauthorizeDeviceRequest::InternalSwap(CMsgClientDeauthorizeDeviceRequest* other) {
  using std::swap;
  swap(deauthorization_device_token_, other->deauthorization_device_token_);
  swap(deauthorization_account_id_, other->deauthorization_account_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDeauthorizeDeviceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeauthorizeDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeauthorizeDevice::kEresultFieldNumber;
const int CMsgClientDeauthorizeDevice::kDeauthorizationAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeauthorizeDevice::CMsgClientDeauthorizeDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDeauthorizeDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDeauthorizeDevice)
}
CMsgClientDeauthorizeDevice::CMsgClientDeauthorizeDevice(const CMsgClientDeauthorizeDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deauthorization_account_id_, &from.deauthorization_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&deauthorization_account_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientDeauthorizeDevice)
}

void CMsgClientDeauthorizeDevice::SharedCtor() {
  deauthorization_account_id_ = 0u;
  eresult_ = 2;
}

CMsgClientDeauthorizeDevice::~CMsgClientDeauthorizeDevice() {
  // @@protoc_insertion_point(destructor:CMsgClientDeauthorizeDevice)
  SharedDtor();
}

void CMsgClientDeauthorizeDevice::SharedDtor() {
}

void CMsgClientDeauthorizeDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDeauthorizeDevice::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeauthorizeDevice& CMsgClientDeauthorizeDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientDeauthorizeDevice.base);
  return *internal_default_instance();
}


void CMsgClientDeauthorizeDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    deauthorization_account_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeauthorizeDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDeauthorizeDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deauthorization_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_deauthorization_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deauthorization_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDeauthorizeDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDeauthorizeDevice)
  return false;
#undef DO_
}

void CMsgClientDeauthorizeDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 deauthorization_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->deauthorization_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDeauthorizeDevice)
}

::google::protobuf::uint8* CMsgClientDeauthorizeDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 deauthorization_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->deauthorization_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDeauthorizeDevice)
  return target;
}

size_t CMsgClientDeauthorizeDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDeauthorizeDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 deauthorization_account_id = 2;
    if (has_deauthorization_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deauthorization_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeauthorizeDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDeauthorizeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeauthorizeDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeauthorizeDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDeauthorizeDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDeauthorizeDevice)
    MergeFrom(*source);
  }
}

void CMsgClientDeauthorizeDevice::MergeFrom(const CMsgClientDeauthorizeDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDeauthorizeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      deauthorization_account_id_ = from.deauthorization_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeauthorizeDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDeauthorizeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeauthorizeDevice::CopyFrom(const CMsgClientDeauthorizeDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDeauthorizeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeauthorizeDevice::IsInitialized() const {
  return true;
}

void CMsgClientDeauthorizeDevice::Swap(CMsgClientDeauthorizeDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeauthorizeDevice::InternalSwap(CMsgClientDeauthorizeDevice* other) {
  using std::swap;
  swap(deauthorization_account_id_, other->deauthorization_account_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDeauthorizeDevice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUseLocalDeviceAuthorizations_DeviceToken::kOwnerAccountIdFieldNumber;
const int CMsgClientUseLocalDeviceAuthorizations_DeviceToken::kTokenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CMsgClientUseLocalDeviceAuthorizations_DeviceToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}
CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CMsgClientUseLocalDeviceAuthorizations_DeviceToken(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&token_id_, &from.token_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&token_id_)) + sizeof(owner_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SharedCtor() {
  ::memset(&token_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&token_id_)) + sizeof(owner_account_id_));
}

CMsgClientUseLocalDeviceAuthorizations_DeviceToken::~CMsgClientUseLocalDeviceAuthorizations_DeviceToken() {
  // @@protoc_insertion_point(destructor:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  SharedDtor();
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SharedDtor() {
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations_DeviceToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken.base);
  return *internal_default_instance();
}


void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&token_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&token_id_)) + sizeof(owner_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 token_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_token_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &token_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return false;
#undef DO_
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint64 token_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->token_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}

::google::protobuf::uint8* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint64 token_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->token_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return target;
}

size_t CMsgClientUseLocalDeviceAuthorizations_DeviceToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 token_id = 2;
    if (has_token_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->token_id());
    }

    // optional uint32 owner_account_id = 1;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUseLocalDeviceAuthorizations_DeviceToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUseLocalDeviceAuthorizations_DeviceToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
    MergeFrom(*source);
  }
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergeFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      token_id_ = from.token_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CopyFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::IsInitialized() const {
  return true;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::Swap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InternalSwap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
  using std::swap;
  swap(token_id_, other->token_id_);
  swap(owner_account_id_, other->owner_account_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUseLocalDeviceAuthorizations_DeviceToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUseLocalDeviceAuthorizations::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUseLocalDeviceAuthorizations::kAuthorizationAccountIdFieldNumber;
const int CMsgClientUseLocalDeviceAuthorizations::kDeviceTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUseLocalDeviceAuthorizations::CMsgClientUseLocalDeviceAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUseLocalDeviceAuthorizations.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUseLocalDeviceAuthorizations)
}
CMsgClientUseLocalDeviceAuthorizations::CMsgClientUseLocalDeviceAuthorizations(const CMsgClientUseLocalDeviceAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      authorization_account_id_(from.authorization_account_id_),
      device_tokens_(from.device_tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientUseLocalDeviceAuthorizations)
}

void CMsgClientUseLocalDeviceAuthorizations::SharedCtor() {
}

CMsgClientUseLocalDeviceAuthorizations::~CMsgClientUseLocalDeviceAuthorizations() {
  // @@protoc_insertion_point(destructor:CMsgClientUseLocalDeviceAuthorizations)
  SharedDtor();
}

void CMsgClientUseLocalDeviceAuthorizations::SharedDtor() {
}

void CMsgClientUseLocalDeviceAuthorizations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUseLocalDeviceAuthorizations::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUseLocalDeviceAuthorizations& CMsgClientUseLocalDeviceAuthorizations::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientUseLocalDeviceAuthorizations.base);
  return *internal_default_instance();
}


void CMsgClientUseLocalDeviceAuthorizations::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_account_id_.Clear();
  device_tokens_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUseLocalDeviceAuthorizations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUseLocalDeviceAuthorizations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 authorization_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_authorization_account_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_authorization_account_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUseLocalDeviceAuthorizations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUseLocalDeviceAuthorizations)
  return false;
#undef DO_
}

void CMsgClientUseLocalDeviceAuthorizations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  for (int i = 0, n = this->authorization_account_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->authorization_account_id(i), output);
  }

  // repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_tokens_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->device_tokens(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUseLocalDeviceAuthorizations)
}

::google::protobuf::uint8* CMsgClientUseLocalDeviceAuthorizations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->authorization_account_id_, target);

  // repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_tokens_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->device_tokens(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUseLocalDeviceAuthorizations)
  return target;
}

size_t CMsgClientUseLocalDeviceAuthorizations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUseLocalDeviceAuthorizations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 authorization_account_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->authorization_account_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->authorization_account_id_size());
    total_size += data_size;
  }

  // repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->device_tokens_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_tokens(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUseLocalDeviceAuthorizations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUseLocalDeviceAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUseLocalDeviceAuthorizations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUseLocalDeviceAuthorizations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUseLocalDeviceAuthorizations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUseLocalDeviceAuthorizations)
    MergeFrom(*source);
  }
}

void CMsgClientUseLocalDeviceAuthorizations::MergeFrom(const CMsgClientUseLocalDeviceAuthorizations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUseLocalDeviceAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorization_account_id_.MergeFrom(from.authorization_account_id_);
  device_tokens_.MergeFrom(from.device_tokens_);
}

void CMsgClientUseLocalDeviceAuthorizations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUseLocalDeviceAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUseLocalDeviceAuthorizations::CopyFrom(const CMsgClientUseLocalDeviceAuthorizations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUseLocalDeviceAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUseLocalDeviceAuthorizations::IsInitialized() const {
  return true;
}

void CMsgClientUseLocalDeviceAuthorizations::Swap(CMsgClientUseLocalDeviceAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUseLocalDeviceAuthorizations::InternalSwap(CMsgClientUseLocalDeviceAuthorizations* other) {
  using std::swap;
  authorization_account_id_.InternalSwap(&other->authorization_account_id_);
  CastToBase(&device_tokens_)->InternalSwap(CastToBase(&other->device_tokens_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUseLocalDeviceAuthorizations::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAuthorizedDevices::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevices::CMsgClientGetAuthorizedDevices()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevices.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetAuthorizedDevices)
}
CMsgClientGetAuthorizedDevices::CMsgClientGetAuthorizedDevices(const CMsgClientGetAuthorizedDevices& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetAuthorizedDevices)
}

void CMsgClientGetAuthorizedDevices::SharedCtor() {
}

CMsgClientGetAuthorizedDevices::~CMsgClientGetAuthorizedDevices() {
  // @@protoc_insertion_point(destructor:CMsgClientGetAuthorizedDevices)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevices::SharedDtor() {
}

void CMsgClientGetAuthorizedDevices::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetAuthorizedDevices::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAuthorizedDevices& CMsgClientGetAuthorizedDevices::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevices.base);
  return *internal_default_instance();
}


void CMsgClientGetAuthorizedDevices::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAuthorizedDevices::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetAuthorizedDevices)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetAuthorizedDevices)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetAuthorizedDevices)
  return false;
#undef DO_
}

void CMsgClientGetAuthorizedDevices::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetAuthorizedDevices)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevices::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetAuthorizedDevices)
  return target;
}

size_t CMsgClientGetAuthorizedDevices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetAuthorizedDevices)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAuthorizedDevices::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetAuthorizedDevices)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevices* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAuthorizedDevices>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetAuthorizedDevices)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetAuthorizedDevices)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevices::MergeFrom(const CMsgClientGetAuthorizedDevices& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetAuthorizedDevices)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientGetAuthorizedDevices::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetAuthorizedDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevices::CopyFrom(const CMsgClientGetAuthorizedDevices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetAuthorizedDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevices::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevices::Swap(CMsgClientGetAuthorizedDevices* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevices::InternalSwap(CMsgClientGetAuthorizedDevices* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevices::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kAuthDeviceTokenFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kDeviceNameFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kLastAccessTimeFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kBorrowerIdFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kIsPendingFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kAppPlayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}
CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  ::memcpy(&auth_device_token_, &from.auth_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_played_) -
    reinterpret_cast<char*>(&auth_device_token_)) + sizeof(app_played_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SharedCtor() {
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_played_) -
      reinterpret_cast<char*>(&auth_device_token_)) + sizeof(app_played_));
}

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::~CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice() {
  // @@protoc_insertion_point(destructor:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SharedDtor() {
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice.base);
  return *internal_default_instance();
}


void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    device_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&auth_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_played_) -
        reinterpret_cast<char*>(&auth_device_token_)) + sizeof(app_played_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 auth_device_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_auth_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &auth_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_access_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_last_access_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_access_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 borrower_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_borrower_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &borrower_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_pending = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_pending();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_played = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_app_played();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_played_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return false;
#undef DO_
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 auth_device_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->auth_device_token(), output);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_name(), output);
  }

  // optional uint32 last_access_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_access_time(), output);
  }

  // optional uint32 borrower_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->borrower_id(), output);
  }

  // optional bool is_pending = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_pending(), output);
  }

  // optional uint32 app_played = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_played(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 auth_device_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->auth_device_token(), target);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_name(), target);
  }

  // optional uint32 last_access_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_access_time(), target);
  }

  // optional uint32 borrower_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->borrower_id(), target);
  }

  // optional bool is_pending = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_pending(), target);
  }

  // optional uint32 app_played = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_played(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return target;
}

size_t CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string device_name = 2;
    if (has_device_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_name());
    }

    // optional uint64 auth_device_token = 1;
    if (has_auth_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->auth_device_token());
    }

    // optional uint32 last_access_time = 3;
    if (has_last_access_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_access_time());
    }

    // optional uint32 borrower_id = 4;
    if (has_borrower_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->borrower_id());
    }

    // optional bool is_pending = 5;
    if (has_is_pending()) {
      total_size += 1 + 1;
    }

    // optional uint32 app_played = 6;
    if (has_app_played()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_played());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergeFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_name();
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      auth_device_token_ = from.auth_device_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_access_time_ = from.last_access_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      borrower_id_ = from.borrower_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_pending_ = from.is_pending_;
    }
    if (cached_has_bits & 0x00000020u) {
      app_played_ = from.app_played_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CopyFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::Swap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InternalSwap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
  using std::swap;
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_device_token_, other->auth_device_token_);
  swap(last_access_time_, other->last_access_time_);
  swap(borrower_id_, other->borrower_id_);
  swap(is_pending_, other->is_pending_);
  swap(app_played_, other->app_played_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAuthorizedDevicesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAuthorizedDevicesResponse::kEresultFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse::kAuthorizedDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevicesResponse::CMsgClientGetAuthorizedDevicesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevicesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetAuthorizedDevicesResponse)
}
CMsgClientGetAuthorizedDevicesResponse::CMsgClientGetAuthorizedDevicesResponse(const CMsgClientGetAuthorizedDevicesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      authorized_device_(from.authorized_device_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetAuthorizedDevicesResponse)
}

void CMsgClientGetAuthorizedDevicesResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientGetAuthorizedDevicesResponse::~CMsgClientGetAuthorizedDevicesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetAuthorizedDevicesResponse)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevicesResponse::SharedDtor() {
}

void CMsgClientGetAuthorizedDevicesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetAuthorizedDevicesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAuthorizedDevicesResponse& CMsgClientGetAuthorizedDevicesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientGetAuthorizedDevicesResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetAuthorizedDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorized_device_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAuthorizedDevicesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetAuthorizedDevicesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_authorized_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetAuthorizedDevicesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetAuthorizedDevicesResponse)
  return false;
#undef DO_
}

void CMsgClientGetAuthorizedDevicesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->authorized_device_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->authorized_device(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetAuthorizedDevicesResponse)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevicesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->authorized_device_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->authorized_device(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetAuthorizedDevicesResponse)
  return target;
}

size_t CMsgClientGetAuthorizedDevicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetAuthorizedDevicesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->authorized_device_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->authorized_device(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAuthorizedDevicesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetAuthorizedDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevicesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAuthorizedDevicesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetAuthorizedDevicesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetAuthorizedDevicesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevicesResponse::MergeFrom(const CMsgClientGetAuthorizedDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetAuthorizedDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorized_device_.MergeFrom(from.authorized_device_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientGetAuthorizedDevicesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetAuthorizedDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevicesResponse::CopyFrom(const CMsgClientGetAuthorizedDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetAuthorizedDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevicesResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevicesResponse::Swap(CMsgClientGetAuthorizedDevicesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevicesResponse::InternalSwap(CMsgClientGetAuthorizedDevicesResponse* other) {
  using std::swap;
  CastToBase(&authorized_device_)->InternalSwap(CastToBase(&other->authorized_device_));
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevicesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryLockStatus_LockedLibrary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryLockStatus_LockedLibrary::kOwnerIdFieldNumber;
const int CMsgClientSharedLibraryLockStatus_LockedLibrary::kLockedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryLockStatus_LockedLibrary::CMsgClientSharedLibraryLockStatus_LockedLibrary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSharedLibraryLockStatus.LockedLibrary)
}
CMsgClientSharedLibraryLockStatus_LockedLibrary::CMsgClientSharedLibraryLockStatus_LockedLibrary(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_id_, &from.owner_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&locked_by_) -
    reinterpret_cast<char*>(&owner_id_)) + sizeof(locked_by_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientSharedLibraryLockStatus.LockedLibrary)
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SharedCtor() {
  ::memset(&owner_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locked_by_) -
      reinterpret_cast<char*>(&owner_id_)) + sizeof(locked_by_));
}

CMsgClientSharedLibraryLockStatus_LockedLibrary::~CMsgClientSharedLibraryLockStatus_LockedLibrary() {
  // @@protoc_insertion_point(destructor:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  SharedDtor();
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SharedDtor() {
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryLockStatus_LockedLibrary::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus_LockedLibrary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryLockStatus_LockedLibrary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&owner_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&locked_by_) -
        reinterpret_cast<char*>(&owner_id_)) + sizeof(locked_by_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryLockStatus_LockedLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 locked_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_locked_by();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locked_by_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_id(), output);
  }

  // optional uint32 locked_by = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locked_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSharedLibraryLockStatus.LockedLibrary)
}

::google::protobuf::uint8* CMsgClientSharedLibraryLockStatus_LockedLibrary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_id(), target);
  }

  // optional uint32 locked_by = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locked_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return target;
}

size_t CMsgClientSharedLibraryLockStatus_LockedLibrary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 owner_id = 1;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

    // optional uint32 locked_by = 2;
    if (has_locked_by()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->locked_by());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryLockStatus_LockedLibrary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryLockStatus_LockedLibrary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSharedLibraryLockStatus.LockedLibrary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSharedLibraryLockStatus.LockedLibrary)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::MergeFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      owner_id_ = from.owner_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      locked_by_ = from.locked_by_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::CopyFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryLockStatus_LockedLibrary::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::Swap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::InternalSwap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
  using std::swap;
  swap(owner_id_, other->owner_id_);
  swap(locked_by_, other->locked_by_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryLockStatus_LockedLibrary::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryLockStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryLockStatus::kLockedLibraryFieldNumber;
const int CMsgClientSharedLibraryLockStatus::kOwnLibraryLockedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryLockStatus::CMsgClientSharedLibraryLockStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryLockStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSharedLibraryLockStatus)
}
CMsgClientSharedLibraryLockStatus::CMsgClientSharedLibraryLockStatus(const CMsgClientSharedLibraryLockStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      locked_library_(from.locked_library_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  own_library_locked_by_ = from.own_library_locked_by_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientSharedLibraryLockStatus)
}

void CMsgClientSharedLibraryLockStatus::SharedCtor() {
  own_library_locked_by_ = 0u;
}

CMsgClientSharedLibraryLockStatus::~CMsgClientSharedLibraryLockStatus() {
  // @@protoc_insertion_point(destructor:CMsgClientSharedLibraryLockStatus)
  SharedDtor();
}

void CMsgClientSharedLibraryLockStatus::SharedDtor() {
}

void CMsgClientSharedLibraryLockStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryLockStatus::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryLockStatus& CMsgClientSharedLibraryLockStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryLockStatus.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryLockStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locked_library_.Clear();
  own_library_locked_by_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryLockStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSharedLibraryLockStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locked_library()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 own_library_locked_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_own_library_locked_by();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &own_library_locked_by_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSharedLibraryLockStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSharedLibraryLockStatus)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryLockStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locked_library_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locked_library(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 own_library_locked_by = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->own_library_locked_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSharedLibraryLockStatus)
}

::google::protobuf::uint8* CMsgClientSharedLibraryLockStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locked_library_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locked_library(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 own_library_locked_by = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->own_library_locked_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSharedLibraryLockStatus)
  return target;
}

size_t CMsgClientSharedLibraryLockStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSharedLibraryLockStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locked_library_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locked_library(static_cast<int>(i)));
    }
  }

  // optional uint32 own_library_locked_by = 2;
  if (has_own_library_locked_by()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->own_library_locked_by());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryLockStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSharedLibraryLockStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryLockStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryLockStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSharedLibraryLockStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSharedLibraryLockStatus)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryLockStatus::MergeFrom(const CMsgClientSharedLibraryLockStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSharedLibraryLockStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locked_library_.MergeFrom(from.locked_library_);
  if (from.has_own_library_locked_by()) {
    set_own_library_locked_by(from.own_library_locked_by());
  }
}

void CMsgClientSharedLibraryLockStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSharedLibraryLockStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryLockStatus::CopyFrom(const CMsgClientSharedLibraryLockStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSharedLibraryLockStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryLockStatus::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryLockStatus::Swap(CMsgClientSharedLibraryLockStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryLockStatus::InternalSwap(CMsgClientSharedLibraryLockStatus* other) {
  using std::swap;
  CastToBase(&locked_library_)->InternalSwap(CastToBase(&other->locked_library_));
  swap(own_library_locked_by_, other->own_library_locked_by_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryLockStatus::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryStopPlaying_StopApp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryStopPlaying_StopApp::kAppIdFieldNumber;
const int CMsgClientSharedLibraryStopPlaying_StopApp::kOwnerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryStopPlaying_StopApp::CMsgClientSharedLibraryStopPlaying_StopApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryStopPlaying_StopApp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSharedLibraryStopPlaying.StopApp)
}
CMsgClientSharedLibraryStopPlaying_StopApp::CMsgClientSharedLibraryStopPlaying_StopApp(const CMsgClientSharedLibraryStopPlaying_StopApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(owner_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientSharedLibraryStopPlaying.StopApp)
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_id_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(owner_id_));
}

CMsgClientSharedLibraryStopPlaying_StopApp::~CMsgClientSharedLibraryStopPlaying_StopApp() {
  // @@protoc_insertion_point(destructor:CMsgClientSharedLibraryStopPlaying.StopApp)
  SharedDtor();
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SharedDtor() {
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryStopPlaying_StopApp::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying_StopApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryStopPlaying_StopApp.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryStopPlaying_StopApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_id_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(owner_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryStopPlaying_StopApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSharedLibraryStopPlaying.StopApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSharedLibraryStopPlaying.StopApp)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSharedLibraryStopPlaying.StopApp)
}

::google::protobuf::uint8* CMsgClientSharedLibraryStopPlaying_StopApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSharedLibraryStopPlaying.StopApp)
  return target;
}

size_t CMsgClientSharedLibraryStopPlaying_StopApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 owner_id = 2;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryStopPlaying_StopApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryStopPlaying_StopApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSharedLibraryStopPlaying.StopApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSharedLibraryStopPlaying.StopApp)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryStopPlaying_StopApp::MergeFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_id_ = from.owner_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSharedLibraryStopPlaying_StopApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryStopPlaying_StopApp::CopyFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSharedLibraryStopPlaying.StopApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryStopPlaying_StopApp::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::Swap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryStopPlaying_StopApp::InternalSwap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(owner_id_, other->owner_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryStopPlaying_StopApp::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryStopPlaying::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryStopPlaying::kSecondsLeftFieldNumber;
const int CMsgClientSharedLibraryStopPlaying::kStopAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryStopPlaying::CMsgClientSharedLibraryStopPlaying()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryStopPlaying.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSharedLibraryStopPlaying)
}
CMsgClientSharedLibraryStopPlaying::CMsgClientSharedLibraryStopPlaying(const CMsgClientSharedLibraryStopPlaying& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stop_apps_(from.stop_apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seconds_left_ = from.seconds_left_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientSharedLibraryStopPlaying)
}

void CMsgClientSharedLibraryStopPlaying::SharedCtor() {
  seconds_left_ = 0;
}

CMsgClientSharedLibraryStopPlaying::~CMsgClientSharedLibraryStopPlaying() {
  // @@protoc_insertion_point(destructor:CMsgClientSharedLibraryStopPlaying)
  SharedDtor();
}

void CMsgClientSharedLibraryStopPlaying::SharedDtor() {
}

void CMsgClientSharedLibraryStopPlaying::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryStopPlaying::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryStopPlaying& CMsgClientSharedLibraryStopPlaying::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientSharedLibraryStopPlaying.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryStopPlaying::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stop_apps_.Clear();
  seconds_left_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryStopPlaying::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSharedLibraryStopPlaying)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 seconds_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seconds_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stop_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSharedLibraryStopPlaying)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSharedLibraryStopPlaying)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryStopPlaying::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seconds_left(), output);
  }

  // repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stop_apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stop_apps(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSharedLibraryStopPlaying)
}

::google::protobuf::uint8* CMsgClientSharedLibraryStopPlaying::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seconds_left(), target);
  }

  // repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stop_apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stop_apps(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSharedLibraryStopPlaying)
  return target;
}

size_t CMsgClientSharedLibraryStopPlaying::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSharedLibraryStopPlaying)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stop_apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stop_apps(static_cast<int>(i)));
    }
  }

  // optional int32 seconds_left = 1;
  if (has_seconds_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds_left());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryStopPlaying::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSharedLibraryStopPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryStopPlaying* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryStopPlaying>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSharedLibraryStopPlaying)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSharedLibraryStopPlaying)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryStopPlaying::MergeFrom(const CMsgClientSharedLibraryStopPlaying& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSharedLibraryStopPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stop_apps_.MergeFrom(from.stop_apps_);
  if (from.has_seconds_left()) {
    set_seconds_left(from.seconds_left());
  }
}

void CMsgClientSharedLibraryStopPlaying::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSharedLibraryStopPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryStopPlaying::CopyFrom(const CMsgClientSharedLibraryStopPlaying& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSharedLibraryStopPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryStopPlaying::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryStopPlaying::Swap(CMsgClientSharedLibraryStopPlaying* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryStopPlaying::InternalSwap(CMsgClientSharedLibraryStopPlaying* other) {
  using std::swap;
  CastToBase(&stop_apps_)->InternalSwap(CastToBase(&other->stop_apps_));
  swap(seconds_left_, other->seconds_left_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryStopPlaying::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceCall::kSysidRoutingFieldNumber;
const int CMsgClientServiceCall::kCallHandleFieldNumber;
const int CMsgClientServiceCall::kModuleCrcFieldNumber;
const int CMsgClientServiceCall::kModuleHashFieldNumber;
const int CMsgClientServiceCall::kFunctionIdFieldNumber;
const int CMsgClientServiceCall::kCubOutputMaxFieldNumber;
const int CMsgClientServiceCall::kFlagsFieldNumber;
const int CMsgClientServiceCall::kCallparameterFieldNumber;
const int CMsgClientServiceCall::kPingOnlyFieldNumber;
const int CMsgClientServiceCall::kMaxOutstandingCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceCall::CMsgClientServiceCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceCall.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServiceCall)
}
CMsgClientServiceCall::CMsgClientServiceCall(const CMsgClientServiceCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sysid_routing()) {
    sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
  }
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  callparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_callparameter()) {
    callparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callparameter_);
  }
  ::memcpy(&call_handle_, &from.call_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_outstanding_calls_) -
    reinterpret_cast<char*>(&call_handle_)) + sizeof(max_outstanding_calls_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientServiceCall)
}

void CMsgClientServiceCall::SharedCtor() {
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_outstanding_calls_) -
      reinterpret_cast<char*>(&call_handle_)) + sizeof(max_outstanding_calls_));
}

CMsgClientServiceCall::~CMsgClientServiceCall() {
  // @@protoc_insertion_point(destructor:CMsgClientServiceCall)
  SharedDtor();
}

void CMsgClientServiceCall::SharedDtor() {
  sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callparameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServiceCall::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceCall& CMsgClientServiceCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceCall.base);
  return *internal_default_instance();
}


void CMsgClientServiceCall::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sysid_routing_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      module_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      callparameter_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&call_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&call_handle_)) + sizeof(flags_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&ping_only_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_outstanding_calls_) -
        reinterpret_cast<char*>(&ping_only_)) + sizeof(max_outstanding_calls_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServiceCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_call_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 function_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_function_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cub_output_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_cub_output_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cub_output_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes callparameter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_callparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ping_only = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_ping_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ping_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_outstanding_calls = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_max_outstanding_calls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_outstanding_calls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServiceCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServiceCall)
  return false;
#undef DO_
}

void CMsgClientServiceCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sysid_routing(), output);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->call_handle(), output);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->module_crc(), output);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->module_hash(), output);
  }

  // optional uint32 function_id = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->function_id(), output);
  }

  // optional uint32 cub_output_max = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cub_output_max(), output);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flags(), output);
  }

  // optional bytes callparameter = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->callparameter(), output);
  }

  // optional bool ping_only = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->ping_only(), output);
  }

  // optional uint32 max_outstanding_calls = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->max_outstanding_calls(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServiceCall)
}

::google::protobuf::uint8* CMsgClientServiceCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sysid_routing(), target);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->call_handle(), target);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->module_crc(), target);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->module_hash(), target);
  }

  // optional uint32 function_id = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->function_id(), target);
  }

  // optional uint32 cub_output_max = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cub_output_max(), target);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flags(), target);
  }

  // optional bytes callparameter = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->callparameter(), target);
  }

  // optional bool ping_only = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->ping_only(), target);
  }

  // optional uint32 max_outstanding_calls = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->max_outstanding_calls(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServiceCall)
  return target;
}

size_t CMsgClientServiceCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServiceCall)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sysid_routing = 1;
    if (has_sysid_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sysid_routing());
    }

    // optional bytes module_hash = 4;
    if (has_module_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes callparameter = 8;
    if (has_callparameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->callparameter());
    }

    // optional uint32 call_handle = 2;
    if (has_call_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_handle());
    }

    // optional uint32 module_crc = 3;
    if (has_module_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

    // optional uint32 function_id = 5;
    if (has_function_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->function_id());
    }

    // optional uint32 cub_output_max = 6;
    if (has_cub_output_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cub_output_max());
    }

    // optional uint32 flags = 7;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool ping_only = 9;
    if (has_ping_only()) {
      total_size += 1 + 1;
    }

    // optional uint32 max_outstanding_calls = 10;
    if (has_max_outstanding_calls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_outstanding_calls());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServiceCall)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServiceCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServiceCall)
    MergeFrom(*source);
  }
}

void CMsgClientServiceCall::MergeFrom(const CMsgClientServiceCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServiceCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sysid_routing();
      sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_module_hash();
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_callparameter();
      callparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callparameter_);
    }
    if (cached_has_bits & 0x00000008u) {
      call_handle_ = from.call_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      module_crc_ = from.module_crc_;
    }
    if (cached_has_bits & 0x00000020u) {
      function_id_ = from.function_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      cub_output_max_ = from.cub_output_max_;
    }
    if (cached_has_bits & 0x00000080u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      ping_only_ = from.ping_only_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_outstanding_calls_ = from.max_outstanding_calls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServiceCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceCall::CopyFrom(const CMsgClientServiceCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServiceCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceCall::IsInitialized() const {
  return true;
}

void CMsgClientServiceCall::Swap(CMsgClientServiceCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceCall::InternalSwap(CMsgClientServiceCall* other) {
  using std::swap;
  sysid_routing_.Swap(&other->sysid_routing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_hash_.Swap(&other->module_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callparameter_.Swap(&other->callparameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_handle_, other->call_handle_);
  swap(module_crc_, other->module_crc_);
  swap(function_id_, other->function_id_);
  swap(cub_output_max_, other->cub_output_max_);
  swap(flags_, other->flags_);
  swap(ping_only_, other->ping_only_);
  swap(max_outstanding_calls_, other->max_outstanding_calls_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServiceCall::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceModule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceModule::kModuleCrcFieldNumber;
const int CMsgClientServiceModule::kModuleHashFieldNumber;
const int CMsgClientServiceModule::kModuleContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceModule::CMsgClientServiceModule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceModule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServiceModule)
}
CMsgClientServiceModule::CMsgClientServiceModule(const CMsgClientServiceModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  module_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_content()) {
    module_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_content_);
  }
  module_crc_ = from.module_crc_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientServiceModule)
}

void CMsgClientServiceModule::SharedCtor() {
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_crc_ = 0u;
}

CMsgClientServiceModule::~CMsgClientServiceModule() {
  // @@protoc_insertion_point(destructor:CMsgClientServiceModule)
  SharedDtor();
}

void CMsgClientServiceModule::SharedDtor() {
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServiceModule::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceModule& CMsgClientServiceModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceModule.base);
  return *internal_default_instance();
}


void CMsgClientServiceModule::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      module_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      module_content_.ClearNonDefaultToEmptyNoArena();
    }
  }
  module_crc_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServiceModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 module_crc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServiceModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServiceModule)
  return false;
#undef DO_
}

void CMsgClientServiceModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 module_crc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_crc(), output);
  }

  // optional bytes module_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->module_hash(), output);
  }

  // optional bytes module_content = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->module_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServiceModule)
}

::google::protobuf::uint8* CMsgClientServiceModule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 module_crc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_crc(), target);
  }

  // optional bytes module_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->module_hash(), target);
  }

  // optional bytes module_content = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->module_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServiceModule)
  return target;
}

size_t CMsgClientServiceModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServiceModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes module_hash = 2;
    if (has_module_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes module_content = 3;
    if (has_module_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_content());
    }

    // optional uint32 module_crc = 1;
    if (has_module_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServiceModule)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceModule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceModule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServiceModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServiceModule)
    MergeFrom(*source);
  }
}

void CMsgClientServiceModule::MergeFrom(const CMsgClientServiceModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServiceModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_module_hash();
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_module_content();
      module_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_content_);
    }
    if (cached_has_bits & 0x00000004u) {
      module_crc_ = from.module_crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServiceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceModule::CopyFrom(const CMsgClientServiceModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServiceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceModule::IsInitialized() const {
  return true;
}

void CMsgClientServiceModule::Swap(CMsgClientServiceModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceModule::InternalSwap(CMsgClientServiceModule* other) {
  using std::swap;
  module_hash_.Swap(&other->module_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_content_.Swap(&other->module_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(module_crc_, other->module_crc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServiceModule::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceCallResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceCallResponse::kSysidRoutingFieldNumber;
const int CMsgClientServiceCallResponse::kCallHandleFieldNumber;
const int CMsgClientServiceCallResponse::kModuleCrcFieldNumber;
const int CMsgClientServiceCallResponse::kModuleHashFieldNumber;
const int CMsgClientServiceCallResponse::kEcallresultFieldNumber;
const int CMsgClientServiceCallResponse::kResultContentFieldNumber;
const int CMsgClientServiceCallResponse::kOsVersionInfoFieldNumber;
const int CMsgClientServiceCallResponse::kSystemInfoFieldNumber;
const int CMsgClientServiceCallResponse::kLoadAddressFieldNumber;
const int CMsgClientServiceCallResponse::kExceptionRecordFieldNumber;
const int CMsgClientServiceCallResponse::kPortableOsVersionInfoFieldNumber;
const int CMsgClientServiceCallResponse::kPortableSystemInfoFieldNumber;
const int CMsgClientServiceCallResponse::kWasConvertedFieldNumber;
const int CMsgClientServiceCallResponse::kInternalResultFieldNumber;
const int CMsgClientServiceCallResponse::kCurrentCountFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallHandleFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallModuleCrcFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallSysidRoutingFieldNumber;
const int CMsgClientServiceCallResponse::kLastEcallresultFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallissueDeltaFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallcompleteDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceCallResponse::CMsgClientServiceCallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceCallResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServiceCallResponse)
}
CMsgClientServiceCallResponse::CMsgClientServiceCallResponse(const CMsgClientServiceCallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sysid_routing()) {
    sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
  }
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  result_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result_content()) {
    result_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_content_);
  }
  os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os_version_info()) {
    os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_info_);
  }
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_system_info()) {
    system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
  }
  exception_record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_exception_record()) {
    exception_record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_record_);
  }
  portable_os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portable_os_version_info()) {
    portable_os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_os_version_info_);
  }
  portable_system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portable_system_info()) {
    portable_system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_system_info_);
  }
  last_call_sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_call_sysid_routing()) {
    last_call_sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_call_sysid_routing_);
  }
  ::memcpy(&call_handle_, &from.call_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_callcomplete_delta_) -
    reinterpret_cast<char*>(&call_handle_)) + sizeof(last_callcomplete_delta_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientServiceCallResponse)
}

void CMsgClientServiceCallResponse::SharedCtor() {
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exception_record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_call_sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_callcomplete_delta_) -
      reinterpret_cast<char*>(&call_handle_)) + sizeof(last_callcomplete_delta_));
}

CMsgClientServiceCallResponse::~CMsgClientServiceCallResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientServiceCallResponse)
  SharedDtor();
}

void CMsgClientServiceCallResponse::SharedDtor() {
  sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exception_record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_os_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_call_sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceCallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServiceCallResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceCallResponse& CMsgClientServiceCallResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientServiceCallResponse.base);
  return *internal_default_instance();
}


void CMsgClientServiceCallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sysid_routing_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      module_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      result_content_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      os_version_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      system_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      exception_record_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      portable_os_version_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      portable_system_info_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    last_call_sysid_routing_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 65024u) {
    ::memset(&call_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&current_count_) -
        reinterpret_cast<char*>(&call_handle_)) + sizeof(current_count_));
  }
  if (cached_has_bits & 2031616u) {
    ::memset(&last_call_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_callcomplete_delta_) -
        reinterpret_cast<char*>(&last_call_handle_)) + sizeof(last_callcomplete_delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceCallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServiceCallResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_call_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ecallresult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ecallresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ecallresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes result_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes os_version_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_os_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes system_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 load_address = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_load_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &load_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes exception_record = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_exception_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes portable_os_version_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portable_os_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes portable_system_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool was_converted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_was_converted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &was_converted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 internal_result = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_internal_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &internal_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 current_count = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_current_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_call_handle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_last_call_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_call_module_crc = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_last_call_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_call_module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes last_call_sysid_routing = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_last_call_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_ecallresult = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_last_ecallresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_ecallresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_callissue_delta = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_last_callissue_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_callissue_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_callcomplete_delta = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_last_callcomplete_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_callcomplete_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServiceCallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServiceCallResponse)
  return false;
#undef DO_
}

void CMsgClientServiceCallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sysid_routing(), output);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->call_handle(), output);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->module_crc(), output);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->module_hash(), output);
  }

  // optional uint32 ecallresult = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ecallresult(), output);
  }

  // optional bytes result_content = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->result_content(), output);
  }

  // optional bytes os_version_info = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->os_version_info(), output);
  }

  // optional bytes system_info = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->system_info(), output);
  }

  // optional fixed64 load_address = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(9, this->load_address(), output);
  }

  // optional bytes exception_record = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->exception_record(), output);
  }

  // optional bytes portable_os_version_info = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->portable_os_version_info(), output);
  }

  // optional bytes portable_system_info = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->portable_system_info(), output);
  }

  // optional bool was_converted = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->was_converted(), output);
  }

  // optional uint32 internal_result = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->internal_result(), output);
  }

  // optional uint32 current_count = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->current_count(), output);
  }

  // optional uint32 last_call_handle = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->last_call_handle(), output);
  }

  // optional uint32 last_call_module_crc = 17;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->last_call_module_crc(), output);
  }

  // optional bytes last_call_sysid_routing = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->last_call_sysid_routing(), output);
  }

  // optional uint32 last_ecallresult = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->last_ecallresult(), output);
  }

  // optional uint32 last_callissue_delta = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->last_callissue_delta(), output);
  }

  // optional uint32 last_callcomplete_delta = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->last_callcomplete_delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServiceCallResponse)
}

::google::protobuf::uint8* CMsgClientServiceCallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sysid_routing(), target);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->call_handle(), target);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->module_crc(), target);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->module_hash(), target);
  }

  // optional uint32 ecallresult = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ecallresult(), target);
  }

  // optional bytes result_content = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->result_content(), target);
  }

  // optional bytes os_version_info = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->os_version_info(), target);
  }

  // optional bytes system_info = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->system_info(), target);
  }

  // optional fixed64 load_address = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(9, this->load_address(), target);
  }

  // optional bytes exception_record = 10;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->exception_record(), target);
  }

  // optional bytes portable_os_version_info = 11;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->portable_os_version_info(), target);
  }

  // optional bytes portable_system_info = 12;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->portable_system_info(), target);
  }

  // optional bool was_converted = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->was_converted(), target);
  }

  // optional uint32 internal_result = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->internal_result(), target);
  }

  // optional uint32 current_count = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->current_count(), target);
  }

  // optional uint32 last_call_handle = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->last_call_handle(), target);
  }

  // optional uint32 last_call_module_crc = 17;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->last_call_module_crc(), target);
  }

  // optional bytes last_call_sysid_routing = 18;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->last_call_sysid_routing(), target);
  }

  // optional uint32 last_ecallresult = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->last_ecallresult(), target);
  }

  // optional uint32 last_callissue_delta = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->last_callissue_delta(), target);
  }

  // optional uint32 last_callcomplete_delta = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->last_callcomplete_delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServiceCallResponse)
  return target;
}

size_t CMsgClientServiceCallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServiceCallResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sysid_routing = 1;
    if (has_sysid_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sysid_routing());
    }

    // optional bytes module_hash = 4;
    if (has_module_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes result_content = 6;
    if (has_result_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->result_content());
    }

    // optional bytes os_version_info = 7;
    if (has_os_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->os_version_info());
    }

    // optional bytes system_info = 8;
    if (has_system_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->system_info());
    }

    // optional bytes exception_record = 10;
    if (has_exception_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->exception_record());
    }

    // optional bytes portable_os_version_info = 11;
    if (has_portable_os_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->portable_os_version_info());
    }

    // optional bytes portable_system_info = 12;
    if (has_portable_system_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->portable_system_info());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bytes last_call_sysid_routing = 18;
    if (has_last_call_sysid_routing()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->last_call_sysid_routing());
    }

    // optional uint32 call_handle = 2;
    if (has_call_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_handle());
    }

    // optional uint32 module_crc = 3;
    if (has_module_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

    // optional fixed64 load_address = 9;
    if (has_load_address()) {
      total_size += 1 + 8;
    }

    // optional uint32 ecallresult = 5;
    if (has_ecallresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ecallresult());
    }

    // optional bool was_converted = 13;
    if (has_was_converted()) {
      total_size += 1 + 1;
    }

    // optional uint32 internal_result = 14;
    if (has_internal_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->internal_result());
    }

    // optional uint32 current_count = 15;
    if (has_current_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current_count());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional uint32 last_call_handle = 16;
    if (has_last_call_handle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_call_handle());
    }

    // optional uint32 last_call_module_crc = 17;
    if (has_last_call_module_crc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_call_module_crc());
    }

    // optional uint32 last_ecallresult = 19;
    if (has_last_ecallresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_ecallresult());
    }

    // optional uint32 last_callissue_delta = 20;
    if (has_last_callissue_delta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_callissue_delta());
    }

    // optional uint32 last_callcomplete_delta = 21;
    if (has_last_callcomplete_delta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_callcomplete_delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceCallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServiceCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceCallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceCallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServiceCallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServiceCallResponse)
    MergeFrom(*source);
  }
}

void CMsgClientServiceCallResponse::MergeFrom(const CMsgClientServiceCallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServiceCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sysid_routing();
      sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_module_hash();
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_result_content();
      result_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_content_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_os_version_info();
      os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_info_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_system_info();
      system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_exception_record();
      exception_record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_record_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_portable_os_version_info();
      portable_os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_os_version_info_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_portable_system_info();
      portable_system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_system_info_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_last_call_sysid_routing();
      last_call_sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_call_sysid_routing_);
    }
    if (cached_has_bits & 0x00000200u) {
      call_handle_ = from.call_handle_;
    }
    if (cached_has_bits & 0x00000400u) {
      module_crc_ = from.module_crc_;
    }
    if (cached_has_bits & 0x00000800u) {
      load_address_ = from.load_address_;
    }
    if (cached_has_bits & 0x00001000u) {
      ecallresult_ = from.ecallresult_;
    }
    if (cached_has_bits & 0x00002000u) {
      was_converted_ = from.was_converted_;
    }
    if (cached_has_bits & 0x00004000u) {
      internal_result_ = from.internal_result_;
    }
    if (cached_has_bits & 0x00008000u) {
      current_count_ = from.current_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      last_call_handle_ = from.last_call_handle_;
    }
    if (cached_has_bits & 0x00020000u) {
      last_call_module_crc_ = from.last_call_module_crc_;
    }
    if (cached_has_bits & 0x00040000u) {
      last_ecallresult_ = from.last_ecallresult_;
    }
    if (cached_has_bits & 0x00080000u) {
      last_callissue_delta_ = from.last_callissue_delta_;
    }
    if (cached_has_bits & 0x00100000u) {
      last_callcomplete_delta_ = from.last_callcomplete_delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceCallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServiceCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceCallResponse::CopyFrom(const CMsgClientServiceCallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServiceCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceCallResponse::IsInitialized() const {
  return true;
}

void CMsgClientServiceCallResponse::Swap(CMsgClientServiceCallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceCallResponse::InternalSwap(CMsgClientServiceCallResponse* other) {
  using std::swap;
  sysid_routing_.Swap(&other->sysid_routing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_hash_.Swap(&other->module_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_content_.Swap(&other->result_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_version_info_.Swap(&other->os_version_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  system_info_.Swap(&other->system_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exception_record_.Swap(&other->exception_record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portable_os_version_info_.Swap(&other->portable_os_version_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portable_system_info_.Swap(&other->portable_system_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_call_sysid_routing_.Swap(&other->last_call_sysid_routing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_handle_, other->call_handle_);
  swap(module_crc_, other->module_crc_);
  swap(load_address_, other->load_address_);
  swap(ecallresult_, other->ecallresult_);
  swap(was_converted_, other->was_converted_);
  swap(internal_result_, other->internal_result_);
  swap(current_count_, other->current_count_);
  swap(last_call_handle_, other->last_call_handle_);
  swap(last_call_module_crc_, other->last_call_module_crc_);
  swap(last_ecallresult_, other->last_ecallresult_);
  swap(last_callissue_delta_, other->last_callissue_delta_);
  swap(last_callcomplete_delta_, other->last_callcomplete_delta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServiceCallResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockStreaming::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockStreaming::CMsgAMUnlockStreaming()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockStreaming.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMUnlockStreaming)
}
CMsgAMUnlockStreaming::CMsgAMUnlockStreaming(const CMsgAMUnlockStreaming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMUnlockStreaming)
}

void CMsgAMUnlockStreaming::SharedCtor() {
}

CMsgAMUnlockStreaming::~CMsgAMUnlockStreaming() {
  // @@protoc_insertion_point(destructor:CMsgAMUnlockStreaming)
  SharedDtor();
}

void CMsgAMUnlockStreaming::SharedDtor() {
}

void CMsgAMUnlockStreaming::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAMUnlockStreaming::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMUnlockStreaming& CMsgAMUnlockStreaming::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockStreaming.base);
  return *internal_default_instance();
}


void CMsgAMUnlockStreaming::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMUnlockStreaming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMUnlockStreaming)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMUnlockStreaming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMUnlockStreaming)
  return false;
#undef DO_
}

void CMsgAMUnlockStreaming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMUnlockStreaming)
}

::google::protobuf::uint8* CMsgAMUnlockStreaming::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMUnlockStreaming)
  return target;
}

size_t CMsgAMUnlockStreaming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMUnlockStreaming)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockStreaming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMUnlockStreaming)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockStreaming* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMUnlockStreaming>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMUnlockStreaming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMUnlockStreaming)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockStreaming::MergeFrom(const CMsgAMUnlockStreaming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMUnlockStreaming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgAMUnlockStreaming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMUnlockStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockStreaming::CopyFrom(const CMsgAMUnlockStreaming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMUnlockStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockStreaming::IsInitialized() const {
  return true;
}

void CMsgAMUnlockStreaming::Swap(CMsgAMUnlockStreaming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockStreaming::InternalSwap(CMsgAMUnlockStreaming* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAMUnlockStreaming::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockStreamingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMUnlockStreamingResponse::kEresultFieldNumber;
const int CMsgAMUnlockStreamingResponse::kEncryptionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockStreamingResponse::CMsgAMUnlockStreamingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockStreamingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMUnlockStreamingResponse)
}
CMsgAMUnlockStreamingResponse::CMsgAMUnlockStreamingResponse(const CMsgAMUnlockStreamingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encryption_key()) {
    encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMUnlockStreamingResponse)
}

void CMsgAMUnlockStreamingResponse::SharedCtor() {
  encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2;
}

CMsgAMUnlockStreamingResponse::~CMsgAMUnlockStreamingResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMUnlockStreamingResponse)
  SharedDtor();
}

void CMsgAMUnlockStreamingResponse::SharedDtor() {
  encryption_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMUnlockStreamingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAMUnlockStreamingResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMUnlockStreamingResponse& CMsgAMUnlockStreamingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockStreamingResponse.base);
  return *internal_default_instance();
}


void CMsgAMUnlockStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      encryption_key_.ClearNonDefaultToEmptyNoArena();
    }
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMUnlockStreamingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMUnlockStreamingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encryption_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encryption_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMUnlockStreamingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMUnlockStreamingResponse)
  return false;
#undef DO_
}

void CMsgAMUnlockStreamingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bytes encryption_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->encryption_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMUnlockStreamingResponse)
}

::google::protobuf::uint8* CMsgAMUnlockStreamingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes encryption_key = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->encryption_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMUnlockStreamingResponse)
  return target;
}

size_t CMsgAMUnlockStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMUnlockStreamingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes encryption_key = 2;
    if (has_encryption_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encryption_key());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockStreamingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMUnlockStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockStreamingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMUnlockStreamingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMUnlockStreamingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMUnlockStreamingResponse)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockStreamingResponse::MergeFrom(const CMsgAMUnlockStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMUnlockStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_encryption_key();
      encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMUnlockStreamingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMUnlockStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockStreamingResponse::CopyFrom(const CMsgAMUnlockStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMUnlockStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockStreamingResponse::IsInitialized() const {
  return true;
}

void CMsgAMUnlockStreamingResponse::Swap(CMsgAMUnlockStreamingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockStreamingResponse::InternalSwap(CMsgAMUnlockStreamingResponse* other) {
  using std::swap;
  encryption_key_.Swap(&other->encryption_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAMUnlockStreamingResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockHEVC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockHEVC::CMsgAMUnlockHEVC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockHEVC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMUnlockHEVC)
}
CMsgAMUnlockHEVC::CMsgAMUnlockHEVC(const CMsgAMUnlockHEVC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMUnlockHEVC)
}

void CMsgAMUnlockHEVC::SharedCtor() {
}

CMsgAMUnlockHEVC::~CMsgAMUnlockHEVC() {
  // @@protoc_insertion_point(destructor:CMsgAMUnlockHEVC)
  SharedDtor();
}

void CMsgAMUnlockHEVC::SharedDtor() {
}

void CMsgAMUnlockHEVC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAMUnlockHEVC::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMUnlockHEVC& CMsgAMUnlockHEVC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockHEVC.base);
  return *internal_default_instance();
}


void CMsgAMUnlockHEVC::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMUnlockHEVC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMUnlockHEVC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMUnlockHEVC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMUnlockHEVC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMUnlockHEVC)
  return false;
#undef DO_
}

void CMsgAMUnlockHEVC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMUnlockHEVC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMUnlockHEVC)
}

::google::protobuf::uint8* CMsgAMUnlockHEVC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMUnlockHEVC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMUnlockHEVC)
  return target;
}

size_t CMsgAMUnlockHEVC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMUnlockHEVC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockHEVC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMUnlockHEVC)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockHEVC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMUnlockHEVC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMUnlockHEVC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMUnlockHEVC)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockHEVC::MergeFrom(const CMsgAMUnlockHEVC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMUnlockHEVC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgAMUnlockHEVC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMUnlockHEVC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockHEVC::CopyFrom(const CMsgAMUnlockHEVC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMUnlockHEVC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockHEVC::IsInitialized() const {
  return true;
}

void CMsgAMUnlockHEVC::Swap(CMsgAMUnlockHEVC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockHEVC::InternalSwap(CMsgAMUnlockHEVC* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAMUnlockHEVC::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockHEVCResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMUnlockHEVCResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockHEVCResponse::CMsgAMUnlockHEVCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockHEVCResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMUnlockHEVCResponse)
}
CMsgAMUnlockHEVCResponse::CMsgAMUnlockHEVCResponse(const CMsgAMUnlockHEVCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMUnlockHEVCResponse)
}

void CMsgAMUnlockHEVCResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgAMUnlockHEVCResponse::~CMsgAMUnlockHEVCResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMUnlockHEVCResponse)
  SharedDtor();
}

void CMsgAMUnlockHEVCResponse::SharedDtor() {
}

void CMsgAMUnlockHEVCResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAMUnlockHEVCResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMUnlockHEVCResponse& CMsgAMUnlockHEVCResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgAMUnlockHEVCResponse.base);
  return *internal_default_instance();
}


void CMsgAMUnlockHEVCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMUnlockHEVCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMUnlockHEVCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMUnlockHEVCResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMUnlockHEVCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMUnlockHEVCResponse)
  return false;
#undef DO_
}

void CMsgAMUnlockHEVCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMUnlockHEVCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMUnlockHEVCResponse)
}

::google::protobuf::uint8* CMsgAMUnlockHEVCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMUnlockHEVCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMUnlockHEVCResponse)
  return target;
}

size_t CMsgAMUnlockHEVCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMUnlockHEVCResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockHEVCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMUnlockHEVCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockHEVCResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMUnlockHEVCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMUnlockHEVCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMUnlockHEVCResponse)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockHEVCResponse::MergeFrom(const CMsgAMUnlockHEVCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMUnlockHEVCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgAMUnlockHEVCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMUnlockHEVCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockHEVCResponse::CopyFrom(const CMsgAMUnlockHEVCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMUnlockHEVCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockHEVCResponse::IsInitialized() const {
  return true;
}

void CMsgAMUnlockHEVCResponse::Swap(CMsgAMUnlockHEVCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockHEVCResponse::InternalSwap(CMsgAMUnlockHEVCResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAMUnlockHEVCResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPlayingSessionState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPlayingSessionState::kPlayingBlockedFieldNumber;
const int CMsgClientPlayingSessionState::kPlayingAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPlayingSessionState::CMsgClientPlayingSessionState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientPlayingSessionState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPlayingSessionState)
}
CMsgClientPlayingSessionState::CMsgClientPlayingSessionState(const CMsgClientPlayingSessionState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playing_blocked_, &from.playing_blocked_,
    static_cast<size_t>(reinterpret_cast<char*>(&playing_app_) -
    reinterpret_cast<char*>(&playing_blocked_)) + sizeof(playing_app_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPlayingSessionState)
}

void CMsgClientPlayingSessionState::SharedCtor() {
  ::memset(&playing_blocked_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playing_app_) -
      reinterpret_cast<char*>(&playing_blocked_)) + sizeof(playing_app_));
}

CMsgClientPlayingSessionState::~CMsgClientPlayingSessionState() {
  // @@protoc_insertion_point(destructor:CMsgClientPlayingSessionState)
  SharedDtor();
}

void CMsgClientPlayingSessionState::SharedDtor() {
}

void CMsgClientPlayingSessionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPlayingSessionState::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPlayingSessionState& CMsgClientPlayingSessionState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientPlayingSessionState.base);
  return *internal_default_instance();
}


void CMsgClientPlayingSessionState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&playing_blocked_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&playing_app_) -
        reinterpret_cast<char*>(&playing_blocked_)) + sizeof(playing_app_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPlayingSessionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPlayingSessionState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool playing_blocked = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_playing_blocked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &playing_blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 playing_app = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_playing_app();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playing_app_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPlayingSessionState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPlayingSessionState)
  return false;
#undef DO_
}

void CMsgClientPlayingSessionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool playing_blocked = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->playing_blocked(), output);
  }

  // optional uint32 playing_app = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->playing_app(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPlayingSessionState)
}

::google::protobuf::uint8* CMsgClientPlayingSessionState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool playing_blocked = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->playing_blocked(), target);
  }

  // optional uint32 playing_app = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->playing_app(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPlayingSessionState)
  return target;
}

size_t CMsgClientPlayingSessionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPlayingSessionState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool playing_blocked = 2;
    if (has_playing_blocked()) {
      total_size += 1 + 1;
    }

    // optional uint32 playing_app = 3;
    if (has_playing_app()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->playing_app());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPlayingSessionState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPlayingSessionState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPlayingSessionState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPlayingSessionState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPlayingSessionState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPlayingSessionState)
    MergeFrom(*source);
  }
}

void CMsgClientPlayingSessionState::MergeFrom(const CMsgClientPlayingSessionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPlayingSessionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      playing_blocked_ = from.playing_blocked_;
    }
    if (cached_has_bits & 0x00000002u) {
      playing_app_ = from.playing_app_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPlayingSessionState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPlayingSessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPlayingSessionState::CopyFrom(const CMsgClientPlayingSessionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPlayingSessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPlayingSessionState::IsInitialized() const {
  return true;
}

void CMsgClientPlayingSessionState::Swap(CMsgClientPlayingSessionState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPlayingSessionState::InternalSwap(CMsgClientPlayingSessionState* other) {
  using std::swap;
  swap(playing_blocked_, other->playing_blocked_);
  swap(playing_app_, other->playing_app_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPlayingSessionState::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientKickPlayingSession::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientKickPlayingSession::kOnlyStopGameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientKickPlayingSession::CMsgClientKickPlayingSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientKickPlayingSession.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientKickPlayingSession)
}
CMsgClientKickPlayingSession::CMsgClientKickPlayingSession(const CMsgClientKickPlayingSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  only_stop_game_ = from.only_stop_game_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientKickPlayingSession)
}

void CMsgClientKickPlayingSession::SharedCtor() {
  only_stop_game_ = false;
}

CMsgClientKickPlayingSession::~CMsgClientKickPlayingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientKickPlayingSession)
  SharedDtor();
}

void CMsgClientKickPlayingSession::SharedDtor() {
}

void CMsgClientKickPlayingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientKickPlayingSession::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientKickPlayingSession& CMsgClientKickPlayingSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientKickPlayingSession.base);
  return *internal_default_instance();
}


void CMsgClientKickPlayingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  only_stop_game_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientKickPlayingSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientKickPlayingSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool only_stop_game = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_only_stop_game();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_stop_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientKickPlayingSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientKickPlayingSession)
  return false;
#undef DO_
}

void CMsgClientKickPlayingSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool only_stop_game = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->only_stop_game(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientKickPlayingSession)
}

::google::protobuf::uint8* CMsgClientKickPlayingSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool only_stop_game = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->only_stop_game(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientKickPlayingSession)
  return target;
}

size_t CMsgClientKickPlayingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientKickPlayingSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool only_stop_game = 1;
  if (has_only_stop_game()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientKickPlayingSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientKickPlayingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientKickPlayingSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientKickPlayingSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientKickPlayingSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientKickPlayingSession)
    MergeFrom(*source);
  }
}

void CMsgClientKickPlayingSession::MergeFrom(const CMsgClientKickPlayingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientKickPlayingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_only_stop_game()) {
    set_only_stop_game(from.only_stop_game());
  }
}

void CMsgClientKickPlayingSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientKickPlayingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientKickPlayingSession::CopyFrom(const CMsgClientKickPlayingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientKickPlayingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientKickPlayingSession::IsInitialized() const {
  return true;
}

void CMsgClientKickPlayingSession::Swap(CMsgClientKickPlayingSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientKickPlayingSession::InternalSwap(CMsgClientKickPlayingSession* other) {
  using std::swap;
  swap(only_stop_game_, other->only_stop_game_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientKickPlayingSession::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientVoiceCallPreAuthorize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVoiceCallPreAuthorize::kCallerSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kReceiverSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kCallerIdFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kHangupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVoiceCallPreAuthorize::CMsgClientVoiceCallPreAuthorize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientVoiceCallPreAuthorize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientVoiceCallPreAuthorize)
}
CMsgClientVoiceCallPreAuthorize::CMsgClientVoiceCallPreAuthorize(const CMsgClientVoiceCallPreAuthorize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&caller_steamid_, &from.caller_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hangup_) -
    reinterpret_cast<char*>(&caller_steamid_)) + sizeof(hangup_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientVoiceCallPreAuthorize)
}

void CMsgClientVoiceCallPreAuthorize::SharedCtor() {
  ::memset(&caller_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hangup_) -
      reinterpret_cast<char*>(&caller_steamid_)) + sizeof(hangup_));
}

CMsgClientVoiceCallPreAuthorize::~CMsgClientVoiceCallPreAuthorize() {
  // @@protoc_insertion_point(destructor:CMsgClientVoiceCallPreAuthorize)
  SharedDtor();
}

void CMsgClientVoiceCallPreAuthorize::SharedDtor() {
}

void CMsgClientVoiceCallPreAuthorize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientVoiceCallPreAuthorize::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientVoiceCallPreAuthorize& CMsgClientVoiceCallPreAuthorize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientVoiceCallPreAuthorize.base);
  return *internal_default_instance();
}


void CMsgClientVoiceCallPreAuthorize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&caller_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hangup_) -
        reinterpret_cast<char*>(&caller_steamid_)) + sizeof(hangup_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientVoiceCallPreAuthorize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientVoiceCallPreAuthorize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_caller_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &caller_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_receiver_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caller_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_caller_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caller_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hangup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_hangup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hangup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientVoiceCallPreAuthorize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientVoiceCallPreAuthorize)
  return false;
#undef DO_
}

void CMsgClientVoiceCallPreAuthorize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->caller_steamid(), output);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->receiver_steamid(), output);
  }

  // optional int32 caller_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caller_id(), output);
  }

  // optional bool hangup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hangup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientVoiceCallPreAuthorize)
}

::google::protobuf::uint8* CMsgClientVoiceCallPreAuthorize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->caller_steamid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->receiver_steamid(), target);
  }

  // optional int32 caller_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caller_id(), target);
  }

  // optional bool hangup = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hangup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientVoiceCallPreAuthorize)
  return target;
}

size_t CMsgClientVoiceCallPreAuthorize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientVoiceCallPreAuthorize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 caller_steamid = 1;
    if (has_caller_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 receiver_steamid = 2;
    if (has_receiver_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 caller_id = 3;
    if (has_caller_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caller_id());
    }

    // optional bool hangup = 4;
    if (has_hangup()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientVoiceCallPreAuthorize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientVoiceCallPreAuthorize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVoiceCallPreAuthorize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientVoiceCallPreAuthorize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientVoiceCallPreAuthorize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientVoiceCallPreAuthorize)
    MergeFrom(*source);
  }
}

void CMsgClientVoiceCallPreAuthorize::MergeFrom(const CMsgClientVoiceCallPreAuthorize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientVoiceCallPreAuthorize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      caller_steamid_ = from.caller_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      caller_id_ = from.caller_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      hangup_ = from.hangup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientVoiceCallPreAuthorize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientVoiceCallPreAuthorize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVoiceCallPreAuthorize::CopyFrom(const CMsgClientVoiceCallPreAuthorize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientVoiceCallPreAuthorize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVoiceCallPreAuthorize::IsInitialized() const {
  return true;
}

void CMsgClientVoiceCallPreAuthorize::Swap(CMsgClientVoiceCallPreAuthorize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVoiceCallPreAuthorize::InternalSwap(CMsgClientVoiceCallPreAuthorize* other) {
  using std::swap;
  swap(caller_steamid_, other->caller_steamid_);
  swap(receiver_steamid_, other->receiver_steamid_);
  swap(caller_id_, other->caller_id_);
  swap(hangup_, other->hangup_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientVoiceCallPreAuthorize::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientVoiceCallPreAuthorizeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVoiceCallPreAuthorizeResponse::kCallerSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kReceiverSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kEresultFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kCallerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVoiceCallPreAuthorizeResponse::CMsgClientVoiceCallPreAuthorizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientVoiceCallPreAuthorizeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientVoiceCallPreAuthorizeResponse)
}
CMsgClientVoiceCallPreAuthorizeResponse::CMsgClientVoiceCallPreAuthorizeResponse(const CMsgClientVoiceCallPreAuthorizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&caller_steamid_, &from.caller_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&caller_steamid_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientVoiceCallPreAuthorizeResponse)
}

void CMsgClientVoiceCallPreAuthorizeResponse::SharedCtor() {
  ::memset(&caller_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caller_id_) -
      reinterpret_cast<char*>(&caller_steamid_)) + sizeof(caller_id_));
  eresult_ = 2;
}

CMsgClientVoiceCallPreAuthorizeResponse::~CMsgClientVoiceCallPreAuthorizeResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientVoiceCallPreAuthorizeResponse)
  SharedDtor();
}

void CMsgClientVoiceCallPreAuthorizeResponse::SharedDtor() {
}

void CMsgClientVoiceCallPreAuthorizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientVoiceCallPreAuthorizeResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientVoiceCallPreAuthorizeResponse& CMsgClientVoiceCallPreAuthorizeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5f2_2eproto::scc_info_CMsgClientVoiceCallPreAuthorizeResponse.base);
  return *internal_default_instance();
}


void CMsgClientVoiceCallPreAuthorizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&caller_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&caller_id_) -
        reinterpret_cast<char*>(&caller_steamid_)) + sizeof(caller_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientVoiceCallPreAuthorizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientVoiceCallPreAuthorizeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_caller_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &caller_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_receiver_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caller_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_caller_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caller_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientVoiceCallPreAuthorizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientVoiceCallPreAuthorizeResponse)
  return false;
#undef DO_
}

void CMsgClientVoiceCallPreAuthorizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->caller_steamid(), output);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->receiver_steamid(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  // optional int32 caller_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caller_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientVoiceCallPreAuthorizeResponse)
}

::google::protobuf::uint8* CMsgClientVoiceCallPreAuthorizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->caller_steamid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->receiver_steamid(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  // optional int32 caller_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caller_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientVoiceCallPreAuthorizeResponse)
  return target;
}

size_t CMsgClientVoiceCallPreAuthorizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientVoiceCallPreAuthorizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 caller_steamid = 1;
    if (has_caller_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 receiver_steamid = 2;
    if (has_receiver_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 caller_id = 4;
    if (has_caller_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caller_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientVoiceCallPreAuthorizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientVoiceCallPreAuthorizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVoiceCallPreAuthorizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientVoiceCallPreAuthorizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientVoiceCallPreAuthorizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientVoiceCallPreAuthorizeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientVoiceCallPreAuthorizeResponse::MergeFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientVoiceCallPreAuthorizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      caller_steamid_ = from.caller_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      caller_id_ = from.caller_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientVoiceCallPreAuthorizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientVoiceCallPreAuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVoiceCallPreAuthorizeResponse::CopyFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientVoiceCallPreAuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVoiceCallPreAuthorizeResponse::IsInitialized() const {
  return true;
}

void CMsgClientVoiceCallPreAuthorizeResponse::Swap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVoiceCallPreAuthorizeResponse::InternalSwap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
  using std::swap;
  swap(caller_steamid_, other->caller_steamid_);
  swap(receiver_steamid_, other->receiver_steamid_);
  swap(caller_id_, other->caller_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientVoiceCallPreAuthorizeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMAddScreenshot_Tag* Arena::CreateMaybeMessage< ::CMsgClientUCMAddScreenshot_Tag >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMAddScreenshot_Tag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMAddScreenshot* Arena::CreateMaybeMessage< ::CMsgClientUCMAddScreenshot >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMAddScreenshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMAddScreenshotResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMAddScreenshotResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMAddScreenshotResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMDeleteScreenshot* Arena::CreateMaybeMessage< ::CMsgClientUCMDeleteScreenshot >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMDeleteScreenshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMDeleteScreenshotResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMDeleteScreenshotResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMDeleteScreenshotResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMPublishFile* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishFile >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMPublishFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMPublishFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMPublishFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMUpdatePublishedFile* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFile >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMUpdatePublishedFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMUpdatePublishedFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMUpdatePublishedFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMDeletePublishedFile* Arena::CreateMaybeMessage< ::CMsgClientUCMDeletePublishedFile >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMDeletePublishedFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMDeletePublishedFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMDeletePublishedFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMDeletePublishedFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserPublishedFiles* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserPublishedFiles >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserPublishedFiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserPublishedFilesResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserPublishedFilesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserPublishedFilesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFiles* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFiles >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserSubscribedFiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMPublishedFileSubscribed* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishedFileSubscribed >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMPublishedFileSubscribed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMPublishedFileUnsubscribed* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishedFileUnsubscribed >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMPublishedFileUnsubscribed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMPublishedFileDeleted* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishedFileDeleted >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMPublishedFileDeleted >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMPublishedFileUpdated* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishedFileUpdated >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMPublishedFileUpdated >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemChangesRequest* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemChangesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemChangesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemChangesResponse* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemChangesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemChangesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemInfoRequest_WorkshopItem* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemInfoRequest_WorkshopItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemInfoRequest_WorkshopItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemInfoRequest* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWorkshopItemInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWorkshopItemInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMGetPublishedFilesForUser* Arena::CreateMaybeMessage< ::CMsgClientUCMGetPublishedFilesForUser >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMGetPublishedFilesForUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMGetPublishedFilesForUserResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMGetPublishedFilesForUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMGetPublishedFilesForUserResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMSetUserPublishedFileAction* Arena::CreateMaybeMessage< ::CMsgClientUCMSetUserPublishedFileAction >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMSetUserPublishedFileAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMSetUserPublishedFileActionResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMSetUserPublishedFileActionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMSetUserPublishedFileActionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumeratePublishedFilesByUserAction* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumeratePublishedFilesByUserAction >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumeratePublishedFilesByUserAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientScreenshotsChanged* Arena::CreateMaybeMessage< ::CMsgClientScreenshotsChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientScreenshotsChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUpdateUserGameInfo* Arena::CreateMaybeMessage< ::CMsgClientUpdateUserGameInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUpdateUserGameInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRichPresenceUpload* Arena::CreateMaybeMessage< ::CMsgClientRichPresenceUpload >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRichPresenceUpload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRichPresenceRequest* Arena::CreateMaybeMessage< ::CMsgClientRichPresenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRichPresenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRichPresenceInfo_RichPresence* Arena::CreateMaybeMessage< ::CMsgClientRichPresenceInfo_RichPresence >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRichPresenceInfo_RichPresence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRichPresenceInfo* Arena::CreateMaybeMessage< ::CMsgClientRichPresenceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRichPresenceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCheckFileSignature* Arena::CreateMaybeMessage< ::CMsgClientCheckFileSignature >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCheckFileSignature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCheckFileSignatureResponse* Arena::CreateMaybeMessage< ::CMsgClientCheckFileSignatureResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCheckFileSignatureResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientReadMachineAuth* Arena::CreateMaybeMessage< ::CMsgClientReadMachineAuth >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientReadMachineAuth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientReadMachineAuthResponse* Arena::CreateMaybeMessage< ::CMsgClientReadMachineAuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientReadMachineAuthResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUpdateMachineAuth* Arena::CreateMaybeMessage< ::CMsgClientUpdateMachineAuth >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUpdateMachineAuth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUpdateMachineAuthResponse* Arena::CreateMaybeMessage< ::CMsgClientUpdateMachineAuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUpdateMachineAuthResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestMachineAuth* Arena::CreateMaybeMessage< ::CMsgClientRequestMachineAuth >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestMachineAuth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestMachineAuthResponse* Arena::CreateMaybeMessage< ::CMsgClientRequestMachineAuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestMachineAuthResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRegisterKey* Arena::CreateMaybeMessage< ::CMsgClientRegisterKey >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRegisterKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPurchaseResponse* Arena::CreateMaybeMessage< ::CMsgClientPurchaseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPurchaseResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientActivateOEMLicense* Arena::CreateMaybeMessage< ::CMsgClientActivateOEMLicense >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientActivateOEMLicense >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRegisterOEMMachine* Arena::CreateMaybeMessage< ::CMsgClientRegisterOEMMachine >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRegisterOEMMachine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRegisterOEMMachineResponse* Arena::CreateMaybeMessage< ::CMsgClientRegisterOEMMachineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRegisterOEMMachineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPurchaseWithMachineID* Arena::CreateMaybeMessage< ::CMsgClientPurchaseWithMachineID >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPurchaseWithMachineID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTrading_InitiateTradeRequest* Arena::CreateMaybeMessage< ::CMsgTrading_InitiateTradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTrading_InitiateTradeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTrading_InitiateTradeResponse* Arena::CreateMaybeMessage< ::CMsgTrading_InitiateTradeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTrading_InitiateTradeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTrading_CancelTradeRequest* Arena::CreateMaybeMessage< ::CMsgTrading_CancelTradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTrading_CancelTradeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTrading_StartSession* Arena::CreateMaybeMessage< ::CMsgTrading_StartSession >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTrading_StartSession >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientEmailChange* Arena::CreateMaybeMessage< ::CMsgClientEmailChange >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientEmailChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientEmailChangeResponse* Arena::CreateMaybeMessage< ::CMsgClientEmailChangeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientEmailChangeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetCDNAuthToken* Arena::CreateMaybeMessage< ::CMsgClientGetCDNAuthToken >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetCDNAuthToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetDepotDecryptionKey* Arena::CreateMaybeMessage< ::CMsgClientGetDepotDecryptionKey >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetDepotDecryptionKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetDepotDecryptionKeyResponse* Arena::CreateMaybeMessage< ::CMsgClientGetDepotDecryptionKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetDepotDecryptionKeyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCheckAppBetaPassword* Arena::CreateMaybeMessage< ::CMsgClientCheckAppBetaPassword >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCheckAppBetaPassword >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* Arena::CreateMaybeMessage< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCheckAppBetaPasswordResponse* Arena::CreateMaybeMessage< ::CMsgClientCheckAppBetaPasswordResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCheckAppBetaPasswordResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUpdateAppJobReport* Arena::CreateMaybeMessage< ::CMsgClientUpdateAppJobReport >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUpdateAppJobReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDPContentStatsReport* Arena::CreateMaybeMessage< ::CMsgClientDPContentStatsReport >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDPContentStatsReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetCDNAuthTokenResponse* Arena::CreateMaybeMessage< ::CMsgClientGetCDNAuthTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetCDNAuthTokenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDownloadRateStatistics_StatsInfo* Arena::CreateMaybeMessage< ::CMsgDownloadRateStatistics_StatsInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDownloadRateStatistics_StatsInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDownloadRateStatistics* Arena::CreateMaybeMessage< ::CMsgDownloadRateStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDownloadRateStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestAccountData* Arena::CreateMaybeMessage< ::CMsgClientRequestAccountData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestAccountData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestAccountDataResponse* Arena::CreateMaybeMessage< ::CMsgClientRequestAccountDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestAccountDataResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUGSGetGlobalStats* Arena::CreateMaybeMessage< ::CMsgClientUGSGetGlobalStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUGSGetGlobalStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* Arena::CreateMaybeMessage< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUGSGetGlobalStatsResponse_Day* Arena::CreateMaybeMessage< ::CMsgClientUGSGetGlobalStatsResponse_Day >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUGSGetGlobalStatsResponse_Day >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUGSGetGlobalStatsResponse* Arena::CreateMaybeMessage< ::CMsgClientUGSGetGlobalStatsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUGSGetGlobalStatsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameServerData_Player* Arena::CreateMaybeMessage< ::CMsgGameServerData_Player >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameServerData_Player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameServerData* Arena::CreateMaybeMessage< ::CMsgGameServerData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameServerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameServerRemove* Arena::CreateMaybeMessage< ::CMsgGameServerRemove >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameServerRemove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGMSServerQuery* Arena::CreateMaybeMessage< ::CMsgClientGMSServerQuery >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGMSServerQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGMSClientServerQueryResponse_Server* Arena::CreateMaybeMessage< ::CMsgGMSClientServerQueryResponse_Server >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGMSClientServerQueryResponse_Server >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGMSClientServerQueryResponse* Arena::CreateMaybeMessage< ::CMsgGMSClientServerQueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGMSClientServerQueryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameServerOutOfDate* Arena::CreateMaybeMessage< ::CMsgGameServerOutOfDate >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameServerOutOfDate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRedeemGuestPass* Arena::CreateMaybeMessage< ::CMsgClientRedeemGuestPass >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRedeemGuestPass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRedeemGuestPassResponse* Arena::CreateMaybeMessage< ::CMsgClientRedeemGuestPassResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRedeemGuestPassResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClanActivityCounts* Arena::CreateMaybeMessage< ::CMsgClientGetClanActivityCounts >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClanActivityCounts >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClanActivityCountsResponse* Arena::CreateMaybeMessage< ::CMsgClientGetClanActivityCountsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClanActivityCountsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientOGSReportString* Arena::CreateMaybeMessage< ::CMsgClientOGSReportString >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientOGSReportString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientOGSReportBug* Arena::CreateMaybeMessage< ::CMsgClientOGSReportBug >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientOGSReportBug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSAssociateWithClan* Arena::CreateMaybeMessage< ::CMsgGSAssociateWithClan >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSAssociateWithClan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSAssociateWithClanResponse* Arena::CreateMaybeMessage< ::CMsgGSAssociateWithClanResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSAssociateWithClanResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSComputeNewPlayerCompatibility* Arena::CreateMaybeMessage< ::CMsgGSComputeNewPlayerCompatibility >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSComputeNewPlayerCompatibility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSComputeNewPlayerCompatibilityResponse* Arena::CreateMaybeMessage< ::CMsgGSComputeNewPlayerCompatibilityResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSComputeNewPlayerCompatibilityResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSentLogs* Arena::CreateMaybeMessage< ::CMsgClientSentLogs >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSentLogs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGCClient* Arena::CreateMaybeMessage< ::CMsgGCClient >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGCClient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestFreeLicense* Arena::CreateMaybeMessage< ::CMsgClientRequestFreeLicense >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestFreeLicense >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestFreeLicenseResponse* Arena::CreateMaybeMessage< ::CMsgClientRequestFreeLicenseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestFreeLicenseResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDRMDownloadRequestWithCrashData* Arena::CreateMaybeMessage< ::CMsgDRMDownloadRequestWithCrashData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDRMDownloadRequestWithCrashData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDRMDownloadResponse* Arena::CreateMaybeMessage< ::CMsgDRMDownloadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDRMDownloadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDRMFinalResult* Arena::CreateMaybeMessage< ::CMsgDRMFinalResult >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDRMFinalResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDPCheckSpecialSurvey* Arena::CreateMaybeMessage< ::CMsgClientDPCheckSpecialSurvey >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDPCheckSpecialSurvey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDPCheckSpecialSurveyResponse* Arena::CreateMaybeMessage< ::CMsgClientDPCheckSpecialSurveyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDPCheckSpecialSurveyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDPSendSpecialSurveyResponse* Arena::CreateMaybeMessage< ::CMsgClientDPSendSpecialSurveyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDPSendSpecialSurveyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDPSendSpecialSurveyResponseReply* Arena::CreateMaybeMessage< ::CMsgClientDPSendSpecialSurveyResponseReply >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDPSendSpecialSurveyResponseReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestForgottenPasswordEmail* Arena::CreateMaybeMessage< ::CMsgClientRequestForgottenPasswordEmail >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestForgottenPasswordEmail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestForgottenPasswordEmailResponse* Arena::CreateMaybeMessage< ::CMsgClientRequestForgottenPasswordEmailResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestForgottenPasswordEmailResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientItemAnnouncements* Arena::CreateMaybeMessage< ::CMsgClientItemAnnouncements >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientItemAnnouncements >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestItemAnnouncements* Arena::CreateMaybeMessage< ::CMsgClientRequestItemAnnouncements >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestItemAnnouncements >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUserNotifications_Notification* Arena::CreateMaybeMessage< ::CMsgClientUserNotifications_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUserNotifications_Notification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUserNotifications* Arena::CreateMaybeMessage< ::CMsgClientUserNotifications >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUserNotifications >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCommentNotifications* Arena::CreateMaybeMessage< ::CMsgClientCommentNotifications >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCommentNotifications >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestCommentNotifications* Arena::CreateMaybeMessage< ::CMsgClientRequestCommentNotifications >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestCommentNotifications >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientOfflineMessageNotification* Arena::CreateMaybeMessage< ::CMsgClientOfflineMessageNotification >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientOfflineMessageNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestOfflineMessageCount* Arena::CreateMaybeMessage< ::CMsgClientRequestOfflineMessageCount >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestOfflineMessageCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientChatGetFriendMessageHistory* Arena::CreateMaybeMessage< ::CMsgClientChatGetFriendMessageHistory >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientChatGetFriendMessageHistory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* Arena::CreateMaybeMessage< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientChatGetFriendMessageHistoryResponse* Arena::CreateMaybeMessage< ::CMsgClientChatGetFriendMessageHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientChatGetFriendMessageHistoryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientChatGetFriendMessageHistoryForOfflineMessages* Arena::CreateMaybeMessage< ::CMsgClientChatGetFriendMessageHistoryForOfflineMessages >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientChatGetFriendMessageHistoryForOfflineMessages >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFSGetFriendsSteamLevels* Arena::CreateMaybeMessage< ::CMsgClientFSGetFriendsSteamLevels >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFSGetFriendsSteamLevels >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* Arena::CreateMaybeMessage< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFSGetFriendsSteamLevelsResponse* Arena::CreateMaybeMessage< ::CMsgClientFSGetFriendsSteamLevelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFSGetFriendsSteamLevelsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientEmailAddrInfo* Arena::CreateMaybeMessage< ::CMsgClientEmailAddrInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientEmailAddrInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREEnumeratePublishedFiles* Arena::CreateMaybeMessage< ::CMsgCREEnumeratePublishedFiles >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREEnumeratePublishedFiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREEnumeratePublishedFilesResponse* Arena::CreateMaybeMessage< ::CMsgCREEnumeratePublishedFilesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREEnumeratePublishedFilesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREItemVoteSummary_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgCREItemVoteSummary_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREItemVoteSummary_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREItemVoteSummary* Arena::CreateMaybeMessage< ::CMsgCREItemVoteSummary >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREItemVoteSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* Arena::CreateMaybeMessage< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREItemVoteSummaryResponse* Arena::CreateMaybeMessage< ::CMsgCREItemVoteSummaryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREItemVoteSummaryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREUpdateUserPublishedItemVote* Arena::CreateMaybeMessage< ::CMsgCREUpdateUserPublishedItemVote >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREUpdateUserPublishedItemVote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREUpdateUserPublishedItemVoteResponse* Arena::CreateMaybeMessage< ::CMsgCREUpdateUserPublishedItemVoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREUpdateUserPublishedItemVoteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREGetUserPublishedItemVoteDetails* Arena::CreateMaybeMessage< ::CMsgCREGetUserPublishedItemVoteDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREGetUserPublishedItemVoteDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* Arena::CreateMaybeMessage< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCREGetUserPublishedItemVoteDetailsResponse* Arena::CreateMaybeMessage< ::CMsgCREGetUserPublishedItemVoteDetailsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCREGetUserPublishedItemVoteDetailsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameServerPingSample_Sample* Arena::CreateMaybeMessage< ::CMsgGameServerPingSample_Sample >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameServerPingSample_Sample >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameServerPingSample* Arena::CreateMaybeMessage< ::CMsgGameServerPingSample >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameServerPingSample >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFSGetFollowerCount* Arena::CreateMaybeMessage< ::CMsgFSGetFollowerCount >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFSGetFollowerCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFSGetFollowerCountResponse* Arena::CreateMaybeMessage< ::CMsgFSGetFollowerCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFSGetFollowerCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFSGetIsFollowing* Arena::CreateMaybeMessage< ::CMsgFSGetIsFollowing >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFSGetIsFollowing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFSGetIsFollowingResponse* Arena::CreateMaybeMessage< ::CMsgFSGetIsFollowingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFSGetIsFollowingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFSEnumerateFollowingList* Arena::CreateMaybeMessage< ::CMsgFSEnumerateFollowingList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFSEnumerateFollowingList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFSEnumerateFollowingListResponse* Arena::CreateMaybeMessage< ::CMsgFSEnumerateFollowingListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFSEnumerateFollowingListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDPGetNumberOfCurrentPlayers* Arena::CreateMaybeMessage< ::CMsgDPGetNumberOfCurrentPlayers >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDPGetNumberOfCurrentPlayers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDPGetNumberOfCurrentPlayersResponse* Arena::CreateMaybeMessage< ::CMsgDPGetNumberOfCurrentPlayersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDPGetNumberOfCurrentPlayersResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendUserStatusPublished* Arena::CreateMaybeMessage< ::CMsgClientFriendUserStatusPublished >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendUserStatusPublished >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServiceMethod* Arena::CreateMaybeMessage< ::CMsgClientServiceMethod >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServiceMethod >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServiceMethodResponse* Arena::CreateMaybeMessage< ::CMsgClientServiceMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServiceMethodResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUIMode* Arena::CreateMaybeMessage< ::CMsgClientUIMode >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUIMode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientVanityURLChangedNotification* Arena::CreateMaybeMessage< ::CMsgClientVanityURLChangedNotification >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientVanityURLChangedNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAuthorizeLocalDeviceRequest* Arena::CreateMaybeMessage< ::CMsgClientAuthorizeLocalDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAuthorizeLocalDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAuthorizeLocalDevice* Arena::CreateMaybeMessage< ::CMsgClientAuthorizeLocalDevice >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAuthorizeLocalDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAuthorizeLocalDeviceNotification* Arena::CreateMaybeMessage< ::CMsgClientAuthorizeLocalDeviceNotification >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAuthorizeLocalDeviceNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDeauthorizeDeviceRequest* Arena::CreateMaybeMessage< ::CMsgClientDeauthorizeDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDeauthorizeDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDeauthorizeDevice* Arena::CreateMaybeMessage< ::CMsgClientDeauthorizeDevice >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDeauthorizeDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* Arena::CreateMaybeMessage< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUseLocalDeviceAuthorizations* Arena::CreateMaybeMessage< ::CMsgClientUseLocalDeviceAuthorizations >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUseLocalDeviceAuthorizations >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetAuthorizedDevices* Arena::CreateMaybeMessage< ::CMsgClientGetAuthorizedDevices >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetAuthorizedDevices >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* Arena::CreateMaybeMessage< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetAuthorizedDevicesResponse* Arena::CreateMaybeMessage< ::CMsgClientGetAuthorizedDevicesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetAuthorizedDevicesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSharedLibraryLockStatus_LockedLibrary* Arena::CreateMaybeMessage< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSharedLibraryLockStatus* Arena::CreateMaybeMessage< ::CMsgClientSharedLibraryLockStatus >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSharedLibraryLockStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSharedLibraryStopPlaying_StopApp* Arena::CreateMaybeMessage< ::CMsgClientSharedLibraryStopPlaying_StopApp >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSharedLibraryStopPlaying_StopApp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSharedLibraryStopPlaying* Arena::CreateMaybeMessage< ::CMsgClientSharedLibraryStopPlaying >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSharedLibraryStopPlaying >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServiceCall* Arena::CreateMaybeMessage< ::CMsgClientServiceCall >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServiceCall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServiceModule* Arena::CreateMaybeMessage< ::CMsgClientServiceModule >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServiceModule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServiceCallResponse* Arena::CreateMaybeMessage< ::CMsgClientServiceCallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServiceCallResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAMUnlockStreaming* Arena::CreateMaybeMessage< ::CMsgAMUnlockStreaming >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAMUnlockStreaming >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAMUnlockStreamingResponse* Arena::CreateMaybeMessage< ::CMsgAMUnlockStreamingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAMUnlockStreamingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAMUnlockHEVC* Arena::CreateMaybeMessage< ::CMsgAMUnlockHEVC >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAMUnlockHEVC >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAMUnlockHEVCResponse* Arena::CreateMaybeMessage< ::CMsgAMUnlockHEVCResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAMUnlockHEVCResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPlayingSessionState* Arena::CreateMaybeMessage< ::CMsgClientPlayingSessionState >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPlayingSessionState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientKickPlayingSession* Arena::CreateMaybeMessage< ::CMsgClientKickPlayingSession >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientKickPlayingSession >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientVoiceCallPreAuthorize* Arena::CreateMaybeMessage< ::CMsgClientVoiceCallPreAuthorize >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientVoiceCallPreAuthorize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientVoiceCallPreAuthorizeResponse* Arena::CreateMaybeMessage< ::CMsgClientVoiceCallPreAuthorizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientVoiceCallPreAuthorizeResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
