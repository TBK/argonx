// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encrypted_app_ticket.proto

#include "encrypted_app_ticket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class EncryptedAppTicketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptedAppTicket>
      _instance;
} _EncryptedAppTicket_default_instance_;
namespace protobuf_encrypted_5fapp_5fticket_2eproto {
static void InitDefaultsEncryptedAppTicket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EncryptedAppTicket_default_instance_;
    new (ptr) ::EncryptedAppTicket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EncryptedAppTicket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptedAppTicket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptedAppTicket}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptedAppTicket.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, ticket_version_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, crc_encryptedticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, cb_encrypteduserdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, cb_encrypted_appownershipticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EncryptedAppTicket, encrypted_ticket_),
  1,
  2,
  3,
  4,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::EncryptedAppTicket)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EncryptedAppTicket_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "encrypted_app_ticket.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032encrypted_app_ticket.proto\"\255\001\n\022Encrypt"
      "edAppTicket\022\031\n\021ticket_version_no\030\001 \001(\r\022\033"
      "\n\023crc_encryptedticket\030\002 \001(\r\022\034\n\024cb_encryp"
      "teduserdata\030\003 \001(\r\022\'\n\037cb_encrypted_appown"
      "ershipticket\030\004 \001(\r\022\030\n\020encrypted_ticket\030\005"
      " \001(\014B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "encrypted_app_ticket.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_encrypted_5fapp_5fticket_2eproto

// ===================================================================

void EncryptedAppTicket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptedAppTicket::kTicketVersionNoFieldNumber;
const int EncryptedAppTicket::kCrcEncryptedticketFieldNumber;
const int EncryptedAppTicket::kCbEncrypteduserdataFieldNumber;
const int EncryptedAppTicket::kCbEncryptedAppownershipticketFieldNumber;
const int EncryptedAppTicket::kEncryptedTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptedAppTicket::EncryptedAppTicket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_encrypted_5fapp_5fticket_2eproto::scc_info_EncryptedAppTicket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:EncryptedAppTicket)
}
EncryptedAppTicket::EncryptedAppTicket(const EncryptedAppTicket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encrypted_ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encrypted_ticket()) {
    encrypted_ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_ticket_);
  }
  ::memcpy(&ticket_version_no_, &from.ticket_version_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&cb_encrypted_appownershipticket_) -
    reinterpret_cast<char*>(&ticket_version_no_)) + sizeof(cb_encrypted_appownershipticket_));
  // @@protoc_insertion_point(copy_constructor:EncryptedAppTicket)
}

void EncryptedAppTicket::SharedCtor() {
  encrypted_ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ticket_version_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cb_encrypted_appownershipticket_) -
      reinterpret_cast<char*>(&ticket_version_no_)) + sizeof(cb_encrypted_appownershipticket_));
}

EncryptedAppTicket::~EncryptedAppTicket() {
  // @@protoc_insertion_point(destructor:EncryptedAppTicket)
  SharedDtor();
}

void EncryptedAppTicket::SharedDtor() {
  encrypted_ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptedAppTicket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EncryptedAppTicket::descriptor() {
  ::protobuf_encrypted_5fapp_5fticket_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_encrypted_5fapp_5fticket_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EncryptedAppTicket& EncryptedAppTicket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_encrypted_5fapp_5fticket_2eproto::scc_info_EncryptedAppTicket.base);
  return *internal_default_instance();
}


void EncryptedAppTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:EncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    encrypted_ticket_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&ticket_version_no_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cb_encrypted_appownershipticket_) -
        reinterpret_cast<char*>(&ticket_version_no_)) + sizeof(cb_encrypted_appownershipticket_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EncryptedAppTicket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EncryptedAppTicket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ticket_version_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ticket_version_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_version_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_encryptedticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_crc_encryptedticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_encryptedticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cb_encrypteduserdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cb_encrypteduserdata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cb_encrypteduserdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cb_encrypted_appownershipticket = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cb_encrypted_appownershipticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cb_encrypted_appownershipticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encrypted_ticket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encrypted_ticket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EncryptedAppTicket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EncryptedAppTicket)
  return false;
#undef DO_
}

void EncryptedAppTicket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ticket_version_no = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ticket_version_no(), output);
  }

  // optional uint32 crc_encryptedticket = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->crc_encryptedticket(), output);
  }

  // optional uint32 cb_encrypteduserdata = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cb_encrypteduserdata(), output);
  }

  // optional uint32 cb_encrypted_appownershipticket = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cb_encrypted_appownershipticket(), output);
  }

  // optional bytes encrypted_ticket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->encrypted_ticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EncryptedAppTicket)
}

::google::protobuf::uint8* EncryptedAppTicket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ticket_version_no = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ticket_version_no(), target);
  }

  // optional uint32 crc_encryptedticket = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->crc_encryptedticket(), target);
  }

  // optional uint32 cb_encrypteduserdata = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cb_encrypteduserdata(), target);
  }

  // optional uint32 cb_encrypted_appownershipticket = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cb_encrypted_appownershipticket(), target);
  }

  // optional bytes encrypted_ticket = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->encrypted_ticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EncryptedAppTicket)
  return target;
}

size_t EncryptedAppTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EncryptedAppTicket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes encrypted_ticket = 5;
    if (has_encrypted_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encrypted_ticket());
    }

    // optional uint32 ticket_version_no = 1;
    if (has_ticket_version_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket_version_no());
    }

    // optional uint32 crc_encryptedticket = 2;
    if (has_crc_encryptedticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_encryptedticket());
    }

    // optional uint32 cb_encrypteduserdata = 3;
    if (has_cb_encrypteduserdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cb_encrypteduserdata());
    }

    // optional uint32 cb_encrypted_appownershipticket = 4;
    if (has_cb_encrypted_appownershipticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cb_encrypted_appownershipticket());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptedAppTicket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EncryptedAppTicket)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptedAppTicket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EncryptedAppTicket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EncryptedAppTicket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EncryptedAppTicket)
    MergeFrom(*source);
  }
}

void EncryptedAppTicket::MergeFrom(const EncryptedAppTicket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EncryptedAppTicket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_encrypted_ticket();
      encrypted_ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      ticket_version_no_ = from.ticket_version_no_;
    }
    if (cached_has_bits & 0x00000004u) {
      crc_encryptedticket_ = from.crc_encryptedticket_;
    }
    if (cached_has_bits & 0x00000008u) {
      cb_encrypteduserdata_ = from.cb_encrypteduserdata_;
    }
    if (cached_has_bits & 0x00000010u) {
      cb_encrypted_appownershipticket_ = from.cb_encrypted_appownershipticket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EncryptedAppTicket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EncryptedAppTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptedAppTicket::CopyFrom(const EncryptedAppTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EncryptedAppTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptedAppTicket::IsInitialized() const {
  return true;
}

void EncryptedAppTicket::Swap(EncryptedAppTicket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptedAppTicket::InternalSwap(EncryptedAppTicket* other) {
  using std::swap;
  encrypted_ticket_.Swap(&other->encrypted_ticket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ticket_version_no_, other->ticket_version_no_);
  swap(crc_encryptedticket_, other->crc_encryptedticket_);
  swap(cb_encrypteduserdata_, other->cb_encrypteduserdata_);
  swap(cb_encrypted_appownershipticket_, other->cb_encrypted_appownershipticket_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EncryptedAppTicket::GetMetadata() const {
  protobuf_encrypted_5fapp_5fticket_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_encrypted_5fapp_5fticket_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::EncryptedAppTicket* Arena::CreateMaybeMessage< ::EncryptedAppTicket >(Arena* arena) {
  return Arena::CreateInternal< ::EncryptedAppTicket >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
