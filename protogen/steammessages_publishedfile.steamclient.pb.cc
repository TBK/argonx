// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_publishedfile.steamclient.proto

#include "steammessages_publishedfile.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetAppRelationships_Response_AppRelationship;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetChangeHistory_Response_ChangeLog;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetItemInfo_Request_WorkshopItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetUserFiles_Request_KVTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetUserFiles_Response_App;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_QueryFiles_Request_KVTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_Child;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_ForSaleData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_KVTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_PlaytimeStats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_Preview;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_Tag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_VoteData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PublishedFileDetails;
}  // namespace protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto
class CPublishedFile_Subscribe_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Subscribe_Request>
      _instance;
} _CPublishedFile_Subscribe_Request_default_instance_;
class CPublishedFile_Subscribe_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Subscribe_Response>
      _instance;
} _CPublishedFile_Subscribe_Response_default_instance_;
class CPublishedFile_Unsubscribe_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Unsubscribe_Request>
      _instance;
} _CPublishedFile_Unsubscribe_Request_default_instance_;
class CPublishedFile_Unsubscribe_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Unsubscribe_Response>
      _instance;
} _CPublishedFile_Unsubscribe_Response_default_instance_;
class CPublishedFile_CanSubscribe_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_CanSubscribe_Request>
      _instance;
} _CPublishedFile_CanSubscribe_Request_default_instance_;
class CPublishedFile_CanSubscribe_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_CanSubscribe_Response>
      _instance;
} _CPublishedFile_CanSubscribe_Response_default_instance_;
class CPublishedFile_Publish_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Publish_Request>
      _instance;
} _CPublishedFile_Publish_Request_default_instance_;
class CPublishedFile_Publish_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Publish_Response>
      _instance;
} _CPublishedFile_Publish_Response_default_instance_;
class CPublishedFile_GetDetails_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetDetails_Request>
      _instance;
} _CPublishedFile_GetDetails_Request_default_instance_;
class PublishedFileDetails_TagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_Tag>
      _instance;
} _PublishedFileDetails_Tag_default_instance_;
class PublishedFileDetails_PreviewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_Preview>
      _instance;
} _PublishedFileDetails_Preview_default_instance_;
class PublishedFileDetails_ChildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_Child>
      _instance;
} _PublishedFileDetails_Child_default_instance_;
class PublishedFileDetails_KVTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_KVTag>
      _instance;
} _PublishedFileDetails_KVTag_default_instance_;
class PublishedFileDetails_VoteDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_VoteData>
      _instance;
} _PublishedFileDetails_VoteData_default_instance_;
class PublishedFileDetails_ForSaleDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_ForSaleData>
      _instance;
} _PublishedFileDetails_ForSaleData_default_instance_;
class PublishedFileDetails_PlaytimeStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails_PlaytimeStats>
      _instance;
} _PublishedFileDetails_PlaytimeStats_default_instance_;
class PublishedFileDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedFileDetails>
      _instance;
} _PublishedFileDetails_default_instance_;
class CPublishedFile_GetDetails_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetDetails_Response>
      _instance;
} _CPublishedFile_GetDetails_Response_default_instance_;
class CPublishedFile_GetItemInfo_Request_WorkshopItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetItemInfo_Request_WorkshopItem>
      _instance;
} _CPublishedFile_GetItemInfo_Request_WorkshopItem_default_instance_;
class CPublishedFile_GetItemInfo_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetItemInfo_Request>
      _instance;
} _CPublishedFile_GetItemInfo_Request_default_instance_;
class CPublishedFile_GetItemInfo_Response_WorkshopItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetItemInfo_Response_WorkshopItemInfo>
      _instance;
} _CPublishedFile_GetItemInfo_Response_WorkshopItemInfo_default_instance_;
class CPublishedFile_GetItemInfo_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetItemInfo_Response>
      _instance;
} _CPublishedFile_GetItemInfo_Response_default_instance_;
class CPublishedFile_GetUserFiles_Request_KVTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetUserFiles_Request_KVTag>
      _instance;
} _CPublishedFile_GetUserFiles_Request_KVTag_default_instance_;
class CPublishedFile_GetUserFiles_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetUserFiles_Request>
      _instance;
} _CPublishedFile_GetUserFiles_Request_default_instance_;
class CPublishedFile_GetUserFiles_Response_AppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetUserFiles_Response_App>
      _instance;
} _CPublishedFile_GetUserFiles_Response_App_default_instance_;
class CPublishedFile_GetUserFiles_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetUserFiles_Response>
      _instance;
} _CPublishedFile_GetUserFiles_Response_default_instance_;
class CPublishedFile_Update_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Update_Request>
      _instance;
} _CPublishedFile_Update_Request_default_instance_;
class CPublishedFile_Update_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_Update_Response>
      _instance;
} _CPublishedFile_Update_Response_default_instance_;
class CPublishedFile_GetChangeHistoryEntry_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetChangeHistoryEntry_Request>
      _instance;
} _CPublishedFile_GetChangeHistoryEntry_Request_default_instance_;
class CPublishedFile_GetChangeHistoryEntry_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetChangeHistoryEntry_Response>
      _instance;
} _CPublishedFile_GetChangeHistoryEntry_Response_default_instance_;
class CPublishedFile_GetChangeHistory_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetChangeHistory_Request>
      _instance;
} _CPublishedFile_GetChangeHistory_Request_default_instance_;
class CPublishedFile_GetChangeHistory_Response_ChangeLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetChangeHistory_Response_ChangeLog>
      _instance;
} _CPublishedFile_GetChangeHistory_Response_ChangeLog_default_instance_;
class CPublishedFile_GetChangeHistory_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetChangeHistory_Response>
      _instance;
} _CPublishedFile_GetChangeHistory_Response_default_instance_;
class CPublishedFile_RefreshVotingQueue_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_RefreshVotingQueue_Request>
      _instance;
} _CPublishedFile_RefreshVotingQueue_Request_default_instance_;
class CPublishedFile_RefreshVotingQueue_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_RefreshVotingQueue_Response>
      _instance;
} _CPublishedFile_RefreshVotingQueue_Response_default_instance_;
class CPublishedFile_QueryFiles_Request_KVTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_QueryFiles_Request_KVTag>
      _instance;
} _CPublishedFile_QueryFiles_Request_KVTag_default_instance_;
class CPublishedFile_QueryFiles_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_QueryFiles_Request>
      _instance;
} _CPublishedFile_QueryFiles_Request_default_instance_;
class CPublishedFile_QueryFiles_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_QueryFiles_Response>
      _instance;
} _CPublishedFile_QueryFiles_Response_default_instance_;
class CPublishedFile_AddAppRelationship_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_AddAppRelationship_Request>
      _instance;
} _CPublishedFile_AddAppRelationship_Request_default_instance_;
class CPublishedFile_AddAppRelationship_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_AddAppRelationship_Response>
      _instance;
} _CPublishedFile_AddAppRelationship_Response_default_instance_;
class CPublishedFile_RemoveAppRelationship_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_RemoveAppRelationship_Request>
      _instance;
} _CPublishedFile_RemoveAppRelationship_Request_default_instance_;
class CPublishedFile_RemoveAppRelationship_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_RemoveAppRelationship_Response>
      _instance;
} _CPublishedFile_RemoveAppRelationship_Response_default_instance_;
class CPublishedFile_GetAppRelationships_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetAppRelationships_Request>
      _instance;
} _CPublishedFile_GetAppRelationships_Request_default_instance_;
class CPublishedFile_GetAppRelationships_Response_AppRelationshipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetAppRelationships_Response_AppRelationship>
      _instance;
} _CPublishedFile_GetAppRelationships_Response_AppRelationship_default_instance_;
class CPublishedFile_GetAppRelationships_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_GetAppRelationships_Response>
      _instance;
} _CPublishedFile_GetAppRelationships_Response_default_instance_;
class CPublishedFile_StartPlaytimeTracking_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_StartPlaytimeTracking_Request>
      _instance;
} _CPublishedFile_StartPlaytimeTracking_Request_default_instance_;
class CPublishedFile_StartPlaytimeTracking_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_StartPlaytimeTracking_Response>
      _instance;
} _CPublishedFile_StartPlaytimeTracking_Response_default_instance_;
class CPublishedFile_StopPlaytimeTracking_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_StopPlaytimeTracking_Request>
      _instance;
} _CPublishedFile_StopPlaytimeTracking_Request_default_instance_;
class CPublishedFile_StopPlaytimeTracking_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_StopPlaytimeTracking_Response>
      _instance;
} _CPublishedFile_StopPlaytimeTracking_Response_default_instance_;
class CPublishedFile_StopPlaytimeTrackingForAllAppItems_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request>
      _instance;
} _CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request_default_instance_;
class CPublishedFile_StopPlaytimeTrackingForAllAppItems_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response>
      _instance;
} _CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response_default_instance_;
class CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage>
      _instance;
} _CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage_default_instance_;
class CPublishedFile_SetPlaytimeForControllerConfigs_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_SetPlaytimeForControllerConfigs_Request>
      _instance;
} _CPublishedFile_SetPlaytimeForControllerConfigs_Request_default_instance_;
class CPublishedFile_SetPlaytimeForControllerConfigs_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_SetPlaytimeForControllerConfigs_Response>
      _instance;
} _CPublishedFile_SetPlaytimeForControllerConfigs_Response_default_instance_;
class CPublishedFile_AddChild_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_AddChild_Request>
      _instance;
} _CPublishedFile_AddChild_Request_default_instance_;
class CPublishedFile_AddChild_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_AddChild_Response>
      _instance;
} _CPublishedFile_AddChild_Response_default_instance_;
class CPublishedFile_RemoveChild_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_RemoveChild_Request>
      _instance;
} _CPublishedFile_RemoveChild_Request_default_instance_;
class CPublishedFile_RemoveChild_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPublishedFile_RemoveChild_Response>
      _instance;
} _CPublishedFile_RemoveChild_Response_default_instance_;
namespace protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto {
static void InitDefaultsCPublishedFile_Subscribe_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Subscribe_Request_default_instance_;
    new (ptr) ::CPublishedFile_Subscribe_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Subscribe_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Subscribe_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Subscribe_Request}, {}};

static void InitDefaultsCPublishedFile_Subscribe_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Subscribe_Response_default_instance_;
    new (ptr) ::CPublishedFile_Subscribe_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Subscribe_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Subscribe_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Subscribe_Response}, {}};

static void InitDefaultsCPublishedFile_Unsubscribe_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Unsubscribe_Request_default_instance_;
    new (ptr) ::CPublishedFile_Unsubscribe_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Unsubscribe_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Unsubscribe_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Unsubscribe_Request}, {}};

static void InitDefaultsCPublishedFile_Unsubscribe_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Unsubscribe_Response_default_instance_;
    new (ptr) ::CPublishedFile_Unsubscribe_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Unsubscribe_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Unsubscribe_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Unsubscribe_Response}, {}};

static void InitDefaultsCPublishedFile_CanSubscribe_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_CanSubscribe_Request_default_instance_;
    new (ptr) ::CPublishedFile_CanSubscribe_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_CanSubscribe_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_CanSubscribe_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_CanSubscribe_Request}, {}};

static void InitDefaultsCPublishedFile_CanSubscribe_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_CanSubscribe_Response_default_instance_;
    new (ptr) ::CPublishedFile_CanSubscribe_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_CanSubscribe_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_CanSubscribe_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_CanSubscribe_Response}, {}};

static void InitDefaultsCPublishedFile_Publish_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Publish_Request_default_instance_;
    new (ptr) ::CPublishedFile_Publish_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Publish_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Publish_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Publish_Request}, {}};

static void InitDefaultsCPublishedFile_Publish_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Publish_Response_default_instance_;
    new (ptr) ::CPublishedFile_Publish_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Publish_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Publish_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Publish_Response}, {}};

static void InitDefaultsCPublishedFile_GetDetails_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetDetails_Request_default_instance_;
    new (ptr) ::CPublishedFile_GetDetails_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetDetails_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetDetails_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetDetails_Request}, {}};

static void InitDefaultsPublishedFileDetails_Tag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_Tag_default_instance_;
    new (ptr) ::PublishedFileDetails_Tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_Tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_Tag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_Tag}, {}};

static void InitDefaultsPublishedFileDetails_Preview() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_Preview_default_instance_;
    new (ptr) ::PublishedFileDetails_Preview();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_Preview::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_Preview =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_Preview}, {}};

static void InitDefaultsPublishedFileDetails_Child() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_Child_default_instance_;
    new (ptr) ::PublishedFileDetails_Child();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_Child::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_Child =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_Child}, {}};

static void InitDefaultsPublishedFileDetails_KVTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_KVTag_default_instance_;
    new (ptr) ::PublishedFileDetails_KVTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_KVTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_KVTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_KVTag}, {}};

static void InitDefaultsPublishedFileDetails_VoteData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_VoteData_default_instance_;
    new (ptr) ::PublishedFileDetails_VoteData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_VoteData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_VoteData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_VoteData}, {}};

static void InitDefaultsPublishedFileDetails_ForSaleData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_ForSaleData_default_instance_;
    new (ptr) ::PublishedFileDetails_ForSaleData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_ForSaleData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_ForSaleData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_ForSaleData}, {}};

static void InitDefaultsPublishedFileDetails_PlaytimeStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_PlaytimeStats_default_instance_;
    new (ptr) ::PublishedFileDetails_PlaytimeStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails_PlaytimeStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedFileDetails_PlaytimeStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedFileDetails_PlaytimeStats}, {}};

static void InitDefaultsPublishedFileDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedFileDetails_default_instance_;
    new (ptr) ::PublishedFileDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedFileDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_PublishedFileDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsPublishedFileDetails}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Preview.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Tag.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Child.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_KVTag.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_VoteData.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_PlaytimeStats.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_ForSaleData.base,}};

static void InitDefaultsCPublishedFile_GetDetails_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetDetails_Response_default_instance_;
    new (ptr) ::CPublishedFile_GetDetails_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetDetails_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_GetDetails_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_GetDetails_Response}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails.base,}};

static void InitDefaultsCPublishedFile_GetItemInfo_Request_WorkshopItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetItemInfo_Request_WorkshopItem_default_instance_;
    new (ptr) ::CPublishedFile_GetItemInfo_Request_WorkshopItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetItemInfo_Request_WorkshopItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetItemInfo_Request_WorkshopItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetItemInfo_Request_WorkshopItem}, {}};

static void InitDefaultsCPublishedFile_GetItemInfo_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetItemInfo_Request_default_instance_;
    new (ptr) ::CPublishedFile_GetItemInfo_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetItemInfo_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_GetItemInfo_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_GetItemInfo_Request}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Request_WorkshopItem.base,}};

static void InitDefaultsCPublishedFile_GetItemInfo_Response_WorkshopItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo_default_instance_;
    new (ptr) ::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetItemInfo_Response_WorkshopItemInfo}, {}};

static void InitDefaultsCPublishedFile_GetItemInfo_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetItemInfo_Response_default_instance_;
    new (ptr) ::CPublishedFile_GetItemInfo_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetItemInfo_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_GetItemInfo_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_GetItemInfo_Response}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo.base,}};

static void InitDefaultsCPublishedFile_GetUserFiles_Request_KVTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetUserFiles_Request_KVTag_default_instance_;
    new (ptr) ::CPublishedFile_GetUserFiles_Request_KVTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetUserFiles_Request_KVTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetUserFiles_Request_KVTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetUserFiles_Request_KVTag}, {}};

static void InitDefaultsCPublishedFile_GetUserFiles_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.DefaultConstruct();
  *::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get_mutable() = ::std::string("myfiles", 7);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get_mutable());
  ::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.DefaultConstruct();
  *::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get_mutable() = ::std::string("lastupdated", 11);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get_mutable());
  {
    void* ptr = &::_CPublishedFile_GetUserFiles_Request_default_instance_;
    new (ptr) ::CPublishedFile_GetUserFiles_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetUserFiles_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_GetUserFiles_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_GetUserFiles_Request}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Request_KVTag.base,}};

static void InitDefaultsCPublishedFile_GetUserFiles_Response_App() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetUserFiles_Response_App_default_instance_;
    new (ptr) ::CPublishedFile_GetUserFiles_Response_App();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetUserFiles_Response_App::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetUserFiles_Response_App =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetUserFiles_Response_App}, {}};

static void InitDefaultsCPublishedFile_GetUserFiles_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetUserFiles_Response_default_instance_;
    new (ptr) ::CPublishedFile_GetUserFiles_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetUserFiles_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CPublishedFile_GetUserFiles_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCPublishedFile_GetUserFiles_Response}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails.base,
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Response_App.base,}};

static void InitDefaultsCPublishedFile_Update_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Update_Request_default_instance_;
    new (ptr) ::CPublishedFile_Update_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Update_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Update_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Update_Request}, {}};

static void InitDefaultsCPublishedFile_Update_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_Update_Response_default_instance_;
    new (ptr) ::CPublishedFile_Update_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_Update_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_Update_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_Update_Response}, {}};

static void InitDefaultsCPublishedFile_GetChangeHistoryEntry_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetChangeHistoryEntry_Request_default_instance_;
    new (ptr) ::CPublishedFile_GetChangeHistoryEntry_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetChangeHistoryEntry_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetChangeHistoryEntry_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetChangeHistoryEntry_Request}, {}};

static void InitDefaultsCPublishedFile_GetChangeHistoryEntry_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetChangeHistoryEntry_Response_default_instance_;
    new (ptr) ::CPublishedFile_GetChangeHistoryEntry_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetChangeHistoryEntry_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetChangeHistoryEntry_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetChangeHistoryEntry_Response}, {}};

static void InitDefaultsCPublishedFile_GetChangeHistory_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetChangeHistory_Request_default_instance_;
    new (ptr) ::CPublishedFile_GetChangeHistory_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetChangeHistory_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetChangeHistory_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetChangeHistory_Request}, {}};

static void InitDefaultsCPublishedFile_GetChangeHistory_Response_ChangeLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetChangeHistory_Response_ChangeLog_default_instance_;
    new (ptr) ::CPublishedFile_GetChangeHistory_Response_ChangeLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetChangeHistory_Response_ChangeLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetChangeHistory_Response_ChangeLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetChangeHistory_Response_ChangeLog}, {}};

static void InitDefaultsCPublishedFile_GetChangeHistory_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetChangeHistory_Response_default_instance_;
    new (ptr) ::CPublishedFile_GetChangeHistory_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetChangeHistory_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_GetChangeHistory_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_GetChangeHistory_Response}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Response_ChangeLog.base,}};

static void InitDefaultsCPublishedFile_RefreshVotingQueue_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_RefreshVotingQueue_Request_default_instance_;
    new (ptr) ::CPublishedFile_RefreshVotingQueue_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_RefreshVotingQueue_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_RefreshVotingQueue_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_RefreshVotingQueue_Request}, {}};

static void InitDefaultsCPublishedFile_RefreshVotingQueue_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_RefreshVotingQueue_Response_default_instance_;
    new (ptr) ::CPublishedFile_RefreshVotingQueue_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_RefreshVotingQueue_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_RefreshVotingQueue_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_RefreshVotingQueue_Response}, {}};

static void InitDefaultsCPublishedFile_QueryFiles_Request_KVTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_QueryFiles_Request_KVTag_default_instance_;
    new (ptr) ::CPublishedFile_QueryFiles_Request_KVTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_QueryFiles_Request_KVTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_QueryFiles_Request_KVTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_QueryFiles_Request_KVTag}, {}};

static void InitDefaultsCPublishedFile_QueryFiles_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_QueryFiles_Request_default_instance_;
    new (ptr) ::CPublishedFile_QueryFiles_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_QueryFiles_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_QueryFiles_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_QueryFiles_Request}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Request_KVTag.base,}};

static void InitDefaultsCPublishedFile_QueryFiles_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_QueryFiles_Response_default_instance_;
    new (ptr) ::CPublishedFile_QueryFiles_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_QueryFiles_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_QueryFiles_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_QueryFiles_Response}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails.base,}};

static void InitDefaultsCPublishedFile_AddAppRelationship_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_AddAppRelationship_Request_default_instance_;
    new (ptr) ::CPublishedFile_AddAppRelationship_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_AddAppRelationship_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_AddAppRelationship_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_AddAppRelationship_Request}, {}};

static void InitDefaultsCPublishedFile_AddAppRelationship_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_AddAppRelationship_Response_default_instance_;
    new (ptr) ::CPublishedFile_AddAppRelationship_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_AddAppRelationship_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_AddAppRelationship_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_AddAppRelationship_Response}, {}};

static void InitDefaultsCPublishedFile_RemoveAppRelationship_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_RemoveAppRelationship_Request_default_instance_;
    new (ptr) ::CPublishedFile_RemoveAppRelationship_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_RemoveAppRelationship_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_RemoveAppRelationship_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_RemoveAppRelationship_Request}, {}};

static void InitDefaultsCPublishedFile_RemoveAppRelationship_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_RemoveAppRelationship_Response_default_instance_;
    new (ptr) ::CPublishedFile_RemoveAppRelationship_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_RemoveAppRelationship_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_RemoveAppRelationship_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_RemoveAppRelationship_Response}, {}};

static void InitDefaultsCPublishedFile_GetAppRelationships_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetAppRelationships_Request_default_instance_;
    new (ptr) ::CPublishedFile_GetAppRelationships_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetAppRelationships_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetAppRelationships_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetAppRelationships_Request}, {}};

static void InitDefaultsCPublishedFile_GetAppRelationships_Response_AppRelationship() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetAppRelationships_Response_AppRelationship_default_instance_;
    new (ptr) ::CPublishedFile_GetAppRelationships_Response_AppRelationship();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetAppRelationships_Response_AppRelationship::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_GetAppRelationships_Response_AppRelationship =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_GetAppRelationships_Response_AppRelationship}, {}};

static void InitDefaultsCPublishedFile_GetAppRelationships_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_GetAppRelationships_Response_default_instance_;
    new (ptr) ::CPublishedFile_GetAppRelationships_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_GetAppRelationships_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_GetAppRelationships_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_GetAppRelationships_Response}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Response_AppRelationship.base,}};

static void InitDefaultsCPublishedFile_StartPlaytimeTracking_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_StartPlaytimeTracking_Request_default_instance_;
    new (ptr) ::CPublishedFile_StartPlaytimeTracking_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_StartPlaytimeTracking_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_StartPlaytimeTracking_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_StartPlaytimeTracking_Request}, {}};

static void InitDefaultsCPublishedFile_StartPlaytimeTracking_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_StartPlaytimeTracking_Response_default_instance_;
    new (ptr) ::CPublishedFile_StartPlaytimeTracking_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_StartPlaytimeTracking_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_StartPlaytimeTracking_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_StartPlaytimeTracking_Response}, {}};

static void InitDefaultsCPublishedFile_StopPlaytimeTracking_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_StopPlaytimeTracking_Request_default_instance_;
    new (ptr) ::CPublishedFile_StopPlaytimeTracking_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_StopPlaytimeTracking_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_StopPlaytimeTracking_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_StopPlaytimeTracking_Request}, {}};

static void InitDefaultsCPublishedFile_StopPlaytimeTracking_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_StopPlaytimeTracking_Response_default_instance_;
    new (ptr) ::CPublishedFile_StopPlaytimeTracking_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_StopPlaytimeTracking_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_StopPlaytimeTracking_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_StopPlaytimeTracking_Response}, {}};

static void InitDefaultsCPublishedFile_StopPlaytimeTrackingForAllAppItems_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request_default_instance_;
    new (ptr) ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_StopPlaytimeTrackingForAllAppItems_Request}, {}};

static void InitDefaultsCPublishedFile_StopPlaytimeTrackingForAllAppItems_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response_default_instance_;
    new (ptr) ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_StopPlaytimeTrackingForAllAppItems_Response}, {}};

static void InitDefaultsCPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage_default_instance_;
    new (ptr) ::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage}, {}};

static void InitDefaultsCPublishedFile_SetPlaytimeForControllerConfigs_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_SetPlaytimeForControllerConfigs_Request_default_instance_;
    new (ptr) ::CPublishedFile_SetPlaytimeForControllerConfigs_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_SetPlaytimeForControllerConfigs_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPublishedFile_SetPlaytimeForControllerConfigs_Request}, {
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage.base,}};

static void InitDefaultsCPublishedFile_SetPlaytimeForControllerConfigs_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_SetPlaytimeForControllerConfigs_Response_default_instance_;
    new (ptr) ::CPublishedFile_SetPlaytimeForControllerConfigs_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_SetPlaytimeForControllerConfigs_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_SetPlaytimeForControllerConfigs_Response}, {}};

static void InitDefaultsCPublishedFile_AddChild_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_AddChild_Request_default_instance_;
    new (ptr) ::CPublishedFile_AddChild_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_AddChild_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_AddChild_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_AddChild_Request}, {}};

static void InitDefaultsCPublishedFile_AddChild_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_AddChild_Response_default_instance_;
    new (ptr) ::CPublishedFile_AddChild_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_AddChild_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_AddChild_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_AddChild_Response}, {}};

static void InitDefaultsCPublishedFile_RemoveChild_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_RemoveChild_Request_default_instance_;
    new (ptr) ::CPublishedFile_RemoveChild_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_RemoveChild_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_RemoveChild_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_RemoveChild_Request}, {}};

static void InitDefaultsCPublishedFile_RemoveChild_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPublishedFile_RemoveChild_Response_default_instance_;
    new (ptr) ::CPublishedFile_RemoveChild_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPublishedFile_RemoveChild_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPublishedFile_RemoveChild_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPublishedFile_RemoveChild_Response}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Subscribe_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Subscribe_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Unsubscribe_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Unsubscribe_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_CanSubscribe_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_CanSubscribe_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Publish_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Publish_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetDetails_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_Tag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_Preview.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_Child.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_KVTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_VoteData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_ForSaleData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails_PlaytimeStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedFileDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetDetails_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetItemInfo_Request_WorkshopItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetItemInfo_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetItemInfo_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetUserFiles_Request_KVTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetUserFiles_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetUserFiles_Response_App.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetUserFiles_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Update_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_Update_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetChangeHistoryEntry_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetChangeHistoryEntry_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetChangeHistory_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetChangeHistory_Response_ChangeLog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetChangeHistory_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_RefreshVotingQueue_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_RefreshVotingQueue_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_QueryFiles_Request_KVTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_QueryFiles_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_QueryFiles_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_AddAppRelationship_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_AddAppRelationship_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_RemoveAppRelationship_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_RemoveAppRelationship_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetAppRelationships_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetAppRelationships_Response_AppRelationship.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_GetAppRelationships_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_StartPlaytimeTracking_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_StartPlaytimeTracking_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_StopPlaytimeTracking_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_StopPlaytimeTracking_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_AddChild_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_AddChild_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_RemoveChild_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPublishedFile_RemoveChild_Response.base);
}

::google::protobuf::Metadata file_level_metadata[58];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Request, list_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Request, notify_client_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Subscribe_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Request, list_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Request, notify_client_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Unsubscribe_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_CanSubscribe_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_CanSubscribe_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_CanSubscribe_Request, publishedfileid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_CanSubscribe_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_CanSubscribe_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_CanSubscribe_Response, can_subscribe_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, consumer_appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, cloudfilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, preview_cloudfilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, file_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, consumer_shortcut_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, youtube_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, youtube_videoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, redirect_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, collection_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Request, url_),
  11,
  12,
  0,
  1,
  2,
  3,
  13,
  4,
  5,
  6,
  14,
  7,
  ~0u,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Response, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Publish_Response, redirect_uri_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, publishedfileids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includetags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includeadditionalpreviews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includechildren_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includekvtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includevotes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includeforsaledata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, includemetadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, return_playtime_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Request, strip_description_bbcode_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Tag, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Tag, adminonly_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, previewid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, sortorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, youtubevideoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, preview_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Preview, external_reference_),
  4,
  5,
  0,
  6,
  1,
  2,
  7,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Child, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Child, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Child, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Child, sortorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_Child, file_type_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_KVTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_KVTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_KVTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_KVTag, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_VoteData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_VoteData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_VoteData, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_VoteData, votes_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_VoteData, votes_down_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, is_for_sale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, price_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, estatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, price_category_floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, price_is_pay_what_you_want_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_ForSaleData, discount_percentage_),
  2,
  0,
  1,
  4,
  3,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_PlaytimeStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_PlaytimeStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_PlaytimeStats, playtime_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails_PlaytimeStats, num_sessions_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, creator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, creator_appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, consumer_appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, consumer_shortcutid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, preview_file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, file_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, preview_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, youtubevideoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, hcontent_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, hcontent_preview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, file_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, time_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, workshop_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, workshop_accepted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, show_subscribe_all_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, num_comments_developer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, num_comments_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, ban_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, banner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, can_be_deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, incompatible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, app_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, can_subscribe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, subscriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, favorited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, followers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, lifetime_subscriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, lifetime_favorited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, lifetime_followers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, lifetime_playtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, lifetime_playtime_sessions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, views_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, image_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, image_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, image_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, spoiler_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, shortcutid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, shortcutname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, num_children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, num_reports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, previews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, kvtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, vote_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, playtime_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, time_subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, for_sale_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, maybe_inappropriate_sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedFileDetails, maybe_inappropriate_violence_),
  17,
  16,
  19,
  18,
  20,
  21,
  0,
  22,
  23,
  1,
  2,
  3,
  4,
  24,
  25,
  5,
  6,
  7,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  34,
  36,
  33,
  8,
  35,
  39,
  40,
  9,
  37,
  41,
  38,
  43,
  44,
  45,
  46,
  47,
  55,
  56,
  48,
  49,
  50,
  10,
  42,
  51,
  11,
  52,
  53,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  13,
  15,
  54,
  14,
  12,
  57,
  58,
  59,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetDetails_Response, publishedfiledetails_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request_WorkshopItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request_WorkshopItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request_WorkshopItem, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request_WorkshopItem, time_updated_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request, last_time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Request, workshop_items_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo, manifest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo, flags_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetItemInfo_Response, workshop_items_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request_KVTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request_KVTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request_KVTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request_KVTag, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, numperpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, sortmethod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, privacy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, requiredtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, excludedtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, required_kv_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, filetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, creator_appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, match_cloud_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, cache_max_age_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, totalonly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, ids_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_vote_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_kv_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_previews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_for_sale_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, return_playtime_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Request, strip_description_bbcode_),
  3,
  4,
  22,
  23,
  0,
  1,
  5,
  ~0u,
  ~0u,
  ~0u,
  6,
  7,
  2,
  12,
  17,
  8,
  9,
  19,
  10,
  20,
  11,
  13,
  21,
  14,
  15,
  18,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response_App, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response_App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response_App, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response_App, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response_App, shortcutid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response_App, private__),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response, startindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response, publishedfiledetails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetUserFiles_Response, apps_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, file_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, preview_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, image_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Request, image_height_),
  5,
  4,
  0,
  1,
  6,
  ~0u,
  2,
  3,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_Update_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Request, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Request, language_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Response, change_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistoryEntry_Response, language_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, total_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, startindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Request, language_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response_ChangeLog, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response_ChangeLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response_ChangeLog, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response_ChangeLog, change_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response_ChangeLog, language_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response, changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetChangeHistory_Response, total_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, matching_file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, match_all_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, excluded_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Request, desired_queue_size_),
  0,
  1,
  ~0u,
  3,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RefreshVotingQueue_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request_KVTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request_KVTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request_KVTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request_KVTag, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, query_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, numperpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, creator_appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, requiredtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, excludedtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, match_all_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, required_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, omitted_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, search_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, filetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, child_publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, include_recent_votes_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, cache_max_age_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, required_kv_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, totalonly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, ids_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_vote_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_kv_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_previews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_for_sale_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_playtime_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, return_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Request, strip_description_bbcode_),
  2,
  3,
  1,
  25,
  4,
  5,
  ~0u,
  ~0u,
  26,
  ~0u,
  ~0u,
  0,
  7,
  6,
  8,
  13,
  21,
  23,
  ~0u,
  14,
  15,
  16,
  9,
  10,
  11,
  12,
  17,
  18,
  19,
  24,
  20,
  22,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Response, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Response, publishedfiledetails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_QueryFiles_Response, next_cursor_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Request, relationship_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddAppRelationship_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Request, relationship_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveAppRelationship_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Request, publishedfileid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response_AppRelationship, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response_AppRelationship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response_AppRelationship, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response_AppRelationship, relationship_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_GetAppRelationships_Response, app_relationships_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StartPlaytimeTracking_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StartPlaytimeTracking_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StartPlaytimeTracking_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StartPlaytimeTracking_Request, publishedfileids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StartPlaytimeTracking_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StartPlaytimeTracking_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTracking_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTracking_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTracking_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTracking_Request, publishedfileids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTracking_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTracking_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request, appid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage, seconds_active_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Request, controller_config_usage_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_SetPlaytimeForControllerConfigs_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddChild_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddChild_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddChild_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddChild_Request, child_publishedfileid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddChild_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_AddChild_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveChild_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveChild_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveChild_Request, publishedfileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveChild_Request, child_publishedfileid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveChild_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPublishedFile_RemoveChild_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::CPublishedFile_Subscribe_Request)},
  { 13, 18, sizeof(::CPublishedFile_Subscribe_Response)},
  { 18, 27, sizeof(::CPublishedFile_Unsubscribe_Request)},
  { 31, 36, sizeof(::CPublishedFile_Unsubscribe_Response)},
  { 36, 42, sizeof(::CPublishedFile_CanSubscribe_Request)},
  { 43, 49, sizeof(::CPublishedFile_CanSubscribe_Response)},
  { 50, 71, sizeof(::CPublishedFile_Publish_Request)},
  { 87, 94, sizeof(::CPublishedFile_Publish_Response)},
  { 96, 114, sizeof(::CPublishedFile_GetDetails_Request)},
  { 127, 134, sizeof(::PublishedFileDetails_Tag)},
  { 136, 149, sizeof(::PublishedFileDetails_Preview)},
  { 157, 165, sizeof(::PublishedFileDetails_Child)},
  { 168, 175, sizeof(::PublishedFileDetails_KVTag)},
  { 177, 185, sizeof(::PublishedFileDetails_VoteData)},
  { 188, 199, sizeof(::PublishedFileDetails_ForSaleData)},
  { 205, 212, sizeof(::PublishedFileDetails_PlaytimeStats)},
  { 214, 283, sizeof(::PublishedFileDetails)},
  { 347, 353, sizeof(::CPublishedFile_GetDetails_Response)},
  { 354, 361, sizeof(::CPublishedFile_GetItemInfo_Request_WorkshopItem)},
  { 363, 371, sizeof(::CPublishedFile_GetItemInfo_Request)},
  { 374, 383, sizeof(::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo)},
  { 387, 394, sizeof(::CPublishedFile_GetItemInfo_Response)},
  { 396, 403, sizeof(::CPublishedFile_GetUserFiles_Request_KVTag)},
  { 405, 437, sizeof(::CPublishedFile_GetUserFiles_Request)},
  { 464, 473, sizeof(::CPublishedFile_GetUserFiles_Response_App)},
  { 477, 486, sizeof(::CPublishedFile_GetUserFiles_Response)},
  { 490, 505, sizeof(::CPublishedFile_Update_Request)},
  { 515, 520, sizeof(::CPublishedFile_Update_Response)},
  { 520, 528, sizeof(::CPublishedFile_GetChangeHistoryEntry_Request)},
  { 531, 538, sizeof(::CPublishedFile_GetChangeHistoryEntry_Response)},
  { 540, 550, sizeof(::CPublishedFile_GetChangeHistory_Request)},
  { 555, 563, sizeof(::CPublishedFile_GetChangeHistory_Response_ChangeLog)},
  { 566, 573, sizeof(::CPublishedFile_GetChangeHistory_Response)},
  { 575, 586, sizeof(::CPublishedFile_RefreshVotingQueue_Request)},
  { 592, 597, sizeof(::CPublishedFile_RefreshVotingQueue_Response)},
  { 597, 604, sizeof(::CPublishedFile_QueryFiles_Request_KVTag)},
  { 606, 643, sizeof(::CPublishedFile_QueryFiles_Request)},
  { 675, 683, sizeof(::CPublishedFile_QueryFiles_Response)},
  { 686, 694, sizeof(::CPublishedFile_AddAppRelationship_Request)},
  { 697, 702, sizeof(::CPublishedFile_AddAppRelationship_Response)},
  { 702, 710, sizeof(::CPublishedFile_RemoveAppRelationship_Request)},
  { 713, 718, sizeof(::CPublishedFile_RemoveAppRelationship_Response)},
  { 718, 724, sizeof(::CPublishedFile_GetAppRelationships_Request)},
  { 725, 732, sizeof(::CPublishedFile_GetAppRelationships_Response_AppRelationship)},
  { 734, 740, sizeof(::CPublishedFile_GetAppRelationships_Response)},
  { 741, 748, sizeof(::CPublishedFile_StartPlaytimeTracking_Request)},
  { 750, 755, sizeof(::CPublishedFile_StartPlaytimeTracking_Response)},
  { 755, 762, sizeof(::CPublishedFile_StopPlaytimeTracking_Request)},
  { 764, 769, sizeof(::CPublishedFile_StopPlaytimeTracking_Response)},
  { 769, 775, sizeof(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)},
  { 776, 781, sizeof(::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)},
  { 781, 788, sizeof(::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage)},
  { 790, 797, sizeof(::CPublishedFile_SetPlaytimeForControllerConfigs_Request)},
  { 799, 804, sizeof(::CPublishedFile_SetPlaytimeForControllerConfigs_Response)},
  { 804, 811, sizeof(::CPublishedFile_AddChild_Request)},
  { 813, 818, sizeof(::CPublishedFile_AddChild_Response)},
  { 818, 825, sizeof(::CPublishedFile_RemoveChild_Request)},
  { 827, 832, sizeof(::CPublishedFile_RemoveChild_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Subscribe_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Subscribe_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Unsubscribe_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Unsubscribe_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_CanSubscribe_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_CanSubscribe_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Publish_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Publish_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetDetails_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_Preview_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_Child_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_KVTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_VoteData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_ForSaleData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_PlaytimeStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedFileDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetDetails_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetItemInfo_Request_WorkshopItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetItemInfo_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetItemInfo_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetUserFiles_Request_KVTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetUserFiles_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetUserFiles_Response_App_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetUserFiles_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Update_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_Update_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetChangeHistoryEntry_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetChangeHistoryEntry_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetChangeHistory_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetChangeHistory_Response_ChangeLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetChangeHistory_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_RefreshVotingQueue_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_RefreshVotingQueue_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_QueryFiles_Request_KVTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_QueryFiles_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_QueryFiles_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_AddAppRelationship_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_AddAppRelationship_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_RemoveAppRelationship_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_RemoveAppRelationship_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetAppRelationships_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetAppRelationships_Response_AppRelationship_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_GetAppRelationships_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_StartPlaytimeTracking_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_StartPlaytimeTracking_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_StopPlaytimeTracking_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_StopPlaytimeTracking_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_SetPlaytimeForControllerConfigs_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_SetPlaytimeForControllerConfigs_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_AddChild_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_AddChild_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_RemoveChild_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPublishedFile_RemoveChild_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_publishedfile.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 58);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-steammessages_publishedfile.steamclien"
      "t.proto\032,steammessages_unified_base.stea"
      "mclient.proto\"t\n CPublishedFile_Subscrib"
      "e_Request\022\027\n\017publishedfileid\030\001 \001(\004\022\021\n\tli"
      "st_type\030\002 \001(\r\022\r\n\005appid\030\003 \001(\005\022\025\n\rnotify_c"
      "lient\030\004 \001(\010\"#\n!CPublishedFile_Subscribe_"
      "Response\"v\n\"CPublishedFile_Unsubscribe_R"
      "equest\022\027\n\017publishedfileid\030\001 \001(\004\022\021\n\tlist_"
      "type\030\002 \001(\r\022\r\n\005appid\030\003 \001(\005\022\025\n\rnotify_clie"
      "nt\030\004 \001(\010\"%\n#CPublishedFile_Unsubscribe_R"
      "esponse\">\n#CPublishedFile_CanSubscribe_R"
      "equest\022\027\n\017publishedfileid\030\001 \001(\004\"=\n$CPubl"
      "ishedFile_CanSubscribe_Response\022\025\n\rcan_s"
      "ubscribe\030\001 \001(\010\"\314\n\n\036CPublishedFile_Publis"
      "h_Request\022<\n\005appid\030\001 \001(\rB-\202\265\030)App Id thi"
      "s file is being published FROM.\022C\n\016consu"
      "mer_appid\030\002 \001(\rB+\202\265\030\'App Id this file is"
      " being published TO.\022K\n\rcloudfilename\030\003 "
      "\001(\tB4\202\265\0300Name of the file to publish in "
      "the user\'s cloud.\022[\n\025preview_cloudfilena"
      "me\030\004 \001(\tB<\202\265\0308Name of the file to use as"
      " the published file\'s preview.\0225\n\005title\030"
      "\005 \001(\tB&\202\265\030\"Text title for the published "
      "file.\022F\n\020file_description\030\006 \001(\tB,\202\265\030(Tex"
      "t description for the published file.\022L\n"
      "\tfile_type\030\007 \001(\rB9\202\265\0305(EWorkshopFileType"
      ") Type of Workshop file to publish.\022I\n\026c"
      "onsumer_shortcut_name\030\010 \001(\tB)\202\265\030%Shortcu"
      "t name for the published file.\022I\n\020youtub"
      "e_username\030\t \001(\tB/\202\265\030+(Optional) User\'s "
      "YouTube account username.\022\\\n\017youtube_vid"
      "eoid\030\n \001(\tBC\202\265\030\?(Optional) Video Id of a"
      " YouTube video for this published file.\022"
      "\201\001\n\nvisibility\030\013 \001(\rBm\202\265\030i(ERemoteStorag"
      "ePublishedFileVisibility) Visibility of "
      "the published file (private, friends, pu"
      "blic, etc.)\022k\n\014redirect_uri\030\014 \001(\tBU\202\265\030Q("
      "Optional) If supplied, the resulting pub"
      "lished file\'s Id is appended to the URI."
      "\022D\n\004tags\030\r \003(\tB6\202\265\0302Array of text tags t"
      "o apply to the published file.\022Y\n\017collec"
      "tion_type\030\016 \001(\tB@\202\265\030<(Optional) Type of "
      "collection the published file represents"
      ".\022M\n\tgame_type\030\017 \001(\tB:\202\265\0306(Optional) Typ"
      "e of game the published file represents."
      "\022[\n\003url\030\020 \001(\tBN\202\265\030J(Optional) If this re"
      "presents a game, this is the URL to that"
      " game\'s page.\"P\n\037CPublishedFile_Publish_"
      "Response\022\027\n\017publishedfileid\030\001 \001(\004\022\024\n\014red"
      "irect_uri\030\002 \001(\t\"\255\010\n!CPublishedFile_GetDe"
      "tails_Request\022P\n\020publishedfileids\030\001 \003(\006B"
      "6\202\265\0302Set of published file Ids to retrie"
      "ve details for.\022Q\n\013includetags\030\002 \001(\010B<\202\265"
      "\0308If true, return tag information in the"
      " returned details.\022c\n\031includeadditionalp"
      "reviews\030\003 \001(\010B@\202\265\030<If true, return previ"
      "ew information in the returned details.\022"
      "N\n\017includechildren\030\004 \001(\010B5\202\265\0301If true, r"
      "eturn children in the returned details.\022"
      "R\n\rincludekvtags\030\005 \001(\010B;\202\265\0307If true, ret"
      "urn key value tags in the returned detai"
      "ls.\022L\n\014includevotes\030\006 \001(\010B6\202\265\0302If true, "
      "return vote data in the returned details"
      ".\022c\n\021short_description\030\010 \001(\010BH\202\265\030DIf tru"
      "e, return a short description instead of"
      " the full description.\022L\n\022includeforsale"
      "data\030\n \001(\010B0\202\265\030,If true, return pricing "
      "data, if applicable.\022B\n\017includemetadata\030"
      "\013 \001(\010B)\202\265\030%If true, populate the metadat"
      "a field.\022U\n\010language\030\014 \001(\005:\0010B@\202\265\030<Speci"
      "fies the localized text to return. Defau"
      "lts to English.\022g\n\025return_playtime_stats"
      "\030\r \001(\rBH\202\265\030DReturn playtime stats for th"
      "e specified number of days before today."
      "\022\r\n\005appid\030\016 \001(\r\022F\n\030strip_description_bbc"
      "ode\030\017 \001(\010B$\202\265\030 Strips BBCode from descri"
      "ptions.\"\200\024\n\024PublishedFileDetails\022\016\n\006resu"
      "lt\030\001 \001(\r\022\027\n\017publishedfileid\030\002 \001(\004\022\017\n\007cre"
      "ator\030\003 \001(\006\022\025\n\rcreator_appid\030\004 \001(\r\022\026\n\016con"
      "sumer_appid\030\005 \001(\r\022\033\n\023consumer_shortcutid"
      "\030\006 \001(\r\022\020\n\010filename\030\007 \001(\t\022\021\n\tfile_size\030\010 "
      "\001(\004\022\031\n\021preview_file_size\030\t \001(\004\022\020\n\010file_u"
      "rl\030\n \001(\t\022\023\n\013preview_url\030\013 \001(\t\022\026\n\016youtube"
      "videoid\030\014 \001(\t\022\013\n\003url\030\r \001(\t\022\025\n\rhcontent_f"
      "ile\030\016 \001(\006\022\030\n\020hcontent_preview\030\017 \001(\006\022\r\n\005t"
      "itle\030\020 \001(\t\022\030\n\020file_description\030\021 \001(\t\022\031\n\021"
      "short_description\030\022 \001(\t\022\024\n\014time_created\030"
      "\023 \001(\r\022\024\n\014time_updated\030\024 \001(\r\022\022\n\nvisibilit"
      "y\030\025 \001(\r\022\r\n\005flags\030\026 \001(\r\022\025\n\rworkshop_file\030"
      "\027 \001(\010\022\031\n\021workshop_accepted\030\030 \001(\010\022\032\n\022show"
      "_subscribe_all\030\031 \001(\010\022\036\n\026num_comments_dev"
      "eloper\030\032 \001(\005\022\033\n\023num_comments_public\030\033 \001("
      "\005\022\016\n\006banned\030\034 \001(\010\022\022\n\nban_reason\030\035 \001(\t\022\016\n"
      "\006banner\030\036 \001(\006\022\026\n\016can_be_deleted\030\037 \001(\010\022\024\n"
      "\014incompatible\030  \001(\010\022\020\n\010app_name\030! \001(\t\022\021\n"
      "\tfile_type\030\" \001(\r\022\025\n\rcan_subscribe\030# \001(\010\022"
      "\025\n\rsubscriptions\030$ \001(\r\022\021\n\tfavorited\030% \001("
      "\r\022\021\n\tfollowers\030& \001(\r\022\036\n\026lifetime_subscri"
      "ptions\030\' \001(\r\022\032\n\022lifetime_favorited\030( \001(\r"
      "\022\032\n\022lifetime_followers\030) \001(\r\022\031\n\021lifetime"
      "_playtime\030> \001(\004\022\"\n\032lifetime_playtime_ses"
      "sions\030\? \001(\004\022\r\n\005views\030* \001(\r\022\023\n\013image_widt"
      "h\030+ \001(\r\022\024\n\014image_height\030, \001(\r\022\021\n\timage_u"
      "rl\030- \001(\t\022\023\n\013spoiler_tag\030. \001(\010\022\022\n\nshortcu"
      "tid\030/ \001(\r\022\024\n\014shortcutname\0300 \001(\t\022\024\n\014num_c"
      "hildren\0301 \001(\r\022\023\n\013num_reports\0302 \001(\r\022/\n\010pr"
      "eviews\0303 \003(\0132\035.PublishedFileDetails.Prev"
      "iew\022\'\n\004tags\0304 \003(\0132\031.PublishedFileDetails"
      ".Tag\022-\n\010children\0305 \003(\0132\033.PublishedFileDe"
      "tails.Child\022+\n\006kvtags\0306 \003(\0132\033.PublishedF"
      "ileDetails.KVTag\0221\n\tvote_data\0307 \001(\0132\036.Pu"
      "blishedFileDetails.VoteData\022;\n\016playtime_"
      "stats\030@ \001(\0132#.PublishedFileDetails.Playt"
      "imeStats\022r\n\017time_subscribed\0308 \001(\rBY\202\265\030UO"
      "nly valid in PublishedFile.GetUserFiles "
      "and not normal PublishedFile.GetDetail c"
      "alls\022a\n\rfor_sale_data\0309 \001(\0132!.PublishedF"
      "ileDetails.ForSaleDataB\'\202\265\030#Pricing info"
      "rmation, if applicable.\0227\n\010metadata\030: \001("
      "\tB%\202\265\030!Metadata associated with the item"
      "\022C\n\010language\030= \001(\005:\0010B.\202\265\030*The language "
      "of the title and description.\022\037\n\027maybe_i"
      "nappropriate_sex\030A \001(\010\022$\n\034maybe_inapprop"
      "riate_violence\030B \001(\010\032%\n\003Tag\022\013\n\003tag\030\001 \001(\t"
      "\022\021\n\tadminonly\030\002 \001(\010\032\246\001\n\007Preview\022\021\n\tprevi"
      "ewid\030\001 \001(\004\022\021\n\tsortorder\030\002 \001(\r\022\013\n\003url\030\003 \001"
      "(\t\022\014\n\004size\030\004 \001(\r\022\020\n\010filename\030\005 \001(\t\022\026\n\016yo"
      "utubevideoid\030\006 \001(\t\022\024\n\014preview_type\030\007 \001(\r"
      "\022\032\n\022external_reference\030\010 \001(\t\032F\n\005Child\022\027\n"
      "\017publishedfileid\030\001 \001(\004\022\021\n\tsortorder\030\002 \001("
      "\r\022\021\n\tfile_type\030\003 \001(\r\032#\n\005KVTag\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t\032\?\n\010VoteData\022\r\n\005score\030\001"
      " \001(\002\022\020\n\010votes_up\030\002 \001(\r\022\022\n\nvotes_down\030\003 \001"
      "(\r\032\334\001\n\013ForSaleData\022\023\n\013is_for_sale\030\001 \001(\010\022"
      "\026\n\016price_category\030\002 \001(\r\022A\n\007estatus\030\003 \001(\016"
      "2\034.EPublishedFileForSaleStatus:\022k_PFFSS_"
      "NotForSale\022\034\n\024price_category_floor\030\004 \001(\r"
      "\022\"\n\032price_is_pay_what_you_want\030\005 \001(\010\022\033\n\023"
      "discount_percentage\030\006 \001(\r\032\?\n\rPlaytimeSta"
      "ts\022\030\n\020playtime_seconds\030\001 \001(\004\022\024\n\014num_sess"
      "ions\030\002 \001(\004\"Y\n\"CPublishedFile_GetDetails_"
      "Response\0223\n\024publishedfiledetails\030\001 \003(\0132\025"
      ".PublishedFileDetails\"\332\001\n\"CPublishedFile"
      "_GetItemInfo_Request\022\016\n\006app_id\030\001 \001(\r\022\031\n\021"
      "last_time_updated\030\002 \001(\r\022H\n\016workshop_item"
      "s\030\003 \003(\01320.CPublishedFile_GetItemInfo_Req"
      "uest.WorkshopItem\032\?\n\014WorkshopItem\022\031\n\021pub"
      "lished_file_id\030\001 \001(\006\022\024\n\014time_updated\030\002 \001"
      "(\r\"\362\001\n#CPublishedFile_GetItemInfo_Respon"
      "se\022\023\n\013update_time\030\001 \001(\r\022M\n\016workshop_item"
      "s\030\002 \003(\01325.CPublishedFile_GetItemInfo_Res"
      "ponse.WorkshopItemInfo\032g\n\020WorkshopItemIn"
      "fo\022\031\n\021published_file_id\030\001 \001(\006\022\024\n\014time_up"
      "dated\030\002 \001(\r\022\023\n\013manifest_id\030\003 \001(\006\022\r\n\005flag"
      "s\030\004 \001(\r\"\247\022\n#CPublishedFile_GetUserFiles_"
      "Request\022J\n\007steamid\030\001 \001(\006B9\202\265\0305Steam ID o"
      "f the user whose files are being request"
      "ed.\022F\n\005appid\030\002 \001(\rB7\202\265\0303App Id of the ap"
      "p that the files were published to.\022:\n\004p"
      "age\030\004 \001(\r:\0011B)\202\265\030%(Optional) Starting pa"
      "ge for results.\022P\n\nnumperpage\030\005 \001(\r:\0011B9"
      "\202\265\0305(Optional) The number of results, pe"
      "r page to return.\022C\n\004type\030\006 \001(\t:\007myfiles"
      "B,\202\265\030((Optional) Type of files to be ret"
      "urned.\022Y\n\nsortmethod\030\007 \001(\t:\013lastupdatedB"
      "8\202\265\0304(Optional) Sorting method to use on"
      " returned values.\022;\n\007privacy\030\t \001(\rB*\202\265\030&"
      "(optional) Filter by privacy settings.\022h"
      "\n\014requiredtags\030\n \003(\tBR\202\265\030N(Optional) Tag"
      "s that must be present on a published fi"
      "le to satisfy the query.\022l\n\014excludedtags"
      "\030\013 \003(\tBV\202\265\030R(Optional) Tags that must NO"
      "T be present on a published file to sati"
      "sfy the query.\022n\n\020required_kv_tags\030\036 \003(\013"
      "2*.CPublishedFile_GetUserFiles_Request.K"
      "VTagB(\202\265\030$Required key-value tags to mat"
      "ch on.\022=\n\010filetype\030\016 \001(\rB+\202\265\030\'(Optional)"
      " File type to match files to.\022a\n\rcreator"
      "_appid\030\017 \001(\rBJ\202\265\030FApp Id of the app that"
      " published the files, only matched if sp"
      "ecified.\022I\n\024match_cloud_filename\030\020 \001(\tB+"
      "\202\265\030\'Match this cloud filename if specifi"
      "ed.\022j\n\025cache_max_age_seconds\030\033 \001(\r:\0010BH\202"
      "\265\030DAllow stale data to be returned for t"
      "he specified number of seconds.\022U\n\010langu"
      "age\030\035 \001(\005:\0010B@\202\265\030<Specifies the localize"
      "d text to return. Defaults to English.\022i"
      "\n\ttotalonly\030\021 \001(\010BV\202\265\030R(Optional) If tru"
      "e, only return the total number of files"
      " that satisfy this query.\022n\n\010ids_only\030\022 "
      "\001(\010B\\\202\265\030X(Optional) If true, only return"
      " the published file ids of files that sa"
      "tisfy this query.\0224\n\020return_vote_data\030\023 "
      "\001(\010:\004trueB\024\202\265\030\020Return vote data\0228\n\013retur"
      "n_tags\030\024 \001(\010B#\202\265\030\037Return tags in the fil"
      "e details\022K\n\016return_kv_tags\030\025 \001(\010:\004trueB"
      "-\202\265\030)Return key-value tags in the file d"
      "etails\022W\n\017return_previews\030\026 \001(\010B>\202\265\030:Ret"
      "urn preview image and video details in t"
      "he file details\022F\n\017return_children\030\027 \001(\010"
      "B-\202\265\030)Return child item ids in the file "
      "details\022l\n\030return_short_description\030\030 \001("
      "\010:\004trueBD\202\265\030@Populate the short_descript"
      "ion field instead of file_description\022K\n"
      "\024return_for_sale_data\030\032 \001(\010B-\202\265\030)Return "
      "pricing information, if applicable\022\?\n\017re"
      "turn_metadata\030\034 \001(\010:\005falseB\037\202\265\030\033Populate"
      " the metadata field\022g\n\025return_playtime_s"
      "tats\030\037 \001(\rBH\202\265\030DReturn playtime stats fo"
      "r the specified number of days before to"
      "day.\022F\n\030strip_description_bbcode\030  \001(\010B$"
      "\202\265\030 Strips BBCode from descriptions.\032#\n\005"
      "KVTag\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\200\002\n$CP"
      "ublishedFile_GetUserFiles_Response\022\r\n\005to"
      "tal\030\001 \001(\r\022\022\n\nstartindex\030\002 \001(\r\0223\n\024publish"
      "edfiledetails\030\003 \003(\0132\025.PublishedFileDetai"
      "ls\0227\n\004apps\030\004 \003(\0132).CPublishedFile_GetUse"
      "rFiles_Response.App\032G\n\003App\022\r\n\005appid\030\001 \001("
      "\r\022\014\n\004name\030\002 \001(\t\022\022\n\nshortcutid\030\003 \001(\r\022\017\n\007p"
      "rivate\030\004 \001(\010\"\221\006\n\035CPublishedFile_Update_R"
      "equest\0229\n\005appid\030\001 \001(\rB*\202\265\030&App Id this p"
      "ublished file belongs to.\022L\n\017publishedfi"
      "leid\030\002 \001(\006B3\202\265\030/Published file id of the"
      " file we\'d like update.\022:\n\005title\030\003 \001(\tB+"
      "\202\265\030\'(Optional) Title of the published fi"
      "le.\022K\n\020file_description\030\004 \001(\tB1\202\265\030-(Opti"
      "onal) Description of the published file."
      "\022D\n\nvisibility\030\005 \001(\rB0\202\265\030,(Optional) Vis"
      "ibility of the published file.\022@\n\004tags\030\006"
      " \003(\tB2\202\265\030.(Optional) Set of tags for the"
      " published file.\022A\n\010filename\030\007 \001(\tB/\202\265\030+"
      "(Optional) Filename for the published fi"
      "le.\022Q\n\020preview_filename\030\010 \001(\tB7\202\265\0303(Opti"
      "onal) Preview filename for the published"
      " file.\022^\n\013image_width\030\017 \001(\rBI\202\265\030E(Option"
      "al) If this is an image file, you can sp"
      "ecify the image width.\022`\n\014image_height\030\020"
      " \001(\rBJ\202\265\030F(Optional) If this is an image"
      " file, you can specify the image height."
      "\" \n\036CPublishedFile_Update_Response\"\270\001\n,C"
      "PublishedFile_GetChangeHistoryEntry_Requ"
      "est\022c\n\017publishedfileid\030\001 \001(\006BJ\202\265\030FPublis"
      "hed file id of the file we\'d like to get"
      " the change history for.\022\021\n\ttimestamp\030\002 "
      "\001(\r\022\020\n\010language\030\003 \001(\005\"]\n-CPublishedFile_"
      "GetChangeHistoryEntry_Response\022\032\n\022change"
      "_description\030\001 \001(\t\022\020\n\010language\030\002 \001(\005\"\236\002\n"
      "\'CPublishedFile_GetChangeHistory_Request"
      "\022c\n\017publishedfileid\030\001 \001(\006BJ\202\265\030FPublished"
      " file id of the file we\'d like to get th"
      "e change history for.\022@\n\ntotal_only\030\002 \001("
      "\010B,\202\265\030(Return the total number of change"
      "s only.\022\022\n\nstartindex\030\003 \001(\r\022\r\n\005count\030\004 \001"
      "(\r\022)\n\010language\030\005 \001(\005:\0010B\024\202\265\030\020Desired lan"
      "guage\"\315\001\n(CPublishedFile_GetChangeHistor"
      "y_Response\022D\n\007changes\030\001 \003(\01323.CPublished"
      "File_GetChangeHistory_Response.ChangeLog"
      "\022\r\n\005total\030\002 \001(\r\032L\n\tChangeLog\022\021\n\ttimestam"
      "p\030\001 \001(\r\022\032\n\022change_description\030\002 \001(\t\022\020\n\010l"
      "anguage\030\003 \001(\005\"\273\004\n)CPublishedFile_Refresh"
      "VotingQueue_Request\022\r\n\005appid\030\001 \001(\r\022B\n\022ma"
      "tching_file_type\030\002 \001(\rB&\202\265\030\"EPublishedFi"
      "leInfoMatchingFileType\022l\n\004tags\030\003 \003(\tB^\202\265"
      "\030ZInclude files that have all the tags o"
      "r any of the tags if match_all_tags is s"
      "et to false.\022\225\001\n\016match_all_tags\030\004 \001(\010:\004t"
      "rueBw\202\265\030sIf true, then files must have a"
      "ll the tags specified.  If false, then m"
      "ust have at least one of the tags specif"
      "ied.\022I\n\rexcluded_tags\030\005 \003(\tB2\202\265\030.Exclude"
      " any files that have any of these tags.\022"
      "j\n\022desired_queue_size\030\006 \001(\rBN\202\265\030JDesired"
      " number of items in the voting queue.  M"
      "ay be clamped by the server\",\n*CPublishe"
      "dFile_RefreshVotingQueue_Response\"\230\030\n!CP"
      "ublishedFile_QueryFiles_Request\022L\n\nquery"
      "_type\030\001 \001(\rB8\202\265\0304enumeration EPublishedF"
      "ileQueryType in clientenums.h\022\036\n\004page\030\002 "
      "\001(\rB\020\202\265\030\014Current page\022\350\001\n\006cursor\030\' \001(\tB\327"
      "\001\202\265\030\322\001Cursor to paginate through the res"
      "ults (set to \'*\' for the first request)."
      "  Prefer this over using the page parame"
      "ter, as it will allow you to do deep pag"
      "ination.  When used, the page parameter "
      "will be ignored.\022P\n\nnumperpage\030\003 \001(\r:\0011B"
      "9\202\265\0305(Optional) The number of results, p"
      "er page to return.\0225\n\rcreator_appid\030\004 \001("
      "\rB\036\202\265\030\032App that created the files\022.\n\005app"
      "id\030\005 \001(\rB\037\202\265\030\033App that consumes the file"
      "s\022N\n\014requiredtags\030\006 \003(\tB8\202\265\0304Tags to mat"
      "ch on. See match_all_tags parameter belo"
      "w\022l\n\014excludedtags\030\007 \003(\tBV\202\265\030R(Optional) "
      "Tags that must NOT be present on a publi"
      "shed file to satisfy the query.\022\212\001\n\016matc"
      "h_all_tags\030\010 \001(\010:\004trueBl\202\265\030hIf true, the"
      "n items must have all the tags specified"
      ", otherwise they must have at least one "
      "of the tags.\022Q\n\016required_flags\030\t \003(\tB9\202\265"
      "\0305Required flags that must be set on any"
      " returned items\022K\n\romitted_flags\030\n \003(\tB4"
      "\202\265\0300Flags that must not be set on any re"
      "turned items\022I\n\013search_text\030\013 \001(\tB4\202\265\0300T"
      "ext to match in the item\'s title or desc"
      "ription\0228\n\010filetype\030\014 \001(\rB&\202\265\030\"EPublishe"
      "dFileInfoMatchingFileType\022P\n\025child_publi"
      "shedfileid\030\r \001(\006B1\202\265\030-Find all items tha"
      "t reference the given item.\022\202\001\n\004days\030\016 \001"
      "(\rBt\202\265\030pIf query_type is k_PublishedFile"
      "QueryType_RankedByTrend, then this is th"
      "e number of days to get votes for [1,7]."
      "\022\260\001\n\031include_recent_votes_only\030\017 \001(\010B\214\001\202"
      "\265\030\207\001If query_type is k_PublishedFileQuer"
      "yType_RankedByTrend, then limit result s"
      "et just to items that have votes within "
      "the day range given\022j\n\025cache_max_age_sec"
      "onds\030\037 \001(\r:\0010BH\202\265\030DAllow stale data to b"
      "e returned for the specified number of s"
      "econds.\022`\n\010language\030! \001(\005:\0010BK\202\265\030GLangua"
      "ge to search in and also what gets retur"
      "ned. Defaults to English.\022l\n\020required_kv"
      "_tags\030\" \003(\0132(.CPublishedFile_QueryFiles_"
      "Request.KVTagB(\202\265\030$Required key-value ta"
      "gs to match on.\022i\n\ttotalonly\030\020 \001(\010BV\202\265\030R"
      "(Optional) If true, only return the tota"
      "l number of files that satisfy this quer"
      "y.\022n\n\010ids_only\030# \001(\010B\\\202\265\030X(Optional) If "
      "true, only return the published file ids"
      " of files that satisfy this query.\022.\n\020re"
      "turn_vote_data\030\021 \001(\010B\024\202\265\030\020Return vote da"
      "ta\0228\n\013return_tags\030\022 \001(\010B#\202\265\030\037Return tags"
      " in the file details\022E\n\016return_kv_tags\030\023"
      " \001(\010B-\202\265\030)Return key-value tags in the f"
      "ile details\022W\n\017return_previews\030\024 \001(\010B>\202\265"
      "\030:Return preview image and video details"
      " in the file details\022F\n\017return_children\030"
      "\025 \001(\010B-\202\265\030)Return child item ids in the "
      "file details\022f\n\030return_short_description"
      "\030\026 \001(\010BD\202\265\030@Populate the short_descripti"
      "on field instead of file_description\022K\n\024"
      "return_for_sale_data\030\036 \001(\010B-\202\265\030)Return p"
      "ricing information, if applicable\0229\n\017ret"
      "urn_metadata\030  \001(\010:\005falseB\031\202\265\030\025Populate "
      "the metadata\022g\n\025return_playtime_stats\030$ "
      "\001(\rBH\202\265\030DReturn playtime stats for the s"
      "pecified number of days before today.\022\267\001"
      "\n\016return_details\030% \001(\010B\236\001\202\265\030\231\001By default"
      ", if none of the other \'return_*\' fields"
      " are set, only some voting details are r"
      "eturned. Set this to true to return the "
      "default set of details.\022F\n\030strip_descrip"
      "tion_bbcode\030& \001(\010B$\202\265\030 Strips BBCode fro"
      "m descriptions.\032#\n\005KVTag\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\t\"\205\003\n\"CPublishedFile_QueryFil"
      "es_Response\022T\n\005total\030\001 \001(\rBE\202\265\030ANumber o"
      "f matches found, not necessarily number "
      "of items returned\022\215\001\n\024publishedfiledetai"
      "ls\030\002 \003(\0132\025.PublishedFileDetailsBX\202\265\030TEac"
      "h file details will be populated, depend"
      "ing on what return values were requested"
      ".\022y\n\013next_cursor\030\003 \001(\tBd\202\265\030`If a paging "
      "cursor was used, then this will be the n"
      "ext cursor to use for paging through res"
      "ults\"i\n)CPublishedFile_AddAppRelationshi"
      "p_Request\022\027\n\017publishedfileid\030\001 \001(\004\022\r\n\005ap"
      "pid\030\002 \001(\r\022\024\n\014relationship\030\003 \001(\r\",\n*CPubl"
      "ishedFile_AddAppRelationship_Response\"l\n"
      ",CPublishedFile_RemoveAppRelationship_Re"
      "quest\022\027\n\017publishedfileid\030\001 \001(\004\022\r\n\005appid\030"
      "\002 \001(\r\022\024\n\014relationship\030\003 \001(\r\"/\n-CPublishe"
      "dFile_RemoveAppRelationship_Response\"E\n*"
      "CPublishedFile_GetAppRelationships_Reque"
      "st\022\027\n\017publishedfileid\030\001 \001(\004\"\276\001\n+CPublish"
      "edFile_GetAppRelationships_Response\022W\n\021a"
      "pp_relationships\030\003 \003(\0132<.CPublishedFile_"
      "GetAppRelationships_Response.AppRelation"
      "ship\0326\n\017AppRelationship\022\r\n\005appid\030\001 \001(\r\022\024"
      "\n\014relationship\030\002 \001(\r\"W\n,CPublishedFile_S"
      "tartPlaytimeTracking_Request\022\r\n\005appid\030\001 "
      "\001(\r\022\030\n\020publishedfileids\030\002 \003(\004\"/\n-CPublis"
      "hedFile_StartPlaytimeTracking_Response\"V"
      "\n+CPublishedFile_StopPlaytimeTracking_Re"
      "quest\022\r\n\005appid\030\001 \001(\r\022\030\n\020publishedfileids"
      "\030\002 \003(\004\".\n,CPublishedFile_StopPlaytimeTra"
      "cking_Response\"J\n9CPublishedFile_StopPla"
      "ytimeTrackingForAllAppItems_Request\022\r\n\005a"
      "ppid\030\001 \001(\r\"<\n:CPublishedFile_StopPlaytim"
      "eTrackingForAllAppItems_Response\"\201\002\n6CPu"
      "blishedFile_SetPlaytimeForControllerConf"
      "igs_Request\022\r\n\005appid\030\001 \001(\r\022n\n\027controller"
      "_config_usage\030\002 \003(\0132M.CPublishedFile_Set"
      "PlaytimeForControllerConfigs_Request.Con"
      "trollerConfigUsage\032H\n\025ControllerConfigUs"
      "age\022\027\n\017publishedfileid\030\001 \001(\004\022\026\n\016seconds_"
      "active\030\002 \001(\002\"9\n7CPublishedFile_SetPlayti"
      "meForControllerConfigs_Response\"Y\n\037CPubl"
      "ishedFile_AddChild_Request\022\027\n\017publishedf"
      "ileid\030\001 \001(\004\022\035\n\025child_publishedfileid\030\002 \001"
      "(\004\"\"\n CPublishedFile_AddChild_Response\"\\"
      "\n\"CPublishedFile_RemoveChild_Request\022\027\n\017"
      "publishedfileid\030\001 \001(\004\022\035\n\025child_published"
      "fileid\030\002 \001(\004\"%\n#CPublishedFile_RemoveChi"
      "ld_Response*\310\001\n\033EPublishedFileForSaleSta"
      "tus\022\026\n\022k_PFFSS_NotForSale\020\000\022\033\n\027k_PFFSS_P"
      "endingApproval\020\001\022\033\n\027k_PFFSS_ApprovedForS"
      "ale\020\002\022\033\n\027k_PFFSS_RejectedForSale\020\003\022\033\n\027k_"
      "PFFSS_NoLongerForSale\020\004\022\035\n\031k_PFFSS_Tenta"
      "tiveApproval\020\0052\364\033\n\rPublishedFile\022\201\001\n\tSub"
      "scribe\022!.CPublishedFile_Subscribe_Reques"
      "t\032\".CPublishedFile_Subscribe_Response\"-\202"
      "\265\030)Subscribes the user to the published "
      "file\022\213\001\n\013Unsubscribe\022#.CPublishedFile_Un"
      "subscribe_Request\032$.CPublishedFile_Unsub"
      "scribe_Response\"1\202\265\030-Unsubscribes the us"
      "er from the published file\022\226\001\n\014CanSubscr"
      "ibe\022$.CPublishedFile_CanSubscribe_Reques"
      "t\032%.CPublishedFile_CanSubscribe_Response"
      "\"9\202\265\0305Check if the user can subscribe to"
      " the published file\022\200\001\n\007Publish\022\037.CPubli"
      "shedFile_Publish_Request\032 .CPublishedFil"
      "e_Publish_Response\"2\202\265\030.Publishes a clou"
      "ded user file to the Workshop.\022\220\001\n\nGetDe"
      "tails\022\".CPublishedFile_GetDetails_Reques"
      "t\032#.CPublishedFile_GetDetails_Response\"9"
      "\202\265\0305Retrieves information about a set of"
      " published files.\022\223\001\n\013GetItemInfo\022#.CPub"
      "lishedFile_GetItemInfo_Request\032$.CPublis"
      "hedFile_GetItemInfo_Response\"9\202\265\0305Retrie"
      "ves information about a set of published"
      " files.\022\205\001\n\014GetUserFiles\022$.CPublishedFil"
      "e_GetUserFiles_Request\032%.CPublishedFile_"
      "GetUserFiles_Response\"(\202\265\030$Retrieves fil"
      "es published by a user.\022z\n\006Update\022\036.CPub"
      "lishedFile_Update_Request\032\037.CPublishedFi"
      "le_Update_Response\"/\202\265\030+Updates informat"
      "ion about a published file.\022\300\001\n\025GetChang"
      "eHistoryEntry\022-.CPublishedFile_GetChange"
      "HistoryEntry_Request\032..CPublishedFile_Ge"
      "tChangeHistoryEntry_Response\"H\202\265\030DReturn"
      "s data on a specific change history entr"
      "y for a published file\022\244\001\n\020GetChangeHist"
      "ory\022(.CPublishedFile_GetChangeHistory_Re"
      "quest\032).CPublishedFile_GetChangeHistory_"
      "Response\";\202\265\0307Returns data on the change"
      " history for a published file\022\230\001\n\022Refres"
      "hVotingQueue\022*.CPublishedFile_RefreshVot"
      "ingQueue_Request\032+.CPublishedFile_Refres"
      "hVotingQueue_Response\")\202\265\030%Refresh the v"
      "oting queue for the user\022\206\001\n\nQueryFiles\022"
      "\".CPublishedFile_QueryFiles_Request\032#.CP"
      "ublishedFile_QueryFiles_Response\"/\202\265\030+Pe"
      "rforms a search query for published file"
      "s\022\263\001\n\022AddAppRelationship\022*.CPublishedFil"
      "e_AddAppRelationship_Request\032+.CPublishe"
      "dFile_AddAppRelationship_Response\"D\202\265\030@A"
      "dds a relationship between the published"
      " file and the given app\022\276\001\n\025RemoveAppRel"
      "ationship\022-.CPublishedFile_RemoveAppRela"
      "tionship_Request\032..CPublishedFile_Remove"
      "AppRelationship_Response\"F\202\265\030BRemove a r"
      "elationship between the published file a"
      "nd the given app\022\263\001\n\023GetAppRelationships"
      "\022+.CPublishedFile_GetAppRelationships_Re"
      "quest\032,.CPublishedFile_GetAppRelationshi"
      "ps_Response\"A\202\265\030=Returns the list of app"
      " relationships for this published file\022\263"
      "\001\n\025StartPlaytimeTracking\022-.CPublishedFil"
      "e_StartPlaytimeTracking_Request\032..CPubli"
      "shedFile_StartPlaytimeTracking_Response\""
      ";\202\265\0307Start usage tracking for a given se"
      "t of published files\022\260\001\n\024StopPlaytimeTra"
      "cking\022,.CPublishedFile_StopPlaytimeTrack"
      "ing_Request\032-.CPublishedFile_StopPlaytim"
      "eTracking_Response\";\202\265\0307Stops usage trac"
      "king for a given set of published files\022"
      "\355\001\n\"StopPlaytimeTrackingForAllAppItems\022:"
      ".CPublishedFile_StopPlaytimeTrackingForA"
      "llAppItems_Request\032;.CPublishedFile_Stop"
      "PlaytimeTrackingForAllAppItems_Response\""
      "N\202\265\030JStops usage tracking for all items "
      "currently tracked for the specified app\022"
      "\230\002\n\037SetPlaytimeForControllerConfigs\0227.CP"
      "ublishedFile_SetPlaytimeForControllerCon"
      "figs_Request\0328.CPublishedFile_SetPlaytim"
      "eForControllerConfigs_Response\"\201\001\202\265\030}Sto"
      "ps usage tracking all controller configs"
      " for the given app and set the usage tim"
      "e for the for the given controller confi"
      "gs\022\217\001\n\010AddChild\022 .CPublishedFile_AddChil"
      "d_Request\032!.CPublishedFile_AddChild_Resp"
      "onse\">\202\265\030:Adds a parent->child relations"
      "hip between the given items.\022\231\001\n\013RemoveC"
      "hild\022#.CPublishedFile_RemoveChild_Reques"
      "t\032$.CPublishedFile_RemoveChild_Response\""
      "\?\202\265\030;Removes parent->child relationship "
      "between the given items.\032+\202\265\030\'A service "
      "to access published file dataB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 19834);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_publishedfile.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto
const ::google::protobuf::EnumDescriptor* EPublishedFileForSaleStatus_descriptor() {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_enum_descriptors[0];
}
bool EPublishedFileForSaleStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CPublishedFile_Subscribe_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_Subscribe_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_Subscribe_Request::kListTypeFieldNumber;
const int CPublishedFile_Subscribe_Request::kAppidFieldNumber;
const int CPublishedFile_Subscribe_Request::kNotifyClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Subscribe_Request::CPublishedFile_Subscribe_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Subscribe_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Subscribe_Request)
}
CPublishedFile_Subscribe_Request::CPublishedFile_Subscribe_Request(const CPublishedFile_Subscribe_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&notify_client_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(notify_client_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Subscribe_Request)
}

void CPublishedFile_Subscribe_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notify_client_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(notify_client_));
}

CPublishedFile_Subscribe_Request::~CPublishedFile_Subscribe_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Subscribe_Request)
  SharedDtor();
}

void CPublishedFile_Subscribe_Request::SharedDtor() {
}

void CPublishedFile_Subscribe_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Subscribe_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Subscribe_Request& CPublishedFile_Subscribe_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Subscribe_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_Subscribe_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Subscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&notify_client_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(notify_client_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Subscribe_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Subscribe_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 list_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_list_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &list_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool notify_client = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_notify_client();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notify_client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Subscribe_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Subscribe_Request)
  return false;
#undef DO_
}

void CPublishedFile_Subscribe_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Subscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint32 list_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->list_type(), output);
  }

  // optional int32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->appid(), output);
  }

  // optional bool notify_client = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->notify_client(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Subscribe_Request)
}

::google::protobuf::uint8* CPublishedFile_Subscribe_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Subscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint32 list_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->list_type(), target);
  }

  // optional int32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->appid(), target);
  }

  // optional bool notify_client = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->notify_client(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Subscribe_Request)
  return target;
}

size_t CPublishedFile_Subscribe_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Subscribe_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint32 list_type = 2;
    if (has_list_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->list_type());
    }

    // optional int32 appid = 3;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

    // optional bool notify_client = 4;
    if (has_notify_client()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Subscribe_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Subscribe_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Subscribe_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Subscribe_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Subscribe_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Subscribe_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_Subscribe_Request::MergeFrom(const CPublishedFile_Subscribe_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Subscribe_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      list_type_ = from.list_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      notify_client_ = from.notify_client_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_Subscribe_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Subscribe_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Subscribe_Request::CopyFrom(const CPublishedFile_Subscribe_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Subscribe_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Subscribe_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_Subscribe_Request::Swap(CPublishedFile_Subscribe_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Subscribe_Request::InternalSwap(CPublishedFile_Subscribe_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(list_type_, other->list_type_);
  swap(appid_, other->appid_);
  swap(notify_client_, other->notify_client_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Subscribe_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Subscribe_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Subscribe_Response::CPublishedFile_Subscribe_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Subscribe_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Subscribe_Response)
}
CPublishedFile_Subscribe_Response::CPublishedFile_Subscribe_Response(const CPublishedFile_Subscribe_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Subscribe_Response)
}

void CPublishedFile_Subscribe_Response::SharedCtor() {
}

CPublishedFile_Subscribe_Response::~CPublishedFile_Subscribe_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Subscribe_Response)
  SharedDtor();
}

void CPublishedFile_Subscribe_Response::SharedDtor() {
}

void CPublishedFile_Subscribe_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Subscribe_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Subscribe_Response& CPublishedFile_Subscribe_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Subscribe_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_Subscribe_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Subscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Subscribe_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Subscribe_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Subscribe_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Subscribe_Response)
  return false;
#undef DO_
}

void CPublishedFile_Subscribe_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Subscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Subscribe_Response)
}

::google::protobuf::uint8* CPublishedFile_Subscribe_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Subscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Subscribe_Response)
  return target;
}

size_t CPublishedFile_Subscribe_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Subscribe_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Subscribe_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Subscribe_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Subscribe_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Subscribe_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Subscribe_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Subscribe_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_Subscribe_Response::MergeFrom(const CPublishedFile_Subscribe_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Subscribe_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_Subscribe_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Subscribe_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Subscribe_Response::CopyFrom(const CPublishedFile_Subscribe_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Subscribe_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Subscribe_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_Subscribe_Response::Swap(CPublishedFile_Subscribe_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Subscribe_Response::InternalSwap(CPublishedFile_Subscribe_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Subscribe_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Unsubscribe_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_Unsubscribe_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_Unsubscribe_Request::kListTypeFieldNumber;
const int CPublishedFile_Unsubscribe_Request::kAppidFieldNumber;
const int CPublishedFile_Unsubscribe_Request::kNotifyClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Unsubscribe_Request::CPublishedFile_Unsubscribe_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Unsubscribe_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Unsubscribe_Request)
}
CPublishedFile_Unsubscribe_Request::CPublishedFile_Unsubscribe_Request(const CPublishedFile_Unsubscribe_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&notify_client_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(notify_client_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Unsubscribe_Request)
}

void CPublishedFile_Unsubscribe_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notify_client_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(notify_client_));
}

CPublishedFile_Unsubscribe_Request::~CPublishedFile_Unsubscribe_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Unsubscribe_Request)
  SharedDtor();
}

void CPublishedFile_Unsubscribe_Request::SharedDtor() {
}

void CPublishedFile_Unsubscribe_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Unsubscribe_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Unsubscribe_Request& CPublishedFile_Unsubscribe_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Unsubscribe_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_Unsubscribe_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Unsubscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&notify_client_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(notify_client_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Unsubscribe_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Unsubscribe_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 list_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_list_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &list_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool notify_client = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_notify_client();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notify_client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Unsubscribe_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Unsubscribe_Request)
  return false;
#undef DO_
}

void CPublishedFile_Unsubscribe_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Unsubscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint32 list_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->list_type(), output);
  }

  // optional int32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->appid(), output);
  }

  // optional bool notify_client = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->notify_client(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Unsubscribe_Request)
}

::google::protobuf::uint8* CPublishedFile_Unsubscribe_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Unsubscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint32 list_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->list_type(), target);
  }

  // optional int32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->appid(), target);
  }

  // optional bool notify_client = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->notify_client(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Unsubscribe_Request)
  return target;
}

size_t CPublishedFile_Unsubscribe_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Unsubscribe_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint32 list_type = 2;
    if (has_list_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->list_type());
    }

    // optional int32 appid = 3;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

    // optional bool notify_client = 4;
    if (has_notify_client()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Unsubscribe_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Unsubscribe_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Unsubscribe_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Unsubscribe_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Unsubscribe_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Unsubscribe_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_Unsubscribe_Request::MergeFrom(const CPublishedFile_Unsubscribe_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Unsubscribe_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      list_type_ = from.list_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      notify_client_ = from.notify_client_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_Unsubscribe_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Unsubscribe_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Unsubscribe_Request::CopyFrom(const CPublishedFile_Unsubscribe_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Unsubscribe_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Unsubscribe_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_Unsubscribe_Request::Swap(CPublishedFile_Unsubscribe_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Unsubscribe_Request::InternalSwap(CPublishedFile_Unsubscribe_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(list_type_, other->list_type_);
  swap(appid_, other->appid_);
  swap(notify_client_, other->notify_client_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Unsubscribe_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Unsubscribe_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Unsubscribe_Response::CPublishedFile_Unsubscribe_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Unsubscribe_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Unsubscribe_Response)
}
CPublishedFile_Unsubscribe_Response::CPublishedFile_Unsubscribe_Response(const CPublishedFile_Unsubscribe_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Unsubscribe_Response)
}

void CPublishedFile_Unsubscribe_Response::SharedCtor() {
}

CPublishedFile_Unsubscribe_Response::~CPublishedFile_Unsubscribe_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Unsubscribe_Response)
  SharedDtor();
}

void CPublishedFile_Unsubscribe_Response::SharedDtor() {
}

void CPublishedFile_Unsubscribe_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Unsubscribe_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Unsubscribe_Response& CPublishedFile_Unsubscribe_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Unsubscribe_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_Unsubscribe_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Unsubscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Unsubscribe_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Unsubscribe_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Unsubscribe_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Unsubscribe_Response)
  return false;
#undef DO_
}

void CPublishedFile_Unsubscribe_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Unsubscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Unsubscribe_Response)
}

::google::protobuf::uint8* CPublishedFile_Unsubscribe_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Unsubscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Unsubscribe_Response)
  return target;
}

size_t CPublishedFile_Unsubscribe_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Unsubscribe_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Unsubscribe_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Unsubscribe_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Unsubscribe_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Unsubscribe_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Unsubscribe_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Unsubscribe_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_Unsubscribe_Response::MergeFrom(const CPublishedFile_Unsubscribe_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Unsubscribe_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_Unsubscribe_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Unsubscribe_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Unsubscribe_Response::CopyFrom(const CPublishedFile_Unsubscribe_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Unsubscribe_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Unsubscribe_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_Unsubscribe_Response::Swap(CPublishedFile_Unsubscribe_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Unsubscribe_Response::InternalSwap(CPublishedFile_Unsubscribe_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Unsubscribe_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_CanSubscribe_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_CanSubscribe_Request::kPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_CanSubscribe_Request::CPublishedFile_CanSubscribe_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_CanSubscribe_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_CanSubscribe_Request)
}
CPublishedFile_CanSubscribe_Request::CPublishedFile_CanSubscribe_Request(const CPublishedFile_CanSubscribe_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publishedfileid_ = from.publishedfileid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_CanSubscribe_Request)
}

void CPublishedFile_CanSubscribe_Request::SharedCtor() {
  publishedfileid_ = GOOGLE_ULONGLONG(0);
}

CPublishedFile_CanSubscribe_Request::~CPublishedFile_CanSubscribe_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_CanSubscribe_Request)
  SharedDtor();
}

void CPublishedFile_CanSubscribe_Request::SharedDtor() {
}

void CPublishedFile_CanSubscribe_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_CanSubscribe_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_CanSubscribe_Request& CPublishedFile_CanSubscribe_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_CanSubscribe_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_CanSubscribe_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_CanSubscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfileid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_CanSubscribe_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_CanSubscribe_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_CanSubscribe_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_CanSubscribe_Request)
  return false;
#undef DO_
}

void CPublishedFile_CanSubscribe_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_CanSubscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_CanSubscribe_Request)
}

::google::protobuf::uint8* CPublishedFile_CanSubscribe_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_CanSubscribe_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_CanSubscribe_Request)
  return target;
}

size_t CPublishedFile_CanSubscribe_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_CanSubscribe_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 publishedfileid = 1;
  if (has_publishedfileid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->publishedfileid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_CanSubscribe_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_CanSubscribe_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_CanSubscribe_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_CanSubscribe_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_CanSubscribe_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_CanSubscribe_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_CanSubscribe_Request::MergeFrom(const CPublishedFile_CanSubscribe_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_CanSubscribe_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_publishedfileid()) {
    set_publishedfileid(from.publishedfileid());
  }
}

void CPublishedFile_CanSubscribe_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_CanSubscribe_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_CanSubscribe_Request::CopyFrom(const CPublishedFile_CanSubscribe_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_CanSubscribe_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_CanSubscribe_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_CanSubscribe_Request::Swap(CPublishedFile_CanSubscribe_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_CanSubscribe_Request::InternalSwap(CPublishedFile_CanSubscribe_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_CanSubscribe_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_CanSubscribe_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_CanSubscribe_Response::kCanSubscribeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_CanSubscribe_Response::CPublishedFile_CanSubscribe_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_CanSubscribe_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_CanSubscribe_Response)
}
CPublishedFile_CanSubscribe_Response::CPublishedFile_CanSubscribe_Response(const CPublishedFile_CanSubscribe_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  can_subscribe_ = from.can_subscribe_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_CanSubscribe_Response)
}

void CPublishedFile_CanSubscribe_Response::SharedCtor() {
  can_subscribe_ = false;
}

CPublishedFile_CanSubscribe_Response::~CPublishedFile_CanSubscribe_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_CanSubscribe_Response)
  SharedDtor();
}

void CPublishedFile_CanSubscribe_Response::SharedDtor() {
}

void CPublishedFile_CanSubscribe_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_CanSubscribe_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_CanSubscribe_Response& CPublishedFile_CanSubscribe_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_CanSubscribe_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_CanSubscribe_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_CanSubscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  can_subscribe_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_CanSubscribe_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_CanSubscribe_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool can_subscribe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_can_subscribe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_subscribe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_CanSubscribe_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_CanSubscribe_Response)
  return false;
#undef DO_
}

void CPublishedFile_CanSubscribe_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_CanSubscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool can_subscribe = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->can_subscribe(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_CanSubscribe_Response)
}

::google::protobuf::uint8* CPublishedFile_CanSubscribe_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_CanSubscribe_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool can_subscribe = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->can_subscribe(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_CanSubscribe_Response)
  return target;
}

size_t CPublishedFile_CanSubscribe_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_CanSubscribe_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool can_subscribe = 1;
  if (has_can_subscribe()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_CanSubscribe_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_CanSubscribe_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_CanSubscribe_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_CanSubscribe_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_CanSubscribe_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_CanSubscribe_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_CanSubscribe_Response::MergeFrom(const CPublishedFile_CanSubscribe_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_CanSubscribe_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_can_subscribe()) {
    set_can_subscribe(from.can_subscribe());
  }
}

void CPublishedFile_CanSubscribe_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_CanSubscribe_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_CanSubscribe_Response::CopyFrom(const CPublishedFile_CanSubscribe_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_CanSubscribe_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_CanSubscribe_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_CanSubscribe_Response::Swap(CPublishedFile_CanSubscribe_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_CanSubscribe_Response::InternalSwap(CPublishedFile_CanSubscribe_Response* other) {
  using std::swap;
  swap(can_subscribe_, other->can_subscribe_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_CanSubscribe_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Publish_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_Publish_Request::kAppidFieldNumber;
const int CPublishedFile_Publish_Request::kConsumerAppidFieldNumber;
const int CPublishedFile_Publish_Request::kCloudfilenameFieldNumber;
const int CPublishedFile_Publish_Request::kPreviewCloudfilenameFieldNumber;
const int CPublishedFile_Publish_Request::kTitleFieldNumber;
const int CPublishedFile_Publish_Request::kFileDescriptionFieldNumber;
const int CPublishedFile_Publish_Request::kFileTypeFieldNumber;
const int CPublishedFile_Publish_Request::kConsumerShortcutNameFieldNumber;
const int CPublishedFile_Publish_Request::kYoutubeUsernameFieldNumber;
const int CPublishedFile_Publish_Request::kYoutubeVideoidFieldNumber;
const int CPublishedFile_Publish_Request::kVisibilityFieldNumber;
const int CPublishedFile_Publish_Request::kRedirectUriFieldNumber;
const int CPublishedFile_Publish_Request::kTagsFieldNumber;
const int CPublishedFile_Publish_Request::kCollectionTypeFieldNumber;
const int CPublishedFile_Publish_Request::kGameTypeFieldNumber;
const int CPublishedFile_Publish_Request::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Publish_Request::CPublishedFile_Publish_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Publish_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Publish_Request)
}
CPublishedFile_Publish_Request::CPublishedFile_Publish_Request(const CPublishedFile_Publish_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cloudfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cloudfilename()) {
    cloudfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cloudfilename_);
  }
  preview_cloudfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_cloudfilename()) {
    preview_cloudfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_cloudfilename_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  file_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_description()) {
    file_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_description_);
  }
  consumer_shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_consumer_shortcut_name()) {
    consumer_shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_shortcut_name_);
  }
  youtube_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_youtube_username()) {
    youtube_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_username_);
  }
  youtube_videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_youtube_videoid()) {
    youtube_videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_videoid_);
  }
  redirect_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect_uri()) {
    redirect_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_uri_);
  }
  collection_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collection_type()) {
    collection_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_type_);
  }
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_type()) {
    game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Publish_Request)
}

void CPublishedFile_Publish_Request::SharedCtor() {
  cloudfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_cloudfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtube_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtube_videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(visibility_));
}

CPublishedFile_Publish_Request::~CPublishedFile_Publish_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Publish_Request)
  SharedDtor();
}

void CPublishedFile_Publish_Request::SharedDtor() {
  cloudfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_cloudfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_shortcut_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtube_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtube_videoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_Publish_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Publish_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Publish_Request& CPublishedFile_Publish_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Publish_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_Publish_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Publish_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      cloudfilename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_cloudfilename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      file_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      consumer_shortcut_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      youtube_username_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      youtube_videoid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      redirect_uri_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      collection_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      game_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 30720u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visibility_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(visibility_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Publish_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Publish_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1 [(.description) = "App Id this file is being published FROM."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consumer_appid = 2 [(.description) = "App Id this file is being published TO."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_consumer_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumer_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cloudfilename = 3 [(.description) = "Name of the file to publish in the user\'s cloud."];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cloudfilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cloudfilename().data(), static_cast<int>(this->cloudfilename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.cloudfilename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_cloudfilename = 4 [(.description) = "Name of the file to use as the published file\'s preview."];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_cloudfilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_cloudfilename().data(), static_cast<int>(this->preview_cloudfilename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.preview_cloudfilename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5 [(.description) = "Text title for the published file."];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_description = 6 [(.description) = "Text description for the published file."];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_description().data(), static_cast<int>(this->file_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.file_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_type = 7 [(.description) = "(EWorkshopFileType) Type of Workshop file to publish."];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string consumer_shortcut_name = 8 [(.description) = "Shortcut name for the published file."];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consumer_shortcut_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->consumer_shortcut_name().data(), static_cast<int>(this->consumer_shortcut_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.consumer_shortcut_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string youtube_username = 9 [(.description) = "(Optional) User\'s YouTube account username."];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtube_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->youtube_username().data(), static_cast<int>(this->youtube_username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.youtube_username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string youtube_videoid = 10 [(.description) = "(Optional) Video Id of a YouTube video for this published file."];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtube_videoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->youtube_videoid().data(), static_cast<int>(this->youtube_videoid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.youtube_videoid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 visibility = 11 [(.description) = "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect_uri = 12 [(.description) = "(Optional) If supplied, the resulting published file\'s Id is appended to the URI."];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.redirect_uri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 13 [(.description) = "Array of text tags to apply to the published file."];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string collection_type = 14 [(.description) = "(Optional) Type of collection the published file represents."];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collection_type().data(), static_cast<int>(this->collection_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.collection_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_type = 15 [(.description) = "(Optional) Type of game the published file represents."];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_type().data(), static_cast<int>(this->game_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.game_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 16 [(.description) = "(Optional) If this represents a game, this is the URL to that game\'s page."];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Request.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Publish_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Publish_Request)
  return false;
#undef DO_
}

void CPublishedFile_Publish_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Publish_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1 [(.description) = "App Id this file is being published FROM."];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 consumer_appid = 2 [(.description) = "App Id this file is being published TO."];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->consumer_appid(), output);
  }

  // optional string cloudfilename = 3 [(.description) = "Name of the file to publish in the user\'s cloud."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cloudfilename().data(), static_cast<int>(this->cloudfilename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.cloudfilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cloudfilename(), output);
  }

  // optional string preview_cloudfilename = 4 [(.description) = "Name of the file to use as the published file\'s preview."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_cloudfilename().data(), static_cast<int>(this->preview_cloudfilename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.preview_cloudfilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->preview_cloudfilename(), output);
  }

  // optional string title = 5 [(.description) = "Text title for the published file."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string file_description = 6 [(.description) = "Text description for the published file."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_description().data(), static_cast<int>(this->file_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.file_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->file_description(), output);
  }

  // optional uint32 file_type = 7 [(.description) = "(EWorkshopFileType) Type of Workshop file to publish."];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->file_type(), output);
  }

  // optional string consumer_shortcut_name = 8 [(.description) = "Shortcut name for the published file."];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->consumer_shortcut_name().data(), static_cast<int>(this->consumer_shortcut_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.consumer_shortcut_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->consumer_shortcut_name(), output);
  }

  // optional string youtube_username = 9 [(.description) = "(Optional) User\'s YouTube account username."];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_username().data(), static_cast<int>(this->youtube_username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.youtube_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->youtube_username(), output);
  }

  // optional string youtube_videoid = 10 [(.description) = "(Optional) Video Id of a YouTube video for this published file."];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_videoid().data(), static_cast<int>(this->youtube_videoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.youtube_videoid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->youtube_videoid(), output);
  }

  // optional uint32 visibility = 11 [(.description) = "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)"];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->visibility(), output);
  }

  // optional string redirect_uri = 12 [(.description) = "(Optional) If supplied, the resulting published file\'s Id is appended to the URI."];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.redirect_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->redirect_uri(), output);
  }

  // repeated string tags = 13 [(.description) = "Array of text tags to apply to the published file."];
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->tags(i), output);
  }

  // optional string collection_type = 14 [(.description) = "(Optional) Type of collection the published file represents."];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collection_type().data(), static_cast<int>(this->collection_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.collection_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->collection_type(), output);
  }

  // optional string game_type = 15 [(.description) = "(Optional) Type of game the published file represents."];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), static_cast<int>(this->game_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.game_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->game_type(), output);
  }

  // optional string url = 16 [(.description) = "(Optional) If this represents a game, this is the URL to that game\'s page."];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Publish_Request)
}

::google::protobuf::uint8* CPublishedFile_Publish_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Publish_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1 [(.description) = "App Id this file is being published FROM."];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 consumer_appid = 2 [(.description) = "App Id this file is being published TO."];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->consumer_appid(), target);
  }

  // optional string cloudfilename = 3 [(.description) = "Name of the file to publish in the user\'s cloud."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cloudfilename().data(), static_cast<int>(this->cloudfilename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.cloudfilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cloudfilename(), target);
  }

  // optional string preview_cloudfilename = 4 [(.description) = "Name of the file to use as the published file\'s preview."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_cloudfilename().data(), static_cast<int>(this->preview_cloudfilename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.preview_cloudfilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->preview_cloudfilename(), target);
  }

  // optional string title = 5 [(.description) = "Text title for the published file."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string file_description = 6 [(.description) = "Text description for the published file."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_description().data(), static_cast<int>(this->file_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.file_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->file_description(), target);
  }

  // optional uint32 file_type = 7 [(.description) = "(EWorkshopFileType) Type of Workshop file to publish."];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->file_type(), target);
  }

  // optional string consumer_shortcut_name = 8 [(.description) = "Shortcut name for the published file."];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->consumer_shortcut_name().data(), static_cast<int>(this->consumer_shortcut_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.consumer_shortcut_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->consumer_shortcut_name(), target);
  }

  // optional string youtube_username = 9 [(.description) = "(Optional) User\'s YouTube account username."];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_username().data(), static_cast<int>(this->youtube_username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.youtube_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->youtube_username(), target);
  }

  // optional string youtube_videoid = 10 [(.description) = "(Optional) Video Id of a YouTube video for this published file."];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_videoid().data(), static_cast<int>(this->youtube_videoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.youtube_videoid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->youtube_videoid(), target);
  }

  // optional uint32 visibility = 11 [(.description) = "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)"];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->visibility(), target);
  }

  // optional string redirect_uri = 12 [(.description) = "(Optional) If supplied, the resulting published file\'s Id is appended to the URI."];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.redirect_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->redirect_uri(), target);
  }

  // repeated string tags = 13 [(.description) = "Array of text tags to apply to the published file."];
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->tags(i), target);
  }

  // optional string collection_type = 14 [(.description) = "(Optional) Type of collection the published file represents."];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collection_type().data(), static_cast<int>(this->collection_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.collection_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->collection_type(), target);
  }

  // optional string game_type = 15 [(.description) = "(Optional) Type of game the published file represents."];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), static_cast<int>(this->game_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.game_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->game_type(), target);
  }

  // optional string url = 16 [(.description) = "(Optional) If this represents a game, this is the URL to that game\'s page."];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Request.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Publish_Request)
  return target;
}

size_t CPublishedFile_Publish_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Publish_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tags = 13 [(.description) = "Array of text tags to apply to the published file."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string cloudfilename = 3 [(.description) = "Name of the file to publish in the user\'s cloud."];
    if (has_cloudfilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cloudfilename());
    }

    // optional string preview_cloudfilename = 4 [(.description) = "Name of the file to use as the published file\'s preview."];
    if (has_preview_cloudfilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_cloudfilename());
    }

    // optional string title = 5 [(.description) = "Text title for the published file."];
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string file_description = 6 [(.description) = "Text description for the published file."];
    if (has_file_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_description());
    }

    // optional string consumer_shortcut_name = 8 [(.description) = "Shortcut name for the published file."];
    if (has_consumer_shortcut_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->consumer_shortcut_name());
    }

    // optional string youtube_username = 9 [(.description) = "(Optional) User\'s YouTube account username."];
    if (has_youtube_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtube_username());
    }

    // optional string youtube_videoid = 10 [(.description) = "(Optional) Video Id of a YouTube video for this published file."];
    if (has_youtube_videoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtube_videoid());
    }

    // optional string redirect_uri = 12 [(.description) = "(Optional) If supplied, the resulting published file\'s Id is appended to the URI."];
    if (has_redirect_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect_uri());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional string collection_type = 14 [(.description) = "(Optional) Type of collection the published file represents."];
    if (has_collection_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->collection_type());
    }

    // optional string game_type = 15 [(.description) = "(Optional) Type of game the published file represents."];
    if (has_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_type());
    }

    // optional string url = 16 [(.description) = "(Optional) If this represents a game, this is the URL to that game\'s page."];
    if (has_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 appid = 1 [(.description) = "App Id this file is being published FROM."];
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 consumer_appid = 2 [(.description) = "App Id this file is being published TO."];
    if (has_consumer_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumer_appid());
    }

    // optional uint32 file_type = 7 [(.description) = "(EWorkshopFileType) Type of Workshop file to publish."];
    if (has_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_type());
    }

    // optional uint32 visibility = 11 [(.description) = "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)"];
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visibility());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Publish_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Publish_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Publish_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Publish_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Publish_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Publish_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_Publish_Request::MergeFrom(const CPublishedFile_Publish_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Publish_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cloudfilename();
      cloudfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cloudfilename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_preview_cloudfilename();
      preview_cloudfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_cloudfilename_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_file_description();
      file_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_description_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_consumer_shortcut_name();
      consumer_shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_shortcut_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_youtube_username();
      youtube_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_username_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_youtube_videoid();
      youtube_videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_videoid_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_redirect_uri();
      redirect_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_uri_);
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_collection_type();
      collection_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_type_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_game_type();
      game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000800u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00001000u) {
      consumer_appid_ = from.consumer_appid_;
    }
    if (cached_has_bits & 0x00002000u) {
      file_type_ = from.file_type_;
    }
    if (cached_has_bits & 0x00004000u) {
      visibility_ = from.visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_Publish_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Publish_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Publish_Request::CopyFrom(const CPublishedFile_Publish_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Publish_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Publish_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_Publish_Request::Swap(CPublishedFile_Publish_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Publish_Request::InternalSwap(CPublishedFile_Publish_Request* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  cloudfilename_.Swap(&other->cloudfilename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_cloudfilename_.Swap(&other->preview_cloudfilename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_description_.Swap(&other->file_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consumer_shortcut_name_.Swap(&other->consumer_shortcut_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  youtube_username_.Swap(&other->youtube_username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  youtube_videoid_.Swap(&other->youtube_videoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_uri_.Swap(&other->redirect_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collection_type_.Swap(&other->collection_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_type_.Swap(&other->game_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(consumer_appid_, other->consumer_appid_);
  swap(file_type_, other->file_type_);
  swap(visibility_, other->visibility_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Publish_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Publish_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_Publish_Response::kPublishedfileidFieldNumber;
const int CPublishedFile_Publish_Response::kRedirectUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Publish_Response::CPublishedFile_Publish_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Publish_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Publish_Response)
}
CPublishedFile_Publish_Response::CPublishedFile_Publish_Response(const CPublishedFile_Publish_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect_uri()) {
    redirect_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_uri_);
  }
  publishedfileid_ = from.publishedfileid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Publish_Response)
}

void CPublishedFile_Publish_Response::SharedCtor() {
  redirect_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishedfileid_ = GOOGLE_ULONGLONG(0);
}

CPublishedFile_Publish_Response::~CPublishedFile_Publish_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Publish_Response)
  SharedDtor();
}

void CPublishedFile_Publish_Response::SharedDtor() {
  redirect_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_Publish_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Publish_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Publish_Response& CPublishedFile_Publish_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Publish_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_Publish_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Publish_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    redirect_uri_.ClearNonDefaultToEmptyNoArena();
  }
  publishedfileid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Publish_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Publish_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect_uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Publish_Response.redirect_uri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Publish_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Publish_Response)
  return false;
#undef DO_
}

void CPublishedFile_Publish_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Publish_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional string redirect_uri = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Response.redirect_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect_uri(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Publish_Response)
}

::google::protobuf::uint8* CPublishedFile_Publish_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Publish_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional string redirect_uri = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Publish_Response.redirect_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect_uri(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Publish_Response)
  return target;
}

size_t CPublishedFile_Publish_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Publish_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect_uri = 2;
    if (has_redirect_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect_uri());
    }

    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Publish_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Publish_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Publish_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Publish_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Publish_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Publish_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_Publish_Response::MergeFrom(const CPublishedFile_Publish_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Publish_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect_uri();
      redirect_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_uri_);
    }
    if (cached_has_bits & 0x00000002u) {
      publishedfileid_ = from.publishedfileid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_Publish_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Publish_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Publish_Response::CopyFrom(const CPublishedFile_Publish_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Publish_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Publish_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_Publish_Response::Swap(CPublishedFile_Publish_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Publish_Response::InternalSwap(CPublishedFile_Publish_Response* other) {
  using std::swap;
  redirect_uri_.Swap(&other->redirect_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(publishedfileid_, other->publishedfileid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Publish_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetDetails_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetDetails_Request::kPublishedfileidsFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludetagsFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludeadditionalpreviewsFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludechildrenFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludekvtagsFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludevotesFieldNumber;
const int CPublishedFile_GetDetails_Request::kShortDescriptionFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludeforsaledataFieldNumber;
const int CPublishedFile_GetDetails_Request::kIncludemetadataFieldNumber;
const int CPublishedFile_GetDetails_Request::kLanguageFieldNumber;
const int CPublishedFile_GetDetails_Request::kReturnPlaytimeStatsFieldNumber;
const int CPublishedFile_GetDetails_Request::kAppidFieldNumber;
const int CPublishedFile_GetDetails_Request::kStripDescriptionBbcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetDetails_Request::CPublishedFile_GetDetails_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetDetails_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetDetails_Request)
}
CPublishedFile_GetDetails_Request::CPublishedFile_GetDetails_Request(const CPublishedFile_GetDetails_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      publishedfileids_(from.publishedfileids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&includetags_, &from.includetags_,
    static_cast<size_t>(reinterpret_cast<char*>(&strip_description_bbcode_) -
    reinterpret_cast<char*>(&includetags_)) + sizeof(strip_description_bbcode_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetDetails_Request)
}

void CPublishedFile_GetDetails_Request::SharedCtor() {
  ::memset(&includetags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&strip_description_bbcode_) -
      reinterpret_cast<char*>(&includetags_)) + sizeof(strip_description_bbcode_));
}

CPublishedFile_GetDetails_Request::~CPublishedFile_GetDetails_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetDetails_Request)
  SharedDtor();
}

void CPublishedFile_GetDetails_Request::SharedDtor() {
}

void CPublishedFile_GetDetails_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetDetails_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetDetails_Request& CPublishedFile_GetDetails_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetDetails_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_GetDetails_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetDetails_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfileids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&includetags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&includemetadata_) -
        reinterpret_cast<char*>(&includetags_)) + sizeof(includemetadata_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&language_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&strip_description_bbcode_) -
        reinterpret_cast<char*>(&language_)) + sizeof(strip_description_bbcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetDetails_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetDetails_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 publishedfileids = 1 [(.description) = "Set of published file Ids to retrieve details for."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_publishedfileids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_publishedfileids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includetags = 2 [(.description) = "If true, return tag information in the returned details."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_includetags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includetags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includeadditionalpreviews = 3 [(.description) = "If true, return preview information in the returned details."];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_includeadditionalpreviews();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includeadditionalpreviews_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includechildren = 4 [(.description) = "If true, return children in the returned details."];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_includechildren();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includechildren_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includekvtags = 5 [(.description) = "If true, return key value tags in the returned details."];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_includekvtags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includekvtags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includevotes = 6 [(.description) = "If true, return vote data in the returned details."];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_includevotes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includevotes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool short_description = 8 [(.description) = "If true, return a short description instead of the full description."];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_short_description();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &short_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includeforsaledata = 10 [(.description) = "If true, return pricing data, if applicable."];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_includeforsaledata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includeforsaledata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool includemetadata = 11 [(.description) = "If true, populate the metadata field."];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_includemetadata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includemetadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 12 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 return_playtime_stats = 13 [(.description) = "Return playtime stats for the specified number of days before today."];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_return_playtime_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_playtime_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool strip_description_bbcode = 15 [(.description) = "Strips BBCode from descriptions."];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_strip_description_bbcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &strip_description_bbcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetDetails_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetDetails_Request)
  return false;
#undef DO_
}

void CPublishedFile_GetDetails_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetDetails_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 publishedfileids = 1 [(.description) = "Set of published file Ids to retrieve details for."];
  for (int i = 0, n = this->publishedfileids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->publishedfileids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool includetags = 2 [(.description) = "If true, return tag information in the returned details."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->includetags(), output);
  }

  // optional bool includeadditionalpreviews = 3 [(.description) = "If true, return preview information in the returned details."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->includeadditionalpreviews(), output);
  }

  // optional bool includechildren = 4 [(.description) = "If true, return children in the returned details."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->includechildren(), output);
  }

  // optional bool includekvtags = 5 [(.description) = "If true, return key value tags in the returned details."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->includekvtags(), output);
  }

  // optional bool includevotes = 6 [(.description) = "If true, return vote data in the returned details."];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->includevotes(), output);
  }

  // optional bool short_description = 8 [(.description) = "If true, return a short description instead of the full description."];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->short_description(), output);
  }

  // optional bool includeforsaledata = 10 [(.description) = "If true, return pricing data, if applicable."];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->includeforsaledata(), output);
  }

  // optional bool includemetadata = 11 [(.description) = "If true, populate the metadata field."];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->includemetadata(), output);
  }

  // optional int32 language = 12 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->language(), output);
  }

  // optional uint32 return_playtime_stats = 13 [(.description) = "Return playtime stats for the specified number of days before today."];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->return_playtime_stats(), output);
  }

  // optional uint32 appid = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->appid(), output);
  }

  // optional bool strip_description_bbcode = 15 [(.description) = "Strips BBCode from descriptions."];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->strip_description_bbcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetDetails_Request)
}

::google::protobuf::uint8* CPublishedFile_GetDetails_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetDetails_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 publishedfileids = 1 [(.description) = "Set of published file Ids to retrieve details for."];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->publishedfileids_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool includetags = 2 [(.description) = "If true, return tag information in the returned details."];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->includetags(), target);
  }

  // optional bool includeadditionalpreviews = 3 [(.description) = "If true, return preview information in the returned details."];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->includeadditionalpreviews(), target);
  }

  // optional bool includechildren = 4 [(.description) = "If true, return children in the returned details."];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->includechildren(), target);
  }

  // optional bool includekvtags = 5 [(.description) = "If true, return key value tags in the returned details."];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->includekvtags(), target);
  }

  // optional bool includevotes = 6 [(.description) = "If true, return vote data in the returned details."];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->includevotes(), target);
  }

  // optional bool short_description = 8 [(.description) = "If true, return a short description instead of the full description."];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->short_description(), target);
  }

  // optional bool includeforsaledata = 10 [(.description) = "If true, return pricing data, if applicable."];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->includeforsaledata(), target);
  }

  // optional bool includemetadata = 11 [(.description) = "If true, populate the metadata field."];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->includemetadata(), target);
  }

  // optional int32 language = 12 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->language(), target);
  }

  // optional uint32 return_playtime_stats = 13 [(.description) = "Return playtime stats for the specified number of days before today."];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->return_playtime_stats(), target);
  }

  // optional uint32 appid = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->appid(), target);
  }

  // optional bool strip_description_bbcode = 15 [(.description) = "Strips BBCode from descriptions."];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->strip_description_bbcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetDetails_Request)
  return target;
}

size_t CPublishedFile_GetDetails_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetDetails_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 publishedfileids = 1 [(.description) = "Set of published file Ids to retrieve details for."];
  {
    unsigned int count = static_cast<unsigned int>(this->publishedfileids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->publishedfileids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool includetags = 2 [(.description) = "If true, return tag information in the returned details."];
    if (has_includetags()) {
      total_size += 1 + 1;
    }

    // optional bool includeadditionalpreviews = 3 [(.description) = "If true, return preview information in the returned details."];
    if (has_includeadditionalpreviews()) {
      total_size += 1 + 1;
    }

    // optional bool includechildren = 4 [(.description) = "If true, return children in the returned details."];
    if (has_includechildren()) {
      total_size += 1 + 1;
    }

    // optional bool includekvtags = 5 [(.description) = "If true, return key value tags in the returned details."];
    if (has_includekvtags()) {
      total_size += 1 + 1;
    }

    // optional bool includevotes = 6 [(.description) = "If true, return vote data in the returned details."];
    if (has_includevotes()) {
      total_size += 1 + 1;
    }

    // optional bool short_description = 8 [(.description) = "If true, return a short description instead of the full description."];
    if (has_short_description()) {
      total_size += 1 + 1;
    }

    // optional bool includeforsaledata = 10 [(.description) = "If true, return pricing data, if applicable."];
    if (has_includeforsaledata()) {
      total_size += 1 + 1;
    }

    // optional bool includemetadata = 11 [(.description) = "If true, populate the metadata field."];
    if (has_includemetadata()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional int32 language = 12 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional uint32 return_playtime_stats = 13 [(.description) = "Return playtime stats for the specified number of days before today."];
    if (has_return_playtime_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_playtime_stats());
    }

    // optional uint32 appid = 14;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool strip_description_bbcode = 15 [(.description) = "Strips BBCode from descriptions."];
    if (has_strip_description_bbcode()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetDetails_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetDetails_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetDetails_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetDetails_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetDetails_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetDetails_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetDetails_Request::MergeFrom(const CPublishedFile_GetDetails_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetDetails_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publishedfileids_.MergeFrom(from.publishedfileids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      includetags_ = from.includetags_;
    }
    if (cached_has_bits & 0x00000002u) {
      includeadditionalpreviews_ = from.includeadditionalpreviews_;
    }
    if (cached_has_bits & 0x00000004u) {
      includechildren_ = from.includechildren_;
    }
    if (cached_has_bits & 0x00000008u) {
      includekvtags_ = from.includekvtags_;
    }
    if (cached_has_bits & 0x00000010u) {
      includevotes_ = from.includevotes_;
    }
    if (cached_has_bits & 0x00000020u) {
      short_description_ = from.short_description_;
    }
    if (cached_has_bits & 0x00000040u) {
      includeforsaledata_ = from.includeforsaledata_;
    }
    if (cached_has_bits & 0x00000080u) {
      includemetadata_ = from.includemetadata_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00000200u) {
      return_playtime_stats_ = from.return_playtime_stats_;
    }
    if (cached_has_bits & 0x00000400u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000800u) {
      strip_description_bbcode_ = from.strip_description_bbcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetDetails_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetDetails_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetDetails_Request::CopyFrom(const CPublishedFile_GetDetails_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetDetails_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetDetails_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_GetDetails_Request::Swap(CPublishedFile_GetDetails_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetDetails_Request::InternalSwap(CPublishedFile_GetDetails_Request* other) {
  using std::swap;
  publishedfileids_.InternalSwap(&other->publishedfileids_);
  swap(includetags_, other->includetags_);
  swap(includeadditionalpreviews_, other->includeadditionalpreviews_);
  swap(includechildren_, other->includechildren_);
  swap(includekvtags_, other->includekvtags_);
  swap(includevotes_, other->includevotes_);
  swap(short_description_, other->short_description_);
  swap(includeforsaledata_, other->includeforsaledata_);
  swap(includemetadata_, other->includemetadata_);
  swap(language_, other->language_);
  swap(return_playtime_stats_, other->return_playtime_stats_);
  swap(appid_, other->appid_);
  swap(strip_description_bbcode_, other->strip_description_bbcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetDetails_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_Tag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_Tag::kTagFieldNumber;
const int PublishedFileDetails_Tag::kAdminonlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_Tag::PublishedFileDetails_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Tag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.Tag)
}
PublishedFileDetails_Tag::PublishedFileDetails_Tag(const PublishedFileDetails_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag()) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  adminonly_ = from.adminonly_;
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.Tag)
}

void PublishedFileDetails_Tag::SharedCtor() {
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adminonly_ = false;
}

PublishedFileDetails_Tag::~PublishedFileDetails_Tag() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.Tag)
  SharedDtor();
}

void PublishedFileDetails_Tag::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublishedFileDetails_Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_Tag::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_Tag& PublishedFileDetails_Tag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Tag.base);
  return *internal_default_instance();
}


void PublishedFileDetails_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tag_.ClearNonDefaultToEmptyNoArena();
  }
  adminonly_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.Tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.Tag.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adminonly = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_adminonly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adminonly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.Tag)
  return false;
#undef DO_
}

void PublishedFileDetails_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Tag.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag(), output);
  }

  // optional bool adminonly = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->adminonly(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.Tag)
}

::google::protobuf::uint8* PublishedFileDetails_Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Tag.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag(), target);
  }

  // optional bool adminonly = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->adminonly(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.Tag)
  return target;
}

size_t PublishedFileDetails_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string tag = 1;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
    }

    // optional bool adminonly = 2;
    if (has_adminonly()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.Tag)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_Tag::MergeFrom(const PublishedFileDetails_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag();
      tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
    if (cached_has_bits & 0x00000002u) {
      adminonly_ = from.adminonly_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PublishedFileDetails_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_Tag::CopyFrom(const PublishedFileDetails_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_Tag::IsInitialized() const {
  return true;
}

void PublishedFileDetails_Tag::Swap(PublishedFileDetails_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_Tag::InternalSwap(PublishedFileDetails_Tag* other) {
  using std::swap;
  tag_.Swap(&other->tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(adminonly_, other->adminonly_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_Tag::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_Preview::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_Preview::kPreviewidFieldNumber;
const int PublishedFileDetails_Preview::kSortorderFieldNumber;
const int PublishedFileDetails_Preview::kUrlFieldNumber;
const int PublishedFileDetails_Preview::kSizeFieldNumber;
const int PublishedFileDetails_Preview::kFilenameFieldNumber;
const int PublishedFileDetails_Preview::kYoutubevideoidFieldNumber;
const int PublishedFileDetails_Preview::kPreviewTypeFieldNumber;
const int PublishedFileDetails_Preview::kExternalReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_Preview::PublishedFileDetails_Preview()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Preview.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.Preview)
}
PublishedFileDetails_Preview::PublishedFileDetails_Preview(const PublishedFileDetails_Preview& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  youtubevideoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_youtubevideoid()) {
    youtubevideoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtubevideoid_);
  }
  external_reference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_external_reference()) {
    external_reference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_reference_);
  }
  ::memcpy(&previewid_, &from.previewid_,
    static_cast<size_t>(reinterpret_cast<char*>(&preview_type_) -
    reinterpret_cast<char*>(&previewid_)) + sizeof(preview_type_));
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.Preview)
}

void PublishedFileDetails_Preview::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtubevideoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_reference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&previewid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preview_type_) -
      reinterpret_cast<char*>(&previewid_)) + sizeof(preview_type_));
}

PublishedFileDetails_Preview::~PublishedFileDetails_Preview() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.Preview)
  SharedDtor();
}

void PublishedFileDetails_Preview::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtubevideoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_reference_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublishedFileDetails_Preview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_Preview::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_Preview& PublishedFileDetails_Preview::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Preview.base);
  return *internal_default_instance();
}


void PublishedFileDetails_Preview::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.Preview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      youtubevideoid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      external_reference_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&previewid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&preview_type_) -
        reinterpret_cast<char*>(&previewid_)) + sizeof(preview_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_Preview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.Preview)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 previewid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_previewid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &previewid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sortorder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sortorder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sortorder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.Preview.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.Preview.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string youtubevideoid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtubevideoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->youtubevideoid().data(), static_cast<int>(this->youtubevideoid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.Preview.youtubevideoid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 preview_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_preview_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preview_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string external_reference = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_external_reference()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->external_reference().data(), static_cast<int>(this->external_reference().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.Preview.external_reference");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.Preview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.Preview)
  return false;
#undef DO_
}

void PublishedFileDetails_Preview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.Preview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 previewid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->previewid(), output);
  }

  // optional uint32 sortorder = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sortorder(), output);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // optional uint32 size = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // optional string filename = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filename(), output);
  }

  // optional string youtubevideoid = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtubevideoid().data(), static_cast<int>(this->youtubevideoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.youtubevideoid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->youtubevideoid(), output);
  }

  // optional uint32 preview_type = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->preview_type(), output);
  }

  // optional string external_reference = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->external_reference().data(), static_cast<int>(this->external_reference().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.external_reference");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->external_reference(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.Preview)
}

::google::protobuf::uint8* PublishedFileDetails_Preview::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.Preview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 previewid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->previewid(), target);
  }

  // optional uint32 sortorder = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sortorder(), target);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // optional uint32 size = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // optional string filename = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filename(), target);
  }

  // optional string youtubevideoid = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtubevideoid().data(), static_cast<int>(this->youtubevideoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.youtubevideoid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->youtubevideoid(), target);
  }

  // optional uint32 preview_type = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->preview_type(), target);
  }

  // optional string external_reference = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->external_reference().data(), static_cast<int>(this->external_reference().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.Preview.external_reference");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->external_reference(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.Preview)
  return target;
}

size_t PublishedFileDetails_Preview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.Preview)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string filename = 5;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string youtubevideoid = 6;
    if (has_youtubevideoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtubevideoid());
    }

    // optional string external_reference = 8;
    if (has_external_reference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->external_reference());
    }

    // optional uint64 previewid = 1;
    if (has_previewid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->previewid());
    }

    // optional uint32 sortorder = 2;
    if (has_sortorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sortorder());
    }

    // optional uint32 size = 4;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

    // optional uint32 preview_type = 7;
    if (has_preview_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->preview_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_Preview::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.Preview)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_Preview* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_Preview>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.Preview)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.Preview)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_Preview::MergeFrom(const PublishedFileDetails_Preview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.Preview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_youtubevideoid();
      youtubevideoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtubevideoid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_external_reference();
      external_reference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_reference_);
    }
    if (cached_has_bits & 0x00000010u) {
      previewid_ = from.previewid_;
    }
    if (cached_has_bits & 0x00000020u) {
      sortorder_ = from.sortorder_;
    }
    if (cached_has_bits & 0x00000040u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000080u) {
      preview_type_ = from.preview_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PublishedFileDetails_Preview::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.Preview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_Preview::CopyFrom(const PublishedFileDetails_Preview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.Preview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_Preview::IsInitialized() const {
  return true;
}

void PublishedFileDetails_Preview::Swap(PublishedFileDetails_Preview* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_Preview::InternalSwap(PublishedFileDetails_Preview* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  youtubevideoid_.Swap(&other->youtubevideoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  external_reference_.Swap(&other->external_reference_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(previewid_, other->previewid_);
  swap(sortorder_, other->sortorder_);
  swap(size_, other->size_);
  swap(preview_type_, other->preview_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_Preview::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_Child::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_Child::kPublishedfileidFieldNumber;
const int PublishedFileDetails_Child::kSortorderFieldNumber;
const int PublishedFileDetails_Child::kFileTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_Child::PublishedFileDetails_Child()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Child.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.Child)
}
PublishedFileDetails_Child::PublishedFileDetails_Child(const PublishedFileDetails_Child& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_type_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(file_type_));
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.Child)
}

void PublishedFileDetails_Child::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_type_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(file_type_));
}

PublishedFileDetails_Child::~PublishedFileDetails_Child() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.Child)
  SharedDtor();
}

void PublishedFileDetails_Child::SharedDtor() {
}

void PublishedFileDetails_Child::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_Child::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_Child& PublishedFileDetails_Child::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_Child.base);
  return *internal_default_instance();
}


void PublishedFileDetails_Child::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.Child)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_type_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(file_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_Child::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.Child)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sortorder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sortorder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sortorder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.Child)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.Child)
  return false;
#undef DO_
}

void PublishedFileDetails_Child::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.Child)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint32 sortorder = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sortorder(), output);
  }

  // optional uint32 file_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->file_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.Child)
}

::google::protobuf::uint8* PublishedFileDetails_Child::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.Child)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint32 sortorder = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sortorder(), target);
  }

  // optional uint32 file_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->file_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.Child)
  return target;
}

size_t PublishedFileDetails_Child::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.Child)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint32 sortorder = 2;
    if (has_sortorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sortorder());
    }

    // optional uint32 file_type = 3;
    if (has_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_Child::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.Child)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_Child* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_Child>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.Child)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.Child)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_Child::MergeFrom(const PublishedFileDetails_Child& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.Child)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      sortorder_ = from.sortorder_;
    }
    if (cached_has_bits & 0x00000004u) {
      file_type_ = from.file_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PublishedFileDetails_Child::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.Child)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_Child::CopyFrom(const PublishedFileDetails_Child& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.Child)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_Child::IsInitialized() const {
  return true;
}

void PublishedFileDetails_Child::Swap(PublishedFileDetails_Child* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_Child::InternalSwap(PublishedFileDetails_Child* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(sortorder_, other->sortorder_);
  swap(file_type_, other->file_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_Child::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_KVTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_KVTag::kKeyFieldNumber;
const int PublishedFileDetails_KVTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_KVTag::PublishedFileDetails_KVTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_KVTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.KVTag)
}
PublishedFileDetails_KVTag::PublishedFileDetails_KVTag(const PublishedFileDetails_KVTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.KVTag)
}

void PublishedFileDetails_KVTag::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PublishedFileDetails_KVTag::~PublishedFileDetails_KVTag() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.KVTag)
  SharedDtor();
}

void PublishedFileDetails_KVTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublishedFileDetails_KVTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_KVTag::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_KVTag& PublishedFileDetails_KVTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_KVTag.base);
  return *internal_default_instance();
}


void PublishedFileDetails_KVTag::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_KVTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.KVTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.KVTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.KVTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.KVTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.KVTag)
  return false;
#undef DO_
}

void PublishedFileDetails_KVTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.KVTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.KVTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.KVTag)
}

::google::protobuf::uint8* PublishedFileDetails_KVTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.KVTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.KVTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.KVTag)
  return target;
}

size_t PublishedFileDetails_KVTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.KVTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_KVTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.KVTag)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_KVTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_KVTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.KVTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.KVTag)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_KVTag::MergeFrom(const PublishedFileDetails_KVTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.KVTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void PublishedFileDetails_KVTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.KVTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_KVTag::CopyFrom(const PublishedFileDetails_KVTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.KVTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_KVTag::IsInitialized() const {
  return true;
}

void PublishedFileDetails_KVTag::Swap(PublishedFileDetails_KVTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_KVTag::InternalSwap(PublishedFileDetails_KVTag* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_KVTag::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_VoteData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_VoteData::kScoreFieldNumber;
const int PublishedFileDetails_VoteData::kVotesUpFieldNumber;
const int PublishedFileDetails_VoteData::kVotesDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_VoteData::PublishedFileDetails_VoteData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_VoteData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.VoteData)
}
PublishedFileDetails_VoteData::PublishedFileDetails_VoteData(const PublishedFileDetails_VoteData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&votes_down_) -
    reinterpret_cast<char*>(&score_)) + sizeof(votes_down_));
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.VoteData)
}

void PublishedFileDetails_VoteData::SharedCtor() {
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&votes_down_) -
      reinterpret_cast<char*>(&score_)) + sizeof(votes_down_));
}

PublishedFileDetails_VoteData::~PublishedFileDetails_VoteData() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.VoteData)
  SharedDtor();
}

void PublishedFileDetails_VoteData::SharedDtor() {
}

void PublishedFileDetails_VoteData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_VoteData::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_VoteData& PublishedFileDetails_VoteData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_VoteData.base);
  return *internal_default_instance();
}


void PublishedFileDetails_VoteData::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.VoteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&score_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&votes_down_) -
        reinterpret_cast<char*>(&score_)) + sizeof(votes_down_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_VoteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.VoteData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 votes_up = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_votes_up();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &votes_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 votes_down = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_votes_down();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &votes_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.VoteData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.VoteData)
  return false;
#undef DO_
}

void PublishedFileDetails_VoteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.VoteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float score = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->score(), output);
  }

  // optional uint32 votes_up = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->votes_up(), output);
  }

  // optional uint32 votes_down = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->votes_down(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.VoteData)
}

::google::protobuf::uint8* PublishedFileDetails_VoteData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.VoteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float score = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->score(), target);
  }

  // optional uint32 votes_up = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->votes_up(), target);
  }

  // optional uint32 votes_down = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->votes_down(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.VoteData)
  return target;
}

size_t PublishedFileDetails_VoteData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.VoteData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional float score = 1;
    if (has_score()) {
      total_size += 1 + 4;
    }

    // optional uint32 votes_up = 2;
    if (has_votes_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->votes_up());
    }

    // optional uint32 votes_down = 3;
    if (has_votes_down()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->votes_down());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_VoteData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.VoteData)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_VoteData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_VoteData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.VoteData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.VoteData)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_VoteData::MergeFrom(const PublishedFileDetails_VoteData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.VoteData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_up_ = from.votes_up_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_down_ = from.votes_down_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PublishedFileDetails_VoteData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.VoteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_VoteData::CopyFrom(const PublishedFileDetails_VoteData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.VoteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_VoteData::IsInitialized() const {
  return true;
}

void PublishedFileDetails_VoteData::Swap(PublishedFileDetails_VoteData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_VoteData::InternalSwap(PublishedFileDetails_VoteData* other) {
  using std::swap;
  swap(score_, other->score_);
  swap(votes_up_, other->votes_up_);
  swap(votes_down_, other->votes_down_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_VoteData::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_ForSaleData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_ForSaleData::kIsForSaleFieldNumber;
const int PublishedFileDetails_ForSaleData::kPriceCategoryFieldNumber;
const int PublishedFileDetails_ForSaleData::kEstatusFieldNumber;
const int PublishedFileDetails_ForSaleData::kPriceCategoryFloorFieldNumber;
const int PublishedFileDetails_ForSaleData::kPriceIsPayWhatYouWantFieldNumber;
const int PublishedFileDetails_ForSaleData::kDiscountPercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_ForSaleData::PublishedFileDetails_ForSaleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_ForSaleData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.ForSaleData)
}
PublishedFileDetails_ForSaleData::PublishedFileDetails_ForSaleData(const PublishedFileDetails_ForSaleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_category_, &from.price_category_,
    static_cast<size_t>(reinterpret_cast<char*>(&discount_percentage_) -
    reinterpret_cast<char*>(&price_category_)) + sizeof(discount_percentage_));
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.ForSaleData)
}

void PublishedFileDetails_ForSaleData::SharedCtor() {
  ::memset(&price_category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&discount_percentage_) -
      reinterpret_cast<char*>(&price_category_)) + sizeof(discount_percentage_));
}

PublishedFileDetails_ForSaleData::~PublishedFileDetails_ForSaleData() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.ForSaleData)
  SharedDtor();
}

void PublishedFileDetails_ForSaleData::SharedDtor() {
}

void PublishedFileDetails_ForSaleData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_ForSaleData::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_ForSaleData& PublishedFileDetails_ForSaleData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_ForSaleData.base);
  return *internal_default_instance();
}


void PublishedFileDetails_ForSaleData::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.ForSaleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&price_category_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&discount_percentage_) -
        reinterpret_cast<char*>(&price_category_)) + sizeof(discount_percentage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_ForSaleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.ForSaleData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_for_sale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_for_sale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_for_sale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_category = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_price_category();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_category_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EPublishedFileForSaleStatus estatus = 3 [default = k_PFFSS_NotForSale];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EPublishedFileForSaleStatus_IsValid(value)) {
            set_estatus(static_cast< ::EPublishedFileForSaleStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_category_floor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_price_category_floor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_category_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool price_is_pay_what_you_want = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_price_is_pay_what_you_want();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &price_is_pay_what_you_want_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 discount_percentage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_discount_percentage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discount_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.ForSaleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.ForSaleData)
  return false;
#undef DO_
}

void PublishedFileDetails_ForSaleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.ForSaleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_for_sale = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_for_sale(), output);
  }

  // optional uint32 price_category = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price_category(), output);
  }

  // optional .EPublishedFileForSaleStatus estatus = 3 [default = k_PFFSS_NotForSale];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->estatus(), output);
  }

  // optional uint32 price_category_floor = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->price_category_floor(), output);
  }

  // optional bool price_is_pay_what_you_want = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->price_is_pay_what_you_want(), output);
  }

  // optional uint32 discount_percentage = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->discount_percentage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.ForSaleData)
}

::google::protobuf::uint8* PublishedFileDetails_ForSaleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.ForSaleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_for_sale = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_for_sale(), target);
  }

  // optional uint32 price_category = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price_category(), target);
  }

  // optional .EPublishedFileForSaleStatus estatus = 3 [default = k_PFFSS_NotForSale];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->estatus(), target);
  }

  // optional uint32 price_category_floor = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->price_category_floor(), target);
  }

  // optional bool price_is_pay_what_you_want = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->price_is_pay_what_you_want(), target);
  }

  // optional uint32 discount_percentage = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->discount_percentage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.ForSaleData)
  return target;
}

size_t PublishedFileDetails_ForSaleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.ForSaleData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 price_category = 2;
    if (has_price_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_category());
    }

    // optional .EPublishedFileForSaleStatus estatus = 3 [default = k_PFFSS_NotForSale];
    if (has_estatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->estatus());
    }

    // optional bool is_for_sale = 1;
    if (has_is_for_sale()) {
      total_size += 1 + 1;
    }

    // optional bool price_is_pay_what_you_want = 5;
    if (has_price_is_pay_what_you_want()) {
      total_size += 1 + 1;
    }

    // optional uint32 price_category_floor = 4;
    if (has_price_category_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_category_floor());
    }

    // optional uint32 discount_percentage = 6;
    if (has_discount_percentage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->discount_percentage());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_ForSaleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.ForSaleData)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_ForSaleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_ForSaleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.ForSaleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.ForSaleData)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_ForSaleData::MergeFrom(const PublishedFileDetails_ForSaleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.ForSaleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      price_category_ = from.price_category_;
    }
    if (cached_has_bits & 0x00000002u) {
      estatus_ = from.estatus_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_for_sale_ = from.is_for_sale_;
    }
    if (cached_has_bits & 0x00000008u) {
      price_is_pay_what_you_want_ = from.price_is_pay_what_you_want_;
    }
    if (cached_has_bits & 0x00000010u) {
      price_category_floor_ = from.price_category_floor_;
    }
    if (cached_has_bits & 0x00000020u) {
      discount_percentage_ = from.discount_percentage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PublishedFileDetails_ForSaleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.ForSaleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_ForSaleData::CopyFrom(const PublishedFileDetails_ForSaleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.ForSaleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_ForSaleData::IsInitialized() const {
  return true;
}

void PublishedFileDetails_ForSaleData::Swap(PublishedFileDetails_ForSaleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_ForSaleData::InternalSwap(PublishedFileDetails_ForSaleData* other) {
  using std::swap;
  swap(price_category_, other->price_category_);
  swap(estatus_, other->estatus_);
  swap(is_for_sale_, other->is_for_sale_);
  swap(price_is_pay_what_you_want_, other->price_is_pay_what_you_want_);
  swap(price_category_floor_, other->price_category_floor_);
  swap(discount_percentage_, other->discount_percentage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_ForSaleData::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails_PlaytimeStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails_PlaytimeStats::kPlaytimeSecondsFieldNumber;
const int PublishedFileDetails_PlaytimeStats::kNumSessionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails_PlaytimeStats::PublishedFileDetails_PlaytimeStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_PlaytimeStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails.PlaytimeStats)
}
PublishedFileDetails_PlaytimeStats::PublishedFileDetails_PlaytimeStats(const PublishedFileDetails_PlaytimeStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playtime_seconds_, &from.playtime_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_sessions_) -
    reinterpret_cast<char*>(&playtime_seconds_)) + sizeof(num_sessions_));
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails.PlaytimeStats)
}

void PublishedFileDetails_PlaytimeStats::SharedCtor() {
  ::memset(&playtime_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_sessions_) -
      reinterpret_cast<char*>(&playtime_seconds_)) + sizeof(num_sessions_));
}

PublishedFileDetails_PlaytimeStats::~PublishedFileDetails_PlaytimeStats() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails.PlaytimeStats)
  SharedDtor();
}

void PublishedFileDetails_PlaytimeStats::SharedDtor() {
}

void PublishedFileDetails_PlaytimeStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails_PlaytimeStats::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails_PlaytimeStats& PublishedFileDetails_PlaytimeStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails_PlaytimeStats.base);
  return *internal_default_instance();
}


void PublishedFileDetails_PlaytimeStats::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails.PlaytimeStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&playtime_seconds_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_sessions_) -
        reinterpret_cast<char*>(&playtime_seconds_)) + sizeof(num_sessions_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails_PlaytimeStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails.PlaytimeStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 playtime_seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playtime_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playtime_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 num_sessions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_sessions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_sessions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails.PlaytimeStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails.PlaytimeStats)
  return false;
#undef DO_
}

void PublishedFileDetails_PlaytimeStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails.PlaytimeStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 playtime_seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playtime_seconds(), output);
  }

  // optional uint64 num_sessions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num_sessions(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails.PlaytimeStats)
}

::google::protobuf::uint8* PublishedFileDetails_PlaytimeStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails.PlaytimeStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 playtime_seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playtime_seconds(), target);
  }

  // optional uint64 num_sessions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num_sessions(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails.PlaytimeStats)
  return target;
}

size_t PublishedFileDetails_PlaytimeStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails.PlaytimeStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 playtime_seconds = 1;
    if (has_playtime_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->playtime_seconds());
    }

    // optional uint64 num_sessions = 2;
    if (has_num_sessions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->num_sessions());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails_PlaytimeStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails.PlaytimeStats)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails_PlaytimeStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails_PlaytimeStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails.PlaytimeStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails.PlaytimeStats)
    MergeFrom(*source);
  }
}

void PublishedFileDetails_PlaytimeStats::MergeFrom(const PublishedFileDetails_PlaytimeStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails.PlaytimeStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      playtime_seconds_ = from.playtime_seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_sessions_ = from.num_sessions_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PublishedFileDetails_PlaytimeStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails.PlaytimeStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails_PlaytimeStats::CopyFrom(const PublishedFileDetails_PlaytimeStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails.PlaytimeStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails_PlaytimeStats::IsInitialized() const {
  return true;
}

void PublishedFileDetails_PlaytimeStats::Swap(PublishedFileDetails_PlaytimeStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails_PlaytimeStats::InternalSwap(PublishedFileDetails_PlaytimeStats* other) {
  using std::swap;
  swap(playtime_seconds_, other->playtime_seconds_);
  swap(num_sessions_, other->num_sessions_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails_PlaytimeStats::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedFileDetails::InitAsDefaultInstance() {
  ::_PublishedFileDetails_default_instance_._instance.get_mutable()->vote_data_ = const_cast< ::PublishedFileDetails_VoteData*>(
      ::PublishedFileDetails_VoteData::internal_default_instance());
  ::_PublishedFileDetails_default_instance_._instance.get_mutable()->playtime_stats_ = const_cast< ::PublishedFileDetails_PlaytimeStats*>(
      ::PublishedFileDetails_PlaytimeStats::internal_default_instance());
  ::_PublishedFileDetails_default_instance_._instance.get_mutable()->for_sale_data_ = const_cast< ::PublishedFileDetails_ForSaleData*>(
      ::PublishedFileDetails_ForSaleData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedFileDetails::kResultFieldNumber;
const int PublishedFileDetails::kPublishedfileidFieldNumber;
const int PublishedFileDetails::kCreatorFieldNumber;
const int PublishedFileDetails::kCreatorAppidFieldNumber;
const int PublishedFileDetails::kConsumerAppidFieldNumber;
const int PublishedFileDetails::kConsumerShortcutidFieldNumber;
const int PublishedFileDetails::kFilenameFieldNumber;
const int PublishedFileDetails::kFileSizeFieldNumber;
const int PublishedFileDetails::kPreviewFileSizeFieldNumber;
const int PublishedFileDetails::kFileUrlFieldNumber;
const int PublishedFileDetails::kPreviewUrlFieldNumber;
const int PublishedFileDetails::kYoutubevideoidFieldNumber;
const int PublishedFileDetails::kUrlFieldNumber;
const int PublishedFileDetails::kHcontentFileFieldNumber;
const int PublishedFileDetails::kHcontentPreviewFieldNumber;
const int PublishedFileDetails::kTitleFieldNumber;
const int PublishedFileDetails::kFileDescriptionFieldNumber;
const int PublishedFileDetails::kShortDescriptionFieldNumber;
const int PublishedFileDetails::kTimeCreatedFieldNumber;
const int PublishedFileDetails::kTimeUpdatedFieldNumber;
const int PublishedFileDetails::kVisibilityFieldNumber;
const int PublishedFileDetails::kFlagsFieldNumber;
const int PublishedFileDetails::kWorkshopFileFieldNumber;
const int PublishedFileDetails::kWorkshopAcceptedFieldNumber;
const int PublishedFileDetails::kShowSubscribeAllFieldNumber;
const int PublishedFileDetails::kNumCommentsDeveloperFieldNumber;
const int PublishedFileDetails::kNumCommentsPublicFieldNumber;
const int PublishedFileDetails::kBannedFieldNumber;
const int PublishedFileDetails::kBanReasonFieldNumber;
const int PublishedFileDetails::kBannerFieldNumber;
const int PublishedFileDetails::kCanBeDeletedFieldNumber;
const int PublishedFileDetails::kIncompatibleFieldNumber;
const int PublishedFileDetails::kAppNameFieldNumber;
const int PublishedFileDetails::kFileTypeFieldNumber;
const int PublishedFileDetails::kCanSubscribeFieldNumber;
const int PublishedFileDetails::kSubscriptionsFieldNumber;
const int PublishedFileDetails::kFavoritedFieldNumber;
const int PublishedFileDetails::kFollowersFieldNumber;
const int PublishedFileDetails::kLifetimeSubscriptionsFieldNumber;
const int PublishedFileDetails::kLifetimeFavoritedFieldNumber;
const int PublishedFileDetails::kLifetimeFollowersFieldNumber;
const int PublishedFileDetails::kLifetimePlaytimeFieldNumber;
const int PublishedFileDetails::kLifetimePlaytimeSessionsFieldNumber;
const int PublishedFileDetails::kViewsFieldNumber;
const int PublishedFileDetails::kImageWidthFieldNumber;
const int PublishedFileDetails::kImageHeightFieldNumber;
const int PublishedFileDetails::kImageUrlFieldNumber;
const int PublishedFileDetails::kSpoilerTagFieldNumber;
const int PublishedFileDetails::kShortcutidFieldNumber;
const int PublishedFileDetails::kShortcutnameFieldNumber;
const int PublishedFileDetails::kNumChildrenFieldNumber;
const int PublishedFileDetails::kNumReportsFieldNumber;
const int PublishedFileDetails::kPreviewsFieldNumber;
const int PublishedFileDetails::kTagsFieldNumber;
const int PublishedFileDetails::kChildrenFieldNumber;
const int PublishedFileDetails::kKvtagsFieldNumber;
const int PublishedFileDetails::kVoteDataFieldNumber;
const int PublishedFileDetails::kPlaytimeStatsFieldNumber;
const int PublishedFileDetails::kTimeSubscribedFieldNumber;
const int PublishedFileDetails::kForSaleDataFieldNumber;
const int PublishedFileDetails::kMetadataFieldNumber;
const int PublishedFileDetails::kLanguageFieldNumber;
const int PublishedFileDetails::kMaybeInappropriateSexFieldNumber;
const int PublishedFileDetails::kMaybeInappropriateViolenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedFileDetails::PublishedFileDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedFileDetails)
}
PublishedFileDetails::PublishedFileDetails(const PublishedFileDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      previews_(from.previews_),
      tags_(from.tags_),
      children_(from.children_),
      kvtags_(from.kvtags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_url()) {
    file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_url_);
  }
  preview_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_url()) {
    preview_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_url_);
  }
  youtubevideoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_youtubevideoid()) {
    youtubevideoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtubevideoid_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  file_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_description()) {
    file_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_description_);
  }
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_short_description()) {
    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  ban_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ban_reason()) {
    ban_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ban_reason_);
  }
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_name()) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_url()) {
    image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  shortcutname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shortcutname()) {
    shortcutname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcutname_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.has_vote_data()) {
    vote_data_ = new ::PublishedFileDetails_VoteData(*from.vote_data_);
  } else {
    vote_data_ = NULL;
  }
  if (from.has_for_sale_data()) {
    for_sale_data_ = new ::PublishedFileDetails_ForSaleData(*from.for_sale_data_);
  } else {
    for_sale_data_ = NULL;
  }
  if (from.has_playtime_stats()) {
    playtime_stats_ = new ::PublishedFileDetails_PlaytimeStats(*from.playtime_stats_);
  } else {
    playtime_stats_ = NULL;
  }
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maybe_inappropriate_violence_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(maybe_inappropriate_violence_));
  // @@protoc_insertion_point(copy_constructor:PublishedFileDetails)
}

void PublishedFileDetails::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtubevideoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ban_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcutname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vote_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maybe_inappropriate_violence_) -
      reinterpret_cast<char*>(&vote_data_)) + sizeof(maybe_inappropriate_violence_));
}

PublishedFileDetails::~PublishedFileDetails() {
  // @@protoc_insertion_point(destructor:PublishedFileDetails)
  SharedDtor();
}

void PublishedFileDetails::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtubevideoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ban_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcutname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vote_data_;
  if (this != internal_default_instance()) delete for_sale_data_;
  if (this != internal_default_instance()) delete playtime_stats_;
}

void PublishedFileDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedFileDetails::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedFileDetails& PublishedFileDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_PublishedFileDetails.base);
  return *internal_default_instance();
}


void PublishedFileDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedFileDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  previews_.Clear();
  tags_.Clear();
  children_.Clear();
  kvtags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      file_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      preview_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      youtubevideoid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      file_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      short_description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      ban_reason_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      app_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      image_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      shortcutname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      metadata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(vote_data_ != NULL);
      vote_data_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(for_sale_data_ != NULL);
      for_sale_data_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(playtime_stats_ != NULL);
      playtime_stats_->Clear();
    }
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&preview_file_size_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(preview_file_size_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&hcontent_file_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&workshop_accepted_) -
        reinterpret_cast<char*>(&hcontent_file_)) + sizeof(workshop_accepted_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&show_subscribe_all_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&can_be_deleted_) -
        reinterpret_cast<char*>(&show_subscribe_all_)) + sizeof(can_be_deleted_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&incompatible_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lifetime_followers_) -
        reinterpret_cast<char*>(&incompatible_)) + sizeof(lifetime_followers_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&views_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lifetime_playtime_) -
        reinterpret_cast<char*>(&views_)) + sizeof(lifetime_playtime_));
  }
  if (cached_has_bits & 251658240u) {
    ::memset(&lifetime_playtime_sessions_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maybe_inappropriate_violence_) -
        reinterpret_cast<char*>(&lifetime_playtime_sessions_)) + sizeof(maybe_inappropriate_violence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PublishedFileDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedFileDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 publishedfileid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 creator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_creator();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &creator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 creator_appid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_creator_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consumer_appid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_consumer_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumer_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consumer_shortcutid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_consumer_shortcutid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumer_shortcutid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 file_size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 preview_file_size = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_preview_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preview_file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_url = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_url().data(), static_cast<int>(this->file_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_url = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_url().data(), static_cast<int>(this->preview_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.preview_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string youtubevideoid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtubevideoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->youtubevideoid().data(), static_cast<int>(this->youtubevideoid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.youtubevideoid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hcontent_file = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_hcontent_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hcontent_preview = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_hcontent_preview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_preview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_description = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_description().data(), static_cast<int>(this->file_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.file_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string short_description = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->short_description().data(), static_cast<int>(this->short_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.short_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_created = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_time_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 visibility = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool workshop_file = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_workshop_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &workshop_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool workshop_accepted = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_workshop_accepted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &workshop_accepted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_subscribe_all = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_show_subscribe_all();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_subscribe_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_comments_developer = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_num_comments_developer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_comments_developer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_comments_public = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_num_comments_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_comments_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool banned = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ban_reason = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ban_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ban_reason().data(), static_cast<int>(this->ban_reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.ban_reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 banner = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(241u /* 241 & 0xFF */)) {
          set_has_banner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &banner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_be_deleted = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_can_be_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_be_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool incompatible = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_incompatible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incompatible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string app_name = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.app_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_type = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          set_has_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_subscribe = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_can_subscribe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_subscribe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 subscriptions = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          set_has_subscriptions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subscriptions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 favorited = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {
          set_has_favorited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &favorited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 followers = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          set_has_followers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &followers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lifetime_subscriptions = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          set_has_lifetime_subscriptions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lifetime_subscriptions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lifetime_favorited = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_lifetime_favorited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lifetime_favorited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lifetime_followers = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          set_has_lifetime_followers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lifetime_followers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 views = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_views();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &views_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 image_width = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_image_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &image_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 image_height = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_image_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &image_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_url = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->image_url().data(), static_cast<int>(this->image_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.image_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool spoiler_tag = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          set_has_spoiler_tag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spoiler_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 shortcutid = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          set_has_shortcutid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shortcutid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string shortcutname = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shortcutname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shortcutname().data(), static_cast<int>(this->shortcutname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.shortcutname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_children = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          set_has_num_children();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_children_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_reports = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_num_reports();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PublishedFileDetails.Preview previews = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_previews()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PublishedFileDetails.Tag tags = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PublishedFileDetails.Child children = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PublishedFileDetails.KVTag kvtags = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kvtags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PublishedFileDetails.VoteData vote_data = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vote_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_subscribed = 56 [(.description) = "Only valid in PublishedFile.GetUserFiles and not normal PublishedFile.GetDetail calls"];
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {
          set_has_time_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PublishedFileDetails.ForSaleData for_sale_data = 57 [(.description) = "Pricing information, if applicable."];
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_for_sale_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string metadata = 58 [(.description) = "Metadata associated with the item"];
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PublishedFileDetails.metadata");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 61 [default = 0, (.description) = "The language of the title and description."];
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 lifetime_playtime = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 496 & 0xFF */)) {
          set_has_lifetime_playtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lifetime_playtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 lifetime_playtime_sessions = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 504 & 0xFF */)) {
          set_has_lifetime_playtime_sessions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lifetime_playtime_sessions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PublishedFileDetails.PlaytimeStats playtime_stats = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playtime_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool maybe_inappropriate_sex = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 520 & 0xFF */)) {
          set_has_maybe_inappropriate_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maybe_inappropriate_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool maybe_inappropriate_violence = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 528 & 0xFF */)) {
          set_has_maybe_inappropriate_violence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maybe_inappropriate_violence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedFileDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedFileDetails)
  return false;
#undef DO_
}

void PublishedFileDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedFileDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional uint64 publishedfileid = 2;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->publishedfileid(), output);
  }

  // optional fixed64 creator = 3;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->creator(), output);
  }

  // optional uint32 creator_appid = 4;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->creator_appid(), output);
  }

  // optional uint32 consumer_appid = 5;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->consumer_appid(), output);
  }

  // optional uint32 consumer_shortcutid = 6;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->consumer_shortcutid(), output);
  }

  // optional string filename = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->filename(), output);
  }

  // optional uint64 file_size = 8;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->file_size(), output);
  }

  // optional uint64 preview_file_size = 9;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->preview_file_size(), output);
  }

  // optional string file_url = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_url().data(), static_cast<int>(this->file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->file_url(), output);
  }

  // optional string preview_url = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_url().data(), static_cast<int>(this->preview_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.preview_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->preview_url(), output);
  }

  // optional string youtubevideoid = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtubevideoid().data(), static_cast<int>(this->youtubevideoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.youtubevideoid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->youtubevideoid(), output);
  }

  // optional string url = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->url(), output);
  }

  // optional fixed64 hcontent_file = 14;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(14, this->hcontent_file(), output);
  }

  // optional fixed64 hcontent_preview = 15;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(15, this->hcontent_preview(), output);
  }

  // optional string title = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->title(), output);
  }

  // optional string file_description = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_description().data(), static_cast<int>(this->file_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.file_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->file_description(), output);
  }

  // optional string short_description = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.short_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->short_description(), output);
  }

  // optional uint32 time_created = 19;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->time_created(), output);
  }

  // optional uint32 time_updated = 20;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->time_updated(), output);
  }

  // optional uint32 visibility = 21;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->visibility(), output);
  }

  // optional uint32 flags = 22;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->flags(), output);
  }

  // optional bool workshop_file = 23;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->workshop_file(), output);
  }

  // optional bool workshop_accepted = 24;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->workshop_accepted(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool show_subscribe_all = 25;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->show_subscribe_all(), output);
  }

  // optional int32 num_comments_developer = 26;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->num_comments_developer(), output);
  }

  // optional int32 num_comments_public = 27;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->num_comments_public(), output);
  }

  // optional bool banned = 28;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->banned(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string ban_reason = 29;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ban_reason().data(), static_cast<int>(this->ban_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.ban_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->ban_reason(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional fixed64 banner = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(30, this->banner(), output);
  }

  // optional bool can_be_deleted = 31;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(31, this->can_be_deleted(), output);
  }

  // optional bool incompatible = 32;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->incompatible(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string app_name = 33;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->app_name(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 file_type = 34;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->file_type(), output);
  }

  // optional bool can_subscribe = 35;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(35, this->can_subscribe(), output);
  }

  // optional uint32 subscriptions = 36;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->subscriptions(), output);
  }

  // optional uint32 favorited = 37;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->favorited(), output);
  }

  // optional uint32 followers = 38;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->followers(), output);
  }

  // optional uint32 lifetime_subscriptions = 39;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->lifetime_subscriptions(), output);
  }

  // optional uint32 lifetime_favorited = 40;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->lifetime_favorited(), output);
  }

  // optional uint32 lifetime_followers = 41;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->lifetime_followers(), output);
  }

  // optional uint32 views = 42;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->views(), output);
  }

  // optional uint32 image_width = 43;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->image_width(), output);
  }

  // optional uint32 image_height = 44;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->image_height(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string image_url = 45;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_url().data(), static_cast<int>(this->image_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.image_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->image_url(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool spoiler_tag = 46;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(46, this->spoiler_tag(), output);
  }

  // optional uint32 shortcutid = 47;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->shortcutid(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string shortcutname = 48;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcutname().data(), static_cast<int>(this->shortcutname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.shortcutname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->shortcutname(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 num_children = 49;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->num_children(), output);
  }

  // optional uint32 num_reports = 50;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->num_reports(), output);
  }

  // repeated .PublishedFileDetails.Preview previews = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->previews_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51,
      this->previews(static_cast<int>(i)),
      output);
  }

  // repeated .PublishedFileDetails.Tag tags = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52,
      this->tags(static_cast<int>(i)),
      output);
  }

  // repeated .PublishedFileDetails.Child children = 53;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53,
      this->children(static_cast<int>(i)),
      output);
  }

  // repeated .PublishedFileDetails.KVTag kvtags = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvtags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54,
      this->kvtags(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PublishedFileDetails.VoteData vote_data = 55;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->_internal_vote_data(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 time_subscribed = 56 [(.description) = "Only valid in PublishedFile.GetUserFiles and not normal PublishedFile.GetDetail calls"];
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(56, this->time_subscribed(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PublishedFileDetails.ForSaleData for_sale_data = 57 [(.description) = "Pricing information, if applicable."];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->_internal_for_sale_data(), output);
  }

  // optional string metadata = 58 [(.description) = "Metadata associated with the item"];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      58, this->metadata(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 language = 61 [default = 0, (.description) = "The language of the title and description."];
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->language(), output);
  }

  // optional uint64 lifetime_playtime = 62;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(62, this->lifetime_playtime(), output);
  }

  // optional uint64 lifetime_playtime_sessions = 63;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(63, this->lifetime_playtime_sessions(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PublishedFileDetails.PlaytimeStats playtime_stats = 64;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, this->_internal_playtime_stats(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool maybe_inappropriate_sex = 65;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(65, this->maybe_inappropriate_sex(), output);
  }

  // optional bool maybe_inappropriate_violence = 66;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(66, this->maybe_inappropriate_violence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedFileDetails)
}

::google::protobuf::uint8* PublishedFileDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedFileDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional uint64 publishedfileid = 2;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->publishedfileid(), target);
  }

  // optional fixed64 creator = 3;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->creator(), target);
  }

  // optional uint32 creator_appid = 4;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->creator_appid(), target);
  }

  // optional uint32 consumer_appid = 5;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->consumer_appid(), target);
  }

  // optional uint32 consumer_shortcutid = 6;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->consumer_shortcutid(), target);
  }

  // optional string filename = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->filename(), target);
  }

  // optional uint64 file_size = 8;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->file_size(), target);
  }

  // optional uint64 preview_file_size = 9;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->preview_file_size(), target);
  }

  // optional string file_url = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_url().data(), static_cast<int>(this->file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->file_url(), target);
  }

  // optional string preview_url = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_url().data(), static_cast<int>(this->preview_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.preview_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->preview_url(), target);
  }

  // optional string youtubevideoid = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtubevideoid().data(), static_cast<int>(this->youtubevideoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.youtubevideoid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->youtubevideoid(), target);
  }

  // optional string url = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->url(), target);
  }

  // optional fixed64 hcontent_file = 14;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(14, this->hcontent_file(), target);
  }

  // optional fixed64 hcontent_preview = 15;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(15, this->hcontent_preview(), target);
  }

  // optional string title = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->title(), target);
  }

  // optional string file_description = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_description().data(), static_cast<int>(this->file_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.file_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->file_description(), target);
  }

  // optional string short_description = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.short_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->short_description(), target);
  }

  // optional uint32 time_created = 19;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->time_created(), target);
  }

  // optional uint32 time_updated = 20;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->time_updated(), target);
  }

  // optional uint32 visibility = 21;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->visibility(), target);
  }

  // optional uint32 flags = 22;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->flags(), target);
  }

  // optional bool workshop_file = 23;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->workshop_file(), target);
  }

  // optional bool workshop_accepted = 24;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->workshop_accepted(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool show_subscribe_all = 25;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->show_subscribe_all(), target);
  }

  // optional int32 num_comments_developer = 26;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->num_comments_developer(), target);
  }

  // optional int32 num_comments_public = 27;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->num_comments_public(), target);
  }

  // optional bool banned = 28;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->banned(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string ban_reason = 29;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ban_reason().data(), static_cast<int>(this->ban_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.ban_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->ban_reason(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional fixed64 banner = 30;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(30, this->banner(), target);
  }

  // optional bool can_be_deleted = 31;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(31, this->can_be_deleted(), target);
  }

  // optional bool incompatible = 32;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->incompatible(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string app_name = 33;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->app_name(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 file_type = 34;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->file_type(), target);
  }

  // optional bool can_subscribe = 35;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(35, this->can_subscribe(), target);
  }

  // optional uint32 subscriptions = 36;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->subscriptions(), target);
  }

  // optional uint32 favorited = 37;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->favorited(), target);
  }

  // optional uint32 followers = 38;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->followers(), target);
  }

  // optional uint32 lifetime_subscriptions = 39;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->lifetime_subscriptions(), target);
  }

  // optional uint32 lifetime_favorited = 40;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->lifetime_favorited(), target);
  }

  // optional uint32 lifetime_followers = 41;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->lifetime_followers(), target);
  }

  // optional uint32 views = 42;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->views(), target);
  }

  // optional uint32 image_width = 43;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->image_width(), target);
  }

  // optional uint32 image_height = 44;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->image_height(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string image_url = 45;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_url().data(), static_cast<int>(this->image_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.image_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->image_url(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool spoiler_tag = 46;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(46, this->spoiler_tag(), target);
  }

  // optional uint32 shortcutid = 47;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->shortcutid(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string shortcutname = 48;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcutname().data(), static_cast<int>(this->shortcutname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.shortcutname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->shortcutname(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 num_children = 49;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->num_children(), target);
  }

  // optional uint32 num_reports = 50;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->num_reports(), target);
  }

  // repeated .PublishedFileDetails.Preview previews = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->previews_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->previews(static_cast<int>(i)), deterministic, target);
  }

  // repeated .PublishedFileDetails.Tag tags = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->tags(static_cast<int>(i)), deterministic, target);
  }

  // repeated .PublishedFileDetails.Child children = 53;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->children(static_cast<int>(i)), deterministic, target);
  }

  // repeated .PublishedFileDetails.KVTag kvtags = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvtags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->kvtags(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PublishedFileDetails.VoteData vote_data = 55;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->_internal_vote_data(), deterministic, target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 time_subscribed = 56 [(.description) = "Only valid in PublishedFile.GetUserFiles and not normal PublishedFile.GetDetail calls"];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(56, this->time_subscribed(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PublishedFileDetails.ForSaleData for_sale_data = 57 [(.description) = "Pricing information, if applicable."];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        57, this->_internal_for_sale_data(), deterministic, target);
  }

  // optional string metadata = 58 [(.description) = "Metadata associated with the item"];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PublishedFileDetails.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        58, this->metadata(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 language = 61 [default = 0, (.description) = "The language of the title and description."];
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->language(), target);
  }

  // optional uint64 lifetime_playtime = 62;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(62, this->lifetime_playtime(), target);
  }

  // optional uint64 lifetime_playtime_sessions = 63;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(63, this->lifetime_playtime_sessions(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PublishedFileDetails.PlaytimeStats playtime_stats = 64;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        64, this->_internal_playtime_stats(), deterministic, target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool maybe_inappropriate_sex = 65;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(65, this->maybe_inappropriate_sex(), target);
  }

  // optional bool maybe_inappropriate_violence = 66;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(66, this->maybe_inappropriate_violence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedFileDetails)
  return target;
}

size_t PublishedFileDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedFileDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PublishedFileDetails.Preview previews = 51;
  {
    unsigned int count = static_cast<unsigned int>(this->previews_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->previews(static_cast<int>(i)));
    }
  }

  // repeated .PublishedFileDetails.Tag tags = 52;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  // repeated .PublishedFileDetails.Child children = 53;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  // repeated .PublishedFileDetails.KVTag kvtags = 54;
  {
    unsigned int count = static_cast<unsigned int>(this->kvtags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvtags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 7;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string file_url = 10;
    if (has_file_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_url());
    }

    // optional string preview_url = 11;
    if (has_preview_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_url());
    }

    // optional string youtubevideoid = 12;
    if (has_youtubevideoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtubevideoid());
    }

    // optional string url = 13;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string title = 16;
    if (has_title()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string file_description = 17;
    if (has_file_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_description());
    }

    // optional string short_description = 18;
    if (has_short_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->short_description());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string ban_reason = 29;
    if (has_ban_reason()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ban_reason());
    }

    // optional string app_name = 33;
    if (has_app_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_name());
    }

    // optional string image_url = 45;
    if (has_image_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_url());
    }

    // optional string shortcutname = 48;
    if (has_shortcutname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shortcutname());
    }

    // optional string metadata = 58 [(.description) = "Metadata associated with the item"];
    if (has_metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metadata());
    }

    // optional .PublishedFileDetails.VoteData vote_data = 55;
    if (has_vote_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vote_data_);
    }

    // optional .PublishedFileDetails.ForSaleData for_sale_data = 57 [(.description) = "Pricing information, if applicable."];
    if (has_for_sale_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *for_sale_data_);
    }

    // optional .PublishedFileDetails.PlaytimeStats playtime_stats = 64;
    if (has_playtime_stats()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *playtime_stats_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional uint64 publishedfileid = 2;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional uint32 creator_appid = 4;
    if (has_creator_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_appid());
    }

    // optional fixed64 creator = 3;
    if (has_creator()) {
      total_size += 1 + 8;
    }

    // optional uint32 consumer_appid = 5;
    if (has_consumer_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumer_appid());
    }

    // optional uint32 consumer_shortcutid = 6;
    if (has_consumer_shortcutid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumer_shortcutid());
    }

    // optional uint64 file_size = 8;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->file_size());
    }

    // optional uint64 preview_file_size = 9;
    if (has_preview_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preview_file_size());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional fixed64 hcontent_file = 14;
    if (has_hcontent_file()) {
      total_size += 1 + 8;
    }

    // optional fixed64 hcontent_preview = 15;
    if (has_hcontent_preview()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_created = 19;
    if (has_time_created()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_created());
    }

    // optional uint32 time_updated = 20;
    if (has_time_updated()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional uint32 visibility = 21;
    if (has_visibility()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visibility());
    }

    // optional uint32 flags = 22;
    if (has_flags()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional bool workshop_file = 23;
    if (has_workshop_file()) {
      total_size += 2 + 1;
    }

    // optional bool workshop_accepted = 24;
    if (has_workshop_accepted()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional bool show_subscribe_all = 25;
    if (has_show_subscribe_all()) {
      total_size += 2 + 1;
    }

    // optional bool banned = 28;
    if (has_banned()) {
      total_size += 2 + 1;
    }

    // optional int32 num_comments_developer = 26;
    if (has_num_comments_developer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_comments_developer());
    }

    // optional fixed64 banner = 30;
    if (has_banner()) {
      total_size += 2 + 8;
    }

    // optional int32 num_comments_public = 27;
    if (has_num_comments_public()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_comments_public());
    }

    // optional uint32 file_type = 34;
    if (has_file_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_type());
    }

    // optional uint32 subscriptions = 36;
    if (has_subscriptions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->subscriptions());
    }

    // optional bool can_be_deleted = 31;
    if (has_can_be_deleted()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional bool incompatible = 32;
    if (has_incompatible()) {
      total_size += 2 + 1;
    }

    // optional bool can_subscribe = 35;
    if (has_can_subscribe()) {
      total_size += 2 + 1;
    }

    // optional bool spoiler_tag = 46;
    if (has_spoiler_tag()) {
      total_size += 2 + 1;
    }

    // optional uint32 favorited = 37;
    if (has_favorited()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->favorited());
    }

    // optional uint32 followers = 38;
    if (has_followers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->followers());
    }

    // optional uint32 lifetime_subscriptions = 39;
    if (has_lifetime_subscriptions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lifetime_subscriptions());
    }

    // optional uint32 lifetime_favorited = 40;
    if (has_lifetime_favorited()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lifetime_favorited());
    }

    // optional uint32 lifetime_followers = 41;
    if (has_lifetime_followers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lifetime_followers());
    }

  }
  if (_has_bits_[48 / 32] & 16711680u) {
    // optional uint32 views = 42;
    if (has_views()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->views());
    }

    // optional uint32 image_width = 43;
    if (has_image_width()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->image_width());
    }

    // optional uint32 image_height = 44;
    if (has_image_height()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->image_height());
    }

    // optional uint32 shortcutid = 47;
    if (has_shortcutid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shortcutid());
    }

    // optional uint32 num_children = 49;
    if (has_num_children()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_children());
    }

    // optional uint32 num_reports = 50;
    if (has_num_reports()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_reports());
    }

    // optional uint32 time_subscribed = 56 [(.description) = "Only valid in PublishedFile.GetUserFiles and not normal PublishedFile.GetDetail calls"];
    if (has_time_subscribed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_subscribed());
    }

    // optional uint64 lifetime_playtime = 62;
    if (has_lifetime_playtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lifetime_playtime());
    }

  }
  if (_has_bits_[56 / 32] & 251658240u) {
    // optional uint64 lifetime_playtime_sessions = 63;
    if (has_lifetime_playtime_sessions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lifetime_playtime_sessions());
    }

    // optional int32 language = 61 [default = 0, (.description) = "The language of the title and description."];
    if (has_language()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional bool maybe_inappropriate_sex = 65;
    if (has_maybe_inappropriate_sex()) {
      total_size += 2 + 1;
    }

    // optional bool maybe_inappropriate_violence = 66;
    if (has_maybe_inappropriate_violence()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedFileDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedFileDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedFileDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedFileDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedFileDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedFileDetails)
    MergeFrom(*source);
  }
}

void PublishedFileDetails::MergeFrom(const PublishedFileDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedFileDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  previews_.MergeFrom(from.previews_);
  tags_.MergeFrom(from.tags_);
  children_.MergeFrom(from.children_);
  kvtags_.MergeFrom(from.kvtags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_file_url();
      file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_preview_url();
      preview_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_youtubevideoid();
      youtubevideoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtubevideoid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_file_description();
      file_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_description_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_short_description();
      short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_ban_reason();
      ban_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ban_reason_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_app_name();
      app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_image_url();
      image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_shortcutname();
      shortcutname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcutname_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_vote_data()->::PublishedFileDetails_VoteData::MergeFrom(from.vote_data());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_for_sale_data()->::PublishedFileDetails_ForSaleData::MergeFrom(from.for_sale_data());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_playtime_stats()->::PublishedFileDetails_PlaytimeStats::MergeFrom(from.playtime_stats());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00020000u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00040000u) {
      creator_appid_ = from.creator_appid_;
    }
    if (cached_has_bits & 0x00080000u) {
      creator_ = from.creator_;
    }
    if (cached_has_bits & 0x00100000u) {
      consumer_appid_ = from.consumer_appid_;
    }
    if (cached_has_bits & 0x00200000u) {
      consumer_shortcutid_ = from.consumer_shortcutid_;
    }
    if (cached_has_bits & 0x00400000u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00800000u) {
      preview_file_size_ = from.preview_file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      hcontent_file_ = from.hcontent_file_;
    }
    if (cached_has_bits & 0x02000000u) {
      hcontent_preview_ = from.hcontent_preview_;
    }
    if (cached_has_bits & 0x04000000u) {
      time_created_ = from.time_created_;
    }
    if (cached_has_bits & 0x08000000u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x10000000u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x20000000u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x40000000u) {
      workshop_file_ = from.workshop_file_;
    }
    if (cached_has_bits & 0x80000000u) {
      workshop_accepted_ = from.workshop_accepted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      show_subscribe_all_ = from.show_subscribe_all_;
    }
    if (cached_has_bits & 0x00000002u) {
      banned_ = from.banned_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_comments_developer_ = from.num_comments_developer_;
    }
    if (cached_has_bits & 0x00000008u) {
      banner_ = from.banner_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_comments_public_ = from.num_comments_public_;
    }
    if (cached_has_bits & 0x00000020u) {
      file_type_ = from.file_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      subscriptions_ = from.subscriptions_;
    }
    if (cached_has_bits & 0x00000080u) {
      can_be_deleted_ = from.can_be_deleted_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      incompatible_ = from.incompatible_;
    }
    if (cached_has_bits & 0x00000200u) {
      can_subscribe_ = from.can_subscribe_;
    }
    if (cached_has_bits & 0x00000400u) {
      spoiler_tag_ = from.spoiler_tag_;
    }
    if (cached_has_bits & 0x00000800u) {
      favorited_ = from.favorited_;
    }
    if (cached_has_bits & 0x00001000u) {
      followers_ = from.followers_;
    }
    if (cached_has_bits & 0x00002000u) {
      lifetime_subscriptions_ = from.lifetime_subscriptions_;
    }
    if (cached_has_bits & 0x00004000u) {
      lifetime_favorited_ = from.lifetime_favorited_;
    }
    if (cached_has_bits & 0x00008000u) {
      lifetime_followers_ = from.lifetime_followers_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      views_ = from.views_;
    }
    if (cached_has_bits & 0x00020000u) {
      image_width_ = from.image_width_;
    }
    if (cached_has_bits & 0x00040000u) {
      image_height_ = from.image_height_;
    }
    if (cached_has_bits & 0x00080000u) {
      shortcutid_ = from.shortcutid_;
    }
    if (cached_has_bits & 0x00100000u) {
      num_children_ = from.num_children_;
    }
    if (cached_has_bits & 0x00200000u) {
      num_reports_ = from.num_reports_;
    }
    if (cached_has_bits & 0x00400000u) {
      time_subscribed_ = from.time_subscribed_;
    }
    if (cached_has_bits & 0x00800000u) {
      lifetime_playtime_ = from.lifetime_playtime_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 251658240u) {
    if (cached_has_bits & 0x01000000u) {
      lifetime_playtime_sessions_ = from.lifetime_playtime_sessions_;
    }
    if (cached_has_bits & 0x02000000u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x04000000u) {
      maybe_inappropriate_sex_ = from.maybe_inappropriate_sex_;
    }
    if (cached_has_bits & 0x08000000u) {
      maybe_inappropriate_violence_ = from.maybe_inappropriate_violence_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void PublishedFileDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedFileDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedFileDetails::CopyFrom(const PublishedFileDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedFileDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedFileDetails::IsInitialized() const {
  return true;
}

void PublishedFileDetails::Swap(PublishedFileDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedFileDetails::InternalSwap(PublishedFileDetails* other) {
  using std::swap;
  CastToBase(&previews_)->InternalSwap(CastToBase(&other->previews_));
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  CastToBase(&kvtags_)->InternalSwap(CastToBase(&other->kvtags_));
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_url_.Swap(&other->file_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_url_.Swap(&other->preview_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  youtubevideoid_.Swap(&other->youtubevideoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_description_.Swap(&other->file_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  short_description_.Swap(&other->short_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ban_reason_.Swap(&other->ban_reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_name_.Swap(&other->app_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_url_.Swap(&other->image_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shortcutname_.Swap(&other->shortcutname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(vote_data_, other->vote_data_);
  swap(for_sale_data_, other->for_sale_data_);
  swap(playtime_stats_, other->playtime_stats_);
  swap(publishedfileid_, other->publishedfileid_);
  swap(result_, other->result_);
  swap(creator_appid_, other->creator_appid_);
  swap(creator_, other->creator_);
  swap(consumer_appid_, other->consumer_appid_);
  swap(consumer_shortcutid_, other->consumer_shortcutid_);
  swap(file_size_, other->file_size_);
  swap(preview_file_size_, other->preview_file_size_);
  swap(hcontent_file_, other->hcontent_file_);
  swap(hcontent_preview_, other->hcontent_preview_);
  swap(time_created_, other->time_created_);
  swap(time_updated_, other->time_updated_);
  swap(visibility_, other->visibility_);
  swap(flags_, other->flags_);
  swap(workshop_file_, other->workshop_file_);
  swap(workshop_accepted_, other->workshop_accepted_);
  swap(show_subscribe_all_, other->show_subscribe_all_);
  swap(banned_, other->banned_);
  swap(num_comments_developer_, other->num_comments_developer_);
  swap(banner_, other->banner_);
  swap(num_comments_public_, other->num_comments_public_);
  swap(file_type_, other->file_type_);
  swap(subscriptions_, other->subscriptions_);
  swap(can_be_deleted_, other->can_be_deleted_);
  swap(incompatible_, other->incompatible_);
  swap(can_subscribe_, other->can_subscribe_);
  swap(spoiler_tag_, other->spoiler_tag_);
  swap(favorited_, other->favorited_);
  swap(followers_, other->followers_);
  swap(lifetime_subscriptions_, other->lifetime_subscriptions_);
  swap(lifetime_favorited_, other->lifetime_favorited_);
  swap(lifetime_followers_, other->lifetime_followers_);
  swap(views_, other->views_);
  swap(image_width_, other->image_width_);
  swap(image_height_, other->image_height_);
  swap(shortcutid_, other->shortcutid_);
  swap(num_children_, other->num_children_);
  swap(num_reports_, other->num_reports_);
  swap(time_subscribed_, other->time_subscribed_);
  swap(lifetime_playtime_, other->lifetime_playtime_);
  swap(lifetime_playtime_sessions_, other->lifetime_playtime_sessions_);
  swap(language_, other->language_);
  swap(maybe_inappropriate_sex_, other->maybe_inappropriate_sex_);
  swap(maybe_inappropriate_violence_, other->maybe_inappropriate_violence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedFileDetails::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetDetails_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetDetails_Response::kPublishedfiledetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetDetails_Response::CPublishedFile_GetDetails_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetDetails_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetDetails_Response)
}
CPublishedFile_GetDetails_Response::CPublishedFile_GetDetails_Response(const CPublishedFile_GetDetails_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      publishedfiledetails_(from.publishedfiledetails_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetDetails_Response)
}

void CPublishedFile_GetDetails_Response::SharedCtor() {
}

CPublishedFile_GetDetails_Response::~CPublishedFile_GetDetails_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetDetails_Response)
  SharedDtor();
}

void CPublishedFile_GetDetails_Response::SharedDtor() {
}

void CPublishedFile_GetDetails_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetDetails_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetDetails_Response& CPublishedFile_GetDetails_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetDetails_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_GetDetails_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetDetails_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfiledetails_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetDetails_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetDetails_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PublishedFileDetails publishedfiledetails = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_publishedfiledetails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetDetails_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetDetails_Response)
  return false;
#undef DO_
}

void CPublishedFile_GetDetails_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetDetails_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PublishedFileDetails publishedfiledetails = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->publishedfiledetails_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->publishedfiledetails(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetDetails_Response)
}

::google::protobuf::uint8* CPublishedFile_GetDetails_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetDetails_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PublishedFileDetails publishedfiledetails = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->publishedfiledetails_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->publishedfiledetails(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetDetails_Response)
  return target;
}

size_t CPublishedFile_GetDetails_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetDetails_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PublishedFileDetails publishedfiledetails = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->publishedfiledetails_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->publishedfiledetails(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetDetails_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetDetails_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetDetails_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetDetails_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetDetails_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetDetails_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetDetails_Response::MergeFrom(const CPublishedFile_GetDetails_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetDetails_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publishedfiledetails_.MergeFrom(from.publishedfiledetails_);
}

void CPublishedFile_GetDetails_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetDetails_Response::CopyFrom(const CPublishedFile_GetDetails_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetDetails_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_GetDetails_Response::Swap(CPublishedFile_GetDetails_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetDetails_Response::InternalSwap(CPublishedFile_GetDetails_Response* other) {
  using std::swap;
  CastToBase(&publishedfiledetails_)->InternalSwap(CastToBase(&other->publishedfiledetails_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetDetails_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetItemInfo_Request_WorkshopItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetItemInfo_Request_WorkshopItem::kPublishedFileIdFieldNumber;
const int CPublishedFile_GetItemInfo_Request_WorkshopItem::kTimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetItemInfo_Request_WorkshopItem::CPublishedFile_GetItemInfo_Request_WorkshopItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Request_WorkshopItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetItemInfo_Request.WorkshopItem)
}
CPublishedFile_GetItemInfo_Request_WorkshopItem::CPublishedFile_GetItemInfo_Request_WorkshopItem(const CPublishedFile_GetItemInfo_Request_WorkshopItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetItemInfo_Request.WorkshopItem)
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
}

CPublishedFile_GetItemInfo_Request_WorkshopItem::~CPublishedFile_GetItemInfo_Request_WorkshopItem() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  SharedDtor();
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::SharedDtor() {
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetItemInfo_Request_WorkshopItem::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetItemInfo_Request_WorkshopItem& CPublishedFile_GetItemInfo_Request_WorkshopItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Request_WorkshopItem.base);
  return *internal_default_instance();
}


void CPublishedFile_GetItemInfo_Request_WorkshopItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetItemInfo_Request_WorkshopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  return false;
#undef DO_
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetItemInfo_Request.WorkshopItem)
}

::google::protobuf::uint8* CPublishedFile_GetItemInfo_Request_WorkshopItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  return target;
}

size_t CPublishedFile_GetItemInfo_Request_WorkshopItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetItemInfo_Request_WorkshopItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetItemInfo_Request_WorkshopItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetItemInfo_Request.WorkshopItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetItemInfo_Request.WorkshopItem)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::MergeFrom(const CPublishedFile_GetItemInfo_Request_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::CopyFrom(const CPublishedFile_GetItemInfo_Request_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetItemInfo_Request.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetItemInfo_Request_WorkshopItem::IsInitialized() const {
  return true;
}

void CPublishedFile_GetItemInfo_Request_WorkshopItem::Swap(CPublishedFile_GetItemInfo_Request_WorkshopItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetItemInfo_Request_WorkshopItem::InternalSwap(CPublishedFile_GetItemInfo_Request_WorkshopItem* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(time_updated_, other->time_updated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetItemInfo_Request_WorkshopItem::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetItemInfo_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetItemInfo_Request::kAppIdFieldNumber;
const int CPublishedFile_GetItemInfo_Request::kLastTimeUpdatedFieldNumber;
const int CPublishedFile_GetItemInfo_Request::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetItemInfo_Request::CPublishedFile_GetItemInfo_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetItemInfo_Request)
}
CPublishedFile_GetItemInfo_Request::CPublishedFile_GetItemInfo_Request(const CPublishedFile_GetItemInfo_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_time_updated_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetItemInfo_Request)
}

void CPublishedFile_GetItemInfo_Request::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_time_updated_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
}

CPublishedFile_GetItemInfo_Request::~CPublishedFile_GetItemInfo_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetItemInfo_Request)
  SharedDtor();
}

void CPublishedFile_GetItemInfo_Request::SharedDtor() {
}

void CPublishedFile_GetItemInfo_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetItemInfo_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetItemInfo_Request& CPublishedFile_GetItemInfo_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_GetItemInfo_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetItemInfo_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_time_updated_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetItemInfo_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetItemInfo_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_last_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPublishedFile_GetItemInfo_Request.WorkshopItem workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetItemInfo_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetItemInfo_Request)
  return false;
#undef DO_
}

void CPublishedFile_GetItemInfo_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetItemInfo_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // repeated .CPublishedFile_GetItemInfo_Request.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetItemInfo_Request)
}

::google::protobuf::uint8* CPublishedFile_GetItemInfo_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetItemInfo_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // repeated .CPublishedFile_GetItemInfo_Request.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->workshop_items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetItemInfo_Request)
  return target;
}

size_t CPublishedFile_GetItemInfo_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetItemInfo_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CPublishedFile_GetItemInfo_Request.WorkshopItem workshop_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (has_last_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetItemInfo_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetItemInfo_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetItemInfo_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetItemInfo_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetItemInfo_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetItemInfo_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetItemInfo_Request::MergeFrom(const CPublishedFile_GetItemInfo_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetItemInfo_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetItemInfo_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetItemInfo_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetItemInfo_Request::CopyFrom(const CPublishedFile_GetItemInfo_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetItemInfo_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetItemInfo_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_GetItemInfo_Request::Swap(CPublishedFile_GetItemInfo_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetItemInfo_Request::InternalSwap(CPublishedFile_GetItemInfo_Request* other) {
  using std::swap;
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  swap(app_id_, other->app_id_);
  swap(last_time_updated_, other->last_time_updated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetItemInfo_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::kManifestIdFieldNumber;
const int CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
}
CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo(const CPublishedFile_GetItemInfo_Response_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(flags_));
}

CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::~CPublishedFile_GetItemInfo_Response_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  SharedDtor();
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::SharedDtor() {
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetItemInfo_Response_WorkshopItemInfo& CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Response_WorkshopItemInfo.base);
  return *internal_default_instance();
}


void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_manifest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  return false;
#undef DO_
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  // optional uint32 flags = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
}

::google::protobuf::uint8* CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  // optional uint32 flags = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  return target;
}

size_t CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (has_manifest_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional uint32 flags = 4;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetItemInfo_Response_WorkshopItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetItemInfo_Response_WorkshopItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::MergeFrom(const CPublishedFile_GetItemInfo_Response_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::CopyFrom(const CPublishedFile_GetItemInfo_Response_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetItemInfo_Response.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::Swap(CPublishedFile_GetItemInfo_Response_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::InternalSwap(CPublishedFile_GetItemInfo_Response_WorkshopItemInfo* other) {
  using std::swap;
  swap(published_file_id_, other->published_file_id_);
  swap(manifest_id_, other->manifest_id_);
  swap(time_updated_, other->time_updated_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetItemInfo_Response_WorkshopItemInfo::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetItemInfo_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetItemInfo_Response::kUpdateTimeFieldNumber;
const int CPublishedFile_GetItemInfo_Response::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetItemInfo_Response::CPublishedFile_GetItemInfo_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetItemInfo_Response)
}
CPublishedFile_GetItemInfo_Response::CPublishedFile_GetItemInfo_Response(const CPublishedFile_GetItemInfo_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  update_time_ = from.update_time_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetItemInfo_Response)
}

void CPublishedFile_GetItemInfo_Response::SharedCtor() {
  update_time_ = 0u;
}

CPublishedFile_GetItemInfo_Response::~CPublishedFile_GetItemInfo_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetItemInfo_Response)
  SharedDtor();
}

void CPublishedFile_GetItemInfo_Response::SharedDtor() {
}

void CPublishedFile_GetItemInfo_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetItemInfo_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetItemInfo_Response& CPublishedFile_GetItemInfo_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetItemInfo_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_GetItemInfo_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetItemInfo_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  update_time_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetItemInfo_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetItemInfo_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 update_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPublishedFile_GetItemInfo_Response.WorkshopItemInfo workshop_items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetItemInfo_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetItemInfo_Response)
  return false;
#undef DO_
}

void CPublishedFile_GetItemInfo_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetItemInfo_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 update_time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->update_time(), output);
  }

  // repeated .CPublishedFile_GetItemInfo_Response.WorkshopItemInfo workshop_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetItemInfo_Response)
}

::google::protobuf::uint8* CPublishedFile_GetItemInfo_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetItemInfo_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 update_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->update_time(), target);
  }

  // repeated .CPublishedFile_GetItemInfo_Response.WorkshopItemInfo workshop_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->workshop_items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetItemInfo_Response)
  return target;
}

size_t CPublishedFile_GetItemInfo_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetItemInfo_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CPublishedFile_GetItemInfo_Response.WorkshopItemInfo workshop_items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  // optional uint32 update_time = 1;
  if (has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetItemInfo_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetItemInfo_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetItemInfo_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetItemInfo_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetItemInfo_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetItemInfo_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetItemInfo_Response::MergeFrom(const CPublishedFile_GetItemInfo_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetItemInfo_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  if (from.has_update_time()) {
    set_update_time(from.update_time());
  }
}

void CPublishedFile_GetItemInfo_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetItemInfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetItemInfo_Response::CopyFrom(const CPublishedFile_GetItemInfo_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetItemInfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetItemInfo_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_GetItemInfo_Response::Swap(CPublishedFile_GetItemInfo_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetItemInfo_Response::InternalSwap(CPublishedFile_GetItemInfo_Response* other) {
  using std::swap;
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  swap(update_time_, other->update_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetItemInfo_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetUserFiles_Request_KVTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetUserFiles_Request_KVTag::kKeyFieldNumber;
const int CPublishedFile_GetUserFiles_Request_KVTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetUserFiles_Request_KVTag::CPublishedFile_GetUserFiles_Request_KVTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Request_KVTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetUserFiles_Request.KVTag)
}
CPublishedFile_GetUserFiles_Request_KVTag::CPublishedFile_GetUserFiles_Request_KVTag(const CPublishedFile_GetUserFiles_Request_KVTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetUserFiles_Request.KVTag)
}

void CPublishedFile_GetUserFiles_Request_KVTag::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CPublishedFile_GetUserFiles_Request_KVTag::~CPublishedFile_GetUserFiles_Request_KVTag() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetUserFiles_Request.KVTag)
  SharedDtor();
}

void CPublishedFile_GetUserFiles_Request_KVTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_GetUserFiles_Request_KVTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetUserFiles_Request_KVTag::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetUserFiles_Request_KVTag& CPublishedFile_GetUserFiles_Request_KVTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Request_KVTag.base);
  return *internal_default_instance();
}


void CPublishedFile_GetUserFiles_Request_KVTag::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetUserFiles_Request.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetUserFiles_Request_KVTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetUserFiles_Request.KVTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.KVTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.KVTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetUserFiles_Request.KVTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetUserFiles_Request.KVTag)
  return false;
#undef DO_
}

void CPublishedFile_GetUserFiles_Request_KVTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetUserFiles_Request.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.KVTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.KVTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetUserFiles_Request.KVTag)
}

::google::protobuf::uint8* CPublishedFile_GetUserFiles_Request_KVTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetUserFiles_Request.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.KVTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.KVTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetUserFiles_Request.KVTag)
  return target;
}

size_t CPublishedFile_GetUserFiles_Request_KVTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetUserFiles_Request.KVTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetUserFiles_Request_KVTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetUserFiles_Request.KVTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetUserFiles_Request_KVTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetUserFiles_Request_KVTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetUserFiles_Request.KVTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetUserFiles_Request.KVTag)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetUserFiles_Request_KVTag::MergeFrom(const CPublishedFile_GetUserFiles_Request_KVTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetUserFiles_Request.KVTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CPublishedFile_GetUserFiles_Request_KVTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetUserFiles_Request.KVTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetUserFiles_Request_KVTag::CopyFrom(const CPublishedFile_GetUserFiles_Request_KVTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetUserFiles_Request.KVTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetUserFiles_Request_KVTag::IsInitialized() const {
  return true;
}

void CPublishedFile_GetUserFiles_Request_KVTag::Swap(CPublishedFile_GetUserFiles_Request_KVTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetUserFiles_Request_KVTag::InternalSwap(CPublishedFile_GetUserFiles_Request_KVTag* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetUserFiles_Request_KVTag::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetUserFiles_Request::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed<::std::string> CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetUserFiles_Request::kSteamidFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kAppidFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kPageFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kNumperpageFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kTypeFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kSortmethodFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kPrivacyFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kRequiredtagsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kExcludedtagsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kRequiredKvTagsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kFiletypeFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kCreatorAppidFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kMatchCloudFilenameFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kCacheMaxAgeSecondsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kLanguageFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kTotalonlyFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kIdsOnlyFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnVoteDataFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnTagsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnKvTagsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnPreviewsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnChildrenFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnShortDescriptionFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnForSaleDataFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnMetadataFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kReturnPlaytimeStatsFieldNumber;
const int CPublishedFile_GetUserFiles_Request::kStripDescriptionBbcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetUserFiles_Request::CPublishedFile_GetUserFiles_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetUserFiles_Request)
}
CPublishedFile_GetUserFiles_Request::CPublishedFile_GetUserFiles_Request(const CPublishedFile_GetUserFiles_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      requiredtags_(from.requiredtags_),
      excludedtags_(from.excludedtags_),
      required_kv_tags_(from.required_kv_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get());
  if (from.has_type()) {
    type_.AssignWithDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get(), from.type_);
  }
  sortmethod_.UnsafeSetDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
  if (from.has_sortmethod()) {
    sortmethod_.AssignWithDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(), from.sortmethod_);
  }
  match_cloud_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_match_cloud_filename()) {
    match_cloud_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_cloud_filename_);
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&numperpage_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(numperpage_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetUserFiles_Request)
}

void CPublishedFile_GetUserFiles_Request::SharedCtor() {
  type_.UnsafeSetDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get());
  sortmethod_.UnsafeSetDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
  match_cloud_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_playtime_stats_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(return_playtime_stats_));
  return_vote_data_ = true;
  return_kv_tags_ = true;
  return_short_description_ = true;
  page_ = 1u;
  numperpage_ = 1u;
}

CPublishedFile_GetUserFiles_Request::~CPublishedFile_GetUserFiles_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetUserFiles_Request)
  SharedDtor();
}

void CPublishedFile_GetUserFiles_Request::SharedDtor() {
  type_.DestroyNoArena(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get());
  sortmethod_.DestroyNoArena(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
  match_cloud_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_GetUserFiles_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetUserFiles_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetUserFiles_Request& CPublishedFile_GetUserFiles_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_GetUserFiles_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetUserFiles_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requiredtags_.Clear();
  excludedtags_.Clear();
  required_kv_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      type_.UnsafeMutablePointer()->assign(*&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      sortmethod_.UnsafeMutablePointer()->assign(*&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      match_cloud_filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&creator_appid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(creator_appid_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&totalonly_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&return_metadata_) -
        reinterpret_cast<char*>(&totalonly_)) + sizeof(return_metadata_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&strip_description_bbcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&return_playtime_stats_) -
        reinterpret_cast<char*>(&strip_description_bbcode_)) + sizeof(return_playtime_stats_));
    return_vote_data_ = true;
    return_kv_tags_ = true;
    return_short_description_ = true;
    page_ = 1u;
    numperpage_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetUserFiles_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetUserFiles_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1 [(.description) = "Steam ID of the user whose files are being requested."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2 [(.description) = "App Id of the app that the files were published to."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page = 4 [default = 1, (.description) = "(Optional) Starting page for results."];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_page();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 numperpage = 5 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_numperpage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numperpage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type = 6 [default = "myfiles", (.description) = "(Optional) Type of files to be returned."];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sortmethod = 7 [default = "lastupdated", (.description) = "(Optional) Sorting method to use on returned values."];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sortmethod()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sortmethod().data(), static_cast<int>(this->sortmethod().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.sortmethod");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 privacy = 9 [(.description) = "(optional) Filter by privacy settings."];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_privacy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string requiredtags = 10 [(.description) = "(Optional) Tags that must be present on a published file to satisfy the query."];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_requiredtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requiredtags(this->requiredtags_size() - 1).data(),
            static_cast<int>(this->requiredtags(this->requiredtags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.requiredtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excludedtags = 11 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excludedtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excludedtags(this->excludedtags_size() - 1).data(),
            static_cast<int>(this->excludedtags(this->excludedtags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.excludedtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filetype = 14 [(.description) = "(Optional) File type to match files to."];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_filetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 creator_appid = 15 [(.description) = "App Id of the app that published the files, only matched if specified."];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_creator_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string match_cloud_filename = 16 [(.description) = "Match this cloud filename if specified."];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match_cloud_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->match_cloud_filename().data(), static_cast<int>(this->match_cloud_filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Request.match_cloud_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool totalonly = 17 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_totalonly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &totalonly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ids_only = 18 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_ids_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ids_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_vote_data = 19 [default = true, (.description) = "Return vote data"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_return_vote_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_vote_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_tags = 20 [(.description) = "Return tags in the file details"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_return_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_kv_tags = 21 [default = true, (.description) = "Return key-value tags in the file details"];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_return_kv_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_kv_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_previews = 22 [(.description) = "Return preview image and video details in the file details"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_return_previews();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_previews_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_children = 23 [(.description) = "Return child item ids in the file details"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_return_children();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_children_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_short_description = 24 [default = true, (.description) = "Populate the short_description field instead of file_description"];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_return_short_description();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_short_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_for_sale_data = 26 [(.description) = "Return pricing information, if applicable"];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_return_for_sale_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_for_sale_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cache_max_age_seconds = 27 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_cache_max_age_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_max_age_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_metadata = 28 [default = false, (.description) = "Populate the metadata field"];
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_return_metadata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 29 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPublishedFile_GetUserFiles_Request.KVTag required_kv_tags = 30 [(.description) = "Required key-value tags to match on."];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_required_kv_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 return_playtime_stats = 31 [(.description) = "Return playtime stats for the specified number of days before today."];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_return_playtime_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_playtime_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool strip_description_bbcode = 32 [(.description) = "Strips BBCode from descriptions."];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_strip_description_bbcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &strip_description_bbcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetUserFiles_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetUserFiles_Request)
  return false;
#undef DO_
}

void CPublishedFile_GetUserFiles_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetUserFiles_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1 [(.description) = "Steam ID of the user whose files are being requested."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2 [(.description) = "App Id of the app that the files were published to."];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional uint32 page = 4 [default = 1, (.description) = "(Optional) Starting page for results."];
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->page(), output);
  }

  // optional uint32 numperpage = 5 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->numperpage(), output);
  }

  // optional string type = 6 [default = "myfiles", (.description) = "(Optional) Type of files to be returned."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type(), output);
  }

  // optional string sortmethod = 7 [default = "lastupdated", (.description) = "(Optional) Sorting method to use on returned values."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sortmethod().data(), static_cast<int>(this->sortmethod().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.sortmethod");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sortmethod(), output);
  }

  // optional uint32 privacy = 9 [(.description) = "(optional) Filter by privacy settings."];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->privacy(), output);
  }

  // repeated string requiredtags = 10 [(.description) = "(Optional) Tags that must be present on a published file to satisfy the query."];
  for (int i = 0, n = this->requiredtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requiredtags(i).data(), static_cast<int>(this->requiredtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.requiredtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->requiredtags(i), output);
  }

  // repeated string excludedtags = 11 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  for (int i = 0, n = this->excludedtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excludedtags(i).data(), static_cast<int>(this->excludedtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.excludedtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->excludedtags(i), output);
  }

  // optional uint32 filetype = 14 [(.description) = "(Optional) File type to match files to."];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->filetype(), output);
  }

  // optional uint32 creator_appid = 15 [(.description) = "App Id of the app that published the files, only matched if specified."];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->creator_appid(), output);
  }

  // optional string match_cloud_filename = 16 [(.description) = "Match this cloud filename if specified."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->match_cloud_filename().data(), static_cast<int>(this->match_cloud_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.match_cloud_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->match_cloud_filename(), output);
  }

  // optional bool totalonly = 17 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->totalonly(), output);
  }

  // optional bool ids_only = 18 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->ids_only(), output);
  }

  // optional bool return_vote_data = 19 [default = true, (.description) = "Return vote data"];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->return_vote_data(), output);
  }

  // optional bool return_tags = 20 [(.description) = "Return tags in the file details"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->return_tags(), output);
  }

  // optional bool return_kv_tags = 21 [default = true, (.description) = "Return key-value tags in the file details"];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->return_kv_tags(), output);
  }

  // optional bool return_previews = 22 [(.description) = "Return preview image and video details in the file details"];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->return_previews(), output);
  }

  // optional bool return_children = 23 [(.description) = "Return child item ids in the file details"];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->return_children(), output);
  }

  // optional bool return_short_description = 24 [default = true, (.description) = "Populate the short_description field instead of file_description"];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->return_short_description(), output);
  }

  // optional bool return_for_sale_data = 26 [(.description) = "Return pricing information, if applicable"];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->return_for_sale_data(), output);
  }

  // optional uint32 cache_max_age_seconds = 27 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->cache_max_age_seconds(), output);
  }

  // optional bool return_metadata = 28 [default = false, (.description) = "Populate the metadata field"];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->return_metadata(), output);
  }

  // optional int32 language = 29 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->language(), output);
  }

  // repeated .CPublishedFile_GetUserFiles_Request.KVTag required_kv_tags = 30 [(.description) = "Required key-value tags to match on."];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->required_kv_tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30,
      this->required_kv_tags(static_cast<int>(i)),
      output);
  }

  // optional uint32 return_playtime_stats = 31 [(.description) = "Return playtime stats for the specified number of days before today."];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->return_playtime_stats(), output);
  }

  // optional bool strip_description_bbcode = 32 [(.description) = "Strips BBCode from descriptions."];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->strip_description_bbcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetUserFiles_Request)
}

::google::protobuf::uint8* CPublishedFile_GetUserFiles_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetUserFiles_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1 [(.description) = "Steam ID of the user whose files are being requested."];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2 [(.description) = "App Id of the app that the files were published to."];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional uint32 page = 4 [default = 1, (.description) = "(Optional) Starting page for results."];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->page(), target);
  }

  // optional uint32 numperpage = 5 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->numperpage(), target);
  }

  // optional string type = 6 [default = "myfiles", (.description) = "(Optional) Type of files to be returned."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // optional string sortmethod = 7 [default = "lastupdated", (.description) = "(Optional) Sorting method to use on returned values."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sortmethod().data(), static_cast<int>(this->sortmethod().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.sortmethod");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sortmethod(), target);
  }

  // optional uint32 privacy = 9 [(.description) = "(optional) Filter by privacy settings."];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->privacy(), target);
  }

  // repeated string requiredtags = 10 [(.description) = "(Optional) Tags that must be present on a published file to satisfy the query."];
  for (int i = 0, n = this->requiredtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requiredtags(i).data(), static_cast<int>(this->requiredtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.requiredtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->requiredtags(i), target);
  }

  // repeated string excludedtags = 11 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  for (int i = 0, n = this->excludedtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excludedtags(i).data(), static_cast<int>(this->excludedtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.excludedtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->excludedtags(i), target);
  }

  // optional uint32 filetype = 14 [(.description) = "(Optional) File type to match files to."];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->filetype(), target);
  }

  // optional uint32 creator_appid = 15 [(.description) = "App Id of the app that published the files, only matched if specified."];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->creator_appid(), target);
  }

  // optional string match_cloud_filename = 16 [(.description) = "Match this cloud filename if specified."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->match_cloud_filename().data(), static_cast<int>(this->match_cloud_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Request.match_cloud_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->match_cloud_filename(), target);
  }

  // optional bool totalonly = 17 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->totalonly(), target);
  }

  // optional bool ids_only = 18 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->ids_only(), target);
  }

  // optional bool return_vote_data = 19 [default = true, (.description) = "Return vote data"];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->return_vote_data(), target);
  }

  // optional bool return_tags = 20 [(.description) = "Return tags in the file details"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->return_tags(), target);
  }

  // optional bool return_kv_tags = 21 [default = true, (.description) = "Return key-value tags in the file details"];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->return_kv_tags(), target);
  }

  // optional bool return_previews = 22 [(.description) = "Return preview image and video details in the file details"];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->return_previews(), target);
  }

  // optional bool return_children = 23 [(.description) = "Return child item ids in the file details"];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->return_children(), target);
  }

  // optional bool return_short_description = 24 [default = true, (.description) = "Populate the short_description field instead of file_description"];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->return_short_description(), target);
  }

  // optional bool return_for_sale_data = 26 [(.description) = "Return pricing information, if applicable"];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->return_for_sale_data(), target);
  }

  // optional uint32 cache_max_age_seconds = 27 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->cache_max_age_seconds(), target);
  }

  // optional bool return_metadata = 28 [default = false, (.description) = "Populate the metadata field"];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->return_metadata(), target);
  }

  // optional int32 language = 29 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->language(), target);
  }

  // repeated .CPublishedFile_GetUserFiles_Request.KVTag required_kv_tags = 30 [(.description) = "Required key-value tags to match on."];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->required_kv_tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->required_kv_tags(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 return_playtime_stats = 31 [(.description) = "Return playtime stats for the specified number of days before today."];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->return_playtime_stats(), target);
  }

  // optional bool strip_description_bbcode = 32 [(.description) = "Strips BBCode from descriptions."];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->strip_description_bbcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetUserFiles_Request)
  return target;
}

size_t CPublishedFile_GetUserFiles_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetUserFiles_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string requiredtags = 10 [(.description) = "(Optional) Tags that must be present on a published file to satisfy the query."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->requiredtags_size());
  for (int i = 0, n = this->requiredtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->requiredtags(i));
  }

  // repeated string excludedtags = 11 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excludedtags_size());
  for (int i = 0, n = this->excludedtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excludedtags(i));
  }

  // repeated .CPublishedFile_GetUserFiles_Request.KVTag required_kv_tags = 30 [(.description) = "Required key-value tags to match on."];
  {
    unsigned int count = static_cast<unsigned int>(this->required_kv_tags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->required_kv_tags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string type = 6 [default = "myfiles", (.description) = "(Optional) Type of files to be returned."];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string sortmethod = 7 [default = "lastupdated", (.description) = "(Optional) Sorting method to use on returned values."];
    if (has_sortmethod()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sortmethod());
    }

    // optional string match_cloud_filename = 16 [(.description) = "Match this cloud filename if specified."];
    if (has_match_cloud_filename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->match_cloud_filename());
    }

    // optional fixed64 steamid = 1 [(.description) = "Steam ID of the user whose files are being requested."];
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2 [(.description) = "App Id of the app that the files were published to."];
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 privacy = 9 [(.description) = "(optional) Filter by privacy settings."];
    if (has_privacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->privacy());
    }

    // optional uint32 filetype = 14 [(.description) = "(Optional) File type to match files to."];
    if (has_filetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filetype());
    }

    // optional uint32 creator_appid = 15 [(.description) = "App Id of the app that published the files, only matched if specified."];
    if (has_creator_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_appid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool totalonly = 17 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
    if (has_totalonly()) {
      total_size += 2 + 1;
    }

    // optional bool ids_only = 18 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
    if (has_ids_only()) {
      total_size += 2 + 1;
    }

    // optional bool return_tags = 20 [(.description) = "Return tags in the file details"];
    if (has_return_tags()) {
      total_size += 2 + 1;
    }

    // optional bool return_previews = 22 [(.description) = "Return preview image and video details in the file details"];
    if (has_return_previews()) {
      total_size += 2 + 1;
    }

    // optional uint32 cache_max_age_seconds = 27 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
    if (has_cache_max_age_seconds()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cache_max_age_seconds());
    }

    // optional bool return_children = 23 [(.description) = "Return child item ids in the file details"];
    if (has_return_children()) {
      total_size += 2 + 1;
    }

    // optional bool return_for_sale_data = 26 [(.description) = "Return pricing information, if applicable"];
    if (has_return_for_sale_data()) {
      total_size += 2 + 1;
    }

    // optional bool return_metadata = 28 [default = false, (.description) = "Populate the metadata field"];
    if (has_return_metadata()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional bool strip_description_bbcode = 32 [(.description) = "Strips BBCode from descriptions."];
    if (has_strip_description_bbcode()) {
      total_size += 2 + 1;
    }

    // optional int32 language = 29 [default = 0, (.description) = "Specifies the localized text to return. Defaults to English."];
    if (has_language()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional uint32 return_playtime_stats = 31 [(.description) = "Return playtime stats for the specified number of days before today."];
    if (has_return_playtime_stats()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_playtime_stats());
    }

    // optional bool return_vote_data = 19 [default = true, (.description) = "Return vote data"];
    if (has_return_vote_data()) {
      total_size += 2 + 1;
    }

    // optional bool return_kv_tags = 21 [default = true, (.description) = "Return key-value tags in the file details"];
    if (has_return_kv_tags()) {
      total_size += 2 + 1;
    }

    // optional bool return_short_description = 24 [default = true, (.description) = "Populate the short_description field instead of file_description"];
    if (has_return_short_description()) {
      total_size += 2 + 1;
    }

    // optional uint32 page = 4 [default = 1, (.description) = "(Optional) Starting page for results."];
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page());
    }

    // optional uint32 numperpage = 5 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
    if (has_numperpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->numperpage());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetUserFiles_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetUserFiles_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetUserFiles_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetUserFiles_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetUserFiles_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetUserFiles_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetUserFiles_Request::MergeFrom(const CPublishedFile_GetUserFiles_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetUserFiles_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requiredtags_.MergeFrom(from.requiredtags_);
  excludedtags_.MergeFrom(from.excludedtags_);
  required_kv_tags_.MergeFrom(from.required_kv_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sortmethod();
      sortmethod_.AssignWithDefault(&::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(), from.sortmethod_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_match_cloud_filename();
      match_cloud_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_cloud_filename_);
    }
    if (cached_has_bits & 0x00000008u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000010u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000020u) {
      privacy_ = from.privacy_;
    }
    if (cached_has_bits & 0x00000040u) {
      filetype_ = from.filetype_;
    }
    if (cached_has_bits & 0x00000080u) {
      creator_appid_ = from.creator_appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      totalonly_ = from.totalonly_;
    }
    if (cached_has_bits & 0x00000200u) {
      ids_only_ = from.ids_only_;
    }
    if (cached_has_bits & 0x00000400u) {
      return_tags_ = from.return_tags_;
    }
    if (cached_has_bits & 0x00000800u) {
      return_previews_ = from.return_previews_;
    }
    if (cached_has_bits & 0x00001000u) {
      cache_max_age_seconds_ = from.cache_max_age_seconds_;
    }
    if (cached_has_bits & 0x00002000u) {
      return_children_ = from.return_children_;
    }
    if (cached_has_bits & 0x00004000u) {
      return_for_sale_data_ = from.return_for_sale_data_;
    }
    if (cached_has_bits & 0x00008000u) {
      return_metadata_ = from.return_metadata_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      strip_description_bbcode_ = from.strip_description_bbcode_;
    }
    if (cached_has_bits & 0x00020000u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00040000u) {
      return_playtime_stats_ = from.return_playtime_stats_;
    }
    if (cached_has_bits & 0x00080000u) {
      return_vote_data_ = from.return_vote_data_;
    }
    if (cached_has_bits & 0x00100000u) {
      return_kv_tags_ = from.return_kv_tags_;
    }
    if (cached_has_bits & 0x00200000u) {
      return_short_description_ = from.return_short_description_;
    }
    if (cached_has_bits & 0x00400000u) {
      page_ = from.page_;
    }
    if (cached_has_bits & 0x00800000u) {
      numperpage_ = from.numperpage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetUserFiles_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetUserFiles_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetUserFiles_Request::CopyFrom(const CPublishedFile_GetUserFiles_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetUserFiles_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetUserFiles_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_GetUserFiles_Request::Swap(CPublishedFile_GetUserFiles_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetUserFiles_Request::InternalSwap(CPublishedFile_GetUserFiles_Request* other) {
  using std::swap;
  requiredtags_.InternalSwap(CastToBase(&other->requiredtags_));
  excludedtags_.InternalSwap(CastToBase(&other->excludedtags_));
  CastToBase(&required_kv_tags_)->InternalSwap(CastToBase(&other->required_kv_tags_));
  type_.Swap(&other->type_, &::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_type_.get(),
    GetArenaNoVirtual());
  sortmethod_.Swap(&other->sortmethod_, &::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(),
    GetArenaNoVirtual());
  match_cloud_filename_.Swap(&other->match_cloud_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(privacy_, other->privacy_);
  swap(filetype_, other->filetype_);
  swap(creator_appid_, other->creator_appid_);
  swap(totalonly_, other->totalonly_);
  swap(ids_only_, other->ids_only_);
  swap(return_tags_, other->return_tags_);
  swap(return_previews_, other->return_previews_);
  swap(cache_max_age_seconds_, other->cache_max_age_seconds_);
  swap(return_children_, other->return_children_);
  swap(return_for_sale_data_, other->return_for_sale_data_);
  swap(return_metadata_, other->return_metadata_);
  swap(strip_description_bbcode_, other->strip_description_bbcode_);
  swap(language_, other->language_);
  swap(return_playtime_stats_, other->return_playtime_stats_);
  swap(return_vote_data_, other->return_vote_data_);
  swap(return_kv_tags_, other->return_kv_tags_);
  swap(return_short_description_, other->return_short_description_);
  swap(page_, other->page_);
  swap(numperpage_, other->numperpage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetUserFiles_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetUserFiles_Response_App::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetUserFiles_Response_App::kAppidFieldNumber;
const int CPublishedFile_GetUserFiles_Response_App::kNameFieldNumber;
const int CPublishedFile_GetUserFiles_Response_App::kShortcutidFieldNumber;
const int CPublishedFile_GetUserFiles_Response_App::kPrivateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetUserFiles_Response_App::CPublishedFile_GetUserFiles_Response_App()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Response_App.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetUserFiles_Response.App)
}
CPublishedFile_GetUserFiles_Response_App::CPublishedFile_GetUserFiles_Response_App(const CPublishedFile_GetUserFiles_Response_App& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&private__) -
    reinterpret_cast<char*>(&appid_)) + sizeof(private__));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetUserFiles_Response.App)
}

void CPublishedFile_GetUserFiles_Response_App::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&private__) -
      reinterpret_cast<char*>(&appid_)) + sizeof(private__));
}

CPublishedFile_GetUserFiles_Response_App::~CPublishedFile_GetUserFiles_Response_App() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetUserFiles_Response.App)
  SharedDtor();
}

void CPublishedFile_GetUserFiles_Response_App::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_GetUserFiles_Response_App::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetUserFiles_Response_App::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetUserFiles_Response_App& CPublishedFile_GetUserFiles_Response_App::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Response_App.base);
  return *internal_default_instance();
}


void CPublishedFile_GetUserFiles_Response_App::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetUserFiles_Response.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&private__) -
        reinterpret_cast<char*>(&appid_)) + sizeof(private__));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetUserFiles_Response_App::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetUserFiles_Response.App)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetUserFiles_Response.App.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 shortcutid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_shortcutid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shortcutid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool private = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_private_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &private__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetUserFiles_Response.App)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetUserFiles_Response.App)
  return false;
#undef DO_
}

void CPublishedFile_GetUserFiles_Response_App::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetUserFiles_Response.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Response.App.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 shortcutid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shortcutid(), output);
  }

  // optional bool private = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->private_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetUserFiles_Response.App)
}

::google::protobuf::uint8* CPublishedFile_GetUserFiles_Response_App::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetUserFiles_Response.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetUserFiles_Response.App.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 shortcutid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->shortcutid(), target);
  }

  // optional bool private = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->private_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetUserFiles_Response.App)
  return target;
}

size_t CPublishedFile_GetUserFiles_Response_App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetUserFiles_Response.App)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 shortcutid = 3;
    if (has_shortcutid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shortcutid());
    }

    // optional bool private = 4;
    if (has_private_()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetUserFiles_Response_App::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetUserFiles_Response.App)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetUserFiles_Response_App* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetUserFiles_Response_App>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetUserFiles_Response.App)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetUserFiles_Response.App)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetUserFiles_Response_App::MergeFrom(const CPublishedFile_GetUserFiles_Response_App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetUserFiles_Response.App)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      shortcutid_ = from.shortcutid_;
    }
    if (cached_has_bits & 0x00000008u) {
      private__ = from.private__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetUserFiles_Response_App::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetUserFiles_Response.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetUserFiles_Response_App::CopyFrom(const CPublishedFile_GetUserFiles_Response_App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetUserFiles_Response.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetUserFiles_Response_App::IsInitialized() const {
  return true;
}

void CPublishedFile_GetUserFiles_Response_App::Swap(CPublishedFile_GetUserFiles_Response_App* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetUserFiles_Response_App::InternalSwap(CPublishedFile_GetUserFiles_Response_App* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(shortcutid_, other->shortcutid_);
  swap(private__, other->private__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetUserFiles_Response_App::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetUserFiles_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetUserFiles_Response::kTotalFieldNumber;
const int CPublishedFile_GetUserFiles_Response::kStartindexFieldNumber;
const int CPublishedFile_GetUserFiles_Response::kPublishedfiledetailsFieldNumber;
const int CPublishedFile_GetUserFiles_Response::kAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetUserFiles_Response::CPublishedFile_GetUserFiles_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetUserFiles_Response)
}
CPublishedFile_GetUserFiles_Response::CPublishedFile_GetUserFiles_Response(const CPublishedFile_GetUserFiles_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      publishedfiledetails_(from.publishedfiledetails_),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&startindex_) -
    reinterpret_cast<char*>(&total_)) + sizeof(startindex_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetUserFiles_Response)
}

void CPublishedFile_GetUserFiles_Response::SharedCtor() {
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&startindex_) -
      reinterpret_cast<char*>(&total_)) + sizeof(startindex_));
}

CPublishedFile_GetUserFiles_Response::~CPublishedFile_GetUserFiles_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetUserFiles_Response)
  SharedDtor();
}

void CPublishedFile_GetUserFiles_Response::SharedDtor() {
}

void CPublishedFile_GetUserFiles_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetUserFiles_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetUserFiles_Response& CPublishedFile_GetUserFiles_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetUserFiles_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_GetUserFiles_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetUserFiles_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfiledetails_.Clear();
  apps_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&total_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&startindex_) -
        reinterpret_cast<char*>(&total_)) + sizeof(startindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetUserFiles_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetUserFiles_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 startindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_startindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PublishedFileDetails publishedfiledetails = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_publishedfiledetails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPublishedFile_GetUserFiles_Response.App apps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetUserFiles_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetUserFiles_Response)
  return false;
#undef DO_
}

void CPublishedFile_GetUserFiles_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetUserFiles_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 total = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total(), output);
  }

  // optional uint32 startindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->startindex(), output);
  }

  // repeated .PublishedFileDetails publishedfiledetails = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->publishedfiledetails_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->publishedfiledetails(static_cast<int>(i)),
      output);
  }

  // repeated .CPublishedFile_GetUserFiles_Response.App apps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->apps(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetUserFiles_Response)
}

::google::protobuf::uint8* CPublishedFile_GetUserFiles_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetUserFiles_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 total = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total(), target);
  }

  // optional uint32 startindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->startindex(), target);
  }

  // repeated .PublishedFileDetails publishedfiledetails = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->publishedfiledetails_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->publishedfiledetails(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CPublishedFile_GetUserFiles_Response.App apps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->apps(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetUserFiles_Response)
  return target;
}

size_t CPublishedFile_GetUserFiles_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetUserFiles_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PublishedFileDetails publishedfiledetails = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->publishedfiledetails_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->publishedfiledetails(static_cast<int>(i)));
    }
  }

  // repeated .CPublishedFile_GetUserFiles_Response.App apps = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total = 1;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total());
    }

    // optional uint32 startindex = 2;
    if (has_startindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->startindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetUserFiles_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetUserFiles_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetUserFiles_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetUserFiles_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetUserFiles_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetUserFiles_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetUserFiles_Response::MergeFrom(const CPublishedFile_GetUserFiles_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetUserFiles_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publishedfiledetails_.MergeFrom(from.publishedfiledetails_);
  apps_.MergeFrom(from.apps_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_ = from.total_;
    }
    if (cached_has_bits & 0x00000002u) {
      startindex_ = from.startindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetUserFiles_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetUserFiles_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetUserFiles_Response::CopyFrom(const CPublishedFile_GetUserFiles_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetUserFiles_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetUserFiles_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_GetUserFiles_Response::Swap(CPublishedFile_GetUserFiles_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetUserFiles_Response::InternalSwap(CPublishedFile_GetUserFiles_Response* other) {
  using std::swap;
  CastToBase(&publishedfiledetails_)->InternalSwap(CastToBase(&other->publishedfiledetails_));
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  swap(total_, other->total_);
  swap(startindex_, other->startindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetUserFiles_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Update_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_Update_Request::kAppidFieldNumber;
const int CPublishedFile_Update_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_Update_Request::kTitleFieldNumber;
const int CPublishedFile_Update_Request::kFileDescriptionFieldNumber;
const int CPublishedFile_Update_Request::kVisibilityFieldNumber;
const int CPublishedFile_Update_Request::kTagsFieldNumber;
const int CPublishedFile_Update_Request::kFilenameFieldNumber;
const int CPublishedFile_Update_Request::kPreviewFilenameFieldNumber;
const int CPublishedFile_Update_Request::kImageWidthFieldNumber;
const int CPublishedFile_Update_Request::kImageHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Update_Request::CPublishedFile_Update_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Update_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Update_Request)
}
CPublishedFile_Update_Request::CPublishedFile_Update_Request(const CPublishedFile_Update_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  file_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_description()) {
    file_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_description_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  preview_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_filename()) {
    preview_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_filename_);
  }
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_height_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(image_height_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Update_Request)
}

void CPublishedFile_Update_Request::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_height_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(image_height_));
}

CPublishedFile_Update_Request::~CPublishedFile_Update_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Update_Request)
  SharedDtor();
}

void CPublishedFile_Update_Request::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_Update_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Update_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Update_Request& CPublishedFile_Update_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Update_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_Update_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Update_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      file_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      preview_filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&image_width_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(image_width_));
  }
  image_height_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Update_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Update_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1 [(.description) = "App Id this published file belongs to."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 publishedfileid = 2 [(.description) = "Published file id of the file we\'d like update."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 3 [(.description) = "(Optional) Title of the published file."];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Update_Request.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_description = 4 [(.description) = "(Optional) Description of the published file."];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_description().data(), static_cast<int>(this->file_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Update_Request.file_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 visibility = 5 [(.description) = "(Optional) Visibility of the published file."];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 6 [(.description) = "(Optional) Set of tags for the published file."];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Update_Request.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 7 [(.description) = "(Optional) Filename for the published file."];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Update_Request.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_filename = 8 [(.description) = "(Optional) Preview filename for the published file."];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_filename().data(), static_cast<int>(this->preview_filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_Update_Request.preview_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 image_width = 15 [(.description) = "(Optional) If this is an image file, you can specify the image width."];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_image_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &image_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 image_height = 16 [(.description) = "(Optional) If this is an image file, you can specify the image height."];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_image_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &image_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Update_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Update_Request)
  return false;
#undef DO_
}

void CPublishedFile_Update_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Update_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1 [(.description) = "App Id this published file belongs to."];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional fixed64 publishedfileid = 2 [(.description) = "Published file id of the file we\'d like update."];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->publishedfileid(), output);
  }

  // optional string title = 3 [(.description) = "(Optional) Title of the published file."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string file_description = 4 [(.description) = "(Optional) Description of the published file."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_description().data(), static_cast<int>(this->file_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.file_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file_description(), output);
  }

  // optional uint32 visibility = 5 [(.description) = "(Optional) Visibility of the published file."];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->visibility(), output);
  }

  // repeated string tags = 6 [(.description) = "(Optional) Set of tags for the published file."];
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->tags(i), output);
  }

  // optional string filename = 7 [(.description) = "(Optional) Filename for the published file."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->filename(), output);
  }

  // optional string preview_filename = 8 [(.description) = "(Optional) Preview filename for the published file."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_filename().data(), static_cast<int>(this->preview_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.preview_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->preview_filename(), output);
  }

  // optional uint32 image_width = 15 [(.description) = "(Optional) If this is an image file, you can specify the image width."];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->image_width(), output);
  }

  // optional uint32 image_height = 16 [(.description) = "(Optional) If this is an image file, you can specify the image height."];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->image_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Update_Request)
}

::google::protobuf::uint8* CPublishedFile_Update_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Update_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1 [(.description) = "App Id this published file belongs to."];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional fixed64 publishedfileid = 2 [(.description) = "Published file id of the file we\'d like update."];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->publishedfileid(), target);
  }

  // optional string title = 3 [(.description) = "(Optional) Title of the published file."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string file_description = 4 [(.description) = "(Optional) Description of the published file."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_description().data(), static_cast<int>(this->file_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.file_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_description(), target);
  }

  // optional uint32 visibility = 5 [(.description) = "(Optional) Visibility of the published file."];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->visibility(), target);
  }

  // repeated string tags = 6 [(.description) = "(Optional) Set of tags for the published file."];
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->tags(i), target);
  }

  // optional string filename = 7 [(.description) = "(Optional) Filename for the published file."];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->filename(), target);
  }

  // optional string preview_filename = 8 [(.description) = "(Optional) Preview filename for the published file."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_filename().data(), static_cast<int>(this->preview_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_Update_Request.preview_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->preview_filename(), target);
  }

  // optional uint32 image_width = 15 [(.description) = "(Optional) If this is an image file, you can specify the image width."];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->image_width(), target);
  }

  // optional uint32 image_height = 16 [(.description) = "(Optional) If this is an image file, you can specify the image height."];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->image_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Update_Request)
  return target;
}

size_t CPublishedFile_Update_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Update_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tags = 6 [(.description) = "(Optional) Set of tags for the published file."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string title = 3 [(.description) = "(Optional) Title of the published file."];
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string file_description = 4 [(.description) = "(Optional) Description of the published file."];
    if (has_file_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_description());
    }

    // optional string filename = 7 [(.description) = "(Optional) Filename for the published file."];
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string preview_filename = 8 [(.description) = "(Optional) Preview filename for the published file."];
    if (has_preview_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_filename());
    }

    // optional fixed64 publishedfileid = 2 [(.description) = "Published file id of the file we\'d like update."];
    if (has_publishedfileid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 1 [(.description) = "App Id this published file belongs to."];
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 visibility = 5 [(.description) = "(Optional) Visibility of the published file."];
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->visibility());
    }

    // optional uint32 image_width = 15 [(.description) = "(Optional) If this is an image file, you can specify the image width."];
    if (has_image_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->image_width());
    }

  }
  // optional uint32 image_height = 16 [(.description) = "(Optional) If this is an image file, you can specify the image height."];
  if (has_image_height()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->image_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Update_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Update_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Update_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Update_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Update_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Update_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_Update_Request::MergeFrom(const CPublishedFile_Update_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Update_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_file_description();
      file_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_description_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_preview_filename();
      preview_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_filename_);
    }
    if (cached_has_bits & 0x00000010u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000040u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000080u) {
      image_width_ = from.image_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_image_height(from.image_height());
  }
}

void CPublishedFile_Update_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Update_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Update_Request::CopyFrom(const CPublishedFile_Update_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Update_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Update_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_Update_Request::Swap(CPublishedFile_Update_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Update_Request::InternalSwap(CPublishedFile_Update_Request* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_description_.Swap(&other->file_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_filename_.Swap(&other->preview_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(publishedfileid_, other->publishedfileid_);
  swap(appid_, other->appid_);
  swap(visibility_, other->visibility_);
  swap(image_width_, other->image_width_);
  swap(image_height_, other->image_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Update_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_Update_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_Update_Response::CPublishedFile_Update_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Update_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_Update_Response)
}
CPublishedFile_Update_Response::CPublishedFile_Update_Response(const CPublishedFile_Update_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_Update_Response)
}

void CPublishedFile_Update_Response::SharedCtor() {
}

CPublishedFile_Update_Response::~CPublishedFile_Update_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_Update_Response)
  SharedDtor();
}

void CPublishedFile_Update_Response::SharedDtor() {
}

void CPublishedFile_Update_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_Update_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_Update_Response& CPublishedFile_Update_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_Update_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_Update_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_Update_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_Update_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_Update_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_Update_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_Update_Response)
  return false;
#undef DO_
}

void CPublishedFile_Update_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_Update_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_Update_Response)
}

::google::protobuf::uint8* CPublishedFile_Update_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_Update_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_Update_Response)
  return target;
}

size_t CPublishedFile_Update_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_Update_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_Update_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_Update_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_Update_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_Update_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_Update_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_Update_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_Update_Response::MergeFrom(const CPublishedFile_Update_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_Update_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_Update_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_Update_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_Update_Response::CopyFrom(const CPublishedFile_Update_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_Update_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_Update_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_Update_Response::Swap(CPublishedFile_Update_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_Update_Response::InternalSwap(CPublishedFile_Update_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_Update_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetChangeHistoryEntry_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetChangeHistoryEntry_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_GetChangeHistoryEntry_Request::kTimestampFieldNumber;
const int CPublishedFile_GetChangeHistoryEntry_Request::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetChangeHistoryEntry_Request::CPublishedFile_GetChangeHistoryEntry_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistoryEntry_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetChangeHistoryEntry_Request)
}
CPublishedFile_GetChangeHistoryEntry_Request::CPublishedFile_GetChangeHistoryEntry_Request(const CPublishedFile_GetChangeHistoryEntry_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&language_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(language_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetChangeHistoryEntry_Request)
}

void CPublishedFile_GetChangeHistoryEntry_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(language_));
}

CPublishedFile_GetChangeHistoryEntry_Request::~CPublishedFile_GetChangeHistoryEntry_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetChangeHistoryEntry_Request)
  SharedDtor();
}

void CPublishedFile_GetChangeHistoryEntry_Request::SharedDtor() {
}

void CPublishedFile_GetChangeHistoryEntry_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetChangeHistoryEntry_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetChangeHistoryEntry_Request& CPublishedFile_GetChangeHistoryEntry_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistoryEntry_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_GetChangeHistoryEntry_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetChangeHistoryEntry_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&language_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(language_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetChangeHistoryEntry_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetChangeHistoryEntry_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetChangeHistoryEntry_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetChangeHistoryEntry_Request)
  return false;
#undef DO_
}

void CPublishedFile_GetChangeHistoryEntry_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetChangeHistoryEntry_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->publishedfileid(), output);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  // optional int32 language = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->language(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetChangeHistoryEntry_Request)
}

::google::protobuf::uint8* CPublishedFile_GetChangeHistoryEntry_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetChangeHistoryEntry_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  // optional int32 language = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->language(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetChangeHistoryEntry_Request)
  return target;
}

size_t CPublishedFile_GetChangeHistoryEntry_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetChangeHistoryEntry_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
    if (has_publishedfileid()) {
      total_size += 1 + 8;
    }

    // optional uint32 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional int32 language = 3;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetChangeHistoryEntry_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetChangeHistoryEntry_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetChangeHistoryEntry_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetChangeHistoryEntry_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetChangeHistoryEntry_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetChangeHistoryEntry_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetChangeHistoryEntry_Request::MergeFrom(const CPublishedFile_GetChangeHistoryEntry_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetChangeHistoryEntry_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      language_ = from.language_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetChangeHistoryEntry_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetChangeHistoryEntry_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetChangeHistoryEntry_Request::CopyFrom(const CPublishedFile_GetChangeHistoryEntry_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetChangeHistoryEntry_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetChangeHistoryEntry_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_GetChangeHistoryEntry_Request::Swap(CPublishedFile_GetChangeHistoryEntry_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetChangeHistoryEntry_Request::InternalSwap(CPublishedFile_GetChangeHistoryEntry_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(timestamp_, other->timestamp_);
  swap(language_, other->language_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetChangeHistoryEntry_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetChangeHistoryEntry_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetChangeHistoryEntry_Response::kChangeDescriptionFieldNumber;
const int CPublishedFile_GetChangeHistoryEntry_Response::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetChangeHistoryEntry_Response::CPublishedFile_GetChangeHistoryEntry_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistoryEntry_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetChangeHistoryEntry_Response)
}
CPublishedFile_GetChangeHistoryEntry_Response::CPublishedFile_GetChangeHistoryEntry_Response(const CPublishedFile_GetChangeHistoryEntry_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_change_description()) {
    change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
  }
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetChangeHistoryEntry_Response)
}

void CPublishedFile_GetChangeHistoryEntry_Response::SharedCtor() {
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_ = 0;
}

CPublishedFile_GetChangeHistoryEntry_Response::~CPublishedFile_GetChangeHistoryEntry_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetChangeHistoryEntry_Response)
  SharedDtor();
}

void CPublishedFile_GetChangeHistoryEntry_Response::SharedDtor() {
  change_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_GetChangeHistoryEntry_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetChangeHistoryEntry_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetChangeHistoryEntry_Response& CPublishedFile_GetChangeHistoryEntry_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistoryEntry_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_GetChangeHistoryEntry_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetChangeHistoryEntry_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    change_description_.ClearNonDefaultToEmptyNoArena();
  }
  language_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetChangeHistoryEntry_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetChangeHistoryEntry_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string change_description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_change_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->change_description().data(), static_cast<int>(this->change_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetChangeHistoryEntry_Response.change_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetChangeHistoryEntry_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetChangeHistoryEntry_Response)
  return false;
#undef DO_
}

void CPublishedFile_GetChangeHistoryEntry_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetChangeHistoryEntry_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string change_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetChangeHistoryEntry_Response.change_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->change_description(), output);
  }

  // optional int32 language = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->language(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetChangeHistoryEntry_Response)
}

::google::protobuf::uint8* CPublishedFile_GetChangeHistoryEntry_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetChangeHistoryEntry_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string change_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetChangeHistoryEntry_Response.change_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->change_description(), target);
  }

  // optional int32 language = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->language(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetChangeHistoryEntry_Response)
  return target;
}

size_t CPublishedFile_GetChangeHistoryEntry_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetChangeHistoryEntry_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string change_description = 1;
    if (has_change_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->change_description());
    }

    // optional int32 language = 2;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetChangeHistoryEntry_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetChangeHistoryEntry_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetChangeHistoryEntry_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetChangeHistoryEntry_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetChangeHistoryEntry_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetChangeHistoryEntry_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetChangeHistoryEntry_Response::MergeFrom(const CPublishedFile_GetChangeHistoryEntry_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetChangeHistoryEntry_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_change_description();
      change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      language_ = from.language_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetChangeHistoryEntry_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetChangeHistoryEntry_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetChangeHistoryEntry_Response::CopyFrom(const CPublishedFile_GetChangeHistoryEntry_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetChangeHistoryEntry_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetChangeHistoryEntry_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_GetChangeHistoryEntry_Response::Swap(CPublishedFile_GetChangeHistoryEntry_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetChangeHistoryEntry_Response::InternalSwap(CPublishedFile_GetChangeHistoryEntry_Response* other) {
  using std::swap;
  change_description_.Swap(&other->change_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(language_, other->language_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetChangeHistoryEntry_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetChangeHistory_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetChangeHistory_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_GetChangeHistory_Request::kTotalOnlyFieldNumber;
const int CPublishedFile_GetChangeHistory_Request::kStartindexFieldNumber;
const int CPublishedFile_GetChangeHistory_Request::kCountFieldNumber;
const int CPublishedFile_GetChangeHistory_Request::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetChangeHistory_Request::CPublishedFile_GetChangeHistory_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetChangeHistory_Request)
}
CPublishedFile_GetChangeHistory_Request::CPublishedFile_GetChangeHistory_Request(const CPublishedFile_GetChangeHistory_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&language_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(language_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetChangeHistory_Request)
}

void CPublishedFile_GetChangeHistory_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(language_));
}

CPublishedFile_GetChangeHistory_Request::~CPublishedFile_GetChangeHistory_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetChangeHistory_Request)
  SharedDtor();
}

void CPublishedFile_GetChangeHistory_Request::SharedDtor() {
}

void CPublishedFile_GetChangeHistory_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetChangeHistory_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetChangeHistory_Request& CPublishedFile_GetChangeHistory_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_GetChangeHistory_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetChangeHistory_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&language_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(language_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetChangeHistory_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetChangeHistory_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool total_only = 2 [(.description) = "Return the total number of changes only."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &total_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 startindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_startindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 5 [default = 0, (.description) = "Desired language"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetChangeHistory_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetChangeHistory_Request)
  return false;
#undef DO_
}

void CPublishedFile_GetChangeHistory_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetChangeHistory_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->publishedfileid(), output);
  }

  // optional bool total_only = 2 [(.description) = "Return the total number of changes only."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->total_only(), output);
  }

  // optional uint32 startindex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->startindex(), output);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional int32 language = 5 [default = 0, (.description) = "Desired language"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->language(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetChangeHistory_Request)
}

::google::protobuf::uint8* CPublishedFile_GetChangeHistory_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetChangeHistory_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->publishedfileid(), target);
  }

  // optional bool total_only = 2 [(.description) = "Return the total number of changes only."];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->total_only(), target);
  }

  // optional uint32 startindex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->startindex(), target);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // optional int32 language = 5 [default = 0, (.description) = "Desired language"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->language(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetChangeHistory_Request)
  return target;
}

size_t CPublishedFile_GetChangeHistory_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetChangeHistory_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 publishedfileid = 1 [(.description) = "Published file id of the file we\'d like to get the change history for."];
    if (has_publishedfileid()) {
      total_size += 1 + 8;
    }

    // optional bool total_only = 2 [(.description) = "Return the total number of changes only."];
    if (has_total_only()) {
      total_size += 1 + 1;
    }

    // optional uint32 startindex = 3;
    if (has_startindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->startindex());
    }

    // optional uint32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional int32 language = 5 [default = 0, (.description) = "Desired language"];
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetChangeHistory_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetChangeHistory_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetChangeHistory_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetChangeHistory_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetChangeHistory_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetChangeHistory_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetChangeHistory_Request::MergeFrom(const CPublishedFile_GetChangeHistory_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetChangeHistory_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_only_ = from.total_only_;
    }
    if (cached_has_bits & 0x00000004u) {
      startindex_ = from.startindex_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      language_ = from.language_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetChangeHistory_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetChangeHistory_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetChangeHistory_Request::CopyFrom(const CPublishedFile_GetChangeHistory_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetChangeHistory_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetChangeHistory_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_GetChangeHistory_Request::Swap(CPublishedFile_GetChangeHistory_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetChangeHistory_Request::InternalSwap(CPublishedFile_GetChangeHistory_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(total_only_, other->total_only_);
  swap(startindex_, other->startindex_);
  swap(count_, other->count_);
  swap(language_, other->language_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetChangeHistory_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetChangeHistory_Response_ChangeLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetChangeHistory_Response_ChangeLog::kTimestampFieldNumber;
const int CPublishedFile_GetChangeHistory_Response_ChangeLog::kChangeDescriptionFieldNumber;
const int CPublishedFile_GetChangeHistory_Response_ChangeLog::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetChangeHistory_Response_ChangeLog::CPublishedFile_GetChangeHistory_Response_ChangeLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Response_ChangeLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetChangeHistory_Response.ChangeLog)
}
CPublishedFile_GetChangeHistory_Response_ChangeLog::CPublishedFile_GetChangeHistory_Response_ChangeLog(const CPublishedFile_GetChangeHistory_Response_ChangeLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_change_description()) {
    change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&language_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(language_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetChangeHistory_Response.ChangeLog)
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::SharedCtor() {
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(language_));
}

CPublishedFile_GetChangeHistory_Response_ChangeLog::~CPublishedFile_GetChangeHistory_Response_ChangeLog() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  SharedDtor();
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::SharedDtor() {
  change_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetChangeHistory_Response_ChangeLog::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetChangeHistory_Response_ChangeLog& CPublishedFile_GetChangeHistory_Response_ChangeLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Response_ChangeLog.base);
  return *internal_default_instance();
}


void CPublishedFile_GetChangeHistory_Response_ChangeLog::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    change_description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&language_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(language_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetChangeHistory_Response_ChangeLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string change_description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_change_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->change_description().data(), static_cast<int>(this->change_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_GetChangeHistory_Response.ChangeLog.change_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  return false;
#undef DO_
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // optional string change_description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetChangeHistory_Response.ChangeLog.change_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->change_description(), output);
  }

  // optional int32 language = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->language(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetChangeHistory_Response.ChangeLog)
}

::google::protobuf::uint8* CPublishedFile_GetChangeHistory_Response_ChangeLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // optional string change_description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_GetChangeHistory_Response.ChangeLog.change_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->change_description(), target);
  }

  // optional int32 language = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->language(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  return target;
}

size_t CPublishedFile_GetChangeHistory_Response_ChangeLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string change_description = 2;
    if (has_change_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->change_description());
    }

    // optional uint32 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional int32 language = 3;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetChangeHistory_Response_ChangeLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetChangeHistory_Response_ChangeLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetChangeHistory_Response.ChangeLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetChangeHistory_Response.ChangeLog)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::MergeFrom(const CPublishedFile_GetChangeHistory_Response_ChangeLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_change_description();
      change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      language_ = from.language_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::CopyFrom(const CPublishedFile_GetChangeHistory_Response_ChangeLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetChangeHistory_Response.ChangeLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetChangeHistory_Response_ChangeLog::IsInitialized() const {
  return true;
}

void CPublishedFile_GetChangeHistory_Response_ChangeLog::Swap(CPublishedFile_GetChangeHistory_Response_ChangeLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetChangeHistory_Response_ChangeLog::InternalSwap(CPublishedFile_GetChangeHistory_Response_ChangeLog* other) {
  using std::swap;
  change_description_.Swap(&other->change_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(language_, other->language_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetChangeHistory_Response_ChangeLog::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetChangeHistory_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetChangeHistory_Response::kChangesFieldNumber;
const int CPublishedFile_GetChangeHistory_Response::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetChangeHistory_Response::CPublishedFile_GetChangeHistory_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetChangeHistory_Response)
}
CPublishedFile_GetChangeHistory_Response::CPublishedFile_GetChangeHistory_Response(const CPublishedFile_GetChangeHistory_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      changes_(from.changes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  total_ = from.total_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetChangeHistory_Response)
}

void CPublishedFile_GetChangeHistory_Response::SharedCtor() {
  total_ = 0u;
}

CPublishedFile_GetChangeHistory_Response::~CPublishedFile_GetChangeHistory_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetChangeHistory_Response)
  SharedDtor();
}

void CPublishedFile_GetChangeHistory_Response::SharedDtor() {
}

void CPublishedFile_GetChangeHistory_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetChangeHistory_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetChangeHistory_Response& CPublishedFile_GetChangeHistory_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetChangeHistory_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_GetChangeHistory_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetChangeHistory_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changes_.Clear();
  total_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetChangeHistory_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetChangeHistory_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CPublishedFile_GetChangeHistory_Response.ChangeLog changes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetChangeHistory_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetChangeHistory_Response)
  return false;
#undef DO_
}

void CPublishedFile_GetChangeHistory_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetChangeHistory_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPublishedFile_GetChangeHistory_Response.ChangeLog changes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->changes(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 total = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetChangeHistory_Response)
}

::google::protobuf::uint8* CPublishedFile_GetChangeHistory_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetChangeHistory_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPublishedFile_GetChangeHistory_Response.ChangeLog changes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->changes(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 total = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetChangeHistory_Response)
  return target;
}

size_t CPublishedFile_GetChangeHistory_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetChangeHistory_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CPublishedFile_GetChangeHistory_Response.ChangeLog changes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->changes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->changes(static_cast<int>(i)));
    }
  }

  // optional uint32 total = 2;
  if (has_total()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetChangeHistory_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetChangeHistory_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetChangeHistory_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetChangeHistory_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetChangeHistory_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetChangeHistory_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetChangeHistory_Response::MergeFrom(const CPublishedFile_GetChangeHistory_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetChangeHistory_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changes_.MergeFrom(from.changes_);
  if (from.has_total()) {
    set_total(from.total());
  }
}

void CPublishedFile_GetChangeHistory_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetChangeHistory_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetChangeHistory_Response::CopyFrom(const CPublishedFile_GetChangeHistory_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetChangeHistory_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetChangeHistory_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_GetChangeHistory_Response::Swap(CPublishedFile_GetChangeHistory_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetChangeHistory_Response::InternalSwap(CPublishedFile_GetChangeHistory_Response* other) {
  using std::swap;
  CastToBase(&changes_)->InternalSwap(CastToBase(&other->changes_));
  swap(total_, other->total_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetChangeHistory_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_RefreshVotingQueue_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_RefreshVotingQueue_Request::kAppidFieldNumber;
const int CPublishedFile_RefreshVotingQueue_Request::kMatchingFileTypeFieldNumber;
const int CPublishedFile_RefreshVotingQueue_Request::kTagsFieldNumber;
const int CPublishedFile_RefreshVotingQueue_Request::kMatchAllTagsFieldNumber;
const int CPublishedFile_RefreshVotingQueue_Request::kExcludedTagsFieldNumber;
const int CPublishedFile_RefreshVotingQueue_Request::kDesiredQueueSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_RefreshVotingQueue_Request::CPublishedFile_RefreshVotingQueue_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RefreshVotingQueue_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_RefreshVotingQueue_Request)
}
CPublishedFile_RefreshVotingQueue_Request::CPublishedFile_RefreshVotingQueue_Request(const CPublishedFile_RefreshVotingQueue_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      excluded_tags_(from.excluded_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_all_tags_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(match_all_tags_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_RefreshVotingQueue_Request)
}

void CPublishedFile_RefreshVotingQueue_Request::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desired_queue_size_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(desired_queue_size_));
  match_all_tags_ = true;
}

CPublishedFile_RefreshVotingQueue_Request::~CPublishedFile_RefreshVotingQueue_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_RefreshVotingQueue_Request)
  SharedDtor();
}

void CPublishedFile_RefreshVotingQueue_Request::SharedDtor() {
}

void CPublishedFile_RefreshVotingQueue_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_RefreshVotingQueue_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_RefreshVotingQueue_Request& CPublishedFile_RefreshVotingQueue_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RefreshVotingQueue_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_RefreshVotingQueue_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_RefreshVotingQueue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  excluded_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&desired_queue_size_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(desired_queue_size_));
    match_all_tags_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_RefreshVotingQueue_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_RefreshVotingQueue_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 2 [(.description) = "EPublishedFileInfoMatchingFileType"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_matching_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 3 [(.description) = "Include files that have all the tags or any of the tags if match_all_tags is set to false."];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_RefreshVotingQueue_Request.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool match_all_tags = 4 [default = true, (.description) = "If true, then files must have all the tags specified.  If false, then must have at least one of the tags specified."];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_match_all_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &match_all_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excluded_tags = 5 [(.description) = "Exclude any files that have any of these tags."];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excluded_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excluded_tags(this->excluded_tags_size() - 1).data(),
            static_cast<int>(this->excluded_tags(this->excluded_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_RefreshVotingQueue_Request.excluded_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 desired_queue_size = 6 [(.description) = "Desired number of items in the voting queue.  May be clamped by the server"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_desired_queue_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desired_queue_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_RefreshVotingQueue_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_RefreshVotingQueue_Request)
  return false;
#undef DO_
}

void CPublishedFile_RefreshVotingQueue_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_RefreshVotingQueue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 matching_file_type = 2 [(.description) = "EPublishedFileInfoMatchingFileType"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matching_file_type(), output);
  }

  // repeated string tags = 3 [(.description) = "Include files that have all the tags or any of the tags if match_all_tags is set to false."];
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_RefreshVotingQueue_Request.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tags(i), output);
  }

  // optional bool match_all_tags = 4 [default = true, (.description) = "If true, then files must have all the tags specified.  If false, then must have at least one of the tags specified."];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->match_all_tags(), output);
  }

  // repeated string excluded_tags = 5 [(.description) = "Exclude any files that have any of these tags."];
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), static_cast<int>(this->excluded_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_RefreshVotingQueue_Request.excluded_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->excluded_tags(i), output);
  }

  // optional uint32 desired_queue_size = 6 [(.description) = "Desired number of items in the voting queue.  May be clamped by the server"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->desired_queue_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_RefreshVotingQueue_Request)
}

::google::protobuf::uint8* CPublishedFile_RefreshVotingQueue_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_RefreshVotingQueue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 matching_file_type = 2 [(.description) = "EPublishedFileInfoMatchingFileType"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matching_file_type(), target);
  }

  // repeated string tags = 3 [(.description) = "Include files that have all the tags or any of the tags if match_all_tags is set to false."];
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_RefreshVotingQueue_Request.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->tags(i), target);
  }

  // optional bool match_all_tags = 4 [default = true, (.description) = "If true, then files must have all the tags specified.  If false, then must have at least one of the tags specified."];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->match_all_tags(), target);
  }

  // repeated string excluded_tags = 5 [(.description) = "Exclude any files that have any of these tags."];
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), static_cast<int>(this->excluded_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_RefreshVotingQueue_Request.excluded_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->excluded_tags(i), target);
  }

  // optional uint32 desired_queue_size = 6 [(.description) = "Desired number of items in the voting queue.  May be clamped by the server"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->desired_queue_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_RefreshVotingQueue_Request)
  return target;
}

size_t CPublishedFile_RefreshVotingQueue_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_RefreshVotingQueue_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tags = 3 [(.description) = "Include files that have all the tags or any of the tags if match_all_tags is set to false."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string excluded_tags = 5 [(.description) = "Exclude any files that have any of these tags."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excluded_tags_size());
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excluded_tags(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 matching_file_type = 2 [(.description) = "EPublishedFileInfoMatchingFileType"];
    if (has_matching_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

    // optional uint32 desired_queue_size = 6 [(.description) = "Desired number of items in the voting queue.  May be clamped by the server"];
    if (has_desired_queue_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desired_queue_size());
    }

    // optional bool match_all_tags = 4 [default = true, (.description) = "If true, then files must have all the tags specified.  If false, then must have at least one of the tags specified."];
    if (has_match_all_tags()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_RefreshVotingQueue_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_RefreshVotingQueue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_RefreshVotingQueue_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_RefreshVotingQueue_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_RefreshVotingQueue_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_RefreshVotingQueue_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_RefreshVotingQueue_Request::MergeFrom(const CPublishedFile_RefreshVotingQueue_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_RefreshVotingQueue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  excluded_tags_.MergeFrom(from.excluded_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      matching_file_type_ = from.matching_file_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      desired_queue_size_ = from.desired_queue_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      match_all_tags_ = from.match_all_tags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_RefreshVotingQueue_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_RefreshVotingQueue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_RefreshVotingQueue_Request::CopyFrom(const CPublishedFile_RefreshVotingQueue_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_RefreshVotingQueue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_RefreshVotingQueue_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_RefreshVotingQueue_Request::Swap(CPublishedFile_RefreshVotingQueue_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_RefreshVotingQueue_Request::InternalSwap(CPublishedFile_RefreshVotingQueue_Request* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  excluded_tags_.InternalSwap(CastToBase(&other->excluded_tags_));
  swap(appid_, other->appid_);
  swap(matching_file_type_, other->matching_file_type_);
  swap(desired_queue_size_, other->desired_queue_size_);
  swap(match_all_tags_, other->match_all_tags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_RefreshVotingQueue_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_RefreshVotingQueue_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_RefreshVotingQueue_Response::CPublishedFile_RefreshVotingQueue_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RefreshVotingQueue_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_RefreshVotingQueue_Response)
}
CPublishedFile_RefreshVotingQueue_Response::CPublishedFile_RefreshVotingQueue_Response(const CPublishedFile_RefreshVotingQueue_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_RefreshVotingQueue_Response)
}

void CPublishedFile_RefreshVotingQueue_Response::SharedCtor() {
}

CPublishedFile_RefreshVotingQueue_Response::~CPublishedFile_RefreshVotingQueue_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_RefreshVotingQueue_Response)
  SharedDtor();
}

void CPublishedFile_RefreshVotingQueue_Response::SharedDtor() {
}

void CPublishedFile_RefreshVotingQueue_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_RefreshVotingQueue_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_RefreshVotingQueue_Response& CPublishedFile_RefreshVotingQueue_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RefreshVotingQueue_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_RefreshVotingQueue_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_RefreshVotingQueue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_RefreshVotingQueue_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_RefreshVotingQueue_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_RefreshVotingQueue_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_RefreshVotingQueue_Response)
  return false;
#undef DO_
}

void CPublishedFile_RefreshVotingQueue_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_RefreshVotingQueue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_RefreshVotingQueue_Response)
}

::google::protobuf::uint8* CPublishedFile_RefreshVotingQueue_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_RefreshVotingQueue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_RefreshVotingQueue_Response)
  return target;
}

size_t CPublishedFile_RefreshVotingQueue_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_RefreshVotingQueue_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_RefreshVotingQueue_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_RefreshVotingQueue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_RefreshVotingQueue_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_RefreshVotingQueue_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_RefreshVotingQueue_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_RefreshVotingQueue_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_RefreshVotingQueue_Response::MergeFrom(const CPublishedFile_RefreshVotingQueue_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_RefreshVotingQueue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_RefreshVotingQueue_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_RefreshVotingQueue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_RefreshVotingQueue_Response::CopyFrom(const CPublishedFile_RefreshVotingQueue_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_RefreshVotingQueue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_RefreshVotingQueue_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_RefreshVotingQueue_Response::Swap(CPublishedFile_RefreshVotingQueue_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_RefreshVotingQueue_Response::InternalSwap(CPublishedFile_RefreshVotingQueue_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_RefreshVotingQueue_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_QueryFiles_Request_KVTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_QueryFiles_Request_KVTag::kKeyFieldNumber;
const int CPublishedFile_QueryFiles_Request_KVTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_QueryFiles_Request_KVTag::CPublishedFile_QueryFiles_Request_KVTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Request_KVTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_QueryFiles_Request.KVTag)
}
CPublishedFile_QueryFiles_Request_KVTag::CPublishedFile_QueryFiles_Request_KVTag(const CPublishedFile_QueryFiles_Request_KVTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_QueryFiles_Request.KVTag)
}

void CPublishedFile_QueryFiles_Request_KVTag::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CPublishedFile_QueryFiles_Request_KVTag::~CPublishedFile_QueryFiles_Request_KVTag() {
  // @@protoc_insertion_point(destructor:CPublishedFile_QueryFiles_Request.KVTag)
  SharedDtor();
}

void CPublishedFile_QueryFiles_Request_KVTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_QueryFiles_Request_KVTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_QueryFiles_Request_KVTag::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_QueryFiles_Request_KVTag& CPublishedFile_QueryFiles_Request_KVTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Request_KVTag.base);
  return *internal_default_instance();
}


void CPublishedFile_QueryFiles_Request_KVTag::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_QueryFiles_Request.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_QueryFiles_Request_KVTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_QueryFiles_Request.KVTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.KVTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.KVTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_QueryFiles_Request.KVTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_QueryFiles_Request.KVTag)
  return false;
#undef DO_
}

void CPublishedFile_QueryFiles_Request_KVTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_QueryFiles_Request.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.KVTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.KVTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_QueryFiles_Request.KVTag)
}

::google::protobuf::uint8* CPublishedFile_QueryFiles_Request_KVTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_QueryFiles_Request.KVTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.KVTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.KVTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_QueryFiles_Request.KVTag)
  return target;
}

size_t CPublishedFile_QueryFiles_Request_KVTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_QueryFiles_Request.KVTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_QueryFiles_Request_KVTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_QueryFiles_Request.KVTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_QueryFiles_Request_KVTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_QueryFiles_Request_KVTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_QueryFiles_Request.KVTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_QueryFiles_Request.KVTag)
    MergeFrom(*source);
  }
}

void CPublishedFile_QueryFiles_Request_KVTag::MergeFrom(const CPublishedFile_QueryFiles_Request_KVTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_QueryFiles_Request.KVTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CPublishedFile_QueryFiles_Request_KVTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_QueryFiles_Request.KVTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_QueryFiles_Request_KVTag::CopyFrom(const CPublishedFile_QueryFiles_Request_KVTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_QueryFiles_Request.KVTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_QueryFiles_Request_KVTag::IsInitialized() const {
  return true;
}

void CPublishedFile_QueryFiles_Request_KVTag::Swap(CPublishedFile_QueryFiles_Request_KVTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_QueryFiles_Request_KVTag::InternalSwap(CPublishedFile_QueryFiles_Request_KVTag* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_QueryFiles_Request_KVTag::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_QueryFiles_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_QueryFiles_Request::kQueryTypeFieldNumber;
const int CPublishedFile_QueryFiles_Request::kPageFieldNumber;
const int CPublishedFile_QueryFiles_Request::kCursorFieldNumber;
const int CPublishedFile_QueryFiles_Request::kNumperpageFieldNumber;
const int CPublishedFile_QueryFiles_Request::kCreatorAppidFieldNumber;
const int CPublishedFile_QueryFiles_Request::kAppidFieldNumber;
const int CPublishedFile_QueryFiles_Request::kRequiredtagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kExcludedtagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kMatchAllTagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kRequiredFlagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kOmittedFlagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kSearchTextFieldNumber;
const int CPublishedFile_QueryFiles_Request::kFiletypeFieldNumber;
const int CPublishedFile_QueryFiles_Request::kChildPublishedfileidFieldNumber;
const int CPublishedFile_QueryFiles_Request::kDaysFieldNumber;
const int CPublishedFile_QueryFiles_Request::kIncludeRecentVotesOnlyFieldNumber;
const int CPublishedFile_QueryFiles_Request::kCacheMaxAgeSecondsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kLanguageFieldNumber;
const int CPublishedFile_QueryFiles_Request::kRequiredKvTagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kTotalonlyFieldNumber;
const int CPublishedFile_QueryFiles_Request::kIdsOnlyFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnVoteDataFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnTagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnKvTagsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnPreviewsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnChildrenFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnShortDescriptionFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnForSaleDataFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnMetadataFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnPlaytimeStatsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kReturnDetailsFieldNumber;
const int CPublishedFile_QueryFiles_Request::kStripDescriptionBbcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_QueryFiles_Request::CPublishedFile_QueryFiles_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_QueryFiles_Request)
}
CPublishedFile_QueryFiles_Request::CPublishedFile_QueryFiles_Request(const CPublishedFile_QueryFiles_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      requiredtags_(from.requiredtags_),
      excludedtags_(from.excludedtags_),
      required_flags_(from.required_flags_),
      omitted_flags_(from.omitted_flags_),
      required_kv_tags_(from.required_kv_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_search_text()) {
    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cursor()) {
    cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cursor_);
  }
  ::memcpy(&query_type_, &from.query_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_all_tags_) -
    reinterpret_cast<char*>(&query_type_)) + sizeof(match_all_tags_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_QueryFiles_Request)
}

void CPublishedFile_QueryFiles_Request::SharedCtor() {
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_playtime_stats_) -
      reinterpret_cast<char*>(&query_type_)) + sizeof(return_playtime_stats_));
  numperpage_ = 1u;
  match_all_tags_ = true;
}

CPublishedFile_QueryFiles_Request::~CPublishedFile_QueryFiles_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_QueryFiles_Request)
  SharedDtor();
}

void CPublishedFile_QueryFiles_Request::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_QueryFiles_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_QueryFiles_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_QueryFiles_Request& CPublishedFile_QueryFiles_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_QueryFiles_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_QueryFiles_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requiredtags_.Clear();
  excludedtags_.Clear();
  required_flags_.Clear();
  omitted_flags_.Clear();
  required_kv_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      search_text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      cursor_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&query_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&filetype_) -
        reinterpret_cast<char*>(&query_type_)) + sizeof(filetype_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&days_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ids_only_) -
        reinterpret_cast<char*>(&days_)) + sizeof(ids_only_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&return_vote_data_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&language_) -
        reinterpret_cast<char*>(&return_vote_data_)) + sizeof(language_));
  }
  if (cached_has_bits & 117440512u) {
    return_playtime_stats_ = 0u;
    numperpage_ = 1u;
    match_all_tags_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_QueryFiles_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_QueryFiles_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 query_type = 1 [(.description) = "enumeration EPublishedFileQueryType in clientenums.h"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_query_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page = 2 [(.description) = "Current page"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_page();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 numperpage = 3 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_numperpage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numperpage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 creator_appid = 4 [(.description) = "App that created the files"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_creator_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 5 [(.description) = "App that consumes the files"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string requiredtags = 6 [(.description) = "Tags to match on. See match_all_tags parameter below"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_requiredtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requiredtags(this->requiredtags_size() - 1).data(),
            static_cast<int>(this->requiredtags(this->requiredtags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.requiredtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excludedtags = 7 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excludedtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excludedtags(this->excludedtags_size() - 1).data(),
            static_cast<int>(this->excludedtags(this->excludedtags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.excludedtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool match_all_tags = 8 [default = true, (.description) = "If true, then items must have all the tags specified, otherwise they must have at least one of the tags."];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_match_all_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &match_all_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required_flags = 9 [(.description) = "Required flags that must be set on any returned items"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_flags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_flags(this->required_flags_size() - 1).data(),
            static_cast<int>(this->required_flags(this->required_flags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.required_flags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string omitted_flags = 10 [(.description) = "Flags that must not be set on any returned items"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_omitted_flags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->omitted_flags(this->omitted_flags_size() - 1).data(),
            static_cast<int>(this->omitted_flags(this->omitted_flags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.omitted_flags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string search_text = 11 [(.description) = "Text to match in the item\'s title or description"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->search_text().data(), static_cast<int>(this->search_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.search_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filetype = 12 [(.description) = "EPublishedFileInfoMatchingFileType"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_filetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 child_publishedfileid = 13 [(.description) = "Find all items that reference the given item."];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_child_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &child_publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days = 14 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then this is the number of days to get votes for [1,7]."];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool include_recent_votes_only = 15 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then limit result set just to items that have votes within the day range given"];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_include_recent_votes_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_recent_votes_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool totalonly = 16 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_totalonly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &totalonly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_vote_data = 17 [(.description) = "Return vote data"];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_return_vote_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_vote_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_tags = 18 [(.description) = "Return tags in the file details"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_return_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_kv_tags = 19 [(.description) = "Return key-value tags in the file details"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_return_kv_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_kv_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_previews = 20 [(.description) = "Return preview image and video details in the file details"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_return_previews();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_previews_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_children = 21 [(.description) = "Return child item ids in the file details"];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_return_children();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_children_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_short_description = 22 [(.description) = "Populate the short_description field instead of file_description"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_return_short_description();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_short_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_for_sale_data = 30 [(.description) = "Return pricing information, if applicable"];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_return_for_sale_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_for_sale_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cache_max_age_seconds = 31 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_cache_max_age_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_max_age_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_metadata = 32 [default = false, (.description) = "Populate the metadata"];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_return_metadata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 33 [default = 0, (.description) = "Language to search in and also what gets returned. Defaults to English."];
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPublishedFile_QueryFiles_Request.KVTag required_kv_tags = 34 [(.description) = "Required key-value tags to match on."];
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_required_kv_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ids_only = 35 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_ids_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ids_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 return_playtime_stats = 36 [(.description) = "Return playtime stats for the specified number of days before today."];
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          set_has_return_playtime_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_playtime_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_details = 37 [(.description) = "By default, if none of the other \'return_*\' fields are set, only some voting details are returned. Set this to true to return the default set of details."];
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {
          set_has_return_details();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_details_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool strip_description_bbcode = 38 [(.description) = "Strips BBCode from descriptions."];
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          set_has_strip_description_bbcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &strip_description_bbcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cursor = 39 [(.description) = "Cursor to paginate through the results (set to \'*\' for the first request).  Prefer this over using the page parameter, as it will allow you to do deep pagination.  When used, the page parameter will be ignored."];
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cursor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cursor().data(), static_cast<int>(this->cursor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Request.cursor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_QueryFiles_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_QueryFiles_Request)
  return false;
#undef DO_
}

void CPublishedFile_QueryFiles_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_QueryFiles_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 query_type = 1 [(.description) = "enumeration EPublishedFileQueryType in clientenums.h"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->query_type(), output);
  }

  // optional uint32 page = 2 [(.description) = "Current page"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page(), output);
  }

  // optional uint32 numperpage = 3 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->numperpage(), output);
  }

  // optional uint32 creator_appid = 4 [(.description) = "App that created the files"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->creator_appid(), output);
  }

  // optional uint32 appid = 5 [(.description) = "App that consumes the files"];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->appid(), output);
  }

  // repeated string requiredtags = 6 [(.description) = "Tags to match on. See match_all_tags parameter below"];
  for (int i = 0, n = this->requiredtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requiredtags(i).data(), static_cast<int>(this->requiredtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.requiredtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->requiredtags(i), output);
  }

  // repeated string excludedtags = 7 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  for (int i = 0, n = this->excludedtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excludedtags(i).data(), static_cast<int>(this->excludedtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.excludedtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->excludedtags(i), output);
  }

  // optional bool match_all_tags = 8 [default = true, (.description) = "If true, then items must have all the tags specified, otherwise they must have at least one of the tags."];
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->match_all_tags(), output);
  }

  // repeated string required_flags = 9 [(.description) = "Required flags that must be set on any returned items"];
  for (int i = 0, n = this->required_flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_flags(i).data(), static_cast<int>(this->required_flags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.required_flags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->required_flags(i), output);
  }

  // repeated string omitted_flags = 10 [(.description) = "Flags that must not be set on any returned items"];
  for (int i = 0, n = this->omitted_flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->omitted_flags(i).data(), static_cast<int>(this->omitted_flags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.omitted_flags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->omitted_flags(i), output);
  }

  // optional string search_text = 11 [(.description) = "Text to match in the item\'s title or description"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_text().data(), static_cast<int>(this->search_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->search_text(), output);
  }

  // optional uint32 filetype = 12 [(.description) = "EPublishedFileInfoMatchingFileType"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->filetype(), output);
  }

  // optional fixed64 child_publishedfileid = 13 [(.description) = "Find all items that reference the given item."];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(13, this->child_publishedfileid(), output);
  }

  // optional uint32 days = 14 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then this is the number of days to get votes for [1,7]."];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->days(), output);
  }

  // optional bool include_recent_votes_only = 15 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then limit result set just to items that have votes within the day range given"];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->include_recent_votes_only(), output);
  }

  // optional bool totalonly = 16 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->totalonly(), output);
  }

  // optional bool return_vote_data = 17 [(.description) = "Return vote data"];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->return_vote_data(), output);
  }

  // optional bool return_tags = 18 [(.description) = "Return tags in the file details"];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->return_tags(), output);
  }

  // optional bool return_kv_tags = 19 [(.description) = "Return key-value tags in the file details"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->return_kv_tags(), output);
  }

  // optional bool return_previews = 20 [(.description) = "Return preview image and video details in the file details"];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->return_previews(), output);
  }

  // optional bool return_children = 21 [(.description) = "Return child item ids in the file details"];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->return_children(), output);
  }

  // optional bool return_short_description = 22 [(.description) = "Populate the short_description field instead of file_description"];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->return_short_description(), output);
  }

  // optional bool return_for_sale_data = 30 [(.description) = "Return pricing information, if applicable"];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->return_for_sale_data(), output);
  }

  // optional uint32 cache_max_age_seconds = 31 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->cache_max_age_seconds(), output);
  }

  // optional bool return_metadata = 32 [default = false, (.description) = "Populate the metadata"];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->return_metadata(), output);
  }

  // optional int32 language = 33 [default = 0, (.description) = "Language to search in and also what gets returned. Defaults to English."];
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->language(), output);
  }

  // repeated .CPublishedFile_QueryFiles_Request.KVTag required_kv_tags = 34 [(.description) = "Required key-value tags to match on."];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->required_kv_tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34,
      this->required_kv_tags(static_cast<int>(i)),
      output);
  }

  // optional bool ids_only = 35 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(35, this->ids_only(), output);
  }

  // optional uint32 return_playtime_stats = 36 [(.description) = "Return playtime stats for the specified number of days before today."];
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->return_playtime_stats(), output);
  }

  // optional bool return_details = 37 [(.description) = "By default, if none of the other \'return_*\' fields are set, only some voting details are returned. Set this to true to return the default set of details."];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(37, this->return_details(), output);
  }

  // optional bool strip_description_bbcode = 38 [(.description) = "Strips BBCode from descriptions."];
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(38, this->strip_description_bbcode(), output);
  }

  // optional string cursor = 39 [(.description) = "Cursor to paginate through the results (set to \'*\' for the first request).  Prefer this over using the page parameter, as it will allow you to do deep pagination.  When used, the page parameter will be ignored."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cursor().data(), static_cast<int>(this->cursor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.cursor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      39, this->cursor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_QueryFiles_Request)
}

::google::protobuf::uint8* CPublishedFile_QueryFiles_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_QueryFiles_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 query_type = 1 [(.description) = "enumeration EPublishedFileQueryType in clientenums.h"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->query_type(), target);
  }

  // optional uint32 page = 2 [(.description) = "Current page"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page(), target);
  }

  // optional uint32 numperpage = 3 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->numperpage(), target);
  }

  // optional uint32 creator_appid = 4 [(.description) = "App that created the files"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->creator_appid(), target);
  }

  // optional uint32 appid = 5 [(.description) = "App that consumes the files"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->appid(), target);
  }

  // repeated string requiredtags = 6 [(.description) = "Tags to match on. See match_all_tags parameter below"];
  for (int i = 0, n = this->requiredtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requiredtags(i).data(), static_cast<int>(this->requiredtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.requiredtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->requiredtags(i), target);
  }

  // repeated string excludedtags = 7 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  for (int i = 0, n = this->excludedtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excludedtags(i).data(), static_cast<int>(this->excludedtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.excludedtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->excludedtags(i), target);
  }

  // optional bool match_all_tags = 8 [default = true, (.description) = "If true, then items must have all the tags specified, otherwise they must have at least one of the tags."];
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->match_all_tags(), target);
  }

  // repeated string required_flags = 9 [(.description) = "Required flags that must be set on any returned items"];
  for (int i = 0, n = this->required_flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_flags(i).data(), static_cast<int>(this->required_flags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.required_flags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->required_flags(i), target);
  }

  // repeated string omitted_flags = 10 [(.description) = "Flags that must not be set on any returned items"];
  for (int i = 0, n = this->omitted_flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->omitted_flags(i).data(), static_cast<int>(this->omitted_flags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.omitted_flags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->omitted_flags(i), target);
  }

  // optional string search_text = 11 [(.description) = "Text to match in the item\'s title or description"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_text().data(), static_cast<int>(this->search_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->search_text(), target);
  }

  // optional uint32 filetype = 12 [(.description) = "EPublishedFileInfoMatchingFileType"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->filetype(), target);
  }

  // optional fixed64 child_publishedfileid = 13 [(.description) = "Find all items that reference the given item."];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(13, this->child_publishedfileid(), target);
  }

  // optional uint32 days = 14 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then this is the number of days to get votes for [1,7]."];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->days(), target);
  }

  // optional bool include_recent_votes_only = 15 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then limit result set just to items that have votes within the day range given"];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->include_recent_votes_only(), target);
  }

  // optional bool totalonly = 16 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->totalonly(), target);
  }

  // optional bool return_vote_data = 17 [(.description) = "Return vote data"];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->return_vote_data(), target);
  }

  // optional bool return_tags = 18 [(.description) = "Return tags in the file details"];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->return_tags(), target);
  }

  // optional bool return_kv_tags = 19 [(.description) = "Return key-value tags in the file details"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->return_kv_tags(), target);
  }

  // optional bool return_previews = 20 [(.description) = "Return preview image and video details in the file details"];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->return_previews(), target);
  }

  // optional bool return_children = 21 [(.description) = "Return child item ids in the file details"];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->return_children(), target);
  }

  // optional bool return_short_description = 22 [(.description) = "Populate the short_description field instead of file_description"];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->return_short_description(), target);
  }

  // optional bool return_for_sale_data = 30 [(.description) = "Return pricing information, if applicable"];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->return_for_sale_data(), target);
  }

  // optional uint32 cache_max_age_seconds = 31 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->cache_max_age_seconds(), target);
  }

  // optional bool return_metadata = 32 [default = false, (.description) = "Populate the metadata"];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->return_metadata(), target);
  }

  // optional int32 language = 33 [default = 0, (.description) = "Language to search in and also what gets returned. Defaults to English."];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->language(), target);
  }

  // repeated .CPublishedFile_QueryFiles_Request.KVTag required_kv_tags = 34 [(.description) = "Required key-value tags to match on."];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->required_kv_tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->required_kv_tags(static_cast<int>(i)), deterministic, target);
  }

  // optional bool ids_only = 35 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(35, this->ids_only(), target);
  }

  // optional uint32 return_playtime_stats = 36 [(.description) = "Return playtime stats for the specified number of days before today."];
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->return_playtime_stats(), target);
  }

  // optional bool return_details = 37 [(.description) = "By default, if none of the other \'return_*\' fields are set, only some voting details are returned. Set this to true to return the default set of details."];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(37, this->return_details(), target);
  }

  // optional bool strip_description_bbcode = 38 [(.description) = "Strips BBCode from descriptions."];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(38, this->strip_description_bbcode(), target);
  }

  // optional string cursor = 39 [(.description) = "Cursor to paginate through the results (set to \'*\' for the first request).  Prefer this over using the page parameter, as it will allow you to do deep pagination.  When used, the page parameter will be ignored."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cursor().data(), static_cast<int>(this->cursor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Request.cursor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->cursor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_QueryFiles_Request)
  return target;
}

size_t CPublishedFile_QueryFiles_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_QueryFiles_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string requiredtags = 6 [(.description) = "Tags to match on. See match_all_tags parameter below"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->requiredtags_size());
  for (int i = 0, n = this->requiredtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->requiredtags(i));
  }

  // repeated string excludedtags = 7 [(.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excludedtags_size());
  for (int i = 0, n = this->excludedtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excludedtags(i));
  }

  // repeated string required_flags = 9 [(.description) = "Required flags that must be set on any returned items"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_flags_size());
  for (int i = 0, n = this->required_flags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_flags(i));
  }

  // repeated string omitted_flags = 10 [(.description) = "Flags that must not be set on any returned items"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->omitted_flags_size());
  for (int i = 0, n = this->omitted_flags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->omitted_flags(i));
  }

  // repeated .CPublishedFile_QueryFiles_Request.KVTag required_kv_tags = 34 [(.description) = "Required key-value tags to match on."];
  {
    unsigned int count = static_cast<unsigned int>(this->required_kv_tags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->required_kv_tags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string search_text = 11 [(.description) = "Text to match in the item\'s title or description"];
    if (has_search_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_text());
    }

    // optional string cursor = 39 [(.description) = "Cursor to paginate through the results (set to \'*\' for the first request).  Prefer this over using the page parameter, as it will allow you to do deep pagination.  When used, the page parameter will be ignored."];
    if (has_cursor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cursor());
    }

    // optional uint32 query_type = 1 [(.description) = "enumeration EPublishedFileQueryType in clientenums.h"];
    if (has_query_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_type());
    }

    // optional uint32 page = 2 [(.description) = "Current page"];
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page());
    }

    // optional uint32 creator_appid = 4 [(.description) = "App that created the files"];
    if (has_creator_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_appid());
    }

    // optional uint32 appid = 5 [(.description) = "App that consumes the files"];
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed64 child_publishedfileid = 13 [(.description) = "Find all items that reference the given item."];
    if (has_child_publishedfileid()) {
      total_size += 1 + 8;
    }

    // optional uint32 filetype = 12 [(.description) = "EPublishedFileInfoMatchingFileType"];
    if (has_filetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filetype());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 days = 14 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then this is the number of days to get votes for [1,7]."];
    if (has_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days());
    }

    // optional bool return_tags = 18 [(.description) = "Return tags in the file details"];
    if (has_return_tags()) {
      total_size += 2 + 1;
    }

    // optional bool return_kv_tags = 19 [(.description) = "Return key-value tags in the file details"];
    if (has_return_kv_tags()) {
      total_size += 2 + 1;
    }

    // optional bool return_previews = 20 [(.description) = "Return preview image and video details in the file details"];
    if (has_return_previews()) {
      total_size += 2 + 1;
    }

    // optional bool return_children = 21 [(.description) = "Return child item ids in the file details"];
    if (has_return_children()) {
      total_size += 2 + 1;
    }

    // optional bool include_recent_votes_only = 15 [(.description) = "If query_type is k_PublishedFileQueryType_RankedByTrend, then limit result set just to items that have votes within the day range given"];
    if (has_include_recent_votes_only()) {
      total_size += 1 + 1;
    }

    // optional bool totalonly = 16 [(.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
    if (has_totalonly()) {
      total_size += 2 + 1;
    }

    // optional bool ids_only = 35 [(.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
    if (has_ids_only()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional bool return_vote_data = 17 [(.description) = "Return vote data"];
    if (has_return_vote_data()) {
      total_size += 2 + 1;
    }

    // optional bool return_short_description = 22 [(.description) = "Populate the short_description field instead of file_description"];
    if (has_return_short_description()) {
      total_size += 2 + 1;
    }

    // optional bool return_for_sale_data = 30 [(.description) = "Return pricing information, if applicable"];
    if (has_return_for_sale_data()) {
      total_size += 2 + 1;
    }

    // optional bool return_metadata = 32 [default = false, (.description) = "Populate the metadata"];
    if (has_return_metadata()) {
      total_size += 2 + 1;
    }

    // optional bool return_details = 37 [(.description) = "By default, if none of the other \'return_*\' fields are set, only some voting details are returned. Set this to true to return the default set of details."];
    if (has_return_details()) {
      total_size += 2 + 1;
    }

    // optional uint32 cache_max_age_seconds = 31 [default = 0, (.description) = "Allow stale data to be returned for the specified number of seconds."];
    if (has_cache_max_age_seconds()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cache_max_age_seconds());
    }

    // optional bool strip_description_bbcode = 38 [(.description) = "Strips BBCode from descriptions."];
    if (has_strip_description_bbcode()) {
      total_size += 2 + 1;
    }

    // optional int32 language = 33 [default = 0, (.description) = "Language to search in and also what gets returned. Defaults to English."];
    if (has_language()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

  }
  if (_has_bits_[24 / 32] & 117440512u) {
    // optional uint32 return_playtime_stats = 36 [(.description) = "Return playtime stats for the specified number of days before today."];
    if (has_return_playtime_stats()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_playtime_stats());
    }

    // optional uint32 numperpage = 3 [default = 1, (.description) = "(Optional) The number of results, per page to return."];
    if (has_numperpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->numperpage());
    }

    // optional bool match_all_tags = 8 [default = true, (.description) = "If true, then items must have all the tags specified, otherwise they must have at least one of the tags."];
    if (has_match_all_tags()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_QueryFiles_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_QueryFiles_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_QueryFiles_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_QueryFiles_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_QueryFiles_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_QueryFiles_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_QueryFiles_Request::MergeFrom(const CPublishedFile_QueryFiles_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_QueryFiles_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requiredtags_.MergeFrom(from.requiredtags_);
  excludedtags_.MergeFrom(from.excludedtags_);
  required_flags_.MergeFrom(from.required_flags_);
  omitted_flags_.MergeFrom(from.omitted_flags_);
  required_kv_tags_.MergeFrom(from.required_kv_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_search_text();
      search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cursor();
      cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cursor_);
    }
    if (cached_has_bits & 0x00000004u) {
      query_type_ = from.query_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      page_ = from.page_;
    }
    if (cached_has_bits & 0x00000010u) {
      creator_appid_ = from.creator_appid_;
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000040u) {
      child_publishedfileid_ = from.child_publishedfileid_;
    }
    if (cached_has_bits & 0x00000080u) {
      filetype_ = from.filetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      days_ = from.days_;
    }
    if (cached_has_bits & 0x00000200u) {
      return_tags_ = from.return_tags_;
    }
    if (cached_has_bits & 0x00000400u) {
      return_kv_tags_ = from.return_kv_tags_;
    }
    if (cached_has_bits & 0x00000800u) {
      return_previews_ = from.return_previews_;
    }
    if (cached_has_bits & 0x00001000u) {
      return_children_ = from.return_children_;
    }
    if (cached_has_bits & 0x00002000u) {
      include_recent_votes_only_ = from.include_recent_votes_only_;
    }
    if (cached_has_bits & 0x00004000u) {
      totalonly_ = from.totalonly_;
    }
    if (cached_has_bits & 0x00008000u) {
      ids_only_ = from.ids_only_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      return_vote_data_ = from.return_vote_data_;
    }
    if (cached_has_bits & 0x00020000u) {
      return_short_description_ = from.return_short_description_;
    }
    if (cached_has_bits & 0x00040000u) {
      return_for_sale_data_ = from.return_for_sale_data_;
    }
    if (cached_has_bits & 0x00080000u) {
      return_metadata_ = from.return_metadata_;
    }
    if (cached_has_bits & 0x00100000u) {
      return_details_ = from.return_details_;
    }
    if (cached_has_bits & 0x00200000u) {
      cache_max_age_seconds_ = from.cache_max_age_seconds_;
    }
    if (cached_has_bits & 0x00400000u) {
      strip_description_bbcode_ = from.strip_description_bbcode_;
    }
    if (cached_has_bits & 0x00800000u) {
      language_ = from.language_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 117440512u) {
    if (cached_has_bits & 0x01000000u) {
      return_playtime_stats_ = from.return_playtime_stats_;
    }
    if (cached_has_bits & 0x02000000u) {
      numperpage_ = from.numperpage_;
    }
    if (cached_has_bits & 0x04000000u) {
      match_all_tags_ = from.match_all_tags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_QueryFiles_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_QueryFiles_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_QueryFiles_Request::CopyFrom(const CPublishedFile_QueryFiles_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_QueryFiles_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_QueryFiles_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_QueryFiles_Request::Swap(CPublishedFile_QueryFiles_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_QueryFiles_Request::InternalSwap(CPublishedFile_QueryFiles_Request* other) {
  using std::swap;
  requiredtags_.InternalSwap(CastToBase(&other->requiredtags_));
  excludedtags_.InternalSwap(CastToBase(&other->excludedtags_));
  required_flags_.InternalSwap(CastToBase(&other->required_flags_));
  omitted_flags_.InternalSwap(CastToBase(&other->omitted_flags_));
  CastToBase(&required_kv_tags_)->InternalSwap(CastToBase(&other->required_kv_tags_));
  search_text_.Swap(&other->search_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cursor_.Swap(&other->cursor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_type_, other->query_type_);
  swap(page_, other->page_);
  swap(creator_appid_, other->creator_appid_);
  swap(appid_, other->appid_);
  swap(child_publishedfileid_, other->child_publishedfileid_);
  swap(filetype_, other->filetype_);
  swap(days_, other->days_);
  swap(return_tags_, other->return_tags_);
  swap(return_kv_tags_, other->return_kv_tags_);
  swap(return_previews_, other->return_previews_);
  swap(return_children_, other->return_children_);
  swap(include_recent_votes_only_, other->include_recent_votes_only_);
  swap(totalonly_, other->totalonly_);
  swap(ids_only_, other->ids_only_);
  swap(return_vote_data_, other->return_vote_data_);
  swap(return_short_description_, other->return_short_description_);
  swap(return_for_sale_data_, other->return_for_sale_data_);
  swap(return_metadata_, other->return_metadata_);
  swap(return_details_, other->return_details_);
  swap(cache_max_age_seconds_, other->cache_max_age_seconds_);
  swap(strip_description_bbcode_, other->strip_description_bbcode_);
  swap(language_, other->language_);
  swap(return_playtime_stats_, other->return_playtime_stats_);
  swap(numperpage_, other->numperpage_);
  swap(match_all_tags_, other->match_all_tags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_QueryFiles_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_QueryFiles_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_QueryFiles_Response::kTotalFieldNumber;
const int CPublishedFile_QueryFiles_Response::kPublishedfiledetailsFieldNumber;
const int CPublishedFile_QueryFiles_Response::kNextCursorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_QueryFiles_Response::CPublishedFile_QueryFiles_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_QueryFiles_Response)
}
CPublishedFile_QueryFiles_Response::CPublishedFile_QueryFiles_Response(const CPublishedFile_QueryFiles_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      publishedfiledetails_(from.publishedfiledetails_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next_cursor()) {
    next_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_cursor_);
  }
  total_ = from.total_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_QueryFiles_Response)
}

void CPublishedFile_QueryFiles_Response::SharedCtor() {
  next_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_ = 0u;
}

CPublishedFile_QueryFiles_Response::~CPublishedFile_QueryFiles_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_QueryFiles_Response)
  SharedDtor();
}

void CPublishedFile_QueryFiles_Response::SharedDtor() {
  next_cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPublishedFile_QueryFiles_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_QueryFiles_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_QueryFiles_Response& CPublishedFile_QueryFiles_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_QueryFiles_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_QueryFiles_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_QueryFiles_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfiledetails_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    next_cursor_.ClearNonDefaultToEmptyNoArena();
  }
  total_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_QueryFiles_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_QueryFiles_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total = 1 [(.description) = "Number of matches found, not necessarily number of items returned"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PublishedFileDetails publishedfiledetails = 2 [(.description) = "Each file details will be populated, depending on what return values were requested."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_publishedfiledetails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string next_cursor = 3 [(.description) = "If a paging cursor was used, then this will be the next cursor to use for paging through results"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_cursor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->next_cursor().data(), static_cast<int>(this->next_cursor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPublishedFile_QueryFiles_Response.next_cursor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_QueryFiles_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_QueryFiles_Response)
  return false;
#undef DO_
}

void CPublishedFile_QueryFiles_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_QueryFiles_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 total = 1 [(.description) = "Number of matches found, not necessarily number of items returned"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total(), output);
  }

  // repeated .PublishedFileDetails publishedfiledetails = 2 [(.description) = "Each file details will be populated, depending on what return values were requested."];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->publishedfiledetails_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->publishedfiledetails(static_cast<int>(i)),
      output);
  }

  // optional string next_cursor = 3 [(.description) = "If a paging cursor was used, then this will be the next cursor to use for paging through results"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->next_cursor().data(), static_cast<int>(this->next_cursor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Response.next_cursor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->next_cursor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_QueryFiles_Response)
}

::google::protobuf::uint8* CPublishedFile_QueryFiles_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_QueryFiles_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 total = 1 [(.description) = "Number of matches found, not necessarily number of items returned"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total(), target);
  }

  // repeated .PublishedFileDetails publishedfiledetails = 2 [(.description) = "Each file details will be populated, depending on what return values were requested."];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->publishedfiledetails_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->publishedfiledetails(static_cast<int>(i)), deterministic, target);
  }

  // optional string next_cursor = 3 [(.description) = "If a paging cursor was used, then this will be the next cursor to use for paging through results"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->next_cursor().data(), static_cast<int>(this->next_cursor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPublishedFile_QueryFiles_Response.next_cursor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->next_cursor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_QueryFiles_Response)
  return target;
}

size_t CPublishedFile_QueryFiles_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_QueryFiles_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PublishedFileDetails publishedfiledetails = 2 [(.description) = "Each file details will be populated, depending on what return values were requested."];
  {
    unsigned int count = static_cast<unsigned int>(this->publishedfiledetails_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->publishedfiledetails(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string next_cursor = 3 [(.description) = "If a paging cursor was used, then this will be the next cursor to use for paging through results"];
    if (has_next_cursor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->next_cursor());
    }

    // optional uint32 total = 1 [(.description) = "Number of matches found, not necessarily number of items returned"];
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_QueryFiles_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_QueryFiles_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_QueryFiles_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_QueryFiles_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_QueryFiles_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_QueryFiles_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_QueryFiles_Response::MergeFrom(const CPublishedFile_QueryFiles_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_QueryFiles_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publishedfiledetails_.MergeFrom(from.publishedfiledetails_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_next_cursor();
      next_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_cursor_);
    }
    if (cached_has_bits & 0x00000002u) {
      total_ = from.total_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_QueryFiles_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_QueryFiles_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_QueryFiles_Response::CopyFrom(const CPublishedFile_QueryFiles_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_QueryFiles_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_QueryFiles_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_QueryFiles_Response::Swap(CPublishedFile_QueryFiles_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_QueryFiles_Response::InternalSwap(CPublishedFile_QueryFiles_Response* other) {
  using std::swap;
  CastToBase(&publishedfiledetails_)->InternalSwap(CastToBase(&other->publishedfiledetails_));
  next_cursor_.Swap(&other->next_cursor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_, other->total_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_QueryFiles_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_AddAppRelationship_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_AddAppRelationship_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_AddAppRelationship_Request::kAppidFieldNumber;
const int CPublishedFile_AddAppRelationship_Request::kRelationshipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_AddAppRelationship_Request::CPublishedFile_AddAppRelationship_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddAppRelationship_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_AddAppRelationship_Request)
}
CPublishedFile_AddAppRelationship_Request::CPublishedFile_AddAppRelationship_Request(const CPublishedFile_AddAppRelationship_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&relationship_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(relationship_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_AddAppRelationship_Request)
}

void CPublishedFile_AddAppRelationship_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationship_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(relationship_));
}

CPublishedFile_AddAppRelationship_Request::~CPublishedFile_AddAppRelationship_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_AddAppRelationship_Request)
  SharedDtor();
}

void CPublishedFile_AddAppRelationship_Request::SharedDtor() {
}

void CPublishedFile_AddAppRelationship_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_AddAppRelationship_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_AddAppRelationship_Request& CPublishedFile_AddAppRelationship_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddAppRelationship_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_AddAppRelationship_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_AddAppRelationship_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&relationship_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(relationship_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_AddAppRelationship_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_AddAppRelationship_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 relationship = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_relationship();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relationship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_AddAppRelationship_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_AddAppRelationship_Request)
  return false;
#undef DO_
}

void CPublishedFile_AddAppRelationship_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_AddAppRelationship_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional uint32 relationship = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->relationship(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_AddAppRelationship_Request)
}

::google::protobuf::uint8* CPublishedFile_AddAppRelationship_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_AddAppRelationship_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional uint32 relationship = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->relationship(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_AddAppRelationship_Request)
  return target;
}

size_t CPublishedFile_AddAppRelationship_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_AddAppRelationship_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 relationship = 3;
    if (has_relationship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->relationship());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_AddAppRelationship_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_AddAppRelationship_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_AddAppRelationship_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_AddAppRelationship_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_AddAppRelationship_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_AddAppRelationship_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_AddAppRelationship_Request::MergeFrom(const CPublishedFile_AddAppRelationship_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_AddAppRelationship_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      relationship_ = from.relationship_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_AddAppRelationship_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_AddAppRelationship_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_AddAppRelationship_Request::CopyFrom(const CPublishedFile_AddAppRelationship_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_AddAppRelationship_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_AddAppRelationship_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_AddAppRelationship_Request::Swap(CPublishedFile_AddAppRelationship_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_AddAppRelationship_Request::InternalSwap(CPublishedFile_AddAppRelationship_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(appid_, other->appid_);
  swap(relationship_, other->relationship_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_AddAppRelationship_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_AddAppRelationship_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_AddAppRelationship_Response::CPublishedFile_AddAppRelationship_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddAppRelationship_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_AddAppRelationship_Response)
}
CPublishedFile_AddAppRelationship_Response::CPublishedFile_AddAppRelationship_Response(const CPublishedFile_AddAppRelationship_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_AddAppRelationship_Response)
}

void CPublishedFile_AddAppRelationship_Response::SharedCtor() {
}

CPublishedFile_AddAppRelationship_Response::~CPublishedFile_AddAppRelationship_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_AddAppRelationship_Response)
  SharedDtor();
}

void CPublishedFile_AddAppRelationship_Response::SharedDtor() {
}

void CPublishedFile_AddAppRelationship_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_AddAppRelationship_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_AddAppRelationship_Response& CPublishedFile_AddAppRelationship_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddAppRelationship_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_AddAppRelationship_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_AddAppRelationship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_AddAppRelationship_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_AddAppRelationship_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_AddAppRelationship_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_AddAppRelationship_Response)
  return false;
#undef DO_
}

void CPublishedFile_AddAppRelationship_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_AddAppRelationship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_AddAppRelationship_Response)
}

::google::protobuf::uint8* CPublishedFile_AddAppRelationship_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_AddAppRelationship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_AddAppRelationship_Response)
  return target;
}

size_t CPublishedFile_AddAppRelationship_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_AddAppRelationship_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_AddAppRelationship_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_AddAppRelationship_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_AddAppRelationship_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_AddAppRelationship_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_AddAppRelationship_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_AddAppRelationship_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_AddAppRelationship_Response::MergeFrom(const CPublishedFile_AddAppRelationship_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_AddAppRelationship_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_AddAppRelationship_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_AddAppRelationship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_AddAppRelationship_Response::CopyFrom(const CPublishedFile_AddAppRelationship_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_AddAppRelationship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_AddAppRelationship_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_AddAppRelationship_Response::Swap(CPublishedFile_AddAppRelationship_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_AddAppRelationship_Response::InternalSwap(CPublishedFile_AddAppRelationship_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_AddAppRelationship_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_RemoveAppRelationship_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_RemoveAppRelationship_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_RemoveAppRelationship_Request::kAppidFieldNumber;
const int CPublishedFile_RemoveAppRelationship_Request::kRelationshipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_RemoveAppRelationship_Request::CPublishedFile_RemoveAppRelationship_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveAppRelationship_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_RemoveAppRelationship_Request)
}
CPublishedFile_RemoveAppRelationship_Request::CPublishedFile_RemoveAppRelationship_Request(const CPublishedFile_RemoveAppRelationship_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&relationship_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(relationship_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_RemoveAppRelationship_Request)
}

void CPublishedFile_RemoveAppRelationship_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationship_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(relationship_));
}

CPublishedFile_RemoveAppRelationship_Request::~CPublishedFile_RemoveAppRelationship_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_RemoveAppRelationship_Request)
  SharedDtor();
}

void CPublishedFile_RemoveAppRelationship_Request::SharedDtor() {
}

void CPublishedFile_RemoveAppRelationship_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_RemoveAppRelationship_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_RemoveAppRelationship_Request& CPublishedFile_RemoveAppRelationship_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveAppRelationship_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_RemoveAppRelationship_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_RemoveAppRelationship_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&relationship_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(relationship_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_RemoveAppRelationship_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_RemoveAppRelationship_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 relationship = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_relationship();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relationship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_RemoveAppRelationship_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_RemoveAppRelationship_Request)
  return false;
#undef DO_
}

void CPublishedFile_RemoveAppRelationship_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_RemoveAppRelationship_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional uint32 relationship = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->relationship(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_RemoveAppRelationship_Request)
}

::google::protobuf::uint8* CPublishedFile_RemoveAppRelationship_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_RemoveAppRelationship_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional uint32 relationship = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->relationship(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_RemoveAppRelationship_Request)
  return target;
}

size_t CPublishedFile_RemoveAppRelationship_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_RemoveAppRelationship_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 relationship = 3;
    if (has_relationship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->relationship());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_RemoveAppRelationship_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_RemoveAppRelationship_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_RemoveAppRelationship_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_RemoveAppRelationship_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_RemoveAppRelationship_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_RemoveAppRelationship_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_RemoveAppRelationship_Request::MergeFrom(const CPublishedFile_RemoveAppRelationship_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_RemoveAppRelationship_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      relationship_ = from.relationship_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_RemoveAppRelationship_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_RemoveAppRelationship_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_RemoveAppRelationship_Request::CopyFrom(const CPublishedFile_RemoveAppRelationship_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_RemoveAppRelationship_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_RemoveAppRelationship_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_RemoveAppRelationship_Request::Swap(CPublishedFile_RemoveAppRelationship_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_RemoveAppRelationship_Request::InternalSwap(CPublishedFile_RemoveAppRelationship_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(appid_, other->appid_);
  swap(relationship_, other->relationship_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_RemoveAppRelationship_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_RemoveAppRelationship_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_RemoveAppRelationship_Response::CPublishedFile_RemoveAppRelationship_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveAppRelationship_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_RemoveAppRelationship_Response)
}
CPublishedFile_RemoveAppRelationship_Response::CPublishedFile_RemoveAppRelationship_Response(const CPublishedFile_RemoveAppRelationship_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_RemoveAppRelationship_Response)
}

void CPublishedFile_RemoveAppRelationship_Response::SharedCtor() {
}

CPublishedFile_RemoveAppRelationship_Response::~CPublishedFile_RemoveAppRelationship_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_RemoveAppRelationship_Response)
  SharedDtor();
}

void CPublishedFile_RemoveAppRelationship_Response::SharedDtor() {
}

void CPublishedFile_RemoveAppRelationship_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_RemoveAppRelationship_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_RemoveAppRelationship_Response& CPublishedFile_RemoveAppRelationship_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveAppRelationship_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_RemoveAppRelationship_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_RemoveAppRelationship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_RemoveAppRelationship_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_RemoveAppRelationship_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_RemoveAppRelationship_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_RemoveAppRelationship_Response)
  return false;
#undef DO_
}

void CPublishedFile_RemoveAppRelationship_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_RemoveAppRelationship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_RemoveAppRelationship_Response)
}

::google::protobuf::uint8* CPublishedFile_RemoveAppRelationship_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_RemoveAppRelationship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_RemoveAppRelationship_Response)
  return target;
}

size_t CPublishedFile_RemoveAppRelationship_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_RemoveAppRelationship_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_RemoveAppRelationship_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_RemoveAppRelationship_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_RemoveAppRelationship_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_RemoveAppRelationship_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_RemoveAppRelationship_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_RemoveAppRelationship_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_RemoveAppRelationship_Response::MergeFrom(const CPublishedFile_RemoveAppRelationship_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_RemoveAppRelationship_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_RemoveAppRelationship_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_RemoveAppRelationship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_RemoveAppRelationship_Response::CopyFrom(const CPublishedFile_RemoveAppRelationship_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_RemoveAppRelationship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_RemoveAppRelationship_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_RemoveAppRelationship_Response::Swap(CPublishedFile_RemoveAppRelationship_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_RemoveAppRelationship_Response::InternalSwap(CPublishedFile_RemoveAppRelationship_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_RemoveAppRelationship_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetAppRelationships_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetAppRelationships_Request::kPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetAppRelationships_Request::CPublishedFile_GetAppRelationships_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetAppRelationships_Request)
}
CPublishedFile_GetAppRelationships_Request::CPublishedFile_GetAppRelationships_Request(const CPublishedFile_GetAppRelationships_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publishedfileid_ = from.publishedfileid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetAppRelationships_Request)
}

void CPublishedFile_GetAppRelationships_Request::SharedCtor() {
  publishedfileid_ = GOOGLE_ULONGLONG(0);
}

CPublishedFile_GetAppRelationships_Request::~CPublishedFile_GetAppRelationships_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetAppRelationships_Request)
  SharedDtor();
}

void CPublishedFile_GetAppRelationships_Request::SharedDtor() {
}

void CPublishedFile_GetAppRelationships_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetAppRelationships_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetAppRelationships_Request& CPublishedFile_GetAppRelationships_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_GetAppRelationships_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetAppRelationships_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfileid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetAppRelationships_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetAppRelationships_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetAppRelationships_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetAppRelationships_Request)
  return false;
#undef DO_
}

void CPublishedFile_GetAppRelationships_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetAppRelationships_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetAppRelationships_Request)
}

::google::protobuf::uint8* CPublishedFile_GetAppRelationships_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetAppRelationships_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetAppRelationships_Request)
  return target;
}

size_t CPublishedFile_GetAppRelationships_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetAppRelationships_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 publishedfileid = 1;
  if (has_publishedfileid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->publishedfileid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetAppRelationships_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetAppRelationships_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetAppRelationships_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetAppRelationships_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetAppRelationships_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetAppRelationships_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetAppRelationships_Request::MergeFrom(const CPublishedFile_GetAppRelationships_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetAppRelationships_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_publishedfileid()) {
    set_publishedfileid(from.publishedfileid());
  }
}

void CPublishedFile_GetAppRelationships_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetAppRelationships_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetAppRelationships_Request::CopyFrom(const CPublishedFile_GetAppRelationships_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetAppRelationships_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetAppRelationships_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_GetAppRelationships_Request::Swap(CPublishedFile_GetAppRelationships_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetAppRelationships_Request::InternalSwap(CPublishedFile_GetAppRelationships_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetAppRelationships_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetAppRelationships_Response_AppRelationship::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetAppRelationships_Response_AppRelationship::kAppidFieldNumber;
const int CPublishedFile_GetAppRelationships_Response_AppRelationship::kRelationshipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetAppRelationships_Response_AppRelationship::CPublishedFile_GetAppRelationships_Response_AppRelationship()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Response_AppRelationship.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetAppRelationships_Response.AppRelationship)
}
CPublishedFile_GetAppRelationships_Response_AppRelationship::CPublishedFile_GetAppRelationships_Response_AppRelationship(const CPublishedFile_GetAppRelationships_Response_AppRelationship& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&relationship_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(relationship_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetAppRelationships_Response.AppRelationship)
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationship_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(relationship_));
}

CPublishedFile_GetAppRelationships_Response_AppRelationship::~CPublishedFile_GetAppRelationships_Response_AppRelationship() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  SharedDtor();
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::SharedDtor() {
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetAppRelationships_Response_AppRelationship::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetAppRelationships_Response_AppRelationship& CPublishedFile_GetAppRelationships_Response_AppRelationship::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Response_AppRelationship.base);
  return *internal_default_instance();
}


void CPublishedFile_GetAppRelationships_Response_AppRelationship::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&relationship_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(relationship_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetAppRelationships_Response_AppRelationship::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 relationship = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_relationship();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relationship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  return false;
#undef DO_
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 relationship = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->relationship(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetAppRelationships_Response.AppRelationship)
}

::google::protobuf::uint8* CPublishedFile_GetAppRelationships_Response_AppRelationship::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 relationship = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->relationship(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  return target;
}

size_t CPublishedFile_GetAppRelationships_Response_AppRelationship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 relationship = 2;
    if (has_relationship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->relationship());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetAppRelationships_Response_AppRelationship* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetAppRelationships_Response_AppRelationship>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetAppRelationships_Response.AppRelationship)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetAppRelationships_Response.AppRelationship)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::MergeFrom(const CPublishedFile_GetAppRelationships_Response_AppRelationship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      relationship_ = from.relationship_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::CopyFrom(const CPublishedFile_GetAppRelationships_Response_AppRelationship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetAppRelationships_Response.AppRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetAppRelationships_Response_AppRelationship::IsInitialized() const {
  return true;
}

void CPublishedFile_GetAppRelationships_Response_AppRelationship::Swap(CPublishedFile_GetAppRelationships_Response_AppRelationship* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetAppRelationships_Response_AppRelationship::InternalSwap(CPublishedFile_GetAppRelationships_Response_AppRelationship* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(relationship_, other->relationship_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetAppRelationships_Response_AppRelationship::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_GetAppRelationships_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_GetAppRelationships_Response::kAppRelationshipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_GetAppRelationships_Response::CPublishedFile_GetAppRelationships_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_GetAppRelationships_Response)
}
CPublishedFile_GetAppRelationships_Response::CPublishedFile_GetAppRelationships_Response(const CPublishedFile_GetAppRelationships_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      app_relationships_(from.app_relationships_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_GetAppRelationships_Response)
}

void CPublishedFile_GetAppRelationships_Response::SharedCtor() {
}

CPublishedFile_GetAppRelationships_Response::~CPublishedFile_GetAppRelationships_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_GetAppRelationships_Response)
  SharedDtor();
}

void CPublishedFile_GetAppRelationships_Response::SharedDtor() {
}

void CPublishedFile_GetAppRelationships_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_GetAppRelationships_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_GetAppRelationships_Response& CPublishedFile_GetAppRelationships_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_GetAppRelationships_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_GetAppRelationships_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_GetAppRelationships_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_relationships_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_GetAppRelationships_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_GetAppRelationships_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CPublishedFile_GetAppRelationships_Response.AppRelationship app_relationships = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_app_relationships()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_GetAppRelationships_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_GetAppRelationships_Response)
  return false;
#undef DO_
}

void CPublishedFile_GetAppRelationships_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_GetAppRelationships_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPublishedFile_GetAppRelationships_Response.AppRelationship app_relationships = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_relationships_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->app_relationships(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_GetAppRelationships_Response)
}

::google::protobuf::uint8* CPublishedFile_GetAppRelationships_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_GetAppRelationships_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPublishedFile_GetAppRelationships_Response.AppRelationship app_relationships = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_relationships_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->app_relationships(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_GetAppRelationships_Response)
  return target;
}

size_t CPublishedFile_GetAppRelationships_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_GetAppRelationships_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CPublishedFile_GetAppRelationships_Response.AppRelationship app_relationships = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->app_relationships_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->app_relationships(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_GetAppRelationships_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_GetAppRelationships_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_GetAppRelationships_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_GetAppRelationships_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_GetAppRelationships_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_GetAppRelationships_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_GetAppRelationships_Response::MergeFrom(const CPublishedFile_GetAppRelationships_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_GetAppRelationships_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  app_relationships_.MergeFrom(from.app_relationships_);
}

void CPublishedFile_GetAppRelationships_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_GetAppRelationships_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_GetAppRelationships_Response::CopyFrom(const CPublishedFile_GetAppRelationships_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_GetAppRelationships_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_GetAppRelationships_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_GetAppRelationships_Response::Swap(CPublishedFile_GetAppRelationships_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_GetAppRelationships_Response::InternalSwap(CPublishedFile_GetAppRelationships_Response* other) {
  using std::swap;
  CastToBase(&app_relationships_)->InternalSwap(CastToBase(&other->app_relationships_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_GetAppRelationships_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_StartPlaytimeTracking_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_StartPlaytimeTracking_Request::kAppidFieldNumber;
const int CPublishedFile_StartPlaytimeTracking_Request::kPublishedfileidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_StartPlaytimeTracking_Request::CPublishedFile_StartPlaytimeTracking_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StartPlaytimeTracking_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_StartPlaytimeTracking_Request)
}
CPublishedFile_StartPlaytimeTracking_Request::CPublishedFile_StartPlaytimeTracking_Request(const CPublishedFile_StartPlaytimeTracking_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      publishedfileids_(from.publishedfileids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_StartPlaytimeTracking_Request)
}

void CPublishedFile_StartPlaytimeTracking_Request::SharedCtor() {
  appid_ = 0u;
}

CPublishedFile_StartPlaytimeTracking_Request::~CPublishedFile_StartPlaytimeTracking_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_StartPlaytimeTracking_Request)
  SharedDtor();
}

void CPublishedFile_StartPlaytimeTracking_Request::SharedDtor() {
}

void CPublishedFile_StartPlaytimeTracking_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_StartPlaytimeTracking_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_StartPlaytimeTracking_Request& CPublishedFile_StartPlaytimeTracking_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StartPlaytimeTracking_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_StartPlaytimeTracking_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_StartPlaytimeTracking_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfileids_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_StartPlaytimeTracking_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_StartPlaytimeTracking_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 publishedfileids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_publishedfileids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_publishedfileids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_StartPlaytimeTracking_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_StartPlaytimeTracking_Request)
  return false;
#undef DO_
}

void CPublishedFile_StartPlaytimeTracking_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_StartPlaytimeTracking_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated uint64 publishedfileids = 2;
  for (int i = 0, n = this->publishedfileids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->publishedfileids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_StartPlaytimeTracking_Request)
}

::google::protobuf::uint8* CPublishedFile_StartPlaytimeTracking_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_StartPlaytimeTracking_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated uint64 publishedfileids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->publishedfileids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_StartPlaytimeTracking_Request)
  return target;
}

size_t CPublishedFile_StartPlaytimeTracking_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_StartPlaytimeTracking_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 publishedfileids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->publishedfileids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->publishedfileids_size());
    total_size += data_size;
  }

  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_StartPlaytimeTracking_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_StartPlaytimeTracking_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_StartPlaytimeTracking_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_StartPlaytimeTracking_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_StartPlaytimeTracking_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_StartPlaytimeTracking_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_StartPlaytimeTracking_Request::MergeFrom(const CPublishedFile_StartPlaytimeTracking_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_StartPlaytimeTracking_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publishedfileids_.MergeFrom(from.publishedfileids_);
  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CPublishedFile_StartPlaytimeTracking_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_StartPlaytimeTracking_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_StartPlaytimeTracking_Request::CopyFrom(const CPublishedFile_StartPlaytimeTracking_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_StartPlaytimeTracking_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_StartPlaytimeTracking_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_StartPlaytimeTracking_Request::Swap(CPublishedFile_StartPlaytimeTracking_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_StartPlaytimeTracking_Request::InternalSwap(CPublishedFile_StartPlaytimeTracking_Request* other) {
  using std::swap;
  publishedfileids_.InternalSwap(&other->publishedfileids_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_StartPlaytimeTracking_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_StartPlaytimeTracking_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_StartPlaytimeTracking_Response::CPublishedFile_StartPlaytimeTracking_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StartPlaytimeTracking_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_StartPlaytimeTracking_Response)
}
CPublishedFile_StartPlaytimeTracking_Response::CPublishedFile_StartPlaytimeTracking_Response(const CPublishedFile_StartPlaytimeTracking_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_StartPlaytimeTracking_Response)
}

void CPublishedFile_StartPlaytimeTracking_Response::SharedCtor() {
}

CPublishedFile_StartPlaytimeTracking_Response::~CPublishedFile_StartPlaytimeTracking_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_StartPlaytimeTracking_Response)
  SharedDtor();
}

void CPublishedFile_StartPlaytimeTracking_Response::SharedDtor() {
}

void CPublishedFile_StartPlaytimeTracking_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_StartPlaytimeTracking_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_StartPlaytimeTracking_Response& CPublishedFile_StartPlaytimeTracking_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StartPlaytimeTracking_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_StartPlaytimeTracking_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_StartPlaytimeTracking_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_StartPlaytimeTracking_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_StartPlaytimeTracking_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_StartPlaytimeTracking_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_StartPlaytimeTracking_Response)
  return false;
#undef DO_
}

void CPublishedFile_StartPlaytimeTracking_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_StartPlaytimeTracking_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_StartPlaytimeTracking_Response)
}

::google::protobuf::uint8* CPublishedFile_StartPlaytimeTracking_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_StartPlaytimeTracking_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_StartPlaytimeTracking_Response)
  return target;
}

size_t CPublishedFile_StartPlaytimeTracking_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_StartPlaytimeTracking_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_StartPlaytimeTracking_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_StartPlaytimeTracking_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_StartPlaytimeTracking_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_StartPlaytimeTracking_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_StartPlaytimeTracking_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_StartPlaytimeTracking_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_StartPlaytimeTracking_Response::MergeFrom(const CPublishedFile_StartPlaytimeTracking_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_StartPlaytimeTracking_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_StartPlaytimeTracking_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_StartPlaytimeTracking_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_StartPlaytimeTracking_Response::CopyFrom(const CPublishedFile_StartPlaytimeTracking_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_StartPlaytimeTracking_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_StartPlaytimeTracking_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_StartPlaytimeTracking_Response::Swap(CPublishedFile_StartPlaytimeTracking_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_StartPlaytimeTracking_Response::InternalSwap(CPublishedFile_StartPlaytimeTracking_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_StartPlaytimeTracking_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_StopPlaytimeTracking_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_StopPlaytimeTracking_Request::kAppidFieldNumber;
const int CPublishedFile_StopPlaytimeTracking_Request::kPublishedfileidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_StopPlaytimeTracking_Request::CPublishedFile_StopPlaytimeTracking_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTracking_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_StopPlaytimeTracking_Request)
}
CPublishedFile_StopPlaytimeTracking_Request::CPublishedFile_StopPlaytimeTracking_Request(const CPublishedFile_StopPlaytimeTracking_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      publishedfileids_(from.publishedfileids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_StopPlaytimeTracking_Request)
}

void CPublishedFile_StopPlaytimeTracking_Request::SharedCtor() {
  appid_ = 0u;
}

CPublishedFile_StopPlaytimeTracking_Request::~CPublishedFile_StopPlaytimeTracking_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_StopPlaytimeTracking_Request)
  SharedDtor();
}

void CPublishedFile_StopPlaytimeTracking_Request::SharedDtor() {
}

void CPublishedFile_StopPlaytimeTracking_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_StopPlaytimeTracking_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_StopPlaytimeTracking_Request& CPublishedFile_StopPlaytimeTracking_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTracking_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_StopPlaytimeTracking_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_StopPlaytimeTracking_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publishedfileids_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_StopPlaytimeTracking_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_StopPlaytimeTracking_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 publishedfileids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_publishedfileids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_publishedfileids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_StopPlaytimeTracking_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_StopPlaytimeTracking_Request)
  return false;
#undef DO_
}

void CPublishedFile_StopPlaytimeTracking_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_StopPlaytimeTracking_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated uint64 publishedfileids = 2;
  for (int i = 0, n = this->publishedfileids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->publishedfileids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_StopPlaytimeTracking_Request)
}

::google::protobuf::uint8* CPublishedFile_StopPlaytimeTracking_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_StopPlaytimeTracking_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated uint64 publishedfileids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->publishedfileids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_StopPlaytimeTracking_Request)
  return target;
}

size_t CPublishedFile_StopPlaytimeTracking_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_StopPlaytimeTracking_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 publishedfileids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->publishedfileids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->publishedfileids_size());
    total_size += data_size;
  }

  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_StopPlaytimeTracking_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_StopPlaytimeTracking_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_StopPlaytimeTracking_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_StopPlaytimeTracking_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_StopPlaytimeTracking_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_StopPlaytimeTracking_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_StopPlaytimeTracking_Request::MergeFrom(const CPublishedFile_StopPlaytimeTracking_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_StopPlaytimeTracking_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publishedfileids_.MergeFrom(from.publishedfileids_);
  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CPublishedFile_StopPlaytimeTracking_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_StopPlaytimeTracking_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_StopPlaytimeTracking_Request::CopyFrom(const CPublishedFile_StopPlaytimeTracking_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_StopPlaytimeTracking_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_StopPlaytimeTracking_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_StopPlaytimeTracking_Request::Swap(CPublishedFile_StopPlaytimeTracking_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_StopPlaytimeTracking_Request::InternalSwap(CPublishedFile_StopPlaytimeTracking_Request* other) {
  using std::swap;
  publishedfileids_.InternalSwap(&other->publishedfileids_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_StopPlaytimeTracking_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_StopPlaytimeTracking_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_StopPlaytimeTracking_Response::CPublishedFile_StopPlaytimeTracking_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTracking_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_StopPlaytimeTracking_Response)
}
CPublishedFile_StopPlaytimeTracking_Response::CPublishedFile_StopPlaytimeTracking_Response(const CPublishedFile_StopPlaytimeTracking_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_StopPlaytimeTracking_Response)
}

void CPublishedFile_StopPlaytimeTracking_Response::SharedCtor() {
}

CPublishedFile_StopPlaytimeTracking_Response::~CPublishedFile_StopPlaytimeTracking_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_StopPlaytimeTracking_Response)
  SharedDtor();
}

void CPublishedFile_StopPlaytimeTracking_Response::SharedDtor() {
}

void CPublishedFile_StopPlaytimeTracking_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_StopPlaytimeTracking_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_StopPlaytimeTracking_Response& CPublishedFile_StopPlaytimeTracking_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTracking_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_StopPlaytimeTracking_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_StopPlaytimeTracking_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_StopPlaytimeTracking_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_StopPlaytimeTracking_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_StopPlaytimeTracking_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_StopPlaytimeTracking_Response)
  return false;
#undef DO_
}

void CPublishedFile_StopPlaytimeTracking_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_StopPlaytimeTracking_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_StopPlaytimeTracking_Response)
}

::google::protobuf::uint8* CPublishedFile_StopPlaytimeTracking_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_StopPlaytimeTracking_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_StopPlaytimeTracking_Response)
  return target;
}

size_t CPublishedFile_StopPlaytimeTracking_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_StopPlaytimeTracking_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_StopPlaytimeTracking_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_StopPlaytimeTracking_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_StopPlaytimeTracking_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_StopPlaytimeTracking_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_StopPlaytimeTracking_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_StopPlaytimeTracking_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_StopPlaytimeTracking_Response::MergeFrom(const CPublishedFile_StopPlaytimeTracking_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_StopPlaytimeTracking_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_StopPlaytimeTracking_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_StopPlaytimeTracking_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_StopPlaytimeTracking_Response::CopyFrom(const CPublishedFile_StopPlaytimeTracking_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_StopPlaytimeTracking_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_StopPlaytimeTracking_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_StopPlaytimeTracking_Response::Swap(CPublishedFile_StopPlaytimeTracking_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_StopPlaytimeTracking_Response::InternalSwap(CPublishedFile_StopPlaytimeTracking_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_StopPlaytimeTracking_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
}
CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request(const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::SharedCtor() {
  appid_ = 0u;
}

CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::~CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  SharedDtor();
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::SharedDtor() {
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request& CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  return false;
#undef DO_
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
}

::google::protobuf::uint8* CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  return target;
}

size_t CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::MergeFrom(const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::CopyFrom(const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::Swap(CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::InternalSwap(CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
}
CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response(const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::SharedCtor() {
}

CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::~CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  SharedDtor();
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::SharedDtor() {
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response& CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  return false;
#undef DO_
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
}

::google::protobuf::uint8* CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  return target;
}

size_t CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::MergeFrom(const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::CopyFrom(const CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::Swap(CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::InternalSwap(CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::kPublishedfileidFieldNumber;
const int CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::kSecondsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
}
CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage(const CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seconds_active_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(seconds_active_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seconds_active_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(seconds_active_));
}

CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::~CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage() {
  // @@protoc_insertion_point(destructor:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  SharedDtor();
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::SharedDtor() {
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage& CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage.base);
  return *internal_default_instance();
}


void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seconds_active_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(seconds_active_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float seconds_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_seconds_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &seconds_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  return false;
#undef DO_
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional float seconds_active = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->seconds_active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
}

::google::protobuf::uint8* CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional float seconds_active = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->seconds_active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  return target;
}

size_t CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional float seconds_active = 2;
    if (has_seconds_active()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
    MergeFrom(*source);
  }
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::MergeFrom(const CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seconds_active_ = from.seconds_active_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::CopyFrom(const CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::IsInitialized() const {
  return true;
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::Swap(CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::InternalSwap(CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(seconds_active_, other->seconds_active_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_SetPlaytimeForControllerConfigs_Request::kAppidFieldNumber;
const int CPublishedFile_SetPlaytimeForControllerConfigs_Request::kControllerConfigUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_SetPlaytimeForControllerConfigs_Request::CPublishedFile_SetPlaytimeForControllerConfigs_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
}
CPublishedFile_SetPlaytimeForControllerConfigs_Request::CPublishedFile_SetPlaytimeForControllerConfigs_Request(const CPublishedFile_SetPlaytimeForControllerConfigs_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      controller_config_usage_(from.controller_config_usage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::SharedCtor() {
  appid_ = 0u;
}

CPublishedFile_SetPlaytimeForControllerConfigs_Request::~CPublishedFile_SetPlaytimeForControllerConfigs_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  SharedDtor();
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::SharedDtor() {
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_SetPlaytimeForControllerConfigs_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_SetPlaytimeForControllerConfigs_Request& CPublishedFile_SetPlaytimeForControllerConfigs_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_SetPlaytimeForControllerConfigs_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  controller_config_usage_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_SetPlaytimeForControllerConfigs_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage controller_config_usage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_controller_config_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  return false;
#undef DO_
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated .CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage controller_config_usage = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->controller_config_usage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->controller_config_usage(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
}

::google::protobuf::uint8* CPublishedFile_SetPlaytimeForControllerConfigs_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated .CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage controller_config_usage = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->controller_config_usage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->controller_config_usage(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  return target;
}

size_t CPublishedFile_SetPlaytimeForControllerConfigs_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CPublishedFile_SetPlaytimeForControllerConfigs_Request.ControllerConfigUsage controller_config_usage = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->controller_config_usage_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->controller_config_usage(static_cast<int>(i)));
    }
  }

  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_SetPlaytimeForControllerConfigs_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_SetPlaytimeForControllerConfigs_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::MergeFrom(const CPublishedFile_SetPlaytimeForControllerConfigs_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  controller_config_usage_.MergeFrom(from.controller_config_usage_);
  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::CopyFrom(const CPublishedFile_SetPlaytimeForControllerConfigs_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_SetPlaytimeForControllerConfigs_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Request::Swap(CPublishedFile_SetPlaytimeForControllerConfigs_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_SetPlaytimeForControllerConfigs_Request::InternalSwap(CPublishedFile_SetPlaytimeForControllerConfigs_Request* other) {
  using std::swap;
  CastToBase(&controller_config_usage_)->InternalSwap(CastToBase(&other->controller_config_usage_));
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_SetPlaytimeForControllerConfigs_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_SetPlaytimeForControllerConfigs_Response::CPublishedFile_SetPlaytimeForControllerConfigs_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
}
CPublishedFile_SetPlaytimeForControllerConfigs_Response::CPublishedFile_SetPlaytimeForControllerConfigs_Response(const CPublishedFile_SetPlaytimeForControllerConfigs_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::SharedCtor() {
}

CPublishedFile_SetPlaytimeForControllerConfigs_Response::~CPublishedFile_SetPlaytimeForControllerConfigs_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  SharedDtor();
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::SharedDtor() {
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_SetPlaytimeForControllerConfigs_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_SetPlaytimeForControllerConfigs_Response& CPublishedFile_SetPlaytimeForControllerConfigs_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_SetPlaytimeForControllerConfigs_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_SetPlaytimeForControllerConfigs_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_SetPlaytimeForControllerConfigs_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  return false;
#undef DO_
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
}

::google::protobuf::uint8* CPublishedFile_SetPlaytimeForControllerConfigs_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  return target;
}

size_t CPublishedFile_SetPlaytimeForControllerConfigs_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_SetPlaytimeForControllerConfigs_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_SetPlaytimeForControllerConfigs_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::MergeFrom(const CPublishedFile_SetPlaytimeForControllerConfigs_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::CopyFrom(const CPublishedFile_SetPlaytimeForControllerConfigs_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_SetPlaytimeForControllerConfigs_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_SetPlaytimeForControllerConfigs_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_SetPlaytimeForControllerConfigs_Response::Swap(CPublishedFile_SetPlaytimeForControllerConfigs_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_SetPlaytimeForControllerConfigs_Response::InternalSwap(CPublishedFile_SetPlaytimeForControllerConfigs_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_SetPlaytimeForControllerConfigs_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_AddChild_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_AddChild_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_AddChild_Request::kChildPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_AddChild_Request::CPublishedFile_AddChild_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddChild_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_AddChild_Request)
}
CPublishedFile_AddChild_Request::CPublishedFile_AddChild_Request(const CPublishedFile_AddChild_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&child_publishedfileid_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(child_publishedfileid_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_AddChild_Request)
}

void CPublishedFile_AddChild_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&child_publishedfileid_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(child_publishedfileid_));
}

CPublishedFile_AddChild_Request::~CPublishedFile_AddChild_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_AddChild_Request)
  SharedDtor();
}

void CPublishedFile_AddChild_Request::SharedDtor() {
}

void CPublishedFile_AddChild_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_AddChild_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_AddChild_Request& CPublishedFile_AddChild_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddChild_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_AddChild_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_AddChild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&child_publishedfileid_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(child_publishedfileid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_AddChild_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_AddChild_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 child_publishedfileid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_child_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &child_publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_AddChild_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_AddChild_Request)
  return false;
#undef DO_
}

void CPublishedFile_AddChild_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_AddChild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint64 child_publishedfileid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->child_publishedfileid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_AddChild_Request)
}

::google::protobuf::uint8* CPublishedFile_AddChild_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_AddChild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint64 child_publishedfileid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->child_publishedfileid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_AddChild_Request)
  return target;
}

size_t CPublishedFile_AddChild_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_AddChild_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint64 child_publishedfileid = 2;
    if (has_child_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->child_publishedfileid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_AddChild_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_AddChild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_AddChild_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_AddChild_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_AddChild_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_AddChild_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_AddChild_Request::MergeFrom(const CPublishedFile_AddChild_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_AddChild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      child_publishedfileid_ = from.child_publishedfileid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_AddChild_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_AddChild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_AddChild_Request::CopyFrom(const CPublishedFile_AddChild_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_AddChild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_AddChild_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_AddChild_Request::Swap(CPublishedFile_AddChild_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_AddChild_Request::InternalSwap(CPublishedFile_AddChild_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(child_publishedfileid_, other->child_publishedfileid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_AddChild_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_AddChild_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_AddChild_Response::CPublishedFile_AddChild_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddChild_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_AddChild_Response)
}
CPublishedFile_AddChild_Response::CPublishedFile_AddChild_Response(const CPublishedFile_AddChild_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_AddChild_Response)
}

void CPublishedFile_AddChild_Response::SharedCtor() {
}

CPublishedFile_AddChild_Response::~CPublishedFile_AddChild_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_AddChild_Response)
  SharedDtor();
}

void CPublishedFile_AddChild_Response::SharedDtor() {
}

void CPublishedFile_AddChild_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_AddChild_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_AddChild_Response& CPublishedFile_AddChild_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_AddChild_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_AddChild_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_AddChild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_AddChild_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_AddChild_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_AddChild_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_AddChild_Response)
  return false;
#undef DO_
}

void CPublishedFile_AddChild_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_AddChild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_AddChild_Response)
}

::google::protobuf::uint8* CPublishedFile_AddChild_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_AddChild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_AddChild_Response)
  return target;
}

size_t CPublishedFile_AddChild_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_AddChild_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_AddChild_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_AddChild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_AddChild_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_AddChild_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_AddChild_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_AddChild_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_AddChild_Response::MergeFrom(const CPublishedFile_AddChild_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_AddChild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_AddChild_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_AddChild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_AddChild_Response::CopyFrom(const CPublishedFile_AddChild_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_AddChild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_AddChild_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_AddChild_Response::Swap(CPublishedFile_AddChild_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_AddChild_Response::InternalSwap(CPublishedFile_AddChild_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_AddChild_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_RemoveChild_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPublishedFile_RemoveChild_Request::kPublishedfileidFieldNumber;
const int CPublishedFile_RemoveChild_Request::kChildPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_RemoveChild_Request::CPublishedFile_RemoveChild_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveChild_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_RemoveChild_Request)
}
CPublishedFile_RemoveChild_Request::CPublishedFile_RemoveChild_Request(const CPublishedFile_RemoveChild_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&publishedfileid_, &from.publishedfileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&child_publishedfileid_) -
    reinterpret_cast<char*>(&publishedfileid_)) + sizeof(child_publishedfileid_));
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_RemoveChild_Request)
}

void CPublishedFile_RemoveChild_Request::SharedCtor() {
  ::memset(&publishedfileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&child_publishedfileid_) -
      reinterpret_cast<char*>(&publishedfileid_)) + sizeof(child_publishedfileid_));
}

CPublishedFile_RemoveChild_Request::~CPublishedFile_RemoveChild_Request() {
  // @@protoc_insertion_point(destructor:CPublishedFile_RemoveChild_Request)
  SharedDtor();
}

void CPublishedFile_RemoveChild_Request::SharedDtor() {
}

void CPublishedFile_RemoveChild_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_RemoveChild_Request::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_RemoveChild_Request& CPublishedFile_RemoveChild_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveChild_Request.base);
  return *internal_default_instance();
}


void CPublishedFile_RemoveChild_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_RemoveChild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&publishedfileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&child_publishedfileid_) -
        reinterpret_cast<char*>(&publishedfileid_)) + sizeof(child_publishedfileid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_RemoveChild_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_RemoveChild_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 publishedfileid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 child_publishedfileid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_child_publishedfileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &child_publishedfileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_RemoveChild_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_RemoveChild_Request)
  return false;
#undef DO_
}

void CPublishedFile_RemoveChild_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_RemoveChild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->publishedfileid(), output);
  }

  // optional uint64 child_publishedfileid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->child_publishedfileid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_RemoveChild_Request)
}

::google::protobuf::uint8* CPublishedFile_RemoveChild_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_RemoveChild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 publishedfileid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->publishedfileid(), target);
  }

  // optional uint64 child_publishedfileid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->child_publishedfileid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_RemoveChild_Request)
  return target;
}

size_t CPublishedFile_RemoveChild_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_RemoveChild_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 publishedfileid = 1;
    if (has_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->publishedfileid());
    }

    // optional uint64 child_publishedfileid = 2;
    if (has_child_publishedfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->child_publishedfileid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_RemoveChild_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_RemoveChild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_RemoveChild_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_RemoveChild_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_RemoveChild_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_RemoveChild_Request)
    MergeFrom(*source);
  }
}

void CPublishedFile_RemoveChild_Request::MergeFrom(const CPublishedFile_RemoveChild_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_RemoveChild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      publishedfileid_ = from.publishedfileid_;
    }
    if (cached_has_bits & 0x00000002u) {
      child_publishedfileid_ = from.child_publishedfileid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPublishedFile_RemoveChild_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_RemoveChild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_RemoveChild_Request::CopyFrom(const CPublishedFile_RemoveChild_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_RemoveChild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_RemoveChild_Request::IsInitialized() const {
  return true;
}

void CPublishedFile_RemoveChild_Request::Swap(CPublishedFile_RemoveChild_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_RemoveChild_Request::InternalSwap(CPublishedFile_RemoveChild_Request* other) {
  using std::swap;
  swap(publishedfileid_, other->publishedfileid_);
  swap(child_publishedfileid_, other->child_publishedfileid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_RemoveChild_Request::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPublishedFile_RemoveChild_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPublishedFile_RemoveChild_Response::CPublishedFile_RemoveChild_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveChild_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPublishedFile_RemoveChild_Response)
}
CPublishedFile_RemoveChild_Response::CPublishedFile_RemoveChild_Response(const CPublishedFile_RemoveChild_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPublishedFile_RemoveChild_Response)
}

void CPublishedFile_RemoveChild_Response::SharedCtor() {
}

CPublishedFile_RemoveChild_Response::~CPublishedFile_RemoveChild_Response() {
  // @@protoc_insertion_point(destructor:CPublishedFile_RemoveChild_Response)
  SharedDtor();
}

void CPublishedFile_RemoveChild_Response::SharedDtor() {
}

void CPublishedFile_RemoveChild_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPublishedFile_RemoveChild_Response::descriptor() {
  ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPublishedFile_RemoveChild_Response& CPublishedFile_RemoveChild_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::scc_info_CPublishedFile_RemoveChild_Response.base);
  return *internal_default_instance();
}


void CPublishedFile_RemoveChild_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPublishedFile_RemoveChild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPublishedFile_RemoveChild_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPublishedFile_RemoveChild_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPublishedFile_RemoveChild_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPublishedFile_RemoveChild_Response)
  return false;
#undef DO_
}

void CPublishedFile_RemoveChild_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPublishedFile_RemoveChild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPublishedFile_RemoveChild_Response)
}

::google::protobuf::uint8* CPublishedFile_RemoveChild_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPublishedFile_RemoveChild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPublishedFile_RemoveChild_Response)
  return target;
}

size_t CPublishedFile_RemoveChild_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPublishedFile_RemoveChild_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPublishedFile_RemoveChild_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPublishedFile_RemoveChild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPublishedFile_RemoveChild_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPublishedFile_RemoveChild_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPublishedFile_RemoveChild_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPublishedFile_RemoveChild_Response)
    MergeFrom(*source);
  }
}

void CPublishedFile_RemoveChild_Response::MergeFrom(const CPublishedFile_RemoveChild_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPublishedFile_RemoveChild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPublishedFile_RemoveChild_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPublishedFile_RemoveChild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPublishedFile_RemoveChild_Response::CopyFrom(const CPublishedFile_RemoveChild_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPublishedFile_RemoveChild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPublishedFile_RemoveChild_Response::IsInitialized() const {
  return true;
}

void CPublishedFile_RemoveChild_Response::Swap(CPublishedFile_RemoveChild_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPublishedFile_RemoveChild_Response::InternalSwap(CPublishedFile_RemoveChild_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPublishedFile_RemoveChild_Response::GetMetadata() const {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PublishedFile::~PublishedFile() {}

const ::google::protobuf::ServiceDescriptor* PublishedFile::descriptor() {
  protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* PublishedFile::GetDescriptor() {
  return descriptor();
}

void PublishedFile::Subscribe(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_Subscribe_Request*,
                         ::CPublishedFile_Subscribe_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Subscribe() not implemented.");
  done->Run();
}

void PublishedFile::Unsubscribe(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_Unsubscribe_Request*,
                         ::CPublishedFile_Unsubscribe_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Unsubscribe() not implemented.");
  done->Run();
}

void PublishedFile::CanSubscribe(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_CanSubscribe_Request*,
                         ::CPublishedFile_CanSubscribe_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CanSubscribe() not implemented.");
  done->Run();
}

void PublishedFile::Publish(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_Publish_Request*,
                         ::CPublishedFile_Publish_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Publish() not implemented.");
  done->Run();
}

void PublishedFile::GetDetails(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_GetDetails_Request*,
                         ::CPublishedFile_GetDetails_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetDetails() not implemented.");
  done->Run();
}

void PublishedFile::GetItemInfo(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_GetItemInfo_Request*,
                         ::CPublishedFile_GetItemInfo_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetItemInfo() not implemented.");
  done->Run();
}

void PublishedFile::GetUserFiles(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_GetUserFiles_Request*,
                         ::CPublishedFile_GetUserFiles_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetUserFiles() not implemented.");
  done->Run();
}

void PublishedFile::Update(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_Update_Request*,
                         ::CPublishedFile_Update_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Update() not implemented.");
  done->Run();
}

void PublishedFile::GetChangeHistoryEntry(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_GetChangeHistoryEntry_Request*,
                         ::CPublishedFile_GetChangeHistoryEntry_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetChangeHistoryEntry() not implemented.");
  done->Run();
}

void PublishedFile::GetChangeHistory(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_GetChangeHistory_Request*,
                         ::CPublishedFile_GetChangeHistory_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetChangeHistory() not implemented.");
  done->Run();
}

void PublishedFile::RefreshVotingQueue(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_RefreshVotingQueue_Request*,
                         ::CPublishedFile_RefreshVotingQueue_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RefreshVotingQueue() not implemented.");
  done->Run();
}

void PublishedFile::QueryFiles(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_QueryFiles_Request*,
                         ::CPublishedFile_QueryFiles_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryFiles() not implemented.");
  done->Run();
}

void PublishedFile::AddAppRelationship(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_AddAppRelationship_Request*,
                         ::CPublishedFile_AddAppRelationship_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddAppRelationship() not implemented.");
  done->Run();
}

void PublishedFile::RemoveAppRelationship(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_RemoveAppRelationship_Request*,
                         ::CPublishedFile_RemoveAppRelationship_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveAppRelationship() not implemented.");
  done->Run();
}

void PublishedFile::GetAppRelationships(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_GetAppRelationships_Request*,
                         ::CPublishedFile_GetAppRelationships_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetAppRelationships() not implemented.");
  done->Run();
}

void PublishedFile::StartPlaytimeTracking(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_StartPlaytimeTracking_Request*,
                         ::CPublishedFile_StartPlaytimeTracking_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StartPlaytimeTracking() not implemented.");
  done->Run();
}

void PublishedFile::StopPlaytimeTracking(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_StopPlaytimeTracking_Request*,
                         ::CPublishedFile_StopPlaytimeTracking_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StopPlaytimeTracking() not implemented.");
  done->Run();
}

void PublishedFile::StopPlaytimeTrackingForAllAppItems(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request*,
                         ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StopPlaytimeTrackingForAllAppItems() not implemented.");
  done->Run();
}

void PublishedFile::SetPlaytimeForControllerConfigs(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_SetPlaytimeForControllerConfigs_Request*,
                         ::CPublishedFile_SetPlaytimeForControllerConfigs_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetPlaytimeForControllerConfigs() not implemented.");
  done->Run();
}

void PublishedFile::AddChild(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_AddChild_Request*,
                         ::CPublishedFile_AddChild_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddChild() not implemented.");
  done->Run();
}

void PublishedFile::RemoveChild(::google::protobuf::RpcController* controller,
                         const ::CPublishedFile_RemoveChild_Request*,
                         ::CPublishedFile_RemoveChild_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveChild() not implemented.");
  done->Run();
}

void PublishedFile::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fpublishedfile_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Subscribe(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_Subscribe_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_Subscribe_Response*>(response),
             done);
      break;
    case 1:
      Unsubscribe(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_Unsubscribe_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_Unsubscribe_Response*>(response),
             done);
      break;
    case 2:
      CanSubscribe(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_CanSubscribe_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_CanSubscribe_Response*>(response),
             done);
      break;
    case 3:
      Publish(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_Publish_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_Publish_Response*>(response),
             done);
      break;
    case 4:
      GetDetails(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_GetDetails_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_GetDetails_Response*>(response),
             done);
      break;
    case 5:
      GetItemInfo(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_GetItemInfo_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_GetItemInfo_Response*>(response),
             done);
      break;
    case 6:
      GetUserFiles(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_GetUserFiles_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_GetUserFiles_Response*>(response),
             done);
      break;
    case 7:
      Update(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_Update_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_Update_Response*>(response),
             done);
      break;
    case 8:
      GetChangeHistoryEntry(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_GetChangeHistoryEntry_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_GetChangeHistoryEntry_Response*>(response),
             done);
      break;
    case 9:
      GetChangeHistory(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_GetChangeHistory_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_GetChangeHistory_Response*>(response),
             done);
      break;
    case 10:
      RefreshVotingQueue(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_RefreshVotingQueue_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_RefreshVotingQueue_Response*>(response),
             done);
      break;
    case 11:
      QueryFiles(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_QueryFiles_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_QueryFiles_Response*>(response),
             done);
      break;
    case 12:
      AddAppRelationship(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_AddAppRelationship_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_AddAppRelationship_Response*>(response),
             done);
      break;
    case 13:
      RemoveAppRelationship(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_RemoveAppRelationship_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_RemoveAppRelationship_Response*>(response),
             done);
      break;
    case 14:
      GetAppRelationships(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_GetAppRelationships_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_GetAppRelationships_Response*>(response),
             done);
      break;
    case 15:
      StartPlaytimeTracking(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_StartPlaytimeTracking_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_StartPlaytimeTracking_Response*>(response),
             done);
      break;
    case 16:
      StopPlaytimeTracking(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_StopPlaytimeTracking_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_StopPlaytimeTracking_Response*>(response),
             done);
      break;
    case 17:
      StopPlaytimeTrackingForAllAppItems(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response*>(response),
             done);
      break;
    case 18:
      SetPlaytimeForControllerConfigs(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_SetPlaytimeForControllerConfigs_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_SetPlaytimeForControllerConfigs_Response*>(response),
             done);
      break;
    case 19:
      AddChild(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_AddChild_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_AddChild_Response*>(response),
             done);
      break;
    case 20:
      RemoveChild(controller,
             ::google::protobuf::down_cast<const ::CPublishedFile_RemoveChild_Request*>(request),
             ::google::protobuf::down_cast< ::CPublishedFile_RemoveChild_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& PublishedFile::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CPublishedFile_Subscribe_Request::default_instance();
    case 1:
      return ::CPublishedFile_Unsubscribe_Request::default_instance();
    case 2:
      return ::CPublishedFile_CanSubscribe_Request::default_instance();
    case 3:
      return ::CPublishedFile_Publish_Request::default_instance();
    case 4:
      return ::CPublishedFile_GetDetails_Request::default_instance();
    case 5:
      return ::CPublishedFile_GetItemInfo_Request::default_instance();
    case 6:
      return ::CPublishedFile_GetUserFiles_Request::default_instance();
    case 7:
      return ::CPublishedFile_Update_Request::default_instance();
    case 8:
      return ::CPublishedFile_GetChangeHistoryEntry_Request::default_instance();
    case 9:
      return ::CPublishedFile_GetChangeHistory_Request::default_instance();
    case 10:
      return ::CPublishedFile_RefreshVotingQueue_Request::default_instance();
    case 11:
      return ::CPublishedFile_QueryFiles_Request::default_instance();
    case 12:
      return ::CPublishedFile_AddAppRelationship_Request::default_instance();
    case 13:
      return ::CPublishedFile_RemoveAppRelationship_Request::default_instance();
    case 14:
      return ::CPublishedFile_GetAppRelationships_Request::default_instance();
    case 15:
      return ::CPublishedFile_StartPlaytimeTracking_Request::default_instance();
    case 16:
      return ::CPublishedFile_StopPlaytimeTracking_Request::default_instance();
    case 17:
      return ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request::default_instance();
    case 18:
      return ::CPublishedFile_SetPlaytimeForControllerConfigs_Request::default_instance();
    case 19:
      return ::CPublishedFile_AddChild_Request::default_instance();
    case 20:
      return ::CPublishedFile_RemoveChild_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& PublishedFile::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CPublishedFile_Subscribe_Response::default_instance();
    case 1:
      return ::CPublishedFile_Unsubscribe_Response::default_instance();
    case 2:
      return ::CPublishedFile_CanSubscribe_Response::default_instance();
    case 3:
      return ::CPublishedFile_Publish_Response::default_instance();
    case 4:
      return ::CPublishedFile_GetDetails_Response::default_instance();
    case 5:
      return ::CPublishedFile_GetItemInfo_Response::default_instance();
    case 6:
      return ::CPublishedFile_GetUserFiles_Response::default_instance();
    case 7:
      return ::CPublishedFile_Update_Response::default_instance();
    case 8:
      return ::CPublishedFile_GetChangeHistoryEntry_Response::default_instance();
    case 9:
      return ::CPublishedFile_GetChangeHistory_Response::default_instance();
    case 10:
      return ::CPublishedFile_RefreshVotingQueue_Response::default_instance();
    case 11:
      return ::CPublishedFile_QueryFiles_Response::default_instance();
    case 12:
      return ::CPublishedFile_AddAppRelationship_Response::default_instance();
    case 13:
      return ::CPublishedFile_RemoveAppRelationship_Response::default_instance();
    case 14:
      return ::CPublishedFile_GetAppRelationships_Response::default_instance();
    case 15:
      return ::CPublishedFile_StartPlaytimeTracking_Response::default_instance();
    case 16:
      return ::CPublishedFile_StopPlaytimeTracking_Response::default_instance();
    case 17:
      return ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response::default_instance();
    case 18:
      return ::CPublishedFile_SetPlaytimeForControllerConfigs_Response::default_instance();
    case 19:
      return ::CPublishedFile_AddChild_Response::default_instance();
    case 20:
      return ::CPublishedFile_RemoveChild_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

PublishedFile_Stub::PublishedFile_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
PublishedFile_Stub::PublishedFile_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
PublishedFile_Stub::~PublishedFile_Stub() {
  if (owns_channel_) delete channel_;
}

void PublishedFile_Stub::Subscribe(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_Subscribe_Request* request,
                              ::CPublishedFile_Subscribe_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void PublishedFile_Stub::Unsubscribe(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_Unsubscribe_Request* request,
                              ::CPublishedFile_Unsubscribe_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void PublishedFile_Stub::CanSubscribe(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_CanSubscribe_Request* request,
                              ::CPublishedFile_CanSubscribe_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void PublishedFile_Stub::Publish(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_Publish_Request* request,
                              ::CPublishedFile_Publish_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void PublishedFile_Stub::GetDetails(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_GetDetails_Request* request,
                              ::CPublishedFile_GetDetails_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void PublishedFile_Stub::GetItemInfo(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_GetItemInfo_Request* request,
                              ::CPublishedFile_GetItemInfo_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void PublishedFile_Stub::GetUserFiles(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_GetUserFiles_Request* request,
                              ::CPublishedFile_GetUserFiles_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void PublishedFile_Stub::Update(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_Update_Request* request,
                              ::CPublishedFile_Update_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void PublishedFile_Stub::GetChangeHistoryEntry(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_GetChangeHistoryEntry_Request* request,
                              ::CPublishedFile_GetChangeHistoryEntry_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void PublishedFile_Stub::GetChangeHistory(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_GetChangeHistory_Request* request,
                              ::CPublishedFile_GetChangeHistory_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void PublishedFile_Stub::RefreshVotingQueue(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_RefreshVotingQueue_Request* request,
                              ::CPublishedFile_RefreshVotingQueue_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}
void PublishedFile_Stub::QueryFiles(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_QueryFiles_Request* request,
                              ::CPublishedFile_QueryFiles_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(11),
                       controller, request, response, done);
}
void PublishedFile_Stub::AddAppRelationship(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_AddAppRelationship_Request* request,
                              ::CPublishedFile_AddAppRelationship_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(12),
                       controller, request, response, done);
}
void PublishedFile_Stub::RemoveAppRelationship(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_RemoveAppRelationship_Request* request,
                              ::CPublishedFile_RemoveAppRelationship_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(13),
                       controller, request, response, done);
}
void PublishedFile_Stub::GetAppRelationships(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_GetAppRelationships_Request* request,
                              ::CPublishedFile_GetAppRelationships_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(14),
                       controller, request, response, done);
}
void PublishedFile_Stub::StartPlaytimeTracking(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_StartPlaytimeTracking_Request* request,
                              ::CPublishedFile_StartPlaytimeTracking_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(15),
                       controller, request, response, done);
}
void PublishedFile_Stub::StopPlaytimeTracking(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_StopPlaytimeTracking_Request* request,
                              ::CPublishedFile_StopPlaytimeTracking_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(16),
                       controller, request, response, done);
}
void PublishedFile_Stub::StopPlaytimeTrackingForAllAppItems(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request* request,
                              ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(17),
                       controller, request, response, done);
}
void PublishedFile_Stub::SetPlaytimeForControllerConfigs(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_SetPlaytimeForControllerConfigs_Request* request,
                              ::CPublishedFile_SetPlaytimeForControllerConfigs_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(18),
                       controller, request, response, done);
}
void PublishedFile_Stub::AddChild(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_AddChild_Request* request,
                              ::CPublishedFile_AddChild_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(19),
                       controller, request, response, done);
}
void PublishedFile_Stub::RemoveChild(::google::protobuf::RpcController* controller,
                              const ::CPublishedFile_RemoveChild_Request* request,
                              ::CPublishedFile_RemoveChild_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(20),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Subscribe_Request* Arena::CreateMaybeMessage< ::CPublishedFile_Subscribe_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Subscribe_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Subscribe_Response* Arena::CreateMaybeMessage< ::CPublishedFile_Subscribe_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Subscribe_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Unsubscribe_Request* Arena::CreateMaybeMessage< ::CPublishedFile_Unsubscribe_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Unsubscribe_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Unsubscribe_Response* Arena::CreateMaybeMessage< ::CPublishedFile_Unsubscribe_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Unsubscribe_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_CanSubscribe_Request* Arena::CreateMaybeMessage< ::CPublishedFile_CanSubscribe_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_CanSubscribe_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_CanSubscribe_Response* Arena::CreateMaybeMessage< ::CPublishedFile_CanSubscribe_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_CanSubscribe_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Publish_Request* Arena::CreateMaybeMessage< ::CPublishedFile_Publish_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Publish_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Publish_Response* Arena::CreateMaybeMessage< ::CPublishedFile_Publish_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Publish_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetDetails_Request* Arena::CreateMaybeMessage< ::CPublishedFile_GetDetails_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetDetails_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_Tag* Arena::CreateMaybeMessage< ::PublishedFileDetails_Tag >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_Tag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_Preview* Arena::CreateMaybeMessage< ::PublishedFileDetails_Preview >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_Preview >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_Child* Arena::CreateMaybeMessage< ::PublishedFileDetails_Child >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_Child >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_KVTag* Arena::CreateMaybeMessage< ::PublishedFileDetails_KVTag >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_KVTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_VoteData* Arena::CreateMaybeMessage< ::PublishedFileDetails_VoteData >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_VoteData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_ForSaleData* Arena::CreateMaybeMessage< ::PublishedFileDetails_ForSaleData >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_ForSaleData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails_PlaytimeStats* Arena::CreateMaybeMessage< ::PublishedFileDetails_PlaytimeStats >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails_PlaytimeStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedFileDetails* Arena::CreateMaybeMessage< ::PublishedFileDetails >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedFileDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetDetails_Response* Arena::CreateMaybeMessage< ::CPublishedFile_GetDetails_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetDetails_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetItemInfo_Request_WorkshopItem* Arena::CreateMaybeMessage< ::CPublishedFile_GetItemInfo_Request_WorkshopItem >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetItemInfo_Request_WorkshopItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetItemInfo_Request* Arena::CreateMaybeMessage< ::CPublishedFile_GetItemInfo_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetItemInfo_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo* Arena::CreateMaybeMessage< ::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetItemInfo_Response_WorkshopItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetItemInfo_Response* Arena::CreateMaybeMessage< ::CPublishedFile_GetItemInfo_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetItemInfo_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetUserFiles_Request_KVTag* Arena::CreateMaybeMessage< ::CPublishedFile_GetUserFiles_Request_KVTag >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetUserFiles_Request_KVTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetUserFiles_Request* Arena::CreateMaybeMessage< ::CPublishedFile_GetUserFiles_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetUserFiles_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetUserFiles_Response_App* Arena::CreateMaybeMessage< ::CPublishedFile_GetUserFiles_Response_App >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetUserFiles_Response_App >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetUserFiles_Response* Arena::CreateMaybeMessage< ::CPublishedFile_GetUserFiles_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetUserFiles_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Update_Request* Arena::CreateMaybeMessage< ::CPublishedFile_Update_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Update_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_Update_Response* Arena::CreateMaybeMessage< ::CPublishedFile_Update_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_Update_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetChangeHistoryEntry_Request* Arena::CreateMaybeMessage< ::CPublishedFile_GetChangeHistoryEntry_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetChangeHistoryEntry_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetChangeHistoryEntry_Response* Arena::CreateMaybeMessage< ::CPublishedFile_GetChangeHistoryEntry_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetChangeHistoryEntry_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetChangeHistory_Request* Arena::CreateMaybeMessage< ::CPublishedFile_GetChangeHistory_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetChangeHistory_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetChangeHistory_Response_ChangeLog* Arena::CreateMaybeMessage< ::CPublishedFile_GetChangeHistory_Response_ChangeLog >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetChangeHistory_Response_ChangeLog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetChangeHistory_Response* Arena::CreateMaybeMessage< ::CPublishedFile_GetChangeHistory_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetChangeHistory_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_RefreshVotingQueue_Request* Arena::CreateMaybeMessage< ::CPublishedFile_RefreshVotingQueue_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_RefreshVotingQueue_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_RefreshVotingQueue_Response* Arena::CreateMaybeMessage< ::CPublishedFile_RefreshVotingQueue_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_RefreshVotingQueue_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_QueryFiles_Request_KVTag* Arena::CreateMaybeMessage< ::CPublishedFile_QueryFiles_Request_KVTag >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_QueryFiles_Request_KVTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_QueryFiles_Request* Arena::CreateMaybeMessage< ::CPublishedFile_QueryFiles_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_QueryFiles_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_QueryFiles_Response* Arena::CreateMaybeMessage< ::CPublishedFile_QueryFiles_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_QueryFiles_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_AddAppRelationship_Request* Arena::CreateMaybeMessage< ::CPublishedFile_AddAppRelationship_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_AddAppRelationship_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_AddAppRelationship_Response* Arena::CreateMaybeMessage< ::CPublishedFile_AddAppRelationship_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_AddAppRelationship_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_RemoveAppRelationship_Request* Arena::CreateMaybeMessage< ::CPublishedFile_RemoveAppRelationship_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_RemoveAppRelationship_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_RemoveAppRelationship_Response* Arena::CreateMaybeMessage< ::CPublishedFile_RemoveAppRelationship_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_RemoveAppRelationship_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetAppRelationships_Request* Arena::CreateMaybeMessage< ::CPublishedFile_GetAppRelationships_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetAppRelationships_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetAppRelationships_Response_AppRelationship* Arena::CreateMaybeMessage< ::CPublishedFile_GetAppRelationships_Response_AppRelationship >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetAppRelationships_Response_AppRelationship >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_GetAppRelationships_Response* Arena::CreateMaybeMessage< ::CPublishedFile_GetAppRelationships_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_GetAppRelationships_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_StartPlaytimeTracking_Request* Arena::CreateMaybeMessage< ::CPublishedFile_StartPlaytimeTracking_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_StartPlaytimeTracking_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_StartPlaytimeTracking_Response* Arena::CreateMaybeMessage< ::CPublishedFile_StartPlaytimeTracking_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_StartPlaytimeTracking_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_StopPlaytimeTracking_Request* Arena::CreateMaybeMessage< ::CPublishedFile_StopPlaytimeTracking_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_StopPlaytimeTracking_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_StopPlaytimeTracking_Response* Arena::CreateMaybeMessage< ::CPublishedFile_StopPlaytimeTracking_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_StopPlaytimeTracking_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request* Arena::CreateMaybeMessage< ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response* Arena::CreateMaybeMessage< ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_StopPlaytimeTrackingForAllAppItems_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage* Arena::CreateMaybeMessage< ::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_SetPlaytimeForControllerConfigs_Request_ControllerConfigUsage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_SetPlaytimeForControllerConfigs_Request* Arena::CreateMaybeMessage< ::CPublishedFile_SetPlaytimeForControllerConfigs_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_SetPlaytimeForControllerConfigs_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_SetPlaytimeForControllerConfigs_Response* Arena::CreateMaybeMessage< ::CPublishedFile_SetPlaytimeForControllerConfigs_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_SetPlaytimeForControllerConfigs_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_AddChild_Request* Arena::CreateMaybeMessage< ::CPublishedFile_AddChild_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_AddChild_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_AddChild_Response* Arena::CreateMaybeMessage< ::CPublishedFile_AddChild_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_AddChild_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_RemoveChild_Request* Arena::CreateMaybeMessage< ::CPublishedFile_RemoveChild_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_RemoveChild_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPublishedFile_RemoveChild_Response* Arena::CreateMaybeMessage< ::CPublishedFile_RemoveChild_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPublishedFile_RemoveChild_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
