// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_chat.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fchat_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fchat_2esteamclient_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fchat_2esteamclient_2eproto 

namespace protobuf_steammessages_5fchat_2esteamclient_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[129];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_steammessages_5fchat_2esteamclient_2eproto
class CChatMentions;
class CChatMentionsDefaultTypeInternal;
extern CChatMentionsDefaultTypeInternal _CChatMentions_default_instance_;
class CChatPartyBeacon;
class CChatPartyBeaconDefaultTypeInternal;
extern CChatPartyBeaconDefaultTypeInternal _CChatPartyBeacon_default_instance_;
class CChatRole;
class CChatRoleDefaultTypeInternal;
extern CChatRoleDefaultTypeInternal _CChatRole_default_instance_;
class CChatRoleActions;
class CChatRoleActionsDefaultTypeInternal;
extern CChatRoleActionsDefaultTypeInternal _CChatRoleActions_default_instance_;
class CChatRoomGroupHeaderState;
class CChatRoomGroupHeaderStateDefaultTypeInternal;
extern CChatRoomGroupHeaderStateDefaultTypeInternal _CChatRoomGroupHeaderState_default_instance_;
class CChatRoomGroupInvite;
class CChatRoomGroupInviteDefaultTypeInternal;
extern CChatRoomGroupInviteDefaultTypeInternal _CChatRoomGroupInvite_default_instance_;
class CChatRoomGroupState;
class CChatRoomGroupStateDefaultTypeInternal;
extern CChatRoomGroupStateDefaultTypeInternal _CChatRoomGroupState_default_instance_;
class CChatRoomMember;
class CChatRoomMemberDefaultTypeInternal;
extern CChatRoomMemberDefaultTypeInternal _CChatRoomMember_default_instance_;
class CChatRoomState;
class CChatRoomStateDefaultTypeInternal;
extern CChatRoomStateDefaultTypeInternal _CChatRoomState_default_instance_;
class CChatRoomSummaryPair;
class CChatRoomSummaryPairDefaultTypeInternal;
extern CChatRoomSummaryPairDefaultTypeInternal _CChatRoomSummaryPair_default_instance_;
class CChatRoom_AckChatMessage_Notification;
class CChatRoom_AckChatMessage_NotificationDefaultTypeInternal;
extern CChatRoom_AckChatMessage_NotificationDefaultTypeInternal _CChatRoom_AckChatMessage_Notification_default_instance_;
class CChatRoom_AddRoleToUser_Request;
class CChatRoom_AddRoleToUser_RequestDefaultTypeInternal;
extern CChatRoom_AddRoleToUser_RequestDefaultTypeInternal _CChatRoom_AddRoleToUser_Request_default_instance_;
class CChatRoom_AddRoleToUser_Response;
class CChatRoom_AddRoleToUser_ResponseDefaultTypeInternal;
extern CChatRoom_AddRoleToUser_ResponseDefaultTypeInternal _CChatRoom_AddRoleToUser_Response_default_instance_;
class CChatRoom_ChatMessageModified_Notification;
class CChatRoom_ChatMessageModified_NotificationDefaultTypeInternal;
extern CChatRoom_ChatMessageModified_NotificationDefaultTypeInternal _CChatRoom_ChatMessageModified_Notification_default_instance_;
class CChatRoom_ChatMessageModified_Notification_ChatMessage;
class CChatRoom_ChatMessageModified_Notification_ChatMessageDefaultTypeInternal;
extern CChatRoom_ChatMessageModified_Notification_ChatMessageDefaultTypeInternal _CChatRoom_ChatMessageModified_Notification_ChatMessage_default_instance_;
class CChatRoom_ChatRoomGroupRoomsChange_Notification;
class CChatRoom_ChatRoomGroupRoomsChange_NotificationDefaultTypeInternal;
extern CChatRoom_ChatRoomGroupRoomsChange_NotificationDefaultTypeInternal _CChatRoom_ChatRoomGroupRoomsChange_Notification_default_instance_;
class CChatRoom_ChatRoomHeaderState_Notification;
class CChatRoom_ChatRoomHeaderState_NotificationDefaultTypeInternal;
extern CChatRoom_ChatRoomHeaderState_NotificationDefaultTypeInternal _CChatRoom_ChatRoomHeaderState_Notification_default_instance_;
class CChatRoom_CreateChatRoomGroup_Request;
class CChatRoom_CreateChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_CreateChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_CreateChatRoomGroup_Request_default_instance_;
class CChatRoom_CreateChatRoomGroup_Response;
class CChatRoom_CreateChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_CreateChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_CreateChatRoomGroup_Response_default_instance_;
class CChatRoom_CreateChatRoom_Request;
class CChatRoom_CreateChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_CreateChatRoom_RequestDefaultTypeInternal _CChatRoom_CreateChatRoom_Request_default_instance_;
class CChatRoom_CreateChatRoom_Response;
class CChatRoom_CreateChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_CreateChatRoom_ResponseDefaultTypeInternal _CChatRoom_CreateChatRoom_Response_default_instance_;
class CChatRoom_CreateInviteLink_Request;
class CChatRoom_CreateInviteLink_RequestDefaultTypeInternal;
extern CChatRoom_CreateInviteLink_RequestDefaultTypeInternal _CChatRoom_CreateInviteLink_Request_default_instance_;
class CChatRoom_CreateInviteLink_Response;
class CChatRoom_CreateInviteLink_ResponseDefaultTypeInternal;
extern CChatRoom_CreateInviteLink_ResponseDefaultTypeInternal _CChatRoom_CreateInviteLink_Response_default_instance_;
class CChatRoom_CreateRole_Request;
class CChatRoom_CreateRole_RequestDefaultTypeInternal;
extern CChatRoom_CreateRole_RequestDefaultTypeInternal _CChatRoom_CreateRole_Request_default_instance_;
class CChatRoom_CreateRole_Response;
class CChatRoom_CreateRole_ResponseDefaultTypeInternal;
extern CChatRoom_CreateRole_ResponseDefaultTypeInternal _CChatRoom_CreateRole_Response_default_instance_;
class CChatRoom_DeleteChatMessages_Request;
class CChatRoom_DeleteChatMessages_RequestDefaultTypeInternal;
extern CChatRoom_DeleteChatMessages_RequestDefaultTypeInternal _CChatRoom_DeleteChatMessages_Request_default_instance_;
class CChatRoom_DeleteChatMessages_Request_Message;
class CChatRoom_DeleteChatMessages_Request_MessageDefaultTypeInternal;
extern CChatRoom_DeleteChatMessages_Request_MessageDefaultTypeInternal _CChatRoom_DeleteChatMessages_Request_Message_default_instance_;
class CChatRoom_DeleteChatMessages_Response;
class CChatRoom_DeleteChatMessages_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteChatMessages_ResponseDefaultTypeInternal _CChatRoom_DeleteChatMessages_Response_default_instance_;
class CChatRoom_DeleteChatRoom_Request;
class CChatRoom_DeleteChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_DeleteChatRoom_RequestDefaultTypeInternal _CChatRoom_DeleteChatRoom_Request_default_instance_;
class CChatRoom_DeleteChatRoom_Response;
class CChatRoom_DeleteChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteChatRoom_ResponseDefaultTypeInternal _CChatRoom_DeleteChatRoom_Response_default_instance_;
class CChatRoom_DeleteInviteLink_Request;
class CChatRoom_DeleteInviteLink_RequestDefaultTypeInternal;
extern CChatRoom_DeleteInviteLink_RequestDefaultTypeInternal _CChatRoom_DeleteInviteLink_Request_default_instance_;
class CChatRoom_DeleteInviteLink_Response;
class CChatRoom_DeleteInviteLink_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteInviteLink_ResponseDefaultTypeInternal _CChatRoom_DeleteInviteLink_Response_default_instance_;
class CChatRoom_DeleteRoleFromUser_Request;
class CChatRoom_DeleteRoleFromUser_RequestDefaultTypeInternal;
extern CChatRoom_DeleteRoleFromUser_RequestDefaultTypeInternal _CChatRoom_DeleteRoleFromUser_Request_default_instance_;
class CChatRoom_DeleteRoleFromUser_Response;
class CChatRoom_DeleteRoleFromUser_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteRoleFromUser_ResponseDefaultTypeInternal _CChatRoom_DeleteRoleFromUser_Response_default_instance_;
class CChatRoom_DeleteRole_Request;
class CChatRoom_DeleteRole_RequestDefaultTypeInternal;
extern CChatRoom_DeleteRole_RequestDefaultTypeInternal _CChatRoom_DeleteRole_Request_default_instance_;
class CChatRoom_DeleteRole_Response;
class CChatRoom_DeleteRole_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteRole_ResponseDefaultTypeInternal _CChatRoom_DeleteRole_Response_default_instance_;
class CChatRoom_GetBanList_Request;
class CChatRoom_GetBanList_RequestDefaultTypeInternal;
extern CChatRoom_GetBanList_RequestDefaultTypeInternal _CChatRoom_GetBanList_Request_default_instance_;
class CChatRoom_GetBanList_Response;
class CChatRoom_GetBanList_ResponseDefaultTypeInternal;
extern CChatRoom_GetBanList_ResponseDefaultTypeInternal _CChatRoom_GetBanList_Response_default_instance_;
class CChatRoom_GetBanList_Response_BanInfo;
class CChatRoom_GetBanList_Response_BanInfoDefaultTypeInternal;
extern CChatRoom_GetBanList_Response_BanInfoDefaultTypeInternal _CChatRoom_GetBanList_Response_BanInfo_default_instance_;
class CChatRoom_GetChatRoomGroupState_Request;
class CChatRoom_GetChatRoomGroupState_RequestDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupState_RequestDefaultTypeInternal _CChatRoom_GetChatRoomGroupState_Request_default_instance_;
class CChatRoom_GetChatRoomGroupState_Response;
class CChatRoom_GetChatRoomGroupState_ResponseDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupState_ResponseDefaultTypeInternal _CChatRoom_GetChatRoomGroupState_Response_default_instance_;
class CChatRoom_GetChatRoomGroupSummary_Request;
class CChatRoom_GetChatRoomGroupSummary_RequestDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupSummary_RequestDefaultTypeInternal _CChatRoom_GetChatRoomGroupSummary_Request_default_instance_;
class CChatRoom_GetChatRoomGroupSummary_Response;
class CChatRoom_GetChatRoomGroupSummary_ResponseDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupSummary_ResponseDefaultTypeInternal _CChatRoom_GetChatRoomGroupSummary_Response_default_instance_;
class CChatRoom_GetInviteInfo_Request;
class CChatRoom_GetInviteInfo_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteInfo_RequestDefaultTypeInternal _CChatRoom_GetInviteInfo_Request_default_instance_;
class CChatRoom_GetInviteInfo_Response;
class CChatRoom_GetInviteInfo_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteInfo_ResponseDefaultTypeInternal _CChatRoom_GetInviteInfo_Response_default_instance_;
class CChatRoom_GetInviteLinkInfo_Request;
class CChatRoom_GetInviteLinkInfo_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteLinkInfo_RequestDefaultTypeInternal _CChatRoom_GetInviteLinkInfo_Request_default_instance_;
class CChatRoom_GetInviteLinkInfo_Response;
class CChatRoom_GetInviteLinkInfo_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteLinkInfo_ResponseDefaultTypeInternal _CChatRoom_GetInviteLinkInfo_Response_default_instance_;
class CChatRoom_GetInviteLinksForGroup_Request;
class CChatRoom_GetInviteLinksForGroup_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteLinksForGroup_RequestDefaultTypeInternal _CChatRoom_GetInviteLinksForGroup_Request_default_instance_;
class CChatRoom_GetInviteLinksForGroup_Response;
class CChatRoom_GetInviteLinksForGroup_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteLinksForGroup_ResponseDefaultTypeInternal _CChatRoom_GetInviteLinksForGroup_Response_default_instance_;
class CChatRoom_GetInviteLinksForGroup_Response_LinkInfo;
class CChatRoom_GetInviteLinksForGroup_Response_LinkInfoDefaultTypeInternal;
extern CChatRoom_GetInviteLinksForGroup_Response_LinkInfoDefaultTypeInternal _CChatRoom_GetInviteLinksForGroup_Response_LinkInfo_default_instance_;
class CChatRoom_GetInviteList_Request;
class CChatRoom_GetInviteList_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteList_RequestDefaultTypeInternal _CChatRoom_GetInviteList_Request_default_instance_;
class CChatRoom_GetInviteList_Response;
class CChatRoom_GetInviteList_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteList_ResponseDefaultTypeInternal _CChatRoom_GetInviteList_Response_default_instance_;
class CChatRoom_GetMessageHistory_Request;
class CChatRoom_GetMessageHistory_RequestDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_RequestDefaultTypeInternal _CChatRoom_GetMessageHistory_Request_default_instance_;
class CChatRoom_GetMessageHistory_Response;
class CChatRoom_GetMessageHistory_ResponseDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_ResponseDefaultTypeInternal _CChatRoom_GetMessageHistory_Response_default_instance_;
class CChatRoom_GetMessageHistory_Response_ChatMessage;
class CChatRoom_GetMessageHistory_Response_ChatMessageDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_Response_ChatMessageDefaultTypeInternal _CChatRoom_GetMessageHistory_Response_ChatMessage_default_instance_;
class CChatRoom_GetMyChatRoomGroups_Request;
class CChatRoom_GetMyChatRoomGroups_RequestDefaultTypeInternal;
extern CChatRoom_GetMyChatRoomGroups_RequestDefaultTypeInternal _CChatRoom_GetMyChatRoomGroups_Request_default_instance_;
class CChatRoom_GetMyChatRoomGroups_Response;
class CChatRoom_GetMyChatRoomGroups_ResponseDefaultTypeInternal;
extern CChatRoom_GetMyChatRoomGroups_ResponseDefaultTypeInternal _CChatRoom_GetMyChatRoomGroups_Response_default_instance_;
class CChatRoom_GetRoleActions_Request;
class CChatRoom_GetRoleActions_RequestDefaultTypeInternal;
extern CChatRoom_GetRoleActions_RequestDefaultTypeInternal _CChatRoom_GetRoleActions_Request_default_instance_;
class CChatRoom_GetRoleActions_Response;
class CChatRoom_GetRoleActions_ResponseDefaultTypeInternal;
extern CChatRoom_GetRoleActions_ResponseDefaultTypeInternal _CChatRoom_GetRoleActions_Response_default_instance_;
class CChatRoom_GetRolesForUser_Request;
class CChatRoom_GetRolesForUser_RequestDefaultTypeInternal;
extern CChatRoom_GetRolesForUser_RequestDefaultTypeInternal _CChatRoom_GetRolesForUser_Request_default_instance_;
class CChatRoom_GetRolesForUser_Response;
class CChatRoom_GetRolesForUser_ResponseDefaultTypeInternal;
extern CChatRoom_GetRolesForUser_ResponseDefaultTypeInternal _CChatRoom_GetRolesForUser_Response_default_instance_;
class CChatRoom_GetRoles_Request;
class CChatRoom_GetRoles_RequestDefaultTypeInternal;
extern CChatRoom_GetRoles_RequestDefaultTypeInternal _CChatRoom_GetRoles_Request_default_instance_;
class CChatRoom_GetRoles_Response;
class CChatRoom_GetRoles_ResponseDefaultTypeInternal;
extern CChatRoom_GetRoles_ResponseDefaultTypeInternal _CChatRoom_GetRoles_Response_default_instance_;
class CChatRoom_IncomingChatMessage_Notification;
class CChatRoom_IncomingChatMessage_NotificationDefaultTypeInternal;
extern CChatRoom_IncomingChatMessage_NotificationDefaultTypeInternal _CChatRoom_IncomingChatMessage_Notification_default_instance_;
class CChatRoom_InviteFriendToChatRoomGroup_Request;
class CChatRoom_InviteFriendToChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_InviteFriendToChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_InviteFriendToChatRoomGroup_Request_default_instance_;
class CChatRoom_InviteFriendToChatRoomGroup_Response;
class CChatRoom_InviteFriendToChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_InviteFriendToChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_InviteFriendToChatRoomGroup_Response_default_instance_;
class CChatRoom_JoinChatRoomGroup_Request;
class CChatRoom_JoinChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_JoinChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_JoinChatRoomGroup_Request_default_instance_;
class CChatRoom_JoinChatRoomGroup_Response;
class CChatRoom_JoinChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_JoinChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_JoinChatRoomGroup_Response_default_instance_;
class CChatRoom_JoinVoiceChat_Request;
class CChatRoom_JoinVoiceChat_RequestDefaultTypeInternal;
extern CChatRoom_JoinVoiceChat_RequestDefaultTypeInternal _CChatRoom_JoinVoiceChat_Request_default_instance_;
class CChatRoom_JoinVoiceChat_Response;
class CChatRoom_JoinVoiceChat_ResponseDefaultTypeInternal;
extern CChatRoom_JoinVoiceChat_ResponseDefaultTypeInternal _CChatRoom_JoinVoiceChat_Response_default_instance_;
class CChatRoom_KickUser_Request;
class CChatRoom_KickUser_RequestDefaultTypeInternal;
extern CChatRoom_KickUser_RequestDefaultTypeInternal _CChatRoom_KickUser_Request_default_instance_;
class CChatRoom_KickUser_Response;
class CChatRoom_KickUser_ResponseDefaultTypeInternal;
extern CChatRoom_KickUser_ResponseDefaultTypeInternal _CChatRoom_KickUser_Response_default_instance_;
class CChatRoom_LeaveChatRoomGroup_Request;
class CChatRoom_LeaveChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_LeaveChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_LeaveChatRoomGroup_Request_default_instance_;
class CChatRoom_LeaveChatRoomGroup_Response;
class CChatRoom_LeaveChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_LeaveChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_LeaveChatRoomGroup_Response_default_instance_;
class CChatRoom_LeaveVoiceChat_Request;
class CChatRoom_LeaveVoiceChat_RequestDefaultTypeInternal;
extern CChatRoom_LeaveVoiceChat_RequestDefaultTypeInternal _CChatRoom_LeaveVoiceChat_Request_default_instance_;
class CChatRoom_LeaveVoiceChat_Response;
class CChatRoom_LeaveVoiceChat_ResponseDefaultTypeInternal;
extern CChatRoom_LeaveVoiceChat_ResponseDefaultTypeInternal _CChatRoom_LeaveVoiceChat_Response_default_instance_;
class CChatRoom_MemberStateChange_Notification;
class CChatRoom_MemberStateChange_NotificationDefaultTypeInternal;
extern CChatRoom_MemberStateChange_NotificationDefaultTypeInternal _CChatRoom_MemberStateChange_Notification_default_instance_;
class CChatRoom_MuteUser_Request;
class CChatRoom_MuteUser_RequestDefaultTypeInternal;
extern CChatRoom_MuteUser_RequestDefaultTypeInternal _CChatRoom_MuteUser_Request_default_instance_;
class CChatRoom_MuteUser_Response;
class CChatRoom_MuteUser_ResponseDefaultTypeInternal;
extern CChatRoom_MuteUser_ResponseDefaultTypeInternal _CChatRoom_MuteUser_Response_default_instance_;
class CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification;
class CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_NotificationDefaultTypeInternal;
extern CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_NotificationDefaultTypeInternal _CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification_default_instance_;
class CChatRoom_RenameChatRoomGroup_Request;
class CChatRoom_RenameChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_RenameChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_RenameChatRoomGroup_Request_default_instance_;
class CChatRoom_RenameChatRoomGroup_Response;
class CChatRoom_RenameChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_RenameChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_RenameChatRoomGroup_Response_default_instance_;
class CChatRoom_RenameChatRoom_Request;
class CChatRoom_RenameChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_RenameChatRoom_RequestDefaultTypeInternal _CChatRoom_RenameChatRoom_Request_default_instance_;
class CChatRoom_RenameChatRoom_Response;
class CChatRoom_RenameChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_RenameChatRoom_ResponseDefaultTypeInternal _CChatRoom_RenameChatRoom_Response_default_instance_;
class CChatRoom_RenameRole_Request;
class CChatRoom_RenameRole_RequestDefaultTypeInternal;
extern CChatRoom_RenameRole_RequestDefaultTypeInternal _CChatRoom_RenameRole_Request_default_instance_;
class CChatRoom_RenameRole_Response;
class CChatRoom_RenameRole_ResponseDefaultTypeInternal;
extern CChatRoom_RenameRole_ResponseDefaultTypeInternal _CChatRoom_RenameRole_Response_default_instance_;
class CChatRoom_ReorderChatRoom_Request;
class CChatRoom_ReorderChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_ReorderChatRoom_RequestDefaultTypeInternal _CChatRoom_ReorderChatRoom_Request_default_instance_;
class CChatRoom_ReorderChatRoom_Response;
class CChatRoom_ReorderChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_ReorderChatRoom_ResponseDefaultTypeInternal _CChatRoom_ReorderChatRoom_Response_default_instance_;
class CChatRoom_ReorderRole_Request;
class CChatRoom_ReorderRole_RequestDefaultTypeInternal;
extern CChatRoom_ReorderRole_RequestDefaultTypeInternal _CChatRoom_ReorderRole_Request_default_instance_;
class CChatRoom_ReorderRole_Response;
class CChatRoom_ReorderRole_ResponseDefaultTypeInternal;
extern CChatRoom_ReorderRole_ResponseDefaultTypeInternal _CChatRoom_ReorderRole_Response_default_instance_;
class CChatRoom_ReplaceRoleActions_Request;
class CChatRoom_ReplaceRoleActions_RequestDefaultTypeInternal;
extern CChatRoom_ReplaceRoleActions_RequestDefaultTypeInternal _CChatRoom_ReplaceRoleActions_Request_default_instance_;
class CChatRoom_ReplaceRoleActions_Response;
class CChatRoom_ReplaceRoleActions_ResponseDefaultTypeInternal;
extern CChatRoom_ReplaceRoleActions_ResponseDefaultTypeInternal _CChatRoom_ReplaceRoleActions_Response_default_instance_;
class CChatRoom_RevokeInvite_Request;
class CChatRoom_RevokeInvite_RequestDefaultTypeInternal;
extern CChatRoom_RevokeInvite_RequestDefaultTypeInternal _CChatRoom_RevokeInvite_Request_default_instance_;
class CChatRoom_RevokeInvite_Response;
class CChatRoom_RevokeInvite_ResponseDefaultTypeInternal;
extern CChatRoom_RevokeInvite_ResponseDefaultTypeInternal _CChatRoom_RevokeInvite_Response_default_instance_;
class CChatRoom_SaveChatRoomGroup_Request;
class CChatRoom_SaveChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_SaveChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_SaveChatRoomGroup_Request_default_instance_;
class CChatRoom_SaveChatRoomGroup_Response;
class CChatRoom_SaveChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_SaveChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_SaveChatRoomGroup_Response_default_instance_;
class CChatRoom_SendChatMessage_Request;
class CChatRoom_SendChatMessage_RequestDefaultTypeInternal;
extern CChatRoom_SendChatMessage_RequestDefaultTypeInternal _CChatRoom_SendChatMessage_Request_default_instance_;
class CChatRoom_SendChatMessage_Response;
class CChatRoom_SendChatMessage_ResponseDefaultTypeInternal;
extern CChatRoom_SendChatMessage_ResponseDefaultTypeInternal _CChatRoom_SendChatMessage_Response_default_instance_;
class CChatRoom_SetChatRoomGroupAvatar_Request;
class CChatRoom_SetChatRoomGroupAvatar_RequestDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupAvatar_RequestDefaultTypeInternal _CChatRoom_SetChatRoomGroupAvatar_Request_default_instance_;
class CChatRoom_SetChatRoomGroupAvatar_Response;
class CChatRoom_SetChatRoomGroupAvatar_ResponseDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupAvatar_ResponseDefaultTypeInternal _CChatRoom_SetChatRoomGroupAvatar_Response_default_instance_;
class CChatRoom_SetChatRoomGroupTagline_Request;
class CChatRoom_SetChatRoomGroupTagline_RequestDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupTagline_RequestDefaultTypeInternal _CChatRoom_SetChatRoomGroupTagline_Request_default_instance_;
class CChatRoom_SetChatRoomGroupTagline_Response;
class CChatRoom_SetChatRoomGroupTagline_ResponseDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupTagline_ResponseDefaultTypeInternal _CChatRoom_SetChatRoomGroupTagline_Response_default_instance_;
class CChatRoom_SetChatRoomGroupWatchingBroadcast_Request;
class CChatRoom_SetChatRoomGroupWatchingBroadcast_RequestDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupWatchingBroadcast_RequestDefaultTypeInternal _CChatRoom_SetChatRoomGroupWatchingBroadcast_Request_default_instance_;
class CChatRoom_SetChatRoomGroupWatchingBroadcast_Response;
class CChatRoom_SetChatRoomGroupWatchingBroadcast_ResponseDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupWatchingBroadcast_ResponseDefaultTypeInternal _CChatRoom_SetChatRoomGroupWatchingBroadcast_Response_default_instance_;
class CChatRoom_SetSessionActiveChatRoomGroups_Request;
class CChatRoom_SetSessionActiveChatRoomGroups_RequestDefaultTypeInternal;
extern CChatRoom_SetSessionActiveChatRoomGroups_RequestDefaultTypeInternal _CChatRoom_SetSessionActiveChatRoomGroups_Request_default_instance_;
class CChatRoom_SetSessionActiveChatRoomGroups_Response;
class CChatRoom_SetSessionActiveChatRoomGroups_ResponseDefaultTypeInternal;
extern CChatRoom_SetSessionActiveChatRoomGroups_ResponseDefaultTypeInternal _CChatRoom_SetSessionActiveChatRoomGroups_Response_default_instance_;
class CChatRoom_SetUserBanState_Request;
class CChatRoom_SetUserBanState_RequestDefaultTypeInternal;
extern CChatRoom_SetUserBanState_RequestDefaultTypeInternal _CChatRoom_SetUserBanState_Request_default_instance_;
class CChatRoom_SetUserBanState_Response;
class CChatRoom_SetUserBanState_ResponseDefaultTypeInternal;
extern CChatRoom_SetUserBanState_ResponseDefaultTypeInternal _CChatRoom_SetUserBanState_Response_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Request;
class CChatRoom_SetUserChatGroupPreferences_RequestDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_RequestDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Request_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences;
class CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferencesDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferencesDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences;
class CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferencesDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferencesDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Response;
class CChatRoom_SetUserChatGroupPreferences_ResponseDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_ResponseDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Response_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification;
class CChatUsability_ClientUsabilityMetrics_NotificationDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_NotificationDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_Metrics;
class CChatUsability_ClientUsabilityMetrics_Notification_MetricsDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_MetricsDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_Metrics_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_Settings;
class CChatUsability_ClientUsabilityMetrics_Notification_SettingsDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_SettingsDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_Settings_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_UIState;
class CChatUsability_ClientUsabilityMetrics_Notification_UIStateDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_UIStateDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_UIState_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState;
class CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseStateDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseStateDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings;
class CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettingsDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettingsDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings_default_instance_;
class CChatUsability_RequestClientUsabilityMetrics_Notification;
class CChatUsability_RequestClientUsabilityMetrics_NotificationDefaultTypeInternal;
extern CChatUsability_RequestClientUsabilityMetrics_NotificationDefaultTypeInternal _CChatUsability_RequestClientUsabilityMetrics_Notification_default_instance_;
class CChat_RequestFriendPersonaStates_Request;
class CChat_RequestFriendPersonaStates_RequestDefaultTypeInternal;
extern CChat_RequestFriendPersonaStates_RequestDefaultTypeInternal _CChat_RequestFriendPersonaStates_Request_default_instance_;
class CChat_RequestFriendPersonaStates_Response;
class CChat_RequestFriendPersonaStates_ResponseDefaultTypeInternal;
extern CChat_RequestFriendPersonaStates_ResponseDefaultTypeInternal _CChat_RequestFriendPersonaStates_Response_default_instance_;
class CClanChatRooms_GetClanChatRoomInfo_Request;
class CClanChatRooms_GetClanChatRoomInfo_RequestDefaultTypeInternal;
extern CClanChatRooms_GetClanChatRoomInfo_RequestDefaultTypeInternal _CClanChatRooms_GetClanChatRoomInfo_Request_default_instance_;
class CClanChatRooms_GetClanChatRoomInfo_Response;
class CClanChatRooms_GetClanChatRoomInfo_ResponseDefaultTypeInternal;
extern CClanChatRooms_GetClanChatRoomInfo_ResponseDefaultTypeInternal _CClanChatRooms_GetClanChatRoomInfo_Response_default_instance_;
class CClanChatRooms_SetClanChatRoomPrivate_Request;
class CClanChatRooms_SetClanChatRoomPrivate_RequestDefaultTypeInternal;
extern CClanChatRooms_SetClanChatRoomPrivate_RequestDefaultTypeInternal _CClanChatRooms_SetClanChatRoomPrivate_Request_default_instance_;
class CClanChatRooms_SetClanChatRoomPrivate_Response;
class CClanChatRooms_SetClanChatRoomPrivate_ResponseDefaultTypeInternal;
extern CClanChatRooms_SetClanChatRoomPrivate_ResponseDefaultTypeInternal _CClanChatRooms_SetClanChatRoomPrivate_Response_default_instance_;
class CUserChatRoomGroupState;
class CUserChatRoomGroupStateDefaultTypeInternal;
extern CUserChatRoomGroupStateDefaultTypeInternal _CUserChatRoomGroupState_default_instance_;
class CUserChatRoomState;
class CUserChatRoomStateDefaultTypeInternal;
extern CUserChatRoomStateDefaultTypeInternal _CUserChatRoomState_default_instance_;
class ChatRoomClient_NotifyChatGroupUserStateChanged_Notification;
class ChatRoomClient_NotifyChatGroupUserStateChanged_NotificationDefaultTypeInternal;
extern ChatRoomClient_NotifyChatGroupUserStateChanged_NotificationDefaultTypeInternal _ChatRoomClient_NotifyChatGroupUserStateChanged_Notification_default_instance_;
class ServerMessage;
class ServerMessageDefaultTypeInternal;
extern ServerMessageDefaultTypeInternal _ServerMessage_default_instance_;
namespace google {
namespace protobuf {
template<> ::CChatMentions* Arena::CreateMaybeMessage<::CChatMentions>(Arena*);
template<> ::CChatPartyBeacon* Arena::CreateMaybeMessage<::CChatPartyBeacon>(Arena*);
template<> ::CChatRole* Arena::CreateMaybeMessage<::CChatRole>(Arena*);
template<> ::CChatRoleActions* Arena::CreateMaybeMessage<::CChatRoleActions>(Arena*);
template<> ::CChatRoomGroupHeaderState* Arena::CreateMaybeMessage<::CChatRoomGroupHeaderState>(Arena*);
template<> ::CChatRoomGroupInvite* Arena::CreateMaybeMessage<::CChatRoomGroupInvite>(Arena*);
template<> ::CChatRoomGroupState* Arena::CreateMaybeMessage<::CChatRoomGroupState>(Arena*);
template<> ::CChatRoomMember* Arena::CreateMaybeMessage<::CChatRoomMember>(Arena*);
template<> ::CChatRoomState* Arena::CreateMaybeMessage<::CChatRoomState>(Arena*);
template<> ::CChatRoomSummaryPair* Arena::CreateMaybeMessage<::CChatRoomSummaryPair>(Arena*);
template<> ::CChatRoom_AckChatMessage_Notification* Arena::CreateMaybeMessage<::CChatRoom_AckChatMessage_Notification>(Arena*);
template<> ::CChatRoom_AddRoleToUser_Request* Arena::CreateMaybeMessage<::CChatRoom_AddRoleToUser_Request>(Arena*);
template<> ::CChatRoom_AddRoleToUser_Response* Arena::CreateMaybeMessage<::CChatRoom_AddRoleToUser_Response>(Arena*);
template<> ::CChatRoom_ChatMessageModified_Notification* Arena::CreateMaybeMessage<::CChatRoom_ChatMessageModified_Notification>(Arena*);
template<> ::CChatRoom_ChatMessageModified_Notification_ChatMessage* Arena::CreateMaybeMessage<::CChatRoom_ChatMessageModified_Notification_ChatMessage>(Arena*);
template<> ::CChatRoom_ChatRoomGroupRoomsChange_Notification* Arena::CreateMaybeMessage<::CChatRoom_ChatRoomGroupRoomsChange_Notification>(Arena*);
template<> ::CChatRoom_ChatRoomHeaderState_Notification* Arena::CreateMaybeMessage<::CChatRoom_ChatRoomHeaderState_Notification>(Arena*);
template<> ::CChatRoom_CreateChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_CreateChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_CreateChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoom_Request>(Arena*);
template<> ::CChatRoom_CreateChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoom_Response>(Arena*);
template<> ::CChatRoom_CreateInviteLink_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateInviteLink_Request>(Arena*);
template<> ::CChatRoom_CreateInviteLink_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateInviteLink_Response>(Arena*);
template<> ::CChatRoom_CreateRole_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateRole_Request>(Arena*);
template<> ::CChatRoom_CreateRole_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateRole_Response>(Arena*);
template<> ::CChatRoom_DeleteChatMessages_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatMessages_Request>(Arena*);
template<> ::CChatRoom_DeleteChatMessages_Request_Message* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatMessages_Request_Message>(Arena*);
template<> ::CChatRoom_DeleteChatMessages_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatMessages_Response>(Arena*);
template<> ::CChatRoom_DeleteChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatRoom_Request>(Arena*);
template<> ::CChatRoom_DeleteChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatRoom_Response>(Arena*);
template<> ::CChatRoom_DeleteInviteLink_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteInviteLink_Request>(Arena*);
template<> ::CChatRoom_DeleteInviteLink_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteInviteLink_Response>(Arena*);
template<> ::CChatRoom_DeleteRoleFromUser_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteRoleFromUser_Request>(Arena*);
template<> ::CChatRoom_DeleteRoleFromUser_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteRoleFromUser_Response>(Arena*);
template<> ::CChatRoom_DeleteRole_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteRole_Request>(Arena*);
template<> ::CChatRoom_DeleteRole_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteRole_Response>(Arena*);
template<> ::CChatRoom_GetBanList_Request* Arena::CreateMaybeMessage<::CChatRoom_GetBanList_Request>(Arena*);
template<> ::CChatRoom_GetBanList_Response* Arena::CreateMaybeMessage<::CChatRoom_GetBanList_Response>(Arena*);
template<> ::CChatRoom_GetBanList_Response_BanInfo* Arena::CreateMaybeMessage<::CChatRoom_GetBanList_Response_BanInfo>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupState_Request* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupState_Request>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupState_Response* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupState_Response>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupSummary_Request* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Request>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupSummary_Response* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(Arena*);
template<> ::CChatRoom_GetInviteInfo_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteInfo_Request>(Arena*);
template<> ::CChatRoom_GetInviteInfo_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteInfo_Response>(Arena*);
template<> ::CChatRoom_GetInviteLinkInfo_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinkInfo_Request>(Arena*);
template<> ::CChatRoom_GetInviteLinkInfo_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinkInfo_Response>(Arena*);
template<> ::CChatRoom_GetInviteLinksForGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinksForGroup_Request>(Arena*);
template<> ::CChatRoom_GetInviteLinksForGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinksForGroup_Response>(Arena*);
template<> ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo>(Arena*);
template<> ::CChatRoom_GetInviteList_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteList_Request>(Arena*);
template<> ::CChatRoom_GetInviteList_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteList_Response>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Request* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Request>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Response* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Response>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Response_ChatMessage* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Response_ChatMessage>(Arena*);
template<> ::CChatRoom_GetMyChatRoomGroups_Request* Arena::CreateMaybeMessage<::CChatRoom_GetMyChatRoomGroups_Request>(Arena*);
template<> ::CChatRoom_GetMyChatRoomGroups_Response* Arena::CreateMaybeMessage<::CChatRoom_GetMyChatRoomGroups_Response>(Arena*);
template<> ::CChatRoom_GetRoleActions_Request* Arena::CreateMaybeMessage<::CChatRoom_GetRoleActions_Request>(Arena*);
template<> ::CChatRoom_GetRoleActions_Response* Arena::CreateMaybeMessage<::CChatRoom_GetRoleActions_Response>(Arena*);
template<> ::CChatRoom_GetRolesForUser_Request* Arena::CreateMaybeMessage<::CChatRoom_GetRolesForUser_Request>(Arena*);
template<> ::CChatRoom_GetRolesForUser_Response* Arena::CreateMaybeMessage<::CChatRoom_GetRolesForUser_Response>(Arena*);
template<> ::CChatRoom_GetRoles_Request* Arena::CreateMaybeMessage<::CChatRoom_GetRoles_Request>(Arena*);
template<> ::CChatRoom_GetRoles_Response* Arena::CreateMaybeMessage<::CChatRoom_GetRoles_Response>(Arena*);
template<> ::CChatRoom_IncomingChatMessage_Notification* Arena::CreateMaybeMessage<::CChatRoom_IncomingChatMessage_Notification>(Arena*);
template<> ::CChatRoom_InviteFriendToChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_InviteFriendToChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_InviteFriendToChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_InviteFriendToChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_JoinChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_JoinChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_JoinChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_JoinChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_JoinVoiceChat_Request* Arena::CreateMaybeMessage<::CChatRoom_JoinVoiceChat_Request>(Arena*);
template<> ::CChatRoom_JoinVoiceChat_Response* Arena::CreateMaybeMessage<::CChatRoom_JoinVoiceChat_Response>(Arena*);
template<> ::CChatRoom_KickUser_Request* Arena::CreateMaybeMessage<::CChatRoom_KickUser_Request>(Arena*);
template<> ::CChatRoom_KickUser_Response* Arena::CreateMaybeMessage<::CChatRoom_KickUser_Response>(Arena*);
template<> ::CChatRoom_LeaveChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_LeaveChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_LeaveChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_LeaveChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_LeaveVoiceChat_Request* Arena::CreateMaybeMessage<::CChatRoom_LeaveVoiceChat_Request>(Arena*);
template<> ::CChatRoom_LeaveVoiceChat_Response* Arena::CreateMaybeMessage<::CChatRoom_LeaveVoiceChat_Response>(Arena*);
template<> ::CChatRoom_MemberStateChange_Notification* Arena::CreateMaybeMessage<::CChatRoom_MemberStateChange_Notification>(Arena*);
template<> ::CChatRoom_MuteUser_Request* Arena::CreateMaybeMessage<::CChatRoom_MuteUser_Request>(Arena*);
template<> ::CChatRoom_MuteUser_Response* Arena::CreateMaybeMessage<::CChatRoom_MuteUser_Response>(Arena*);
template<> ::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* Arena::CreateMaybeMessage<::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification>(Arena*);
template<> ::CChatRoom_RenameChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_RenameChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_RenameChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoom_Request>(Arena*);
template<> ::CChatRoom_RenameChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoom_Response>(Arena*);
template<> ::CChatRoom_RenameRole_Request* Arena::CreateMaybeMessage<::CChatRoom_RenameRole_Request>(Arena*);
template<> ::CChatRoom_RenameRole_Response* Arena::CreateMaybeMessage<::CChatRoom_RenameRole_Response>(Arena*);
template<> ::CChatRoom_ReorderChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_ReorderChatRoom_Request>(Arena*);
template<> ::CChatRoom_ReorderChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_ReorderChatRoom_Response>(Arena*);
template<> ::CChatRoom_ReorderRole_Request* Arena::CreateMaybeMessage<::CChatRoom_ReorderRole_Request>(Arena*);
template<> ::CChatRoom_ReorderRole_Response* Arena::CreateMaybeMessage<::CChatRoom_ReorderRole_Response>(Arena*);
template<> ::CChatRoom_ReplaceRoleActions_Request* Arena::CreateMaybeMessage<::CChatRoom_ReplaceRoleActions_Request>(Arena*);
template<> ::CChatRoom_ReplaceRoleActions_Response* Arena::CreateMaybeMessage<::CChatRoom_ReplaceRoleActions_Response>(Arena*);
template<> ::CChatRoom_RevokeInvite_Request* Arena::CreateMaybeMessage<::CChatRoom_RevokeInvite_Request>(Arena*);
template<> ::CChatRoom_RevokeInvite_Response* Arena::CreateMaybeMessage<::CChatRoom_RevokeInvite_Response>(Arena*);
template<> ::CChatRoom_SaveChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_SaveChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_SaveChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_SaveChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_SendChatMessage_Request* Arena::CreateMaybeMessage<::CChatRoom_SendChatMessage_Request>(Arena*);
template<> ::CChatRoom_SendChatMessage_Response* Arena::CreateMaybeMessage<::CChatRoom_SendChatMessage_Response>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupAvatar_Request* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupAvatar_Request>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupAvatar_Response* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupAvatar_Response>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupTagline_Request* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupTagline_Request>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupTagline_Response* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupTagline_Response>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response>(Arena*);
template<> ::CChatRoom_SetSessionActiveChatRoomGroups_Request* Arena::CreateMaybeMessage<::CChatRoom_SetSessionActiveChatRoomGroups_Request>(Arena*);
template<> ::CChatRoom_SetSessionActiveChatRoomGroups_Response* Arena::CreateMaybeMessage<::CChatRoom_SetSessionActiveChatRoomGroups_Response>(Arena*);
template<> ::CChatRoom_SetUserBanState_Request* Arena::CreateMaybeMessage<::CChatRoom_SetUserBanState_Request>(Arena*);
template<> ::CChatRoom_SetUserBanState_Response* Arena::CreateMaybeMessage<::CChatRoom_SetUserBanState_Response>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Request* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Response* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Response>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Settings>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(Arena*);
template<> ::CChatUsability_RequestClientUsabilityMetrics_Notification* Arena::CreateMaybeMessage<::CChatUsability_RequestClientUsabilityMetrics_Notification>(Arena*);
template<> ::CChat_RequestFriendPersonaStates_Request* Arena::CreateMaybeMessage<::CChat_RequestFriendPersonaStates_Request>(Arena*);
template<> ::CChat_RequestFriendPersonaStates_Response* Arena::CreateMaybeMessage<::CChat_RequestFriendPersonaStates_Response>(Arena*);
template<> ::CClanChatRooms_GetClanChatRoomInfo_Request* Arena::CreateMaybeMessage<::CClanChatRooms_GetClanChatRoomInfo_Request>(Arena*);
template<> ::CClanChatRooms_GetClanChatRoomInfo_Response* Arena::CreateMaybeMessage<::CClanChatRooms_GetClanChatRoomInfo_Response>(Arena*);
template<> ::CClanChatRooms_SetClanChatRoomPrivate_Request* Arena::CreateMaybeMessage<::CClanChatRooms_SetClanChatRoomPrivate_Request>(Arena*);
template<> ::CClanChatRooms_SetClanChatRoomPrivate_Response* Arena::CreateMaybeMessage<::CClanChatRooms_SetClanChatRoomPrivate_Response>(Arena*);
template<> ::CUserChatRoomGroupState* Arena::CreateMaybeMessage<::CUserChatRoomGroupState>(Arena*);
template<> ::CUserChatRoomState* Arena::CreateMaybeMessage<::CUserChatRoomState>(Arena*);
template<> ::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* Arena::CreateMaybeMessage<::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification>(Arena*);
template<> ::ServerMessage* Arena::CreateMaybeMessage<::ServerMessage>(Arena*);
}  // namespace protobuf
}  // namespace google

enum EChatRoomJoinState {
  k_EChatRoomJoinState_Default = 0,
  k_EChatRoomJoinState_None = 1,
  k_EChatRoomJoinState_Joined = 2,
  k_EChatRoomJoinState_TestInvalid = 99
};
bool EChatRoomJoinState_IsValid(int value);
const EChatRoomJoinState EChatRoomJoinState_MIN = k_EChatRoomJoinState_Default;
const EChatRoomJoinState EChatRoomJoinState_MAX = k_EChatRoomJoinState_TestInvalid;
const int EChatRoomJoinState_ARRAYSIZE = EChatRoomJoinState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EChatRoomJoinState_descriptor();
inline const ::std::string& EChatRoomJoinState_Name(EChatRoomJoinState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EChatRoomJoinState_descriptor(), value);
}
inline bool EChatRoomJoinState_Parse(
    const ::std::string& name, EChatRoomJoinState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EChatRoomJoinState>(
    EChatRoomJoinState_descriptor(), name, value);
}
enum EChatRoomGroupRank {
  k_EChatRoomGroupRank_Default = 0,
  k_EChatRoomGroupRank_Viewer = 10,
  k_EChatRoomGroupRank_Guest = 15,
  k_EChatRoomGroupRank_Member = 20,
  k_EChatRoomGroupRank_Moderator = 30,
  k_EChatRoomGroupRank_Officer = 40,
  k_EChatRoomGroupRank_Owner = 50,
  k_EChatRoomGroupRank_TestInvalid = 99
};
bool EChatRoomGroupRank_IsValid(int value);
const EChatRoomGroupRank EChatRoomGroupRank_MIN = k_EChatRoomGroupRank_Default;
const EChatRoomGroupRank EChatRoomGroupRank_MAX = k_EChatRoomGroupRank_TestInvalid;
const int EChatRoomGroupRank_ARRAYSIZE = EChatRoomGroupRank_MAX + 1;

const ::google::protobuf::EnumDescriptor* EChatRoomGroupRank_descriptor();
inline const ::std::string& EChatRoomGroupRank_Name(EChatRoomGroupRank value) {
  return ::google::protobuf::internal::NameOfEnum(
    EChatRoomGroupRank_descriptor(), value);
}
inline bool EChatRoomGroupRank_Parse(
    const ::std::string& name, EChatRoomGroupRank* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EChatRoomGroupRank>(
    EChatRoomGroupRank_descriptor(), name, value);
}
enum EChatRoomNotificationLevel {
  k_EChatroomNotificationLevel_Invalid = 0,
  k_EChatroomNotificationLevel_None = 1,
  k_EChatroomNotificationLevel_MentionMe = 2,
  k_EChatroomNotificationLevel_MentionAll = 3,
  k_EChatroomNotificationLevel_AllMessages = 4
};
bool EChatRoomNotificationLevel_IsValid(int value);
const EChatRoomNotificationLevel EChatRoomNotificationLevel_MIN = k_EChatroomNotificationLevel_Invalid;
const EChatRoomNotificationLevel EChatRoomNotificationLevel_MAX = k_EChatroomNotificationLevel_AllMessages;
const int EChatRoomNotificationLevel_ARRAYSIZE = EChatRoomNotificationLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* EChatRoomNotificationLevel_descriptor();
inline const ::std::string& EChatRoomNotificationLevel_Name(EChatRoomNotificationLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    EChatRoomNotificationLevel_descriptor(), value);
}
inline bool EChatRoomNotificationLevel_Parse(
    const ::std::string& name, EChatRoomNotificationLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EChatRoomNotificationLevel>(
    EChatRoomNotificationLevel_descriptor(), name, value);
}
enum EChatRoomServerMessage {
  k_EChatRoomServerMsg_Invalid = 0,
  k_EChatRoomServerMsg_RenameChatRoom = 1,
  k_EChatRoomServerMsg_Joined = 2,
  k_EChatRoomServerMsg_Parted = 3,
  k_EChatRoomServerMsg_Kicked = 4,
  k_EChatRoomServerMsg_Invited = 5,
  k_EChatRoomServerMsg_InviteDismissed = 8,
  k_EChatRoomServerMsg_ChatRoomTaglineChanged = 9,
  k_EChatRoomServerMsg_ChatRoomAvatarChanged = 10,
  k_EChatRoomServerMsg_AppCustom = 11
};
bool EChatRoomServerMessage_IsValid(int value);
const EChatRoomServerMessage EChatRoomServerMessage_MIN = k_EChatRoomServerMsg_Invalid;
const EChatRoomServerMessage EChatRoomServerMessage_MAX = k_EChatRoomServerMsg_AppCustom;
const int EChatRoomServerMessage_ARRAYSIZE = EChatRoomServerMessage_MAX + 1;

const ::google::protobuf::EnumDescriptor* EChatRoomServerMessage_descriptor();
inline const ::std::string& EChatRoomServerMessage_Name(EChatRoomServerMessage value) {
  return ::google::protobuf::internal::NameOfEnum(
    EChatRoomServerMessage_descriptor(), value);
}
inline bool EChatRoomServerMessage_Parse(
    const ::std::string& name, EChatRoomServerMessage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EChatRoomServerMessage>(
    EChatRoomServerMessage_descriptor(), name, value);
}
enum EChatRoomMemberStateChange {
  k_EChatRoomMemberStateChange_Invalid = 0,
  k_EChatRoomMemberStateChange_Joined = 1,
  k_EChatRoomMemberStateChange_Parted = 2,
  k_EChatRoomMemberStateChange_Kicked = 3,
  k_EChatRoomMemberStateChange_Invited = 4,
  k_EChatRoomMemberStateChange_RankChanged = 7,
  k_EChatRoomMemberStateChange_InviteDismissed = 8,
  k_EChatRoomMemberStateChange_Muted = 9,
  k_EChatRoomMemberStateChange_Banned = 10,
  k_EChatRoomMemberStateChange_RolesChanged = 12
};
bool EChatRoomMemberStateChange_IsValid(int value);
const EChatRoomMemberStateChange EChatRoomMemberStateChange_MIN = k_EChatRoomMemberStateChange_Invalid;
const EChatRoomMemberStateChange EChatRoomMemberStateChange_MAX = k_EChatRoomMemberStateChange_RolesChanged;
const int EChatRoomMemberStateChange_ARRAYSIZE = EChatRoomMemberStateChange_MAX + 1;

const ::google::protobuf::EnumDescriptor* EChatRoomMemberStateChange_descriptor();
inline const ::std::string& EChatRoomMemberStateChange_Name(EChatRoomMemberStateChange value) {
  return ::google::protobuf::internal::NameOfEnum(
    EChatRoomMemberStateChange_descriptor(), value);
}
inline bool EChatRoomMemberStateChange_Parse(
    const ::std::string& name, EChatRoomMemberStateChange* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EChatRoomMemberStateChange>(
    EChatRoomMemberStateChange_descriptor(), name, value);
}
// ===================================================================

class CChat_RequestFriendPersonaStates_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChat_RequestFriendPersonaStates_Request) */ {
 public:
  CChat_RequestFriendPersonaStates_Request();
  virtual ~CChat_RequestFriendPersonaStates_Request();

  CChat_RequestFriendPersonaStates_Request(const CChat_RequestFriendPersonaStates_Request& from);

  inline CChat_RequestFriendPersonaStates_Request& operator=(const CChat_RequestFriendPersonaStates_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChat_RequestFriendPersonaStates_Request(CChat_RequestFriendPersonaStates_Request&& from) noexcept
    : CChat_RequestFriendPersonaStates_Request() {
    *this = ::std::move(from);
  }

  inline CChat_RequestFriendPersonaStates_Request& operator=(CChat_RequestFriendPersonaStates_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChat_RequestFriendPersonaStates_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChat_RequestFriendPersonaStates_Request* internal_default_instance() {
    return reinterpret_cast<const CChat_RequestFriendPersonaStates_Request*>(
               &_CChat_RequestFriendPersonaStates_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CChat_RequestFriendPersonaStates_Request* other);
  friend void swap(CChat_RequestFriendPersonaStates_Request& a, CChat_RequestFriendPersonaStates_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChat_RequestFriendPersonaStates_Request* New() const final {
    return CreateMaybeMessage<CChat_RequestFriendPersonaStates_Request>(NULL);
  }

  CChat_RequestFriendPersonaStates_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChat_RequestFriendPersonaStates_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChat_RequestFriendPersonaStates_Request& from);
  void MergeFrom(const CChat_RequestFriendPersonaStates_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChat_RequestFriendPersonaStates_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChat_RequestFriendPersonaStates_Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChat_RequestFriendPersonaStates_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChat_RequestFriendPersonaStates_Response) */ {
 public:
  CChat_RequestFriendPersonaStates_Response();
  virtual ~CChat_RequestFriendPersonaStates_Response();

  CChat_RequestFriendPersonaStates_Response(const CChat_RequestFriendPersonaStates_Response& from);

  inline CChat_RequestFriendPersonaStates_Response& operator=(const CChat_RequestFriendPersonaStates_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChat_RequestFriendPersonaStates_Response(CChat_RequestFriendPersonaStates_Response&& from) noexcept
    : CChat_RequestFriendPersonaStates_Response() {
    *this = ::std::move(from);
  }

  inline CChat_RequestFriendPersonaStates_Response& operator=(CChat_RequestFriendPersonaStates_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChat_RequestFriendPersonaStates_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChat_RequestFriendPersonaStates_Response* internal_default_instance() {
    return reinterpret_cast<const CChat_RequestFriendPersonaStates_Response*>(
               &_CChat_RequestFriendPersonaStates_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CChat_RequestFriendPersonaStates_Response* other);
  friend void swap(CChat_RequestFriendPersonaStates_Response& a, CChat_RequestFriendPersonaStates_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChat_RequestFriendPersonaStates_Response* New() const final {
    return CreateMaybeMessage<CChat_RequestFriendPersonaStates_Response>(NULL);
  }

  CChat_RequestFriendPersonaStates_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChat_RequestFriendPersonaStates_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChat_RequestFriendPersonaStates_Response& from);
  void MergeFrom(const CChat_RequestFriendPersonaStates_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChat_RequestFriendPersonaStates_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChat_RequestFriendPersonaStates_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoomGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoomGroup_Request) */ {
 public:
  CChatRoom_CreateChatRoomGroup_Request();
  virtual ~CChatRoom_CreateChatRoomGroup_Request();

  CChatRoom_CreateChatRoomGroup_Request(const CChatRoom_CreateChatRoomGroup_Request& from);

  inline CChatRoom_CreateChatRoomGroup_Request& operator=(const CChatRoom_CreateChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateChatRoomGroup_Request(CChatRoom_CreateChatRoomGroup_Request&& from) noexcept
    : CChatRoom_CreateChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoomGroup_Request& operator=(CChatRoom_CreateChatRoomGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateChatRoomGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoomGroup_Request*>(
               &_CChatRoom_CreateChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CChatRoom_CreateChatRoomGroup_Request* other);
  friend void swap(CChatRoom_CreateChatRoomGroup_Request& a, CChatRoom_CreateChatRoomGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateChatRoomGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoomGroup_Request>(NULL);
  }

  CChatRoom_CreateChatRoomGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoomGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateChatRoomGroup_Request& from);
  void MergeFrom(const CChatRoom_CreateChatRoomGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoomGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamid_invitees = 4;
  int steamid_invitees_size() const;
  void clear_steamid_invitees();
  static const int kSteamidInviteesFieldNumber = 4;
  ::google::protobuf::uint64 steamid_invitees(int index) const;
  void set_steamid_invitees(int index, ::google::protobuf::uint64 value);
  void add_steamid_invitees(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamid_invitees() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamid_invitees();

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional fixed64 steamid_partner = 1;
  bool has_steamid_partner() const;
  void clear_steamid_partner();
  static const int kSteamidPartnerFieldNumber = 1;
  ::google::protobuf::uint64 steamid_partner() const;
  void set_steamid_partner(::google::protobuf::uint64 value);

  // optional fixed64 steamid_invited = 2;
  bool has_steamid_invited() const;
  void clear_steamid_invited();
  static const int kSteamidInvitedFieldNumber = 2;
  ::google::protobuf::uint64 steamid_invited() const;
  void set_steamid_invited(::google::protobuf::uint64 value);

  // optional uint32 watching_broadcast_accountid = 6;
  bool has_watching_broadcast_accountid() const;
  void clear_watching_broadcast_accountid();
  static const int kWatchingBroadcastAccountidFieldNumber = 6;
  ::google::protobuf::uint32 watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoomGroup_Request)
 private:
  void set_has_steamid_partner();
  void clear_has_steamid_partner();
  void set_has_steamid_invited();
  void clear_has_steamid_invited();
  void set_has_name();
  void clear_has_name();
  void set_has_watching_broadcast_accountid();
  void clear_has_watching_broadcast_accountid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamid_invitees_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 steamid_partner_;
  ::google::protobuf::uint64 steamid_invited_;
  ::google::protobuf::uint32 watching_broadcast_accountid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRole : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRole) */ {
 public:
  CChatRole();
  virtual ~CChatRole();

  CChatRole(const CChatRole& from);

  inline CChatRole& operator=(const CChatRole& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRole(CChatRole&& from) noexcept
    : CChatRole() {
    *this = ::std::move(from);
  }

  inline CChatRole& operator=(CChatRole&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRole& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRole* internal_default_instance() {
    return reinterpret_cast<const CChatRole*>(
               &_CChatRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CChatRole* other);
  friend void swap(CChatRole& a, CChatRole& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRole* New() const final {
    return CreateMaybeMessage<CChatRole>(NULL);
  }

  CChatRole* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRole>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRole& from);
  void MergeFrom(const CChatRole& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRole* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 role_id = 1;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // optional uint32 ordinal = 3;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 3;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRole)
 private:
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_name();
  void clear_has_name();
  void set_has_ordinal();
  void clear_has_ordinal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint32 ordinal_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoleActions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoleActions) */ {
 public:
  CChatRoleActions();
  virtual ~CChatRoleActions();

  CChatRoleActions(const CChatRoleActions& from);

  inline CChatRoleActions& operator=(const CChatRoleActions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoleActions(CChatRoleActions&& from) noexcept
    : CChatRoleActions() {
    *this = ::std::move(from);
  }

  inline CChatRoleActions& operator=(CChatRoleActions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoleActions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoleActions* internal_default_instance() {
    return reinterpret_cast<const CChatRoleActions*>(
               &_CChatRoleActions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CChatRoleActions* other);
  friend void swap(CChatRoleActions& a, CChatRoleActions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoleActions* New() const final {
    return CreateMaybeMessage<CChatRoleActions>(NULL);
  }

  CChatRoleActions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoleActions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoleActions& from);
  void MergeFrom(const CChatRoleActions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoleActions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 role_id = 1;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // optional bool can_create_rename_delete_channel = 2;
  bool has_can_create_rename_delete_channel() const;
  void clear_can_create_rename_delete_channel();
  static const int kCanCreateRenameDeleteChannelFieldNumber = 2;
  bool can_create_rename_delete_channel() const;
  void set_can_create_rename_delete_channel(bool value);

  // optional bool can_kick = 3;
  bool has_can_kick() const;
  void clear_can_kick();
  static const int kCanKickFieldNumber = 3;
  bool can_kick() const;
  void set_can_kick(bool value);

  // optional bool can_ban = 4;
  bool has_can_ban() const;
  void clear_can_ban();
  static const int kCanBanFieldNumber = 4;
  bool can_ban() const;
  void set_can_ban(bool value);

  // optional bool can_invite = 5;
  bool has_can_invite() const;
  void clear_can_invite();
  static const int kCanInviteFieldNumber = 5;
  bool can_invite() const;
  void set_can_invite(bool value);

  // optional bool can_change_tagline_avatar_name = 6;
  bool has_can_change_tagline_avatar_name() const;
  void clear_can_change_tagline_avatar_name();
  static const int kCanChangeTaglineAvatarNameFieldNumber = 6;
  bool can_change_tagline_avatar_name() const;
  void set_can_change_tagline_avatar_name(bool value);

  // optional bool can_chat = 7;
  bool has_can_chat() const;
  void clear_can_chat();
  static const int kCanChatFieldNumber = 7;
  bool can_chat() const;
  void set_can_chat(bool value);

  // optional bool can_view_history = 8;
  bool has_can_view_history() const;
  void clear_can_view_history();
  static const int kCanViewHistoryFieldNumber = 8;
  bool can_view_history() const;
  void set_can_view_history(bool value);

  // optional bool can_change_group_roles = 9;
  bool has_can_change_group_roles() const;
  void clear_can_change_group_roles();
  static const int kCanChangeGroupRolesFieldNumber = 9;
  bool can_change_group_roles() const;
  void set_can_change_group_roles(bool value);

  // optional bool can_change_user_roles = 10;
  bool has_can_change_user_roles() const;
  void clear_can_change_user_roles();
  static const int kCanChangeUserRolesFieldNumber = 10;
  bool can_change_user_roles() const;
  void set_can_change_user_roles(bool value);

  // optional bool can_mention_all = 11;
  bool has_can_mention_all() const;
  void clear_can_mention_all();
  static const int kCanMentionAllFieldNumber = 11;
  bool can_mention_all() const;
  void set_can_mention_all(bool value);

  // optional bool can_set_watching_broadcast = 12;
  bool has_can_set_watching_broadcast() const;
  void clear_can_set_watching_broadcast();
  static const int kCanSetWatchingBroadcastFieldNumber = 12;
  bool can_set_watching_broadcast() const;
  void set_can_set_watching_broadcast(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoleActions)
 private:
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_can_create_rename_delete_channel();
  void clear_has_can_create_rename_delete_channel();
  void set_has_can_kick();
  void clear_has_can_kick();
  void set_has_can_ban();
  void clear_has_can_ban();
  void set_has_can_invite();
  void clear_has_can_invite();
  void set_has_can_change_tagline_avatar_name();
  void clear_has_can_change_tagline_avatar_name();
  void set_has_can_chat();
  void clear_has_can_chat();
  void set_has_can_view_history();
  void clear_has_can_view_history();
  void set_has_can_change_group_roles();
  void clear_has_can_change_group_roles();
  void set_has_can_change_user_roles();
  void clear_has_can_change_user_roles();
  void set_has_can_mention_all();
  void clear_has_can_mention_all();
  void set_has_can_set_watching_broadcast();
  void clear_has_can_set_watching_broadcast();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 role_id_;
  bool can_create_rename_delete_channel_;
  bool can_kick_;
  bool can_ban_;
  bool can_invite_;
  bool can_change_tagline_avatar_name_;
  bool can_chat_;
  bool can_view_history_;
  bool can_change_group_roles_;
  bool can_change_user_roles_;
  bool can_mention_all_;
  bool can_set_watching_broadcast_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatPartyBeacon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatPartyBeacon) */ {
 public:
  CChatPartyBeacon();
  virtual ~CChatPartyBeacon();

  CChatPartyBeacon(const CChatPartyBeacon& from);

  inline CChatPartyBeacon& operator=(const CChatPartyBeacon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatPartyBeacon(CChatPartyBeacon&& from) noexcept
    : CChatPartyBeacon() {
    *this = ::std::move(from);
  }

  inline CChatPartyBeacon& operator=(CChatPartyBeacon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatPartyBeacon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatPartyBeacon* internal_default_instance() {
    return reinterpret_cast<const CChatPartyBeacon*>(
               &_CChatPartyBeacon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CChatPartyBeacon* other);
  friend void swap(CChatPartyBeacon& a, CChatPartyBeacon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatPartyBeacon* New() const final {
    return CreateMaybeMessage<CChatPartyBeacon>(NULL);
  }

  CChatPartyBeacon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatPartyBeacon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatPartyBeacon& from);
  void MergeFrom(const CChatPartyBeacon& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatPartyBeacon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_metadata = 4;
  bool has_game_metadata() const;
  void clear_game_metadata();
  static const int kGameMetadataFieldNumber = 4;
  const ::std::string& game_metadata() const;
  void set_game_metadata(const ::std::string& value);
  #if LANG_CXX11
  void set_game_metadata(::std::string&& value);
  #endif
  void set_game_metadata(const char* value);
  void set_game_metadata(const char* value, size_t size);
  ::std::string* mutable_game_metadata();
  ::std::string* release_game_metadata();
  void set_allocated_game_metadata(::std::string* game_metadata);

  // optional fixed64 steamid_owner = 2;
  bool has_steamid_owner() const;
  void clear_steamid_owner();
  static const int kSteamidOwnerFieldNumber = 2;
  ::google::protobuf::uint64 steamid_owner() const;
  void set_steamid_owner(::google::protobuf::uint64 value);

  // optional fixed64 beacon_id = 3;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 3;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatPartyBeacon)
 private:
  void set_has_app_id();
  void clear_has_app_id();
  void set_has_steamid_owner();
  void clear_has_steamid_owner();
  void set_has_beacon_id();
  void clear_has_beacon_id();
  void set_has_game_metadata();
  void clear_has_game_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_metadata_;
  ::google::protobuf::uint64 steamid_owner_;
  ::google::protobuf::uint64 beacon_id_;
  ::google::protobuf::uint32 app_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoomGroupHeaderState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoomGroupHeaderState) */ {
 public:
  CChatRoomGroupHeaderState();
  virtual ~CChatRoomGroupHeaderState();

  CChatRoomGroupHeaderState(const CChatRoomGroupHeaderState& from);

  inline CChatRoomGroupHeaderState& operator=(const CChatRoomGroupHeaderState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoomGroupHeaderState(CChatRoomGroupHeaderState&& from) noexcept
    : CChatRoomGroupHeaderState() {
    *this = ::std::move(from);
  }

  inline CChatRoomGroupHeaderState& operator=(CChatRoomGroupHeaderState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoomGroupHeaderState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoomGroupHeaderState* internal_default_instance() {
    return reinterpret_cast<const CChatRoomGroupHeaderState*>(
               &_CChatRoomGroupHeaderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CChatRoomGroupHeaderState* other);
  friend void swap(CChatRoomGroupHeaderState& a, CChatRoomGroupHeaderState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoomGroupHeaderState* New() const final {
    return CreateMaybeMessage<CChatRoomGroupHeaderState>(NULL);
  }

  CChatRoomGroupHeaderState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoomGroupHeaderState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoomGroupHeaderState& from);
  void MergeFrom(const CChatRoomGroupHeaderState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomGroupHeaderState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRole roles = 18;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 18;
  ::CChatRole* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRole >*
      mutable_roles();
  const ::CChatRole& roles(int index) const;
  ::CChatRole* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::CChatRole >&
      roles() const;

  // repeated .CChatRoleActions role_actions = 19;
  int role_actions_size() const;
  void clear_role_actions();
  static const int kRoleActionsFieldNumber = 19;
  ::CChatRoleActions* mutable_role_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >*
      mutable_role_actions();
  const ::CChatRoleActions& role_actions(int index) const;
  ::CChatRoleActions* add_role_actions();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >&
      role_actions() const;

  // repeated .CChatPartyBeacon party_beacons = 22;
  int party_beacons_size() const;
  void clear_party_beacons();
  static const int kPartyBeaconsFieldNumber = 22;
  ::CChatPartyBeacon* mutable_party_beacons(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >*
      mutable_party_beacons();
  const ::CChatPartyBeacon& party_beacons(int index) const;
  ::CChatPartyBeacon* add_party_beacons();
  const ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >&
      party_beacons() const;

  // optional string chat_name = 2;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 2;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // optional string tagline = 15;
  bool has_tagline() const;
  void clear_tagline();
  static const int kTaglineFieldNumber = 15;
  const ::std::string& tagline() const;
  void set_tagline(const ::std::string& value);
  #if LANG_CXX11
  void set_tagline(::std::string&& value);
  #endif
  void set_tagline(const char* value);
  void set_tagline(const char* value, size_t size);
  ::std::string* mutable_tagline();
  ::std::string* release_tagline();
  void set_allocated_tagline(::std::string* tagline);

  // optional bytes avatar_sha = 16;
  bool has_avatar_sha() const;
  void clear_avatar_sha();
  static const int kAvatarShaFieldNumber = 16;
  const ::std::string& avatar_sha() const;
  void set_avatar_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar_sha(::std::string&& value);
  #endif
  void set_avatar_sha(const char* value);
  void set_avatar_sha(const void* value, size_t size);
  ::std::string* mutable_avatar_sha();
  ::std::string* release_avatar_sha();
  void set_allocated_avatar_sha(::std::string* avatar_sha);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint32 clanid = 13;
  bool has_clanid() const;
  void clear_clanid();
  static const int kClanidFieldNumber = 13;
  ::google::protobuf::uint32 clanid() const;
  void set_clanid(::google::protobuf::uint32 value);

  // optional uint32 accountid_owner = 14;
  bool has_accountid_owner() const;
  void clear_accountid_owner();
  static const int kAccountidOwnerFieldNumber = 14;
  ::google::protobuf::uint32 accountid_owner() const;
  void set_accountid_owner(::google::protobuf::uint32 value);

  // optional uint64 default_role_id = 17;
  bool has_default_role_id() const;
  void clear_default_role_id();
  static const int kDefaultRoleIdFieldNumber = 17;
  ::google::protobuf::uint64 default_role_id() const;
  void set_default_role_id(::google::protobuf::uint64 value);

  // optional uint32 watching_broadcast_accountid = 20;
  bool has_watching_broadcast_accountid() const;
  void clear_watching_broadcast_accountid();
  static const int kWatchingBroadcastAccountidFieldNumber = 20;
  ::google::protobuf::uint32 watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(::google::protobuf::uint32 value);

  // optional uint32 appid = 21;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 21;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoomGroupHeaderState)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_name();
  void clear_has_chat_name();
  void set_has_clanid();
  void clear_has_clanid();
  void set_has_accountid_owner();
  void clear_has_accountid_owner();
  void set_has_appid();
  void clear_has_appid();
  void set_has_tagline();
  void clear_has_tagline();
  void set_has_avatar_sha();
  void clear_has_avatar_sha();
  void set_has_default_role_id();
  void clear_has_default_role_id();
  void set_has_watching_broadcast_accountid();
  void clear_has_watching_broadcast_accountid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRole > roles_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoleActions > role_actions_;
  ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon > party_beacons_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  ::google::protobuf::internal::ArenaStringPtr tagline_;
  ::google::protobuf::internal::ArenaStringPtr avatar_sha_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint32 clanid_;
  ::google::protobuf::uint32 accountid_owner_;
  ::google::protobuf::uint64 default_role_id_;
  ::google::protobuf::uint32 watching_broadcast_accountid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoomMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoomMember) */ {
 public:
  CChatRoomMember();
  virtual ~CChatRoomMember();

  CChatRoomMember(const CChatRoomMember& from);

  inline CChatRoomMember& operator=(const CChatRoomMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoomMember(CChatRoomMember&& from) noexcept
    : CChatRoomMember() {
    *this = ::std::move(from);
  }

  inline CChatRoomMember& operator=(CChatRoomMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoomMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoomMember* internal_default_instance() {
    return reinterpret_cast<const CChatRoomMember*>(
               &_CChatRoomMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CChatRoomMember* other);
  friend void swap(CChatRoomMember& a, CChatRoomMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoomMember* New() const final {
    return CreateMaybeMessage<CChatRoomMember>(NULL);
  }

  CChatRoomMember* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoomMember>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoomMember& from);
  void MergeFrom(const CChatRoomMember& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 role_ids = 7;
  int role_ids_size() const;
  void clear_role_ids();
  static const int kRoleIdsFieldNumber = 7;
  ::google::protobuf::uint64 role_ids(int index) const;
  void set_role_ids(int index, ::google::protobuf::uint64 value);
  void add_role_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      role_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_role_ids();

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional .EChatRoomJoinState state = 3 [default = k_EChatRoomJoinState_Default];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::EChatRoomJoinState state() const;
  void set_state(::EChatRoomJoinState value);

  // optional .EChatRoomGroupRank rank = 4 [default = k_EChatRoomGroupRank_Default];
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 4;
  ::EChatRoomGroupRank rank() const;
  void set_rank(::EChatRoomGroupRank value);

  // optional uint32 time_kick_expire = 6;
  bool has_time_kick_expire() const;
  void clear_time_kick_expire();
  static const int kTimeKickExpireFieldNumber = 6;
  ::google::protobuf::uint32 time_kick_expire() const;
  void set_time_kick_expire(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoomMember)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_state();
  void clear_has_state();
  void set_has_rank();
  void clear_has_rank();
  void set_has_time_kick_expire();
  void clear_has_time_kick_expire();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > role_ids_;
  ::google::protobuf::uint32 accountid_;
  int state_;
  int rank_;
  ::google::protobuf::uint32 time_kick_expire_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoomState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoomState) */ {
 public:
  CChatRoomState();
  virtual ~CChatRoomState();

  CChatRoomState(const CChatRoomState& from);

  inline CChatRoomState& operator=(const CChatRoomState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoomState(CChatRoomState&& from) noexcept
    : CChatRoomState() {
    *this = ::std::move(from);
  }

  inline CChatRoomState& operator=(CChatRoomState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoomState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoomState* internal_default_instance() {
    return reinterpret_cast<const CChatRoomState*>(
               &_CChatRoomState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CChatRoomState* other);
  friend void swap(CChatRoomState& a, CChatRoomState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoomState* New() const final {
    return CreateMaybeMessage<CChatRoomState>(NULL);
  }

  CChatRoomState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoomState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoomState& from);
  void MergeFrom(const CChatRoomState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 members_in_voice = 4;
  int members_in_voice_size() const;
  void clear_members_in_voice();
  static const int kMembersInVoiceFieldNumber = 4;
  ::google::protobuf::uint32 members_in_voice(int index) const;
  void set_members_in_voice(int index, ::google::protobuf::uint32 value);
  void add_members_in_voice(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      members_in_voice() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_members_in_voice();

  // optional string chat_name = 2;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 2;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional bool voice_allowed = 3;
  bool has_voice_allowed() const;
  void clear_voice_allowed();
  static const int kVoiceAllowedFieldNumber = 3;
  bool voice_allowed() const;
  void set_voice_allowed(bool value);

  // optional uint32 time_last_message = 5;
  bool has_time_last_message() const;
  void clear_time_last_message();
  static const int kTimeLastMessageFieldNumber = 5;
  ::google::protobuf::uint32 time_last_message() const;
  void set_time_last_message(::google::protobuf::uint32 value);

  // optional uint32 sort_order = 6;
  bool has_sort_order() const;
  void clear_sort_order();
  static const int kSortOrderFieldNumber = 6;
  ::google::protobuf::uint32 sort_order() const;
  void set_sort_order(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoomState)
 private:
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_chat_name();
  void clear_has_chat_name();
  void set_has_voice_allowed();
  void clear_has_voice_allowed();
  void set_has_time_last_message();
  void clear_has_time_last_message();
  void set_has_sort_order();
  void clear_has_sort_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > members_in_voice_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  ::google::protobuf::uint64 chat_id_;
  bool voice_allowed_;
  ::google::protobuf::uint32 time_last_message_;
  ::google::protobuf::uint32 sort_order_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoomGroupState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoomGroupState) */ {
 public:
  CChatRoomGroupState();
  virtual ~CChatRoomGroupState();

  CChatRoomGroupState(const CChatRoomGroupState& from);

  inline CChatRoomGroupState& operator=(const CChatRoomGroupState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoomGroupState(CChatRoomGroupState&& from) noexcept
    : CChatRoomGroupState() {
    *this = ::std::move(from);
  }

  inline CChatRoomGroupState& operator=(CChatRoomGroupState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoomGroupState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoomGroupState* internal_default_instance() {
    return reinterpret_cast<const CChatRoomGroupState*>(
               &_CChatRoomGroupState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CChatRoomGroupState* other);
  friend void swap(CChatRoomGroupState& a, CChatRoomGroupState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoomGroupState* New() const final {
    return CreateMaybeMessage<CChatRoomGroupState>(NULL);
  }

  CChatRoomGroupState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoomGroupState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoomGroupState& from);
  void MergeFrom(const CChatRoomGroupState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomGroupState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoomMember members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  ::CChatRoomMember* mutable_members(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >*
      mutable_members();
  const ::CChatRoomMember& members(int index) const;
  ::CChatRoomMember* add_members();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >&
      members() const;

  // repeated .CChatRoomState chat_rooms = 5;
  int chat_rooms_size() const;
  void clear_chat_rooms();
  static const int kChatRoomsFieldNumber = 5;
  ::CChatRoomState* mutable_chat_rooms(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomState >*
      mutable_chat_rooms();
  const ::CChatRoomState& chat_rooms(int index) const;
  ::CChatRoomState* add_chat_rooms();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomState >&
      chat_rooms() const;

  // repeated .CChatRoomMember kicked = 7;
  int kicked_size() const;
  void clear_kicked();
  static const int kKickedFieldNumber = 7;
  ::CChatRoomMember* mutable_kicked(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >*
      mutable_kicked();
  const ::CChatRoomMember& kicked(int index) const;
  ::CChatRoomMember* add_kicked();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >&
      kicked() const;

  // optional .CChatRoomGroupHeaderState header_state = 1;
  bool has_header_state() const;
  void clear_header_state();
  static const int kHeaderStateFieldNumber = 1;
  private:
  const ::CChatRoomGroupHeaderState& _internal_header_state() const;
  public:
  const ::CChatRoomGroupHeaderState& header_state() const;
  ::CChatRoomGroupHeaderState* release_header_state();
  ::CChatRoomGroupHeaderState* mutable_header_state();
  void set_allocated_header_state(::CChatRoomGroupHeaderState* header_state);

  // optional uint64 default_chat_id = 4;
  bool has_default_chat_id() const;
  void clear_default_chat_id();
  static const int kDefaultChatIdFieldNumber = 4;
  ::google::protobuf::uint64 default_chat_id() const;
  void set_default_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoomGroupState)
 private:
  void set_has_header_state();
  void clear_has_header_state();
  void set_has_default_chat_id();
  void clear_has_default_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomMember > members_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomState > chat_rooms_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomMember > kicked_;
  ::CChatRoomGroupHeaderState* header_state_;
  ::google::protobuf::uint64 default_chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CUserChatRoomState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserChatRoomState) */ {
 public:
  CUserChatRoomState();
  virtual ~CUserChatRoomState();

  CUserChatRoomState(const CUserChatRoomState& from);

  inline CUserChatRoomState& operator=(const CUserChatRoomState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserChatRoomState(CUserChatRoomState&& from) noexcept
    : CUserChatRoomState() {
    *this = ::std::move(from);
  }

  inline CUserChatRoomState& operator=(CUserChatRoomState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserChatRoomState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserChatRoomState* internal_default_instance() {
    return reinterpret_cast<const CUserChatRoomState*>(
               &_CUserChatRoomState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CUserChatRoomState* other);
  friend void swap(CUserChatRoomState& a, CUserChatRoomState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserChatRoomState* New() const final {
    return CreateMaybeMessage<CUserChatRoomState>(NULL);
  }

  CUserChatRoomState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserChatRoomState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserChatRoomState& from);
  void MergeFrom(const CUserChatRoomState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserChatRoomState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint32 time_joined = 2;
  bool has_time_joined() const;
  void clear_time_joined();
  static const int kTimeJoinedFieldNumber = 2;
  ::google::protobuf::uint32 time_joined() const;
  void set_time_joined(::google::protobuf::uint32 value);

  // optional uint32 time_last_ack = 3;
  bool has_time_last_ack() const;
  void clear_time_last_ack();
  static const int kTimeLastAckFieldNumber = 3;
  ::google::protobuf::uint32 time_last_ack() const;
  void set_time_last_ack(::google::protobuf::uint32 value);

  // optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  void clear_desktop_notification_level();
  static const int kDesktopNotificationLevelFieldNumber = 4;
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);

  // optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  void clear_mobile_notification_level();
  static const int kMobileNotificationLevelFieldNumber = 5;
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);

  // optional uint32 time_last_mention = 6;
  bool has_time_last_mention() const;
  void clear_time_last_mention();
  static const int kTimeLastMentionFieldNumber = 6;
  ::google::protobuf::uint32 time_last_mention() const;
  void set_time_last_mention(::google::protobuf::uint32 value);

  // optional bool unread_indicator_muted = 7 [default = false];
  bool has_unread_indicator_muted() const;
  void clear_unread_indicator_muted();
  static const int kUnreadIndicatorMutedFieldNumber = 7;
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);

  // @@protoc_insertion_point(class_scope:CUserChatRoomState)
 private:
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_time_joined();
  void clear_has_time_joined();
  void set_has_time_last_ack();
  void clear_has_time_last_ack();
  void set_has_desktop_notification_level();
  void clear_has_desktop_notification_level();
  void set_has_mobile_notification_level();
  void clear_has_mobile_notification_level();
  void set_has_time_last_mention();
  void clear_has_time_last_mention();
  void set_has_unread_indicator_muted();
  void clear_has_unread_indicator_muted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint32 time_joined_;
  ::google::protobuf::uint32 time_last_ack_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  ::google::protobuf::uint32 time_last_mention_;
  bool unread_indicator_muted_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CUserChatRoomGroupState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserChatRoomGroupState) */ {
 public:
  CUserChatRoomGroupState();
  virtual ~CUserChatRoomGroupState();

  CUserChatRoomGroupState(const CUserChatRoomGroupState& from);

  inline CUserChatRoomGroupState& operator=(const CUserChatRoomGroupState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserChatRoomGroupState(CUserChatRoomGroupState&& from) noexcept
    : CUserChatRoomGroupState() {
    *this = ::std::move(from);
  }

  inline CUserChatRoomGroupState& operator=(CUserChatRoomGroupState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserChatRoomGroupState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserChatRoomGroupState* internal_default_instance() {
    return reinterpret_cast<const CUserChatRoomGroupState*>(
               &_CUserChatRoomGroupState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CUserChatRoomGroupState* other);
  friend void swap(CUserChatRoomGroupState& a, CUserChatRoomGroupState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserChatRoomGroupState* New() const final {
    return CreateMaybeMessage<CUserChatRoomGroupState>(NULL);
  }

  CUserChatRoomGroupState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserChatRoomGroupState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserChatRoomGroupState& from);
  void MergeFrom(const CUserChatRoomGroupState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserChatRoomGroupState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CUserChatRoomState user_chat_room_state = 3;
  int user_chat_room_state_size() const;
  void clear_user_chat_room_state();
  static const int kUserChatRoomStateFieldNumber = 3;
  ::CUserChatRoomState* mutable_user_chat_room_state(int index);
  ::google::protobuf::RepeatedPtrField< ::CUserChatRoomState >*
      mutable_user_chat_room_state();
  const ::CUserChatRoomState& user_chat_room_state(int index) const;
  ::CUserChatRoomState* add_user_chat_room_state();
  const ::google::protobuf::RepeatedPtrField< ::CUserChatRoomState >&
      user_chat_room_state() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint32 time_joined = 2;
  bool has_time_joined() const;
  void clear_time_joined();
  static const int kTimeJoinedFieldNumber = 2;
  ::google::protobuf::uint32 time_joined() const;
  void set_time_joined(::google::protobuf::uint32 value);

  // optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  void clear_desktop_notification_level();
  static const int kDesktopNotificationLevelFieldNumber = 4;
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);

  // optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  void clear_mobile_notification_level();
  static const int kMobileNotificationLevelFieldNumber = 5;
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);

  // optional uint32 time_last_group_ack = 6;
  bool has_time_last_group_ack() const;
  void clear_time_last_group_ack();
  static const int kTimeLastGroupAckFieldNumber = 6;
  ::google::protobuf::uint32 time_last_group_ack() const;
  void set_time_last_group_ack(::google::protobuf::uint32 value);

  // optional bool unread_indicator_muted = 7 [default = false];
  bool has_unread_indicator_muted() const;
  void clear_unread_indicator_muted();
  static const int kUnreadIndicatorMutedFieldNumber = 7;
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);

  // @@protoc_insertion_point(class_scope:CUserChatRoomGroupState)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_time_joined();
  void clear_has_time_joined();
  void set_has_desktop_notification_level();
  void clear_has_desktop_notification_level();
  void set_has_mobile_notification_level();
  void clear_has_mobile_notification_level();
  void set_has_time_last_group_ack();
  void clear_has_time_last_group_ack();
  void set_has_unread_indicator_muted();
  void clear_has_unread_indicator_muted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CUserChatRoomState > user_chat_room_state_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint32 time_joined_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  ::google::protobuf::uint32 time_last_group_ack_;
  bool unread_indicator_muted_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoomGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoomGroup_Response) */ {
 public:
  CChatRoom_CreateChatRoomGroup_Response();
  virtual ~CChatRoom_CreateChatRoomGroup_Response();

  CChatRoom_CreateChatRoomGroup_Response(const CChatRoom_CreateChatRoomGroup_Response& from);

  inline CChatRoom_CreateChatRoomGroup_Response& operator=(const CChatRoom_CreateChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateChatRoomGroup_Response(CChatRoom_CreateChatRoomGroup_Response&& from) noexcept
    : CChatRoom_CreateChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoomGroup_Response& operator=(CChatRoom_CreateChatRoomGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateChatRoomGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoomGroup_Response*>(
               &_CChatRoom_CreateChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CChatRoom_CreateChatRoomGroup_Response* other);
  friend void swap(CChatRoom_CreateChatRoomGroup_Response& a, CChatRoom_CreateChatRoomGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateChatRoomGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoomGroup_Response>(NULL);
  }

  CChatRoom_CreateChatRoomGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoomGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateChatRoomGroup_Response& from);
  void MergeFrom(const CChatRoom_CreateChatRoomGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoomGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoomGroupState state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::CChatRoomGroupState& _internal_state() const;
  public:
  const ::CChatRoomGroupState& state() const;
  ::CChatRoomGroupState* release_state();
  ::CChatRoomGroupState* mutable_state();
  void set_allocated_state(::CChatRoomGroupState* state);

  // optional .CUserChatRoomGroupState user_chat_state = 3;
  bool has_user_chat_state() const;
  void clear_user_chat_state();
  static const int kUserChatStateFieldNumber = 3;
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_state() const;
  public:
  const ::CUserChatRoomGroupState& user_chat_state() const;
  ::CUserChatRoomGroupState* release_user_chat_state();
  ::CUserChatRoomGroupState* mutable_user_chat_state();
  void set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoomGroup_Response)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_state();
  void clear_has_state();
  void set_has_user_chat_state();
  void clear_has_user_chat_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoomGroupState* state_;
  ::CUserChatRoomGroupState* user_chat_state_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SaveChatRoomGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SaveChatRoomGroup_Request) */ {
 public:
  CChatRoom_SaveChatRoomGroup_Request();
  virtual ~CChatRoom_SaveChatRoomGroup_Request();

  CChatRoom_SaveChatRoomGroup_Request(const CChatRoom_SaveChatRoomGroup_Request& from);

  inline CChatRoom_SaveChatRoomGroup_Request& operator=(const CChatRoom_SaveChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SaveChatRoomGroup_Request(CChatRoom_SaveChatRoomGroup_Request&& from) noexcept
    : CChatRoom_SaveChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SaveChatRoomGroup_Request& operator=(CChatRoom_SaveChatRoomGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SaveChatRoomGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SaveChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SaveChatRoomGroup_Request*>(
               &_CChatRoom_SaveChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CChatRoom_SaveChatRoomGroup_Request* other);
  friend void swap(CChatRoom_SaveChatRoomGroup_Request& a, CChatRoom_SaveChatRoomGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SaveChatRoomGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SaveChatRoomGroup_Request>(NULL);
  }

  CChatRoom_SaveChatRoomGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SaveChatRoomGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SaveChatRoomGroup_Request& from);
  void MergeFrom(const CChatRoom_SaveChatRoomGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SaveChatRoomGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SaveChatRoomGroup_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SaveChatRoomGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SaveChatRoomGroup_Response) */ {
 public:
  CChatRoom_SaveChatRoomGroup_Response();
  virtual ~CChatRoom_SaveChatRoomGroup_Response();

  CChatRoom_SaveChatRoomGroup_Response(const CChatRoom_SaveChatRoomGroup_Response& from);

  inline CChatRoom_SaveChatRoomGroup_Response& operator=(const CChatRoom_SaveChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SaveChatRoomGroup_Response(CChatRoom_SaveChatRoomGroup_Response&& from) noexcept
    : CChatRoom_SaveChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SaveChatRoomGroup_Response& operator=(CChatRoom_SaveChatRoomGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SaveChatRoomGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SaveChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SaveChatRoomGroup_Response*>(
               &_CChatRoom_SaveChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CChatRoom_SaveChatRoomGroup_Response* other);
  friend void swap(CChatRoom_SaveChatRoomGroup_Response& a, CChatRoom_SaveChatRoomGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SaveChatRoomGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SaveChatRoomGroup_Response>(NULL);
  }

  CChatRoom_SaveChatRoomGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SaveChatRoomGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SaveChatRoomGroup_Response& from);
  void MergeFrom(const CChatRoom_SaveChatRoomGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SaveChatRoomGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SaveChatRoomGroup_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoomGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoomGroup_Request) */ {
 public:
  CChatRoom_RenameChatRoomGroup_Request();
  virtual ~CChatRoom_RenameChatRoomGroup_Request();

  CChatRoom_RenameChatRoomGroup_Request(const CChatRoom_RenameChatRoomGroup_Request& from);

  inline CChatRoom_RenameChatRoomGroup_Request& operator=(const CChatRoom_RenameChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RenameChatRoomGroup_Request(CChatRoom_RenameChatRoomGroup_Request&& from) noexcept
    : CChatRoom_RenameChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoomGroup_Request& operator=(CChatRoom_RenameChatRoomGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RenameChatRoomGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RenameChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoomGroup_Request*>(
               &_CChatRoom_RenameChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CChatRoom_RenameChatRoomGroup_Request* other);
  friend void swap(CChatRoom_RenameChatRoomGroup_Request& a, CChatRoom_RenameChatRoomGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RenameChatRoomGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoomGroup_Request>(NULL);
  }

  CChatRoom_RenameChatRoomGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoomGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RenameChatRoomGroup_Request& from);
  void MergeFrom(const CChatRoom_RenameChatRoomGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoomGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoomGroup_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoomGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoomGroup_Response) */ {
 public:
  CChatRoom_RenameChatRoomGroup_Response();
  virtual ~CChatRoom_RenameChatRoomGroup_Response();

  CChatRoom_RenameChatRoomGroup_Response(const CChatRoom_RenameChatRoomGroup_Response& from);

  inline CChatRoom_RenameChatRoomGroup_Response& operator=(const CChatRoom_RenameChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RenameChatRoomGroup_Response(CChatRoom_RenameChatRoomGroup_Response&& from) noexcept
    : CChatRoom_RenameChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoomGroup_Response& operator=(CChatRoom_RenameChatRoomGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RenameChatRoomGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RenameChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoomGroup_Response*>(
               &_CChatRoom_RenameChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CChatRoom_RenameChatRoomGroup_Response* other);
  friend void swap(CChatRoom_RenameChatRoomGroup_Response& a, CChatRoom_RenameChatRoomGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RenameChatRoomGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoomGroup_Response>(NULL);
  }

  CChatRoom_RenameChatRoomGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoomGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RenameChatRoomGroup_Response& from);
  void MergeFrom(const CChatRoom_RenameChatRoomGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoomGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoomGroup_Response)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupTagline_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupTagline_Request) */ {
 public:
  CChatRoom_SetChatRoomGroupTagline_Request();
  virtual ~CChatRoom_SetChatRoomGroupTagline_Request();

  CChatRoom_SetChatRoomGroupTagline_Request(const CChatRoom_SetChatRoomGroupTagline_Request& from);

  inline CChatRoom_SetChatRoomGroupTagline_Request& operator=(const CChatRoom_SetChatRoomGroupTagline_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetChatRoomGroupTagline_Request(CChatRoom_SetChatRoomGroupTagline_Request&& from) noexcept
    : CChatRoom_SetChatRoomGroupTagline_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupTagline_Request& operator=(CChatRoom_SetChatRoomGroupTagline_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetChatRoomGroupTagline_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetChatRoomGroupTagline_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupTagline_Request*>(
               &_CChatRoom_SetChatRoomGroupTagline_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CChatRoom_SetChatRoomGroupTagline_Request* other);
  friend void swap(CChatRoom_SetChatRoomGroupTagline_Request& a, CChatRoom_SetChatRoomGroupTagline_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetChatRoomGroupTagline_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupTagline_Request>(NULL);
  }

  CChatRoom_SetChatRoomGroupTagline_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupTagline_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetChatRoomGroupTagline_Request& from);
  void MergeFrom(const CChatRoom_SetChatRoomGroupTagline_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupTagline_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tagline = 2;
  bool has_tagline() const;
  void clear_tagline();
  static const int kTaglineFieldNumber = 2;
  const ::std::string& tagline() const;
  void set_tagline(const ::std::string& value);
  #if LANG_CXX11
  void set_tagline(::std::string&& value);
  #endif
  void set_tagline(const char* value);
  void set_tagline(const char* value, size_t size);
  ::std::string* mutable_tagline();
  ::std::string* release_tagline();
  void set_allocated_tagline(::std::string* tagline);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupTagline_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_tagline();
  void clear_has_tagline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tagline_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupTagline_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupTagline_Response) */ {
 public:
  CChatRoom_SetChatRoomGroupTagline_Response();
  virtual ~CChatRoom_SetChatRoomGroupTagline_Response();

  CChatRoom_SetChatRoomGroupTagline_Response(const CChatRoom_SetChatRoomGroupTagline_Response& from);

  inline CChatRoom_SetChatRoomGroupTagline_Response& operator=(const CChatRoom_SetChatRoomGroupTagline_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetChatRoomGroupTagline_Response(CChatRoom_SetChatRoomGroupTagline_Response&& from) noexcept
    : CChatRoom_SetChatRoomGroupTagline_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupTagline_Response& operator=(CChatRoom_SetChatRoomGroupTagline_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetChatRoomGroupTagline_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetChatRoomGroupTagline_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupTagline_Response*>(
               &_CChatRoom_SetChatRoomGroupTagline_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CChatRoom_SetChatRoomGroupTagline_Response* other);
  friend void swap(CChatRoom_SetChatRoomGroupTagline_Response& a, CChatRoom_SetChatRoomGroupTagline_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetChatRoomGroupTagline_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupTagline_Response>(NULL);
  }

  CChatRoom_SetChatRoomGroupTagline_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupTagline_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetChatRoomGroupTagline_Response& from);
  void MergeFrom(const CChatRoom_SetChatRoomGroupTagline_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupTagline_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupTagline_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupAvatar_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupAvatar_Request) */ {
 public:
  CChatRoom_SetChatRoomGroupAvatar_Request();
  virtual ~CChatRoom_SetChatRoomGroupAvatar_Request();

  CChatRoom_SetChatRoomGroupAvatar_Request(const CChatRoom_SetChatRoomGroupAvatar_Request& from);

  inline CChatRoom_SetChatRoomGroupAvatar_Request& operator=(const CChatRoom_SetChatRoomGroupAvatar_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetChatRoomGroupAvatar_Request(CChatRoom_SetChatRoomGroupAvatar_Request&& from) noexcept
    : CChatRoom_SetChatRoomGroupAvatar_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupAvatar_Request& operator=(CChatRoom_SetChatRoomGroupAvatar_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetChatRoomGroupAvatar_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetChatRoomGroupAvatar_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupAvatar_Request*>(
               &_CChatRoom_SetChatRoomGroupAvatar_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CChatRoom_SetChatRoomGroupAvatar_Request* other);
  friend void swap(CChatRoom_SetChatRoomGroupAvatar_Request& a, CChatRoom_SetChatRoomGroupAvatar_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetChatRoomGroupAvatar_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupAvatar_Request>(NULL);
  }

  CChatRoom_SetChatRoomGroupAvatar_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupAvatar_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetChatRoomGroupAvatar_Request& from);
  void MergeFrom(const CChatRoom_SetChatRoomGroupAvatar_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupAvatar_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes avatar_sha = 2;
  bool has_avatar_sha() const;
  void clear_avatar_sha();
  static const int kAvatarShaFieldNumber = 2;
  const ::std::string& avatar_sha() const;
  void set_avatar_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar_sha(::std::string&& value);
  #endif
  void set_avatar_sha(const char* value);
  void set_avatar_sha(const void* value, size_t size);
  ::std::string* mutable_avatar_sha();
  ::std::string* release_avatar_sha();
  void set_allocated_avatar_sha(::std::string* avatar_sha);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupAvatar_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_avatar_sha();
  void clear_has_avatar_sha();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr avatar_sha_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupAvatar_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupAvatar_Response) */ {
 public:
  CChatRoom_SetChatRoomGroupAvatar_Response();
  virtual ~CChatRoom_SetChatRoomGroupAvatar_Response();

  CChatRoom_SetChatRoomGroupAvatar_Response(const CChatRoom_SetChatRoomGroupAvatar_Response& from);

  inline CChatRoom_SetChatRoomGroupAvatar_Response& operator=(const CChatRoom_SetChatRoomGroupAvatar_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetChatRoomGroupAvatar_Response(CChatRoom_SetChatRoomGroupAvatar_Response&& from) noexcept
    : CChatRoom_SetChatRoomGroupAvatar_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupAvatar_Response& operator=(CChatRoom_SetChatRoomGroupAvatar_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetChatRoomGroupAvatar_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetChatRoomGroupAvatar_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupAvatar_Response*>(
               &_CChatRoom_SetChatRoomGroupAvatar_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CChatRoom_SetChatRoomGroupAvatar_Response* other);
  friend void swap(CChatRoom_SetChatRoomGroupAvatar_Response& a, CChatRoom_SetChatRoomGroupAvatar_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetChatRoomGroupAvatar_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupAvatar_Response>(NULL);
  }

  CChatRoom_SetChatRoomGroupAvatar_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupAvatar_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetChatRoomGroupAvatar_Response& from);
  void MergeFrom(const CChatRoom_SetChatRoomGroupAvatar_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupAvatar_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupAvatar_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupWatchingBroadcast_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request) */ {
 public:
  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request();
  virtual ~CChatRoom_SetChatRoomGroupWatchingBroadcast_Request();

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from);

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& operator=(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request&& from) noexcept
    : CChatRoom_SetChatRoomGroupWatchingBroadcast_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& operator=(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request*>(
               &_CChatRoom_SetChatRoomGroupWatchingBroadcast_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* other);
  friend void swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& a, CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupWatchingBroadcast_Request>(NULL);
  }

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupWatchingBroadcast_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from);
  void MergeFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint32 watching_broadcast_accountid = 2;
  bool has_watching_broadcast_accountid() const;
  void clear_watching_broadcast_accountid();
  static const int kWatchingBroadcastAccountidFieldNumber = 2;
  ::google::protobuf::uint32 watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_watching_broadcast_accountid();
  void clear_has_watching_broadcast_accountid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint32 watching_broadcast_accountid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupWatchingBroadcast_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupWatchingBroadcast_Response) */ {
 public:
  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response();
  virtual ~CChatRoom_SetChatRoomGroupWatchingBroadcast_Response();

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from);

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& operator=(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response&& from) noexcept
    : CChatRoom_SetChatRoomGroupWatchingBroadcast_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& operator=(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response*>(
               &_CChatRoom_SetChatRoomGroupWatchingBroadcast_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* other);
  friend void swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& a, CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupWatchingBroadcast_Response>(NULL);
  }

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupWatchingBroadcast_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from);
  void MergeFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupWatchingBroadcast_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_MuteUser_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_MuteUser_Request) */ {
 public:
  CChatRoom_MuteUser_Request();
  virtual ~CChatRoom_MuteUser_Request();

  CChatRoom_MuteUser_Request(const CChatRoom_MuteUser_Request& from);

  inline CChatRoom_MuteUser_Request& operator=(const CChatRoom_MuteUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_MuteUser_Request(CChatRoom_MuteUser_Request&& from) noexcept
    : CChatRoom_MuteUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MuteUser_Request& operator=(CChatRoom_MuteUser_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_MuteUser_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_MuteUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MuteUser_Request*>(
               &_CChatRoom_MuteUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CChatRoom_MuteUser_Request* other);
  friend void swap(CChatRoom_MuteUser_Request& a, CChatRoom_MuteUser_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_MuteUser_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_MuteUser_Request>(NULL);
  }

  CChatRoom_MuteUser_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_MuteUser_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_MuteUser_Request& from);
  void MergeFrom(const CChatRoom_MuteUser_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_MuteUser_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 expiration = 3;
  bool has_expiration() const;
  void clear_expiration();
  static const int kExpirationFieldNumber = 3;
  ::google::protobuf::int32 expiration() const;
  void set_expiration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_MuteUser_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_expiration();
  void clear_has_expiration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 expiration_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_MuteUser_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_MuteUser_Response) */ {
 public:
  CChatRoom_MuteUser_Response();
  virtual ~CChatRoom_MuteUser_Response();

  CChatRoom_MuteUser_Response(const CChatRoom_MuteUser_Response& from);

  inline CChatRoom_MuteUser_Response& operator=(const CChatRoom_MuteUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_MuteUser_Response(CChatRoom_MuteUser_Response&& from) noexcept
    : CChatRoom_MuteUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MuteUser_Response& operator=(CChatRoom_MuteUser_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_MuteUser_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_MuteUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MuteUser_Response*>(
               &_CChatRoom_MuteUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CChatRoom_MuteUser_Response* other);
  friend void swap(CChatRoom_MuteUser_Response& a, CChatRoom_MuteUser_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_MuteUser_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_MuteUser_Response>(NULL);
  }

  CChatRoom_MuteUser_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_MuteUser_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_MuteUser_Response& from);
  void MergeFrom(const CChatRoom_MuteUser_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_MuteUser_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_MuteUser_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_KickUser_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_KickUser_Request) */ {
 public:
  CChatRoom_KickUser_Request();
  virtual ~CChatRoom_KickUser_Request();

  CChatRoom_KickUser_Request(const CChatRoom_KickUser_Request& from);

  inline CChatRoom_KickUser_Request& operator=(const CChatRoom_KickUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_KickUser_Request(CChatRoom_KickUser_Request&& from) noexcept
    : CChatRoom_KickUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_KickUser_Request& operator=(CChatRoom_KickUser_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_KickUser_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_KickUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_KickUser_Request*>(
               &_CChatRoom_KickUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CChatRoom_KickUser_Request* other);
  friend void swap(CChatRoom_KickUser_Request& a, CChatRoom_KickUser_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_KickUser_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_KickUser_Request>(NULL);
  }

  CChatRoom_KickUser_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_KickUser_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_KickUser_Request& from);
  void MergeFrom(const CChatRoom_KickUser_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_KickUser_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 expiration = 3;
  bool has_expiration() const;
  void clear_expiration();
  static const int kExpirationFieldNumber = 3;
  ::google::protobuf::int32 expiration() const;
  void set_expiration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_KickUser_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_expiration();
  void clear_has_expiration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 expiration_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_KickUser_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_KickUser_Response) */ {
 public:
  CChatRoom_KickUser_Response();
  virtual ~CChatRoom_KickUser_Response();

  CChatRoom_KickUser_Response(const CChatRoom_KickUser_Response& from);

  inline CChatRoom_KickUser_Response& operator=(const CChatRoom_KickUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_KickUser_Response(CChatRoom_KickUser_Response&& from) noexcept
    : CChatRoom_KickUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_KickUser_Response& operator=(CChatRoom_KickUser_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_KickUser_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_KickUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_KickUser_Response*>(
               &_CChatRoom_KickUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CChatRoom_KickUser_Response* other);
  friend void swap(CChatRoom_KickUser_Response& a, CChatRoom_KickUser_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_KickUser_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_KickUser_Response>(NULL);
  }

  CChatRoom_KickUser_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_KickUser_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_KickUser_Response& from);
  void MergeFrom(const CChatRoom_KickUser_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_KickUser_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_KickUser_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserBanState_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserBanState_Request) */ {
 public:
  CChatRoom_SetUserBanState_Request();
  virtual ~CChatRoom_SetUserBanState_Request();

  CChatRoom_SetUserBanState_Request(const CChatRoom_SetUserBanState_Request& from);

  inline CChatRoom_SetUserBanState_Request& operator=(const CChatRoom_SetUserBanState_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetUserBanState_Request(CChatRoom_SetUserBanState_Request&& from) noexcept
    : CChatRoom_SetUserBanState_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserBanState_Request& operator=(CChatRoom_SetUserBanState_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetUserBanState_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetUserBanState_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserBanState_Request*>(
               &_CChatRoom_SetUserBanState_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CChatRoom_SetUserBanState_Request* other);
  friend void swap(CChatRoom_SetUserBanState_Request& a, CChatRoom_SetUserBanState_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetUserBanState_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SetUserBanState_Request>(NULL);
  }

  CChatRoom_SetUserBanState_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetUserBanState_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetUserBanState_Request& from);
  void MergeFrom(const CChatRoom_SetUserBanState_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserBanState_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool ban_state = 3;
  bool has_ban_state() const;
  void clear_ban_state();
  static const int kBanStateFieldNumber = 3;
  bool ban_state() const;
  void set_ban_state(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserBanState_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_ban_state();
  void clear_has_ban_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 steamid_;
  bool ban_state_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserBanState_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserBanState_Response) */ {
 public:
  CChatRoom_SetUserBanState_Response();
  virtual ~CChatRoom_SetUserBanState_Response();

  CChatRoom_SetUserBanState_Response(const CChatRoom_SetUserBanState_Response& from);

  inline CChatRoom_SetUserBanState_Response& operator=(const CChatRoom_SetUserBanState_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetUserBanState_Response(CChatRoom_SetUserBanState_Response&& from) noexcept
    : CChatRoom_SetUserBanState_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserBanState_Response& operator=(CChatRoom_SetUserBanState_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetUserBanState_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetUserBanState_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserBanState_Response*>(
               &_CChatRoom_SetUserBanState_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CChatRoom_SetUserBanState_Response* other);
  friend void swap(CChatRoom_SetUserBanState_Response& a, CChatRoom_SetUserBanState_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetUserBanState_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SetUserBanState_Response>(NULL);
  }

  CChatRoom_SetUserBanState_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetUserBanState_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetUserBanState_Response& from);
  void MergeFrom(const CChatRoom_SetUserBanState_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserBanState_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserBanState_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RevokeInvite_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RevokeInvite_Request) */ {
 public:
  CChatRoom_RevokeInvite_Request();
  virtual ~CChatRoom_RevokeInvite_Request();

  CChatRoom_RevokeInvite_Request(const CChatRoom_RevokeInvite_Request& from);

  inline CChatRoom_RevokeInvite_Request& operator=(const CChatRoom_RevokeInvite_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RevokeInvite_Request(CChatRoom_RevokeInvite_Request&& from) noexcept
    : CChatRoom_RevokeInvite_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RevokeInvite_Request& operator=(CChatRoom_RevokeInvite_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RevokeInvite_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RevokeInvite_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RevokeInvite_Request*>(
               &_CChatRoom_RevokeInvite_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CChatRoom_RevokeInvite_Request* other);
  friend void swap(CChatRoom_RevokeInvite_Request& a, CChatRoom_RevokeInvite_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RevokeInvite_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_RevokeInvite_Request>(NULL);
  }

  CChatRoom_RevokeInvite_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RevokeInvite_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RevokeInvite_Request& from);
  void MergeFrom(const CChatRoom_RevokeInvite_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RevokeInvite_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_RevokeInvite_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RevokeInvite_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RevokeInvite_Response) */ {
 public:
  CChatRoom_RevokeInvite_Response();
  virtual ~CChatRoom_RevokeInvite_Response();

  CChatRoom_RevokeInvite_Response(const CChatRoom_RevokeInvite_Response& from);

  inline CChatRoom_RevokeInvite_Response& operator=(const CChatRoom_RevokeInvite_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RevokeInvite_Response(CChatRoom_RevokeInvite_Response&& from) noexcept
    : CChatRoom_RevokeInvite_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RevokeInvite_Response& operator=(CChatRoom_RevokeInvite_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RevokeInvite_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RevokeInvite_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RevokeInvite_Response*>(
               &_CChatRoom_RevokeInvite_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CChatRoom_RevokeInvite_Response* other);
  friend void swap(CChatRoom_RevokeInvite_Response& a, CChatRoom_RevokeInvite_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RevokeInvite_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_RevokeInvite_Response>(NULL);
  }

  CChatRoom_RevokeInvite_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RevokeInvite_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RevokeInvite_Response& from);
  void MergeFrom(const CChatRoom_RevokeInvite_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RevokeInvite_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_RevokeInvite_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateRole_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateRole_Request) */ {
 public:
  CChatRoom_CreateRole_Request();
  virtual ~CChatRoom_CreateRole_Request();

  CChatRoom_CreateRole_Request(const CChatRoom_CreateRole_Request& from);

  inline CChatRoom_CreateRole_Request& operator=(const CChatRoom_CreateRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateRole_Request(CChatRoom_CreateRole_Request&& from) noexcept
    : CChatRoom_CreateRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateRole_Request& operator=(CChatRoom_CreateRole_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateRole_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateRole_Request*>(
               &_CChatRoom_CreateRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CChatRoom_CreateRole_Request* other);
  friend void swap(CChatRoom_CreateRole_Request& a, CChatRoom_CreateRole_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateRole_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateRole_Request>(NULL);
  }

  CChatRoom_CreateRole_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateRole_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateRole_Request& from);
  void MergeFrom(const CChatRoom_CreateRole_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateRole_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateRole_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateRole_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateRole_Response) */ {
 public:
  CChatRoom_CreateRole_Response();
  virtual ~CChatRoom_CreateRole_Response();

  CChatRoom_CreateRole_Response(const CChatRoom_CreateRole_Response& from);

  inline CChatRoom_CreateRole_Response& operator=(const CChatRoom_CreateRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateRole_Response(CChatRoom_CreateRole_Response&& from) noexcept
    : CChatRoom_CreateRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateRole_Response& operator=(CChatRoom_CreateRole_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateRole_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateRole_Response*>(
               &_CChatRoom_CreateRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CChatRoom_CreateRole_Response* other);
  friend void swap(CChatRoom_CreateRole_Response& a, CChatRoom_CreateRole_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateRole_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateRole_Response>(NULL);
  }

  CChatRoom_CreateRole_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateRole_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateRole_Response& from);
  void MergeFrom(const CChatRoom_CreateRole_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateRole_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoleActions actions = 2;
  bool has_actions() const;
  void clear_actions();
  static const int kActionsFieldNumber = 2;
  private:
  const ::CChatRoleActions& _internal_actions() const;
  public:
  const ::CChatRoleActions& actions() const;
  ::CChatRoleActions* release_actions();
  ::CChatRoleActions* mutable_actions();
  void set_allocated_actions(::CChatRoleActions* actions);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateRole_Response)
 private:
  void set_has_actions();
  void clear_has_actions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoleActions* actions_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoles_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoles_Request) */ {
 public:
  CChatRoom_GetRoles_Request();
  virtual ~CChatRoom_GetRoles_Request();

  CChatRoom_GetRoles_Request(const CChatRoom_GetRoles_Request& from);

  inline CChatRoom_GetRoles_Request& operator=(const CChatRoom_GetRoles_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetRoles_Request(CChatRoom_GetRoles_Request&& from) noexcept
    : CChatRoom_GetRoles_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoles_Request& operator=(CChatRoom_GetRoles_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetRoles_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetRoles_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoles_Request*>(
               &_CChatRoom_GetRoles_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CChatRoom_GetRoles_Request* other);
  friend void swap(CChatRoom_GetRoles_Request& a, CChatRoom_GetRoles_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetRoles_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetRoles_Request>(NULL);
  }

  CChatRoom_GetRoles_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetRoles_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetRoles_Request& from);
  void MergeFrom(const CChatRoom_GetRoles_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoles_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoles_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoles_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoles_Response) */ {
 public:
  CChatRoom_GetRoles_Response();
  virtual ~CChatRoom_GetRoles_Response();

  CChatRoom_GetRoles_Response(const CChatRoom_GetRoles_Response& from);

  inline CChatRoom_GetRoles_Response& operator=(const CChatRoom_GetRoles_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetRoles_Response(CChatRoom_GetRoles_Response&& from) noexcept
    : CChatRoom_GetRoles_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoles_Response& operator=(CChatRoom_GetRoles_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetRoles_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetRoles_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoles_Response*>(
               &_CChatRoom_GetRoles_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CChatRoom_GetRoles_Response* other);
  friend void swap(CChatRoom_GetRoles_Response& a, CChatRoom_GetRoles_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetRoles_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetRoles_Response>(NULL);
  }

  CChatRoom_GetRoles_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetRoles_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetRoles_Response& from);
  void MergeFrom(const CChatRoom_GetRoles_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoles_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRole roles = 1;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 1;
  ::CChatRole* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRole >*
      mutable_roles();
  const ::CChatRole& roles(int index) const;
  ::CChatRole* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::CChatRole >&
      roles() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoles_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRole > roles_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RenameRole_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameRole_Request) */ {
 public:
  CChatRoom_RenameRole_Request();
  virtual ~CChatRoom_RenameRole_Request();

  CChatRoom_RenameRole_Request(const CChatRoom_RenameRole_Request& from);

  inline CChatRoom_RenameRole_Request& operator=(const CChatRoom_RenameRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RenameRole_Request(CChatRoom_RenameRole_Request&& from) noexcept
    : CChatRoom_RenameRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameRole_Request& operator=(CChatRoom_RenameRole_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RenameRole_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RenameRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameRole_Request*>(
               &_CChatRoom_RenameRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CChatRoom_RenameRole_Request* other);
  friend void swap(CChatRoom_RenameRole_Request& a, CChatRoom_RenameRole_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RenameRole_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_RenameRole_Request>(NULL);
  }

  CChatRoom_RenameRole_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RenameRole_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RenameRole_Request& from);
  void MergeFrom(const CChatRoom_RenameRole_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameRole_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameRole_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RenameRole_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameRole_Response) */ {
 public:
  CChatRoom_RenameRole_Response();
  virtual ~CChatRoom_RenameRole_Response();

  CChatRoom_RenameRole_Response(const CChatRoom_RenameRole_Response& from);

  inline CChatRoom_RenameRole_Response& operator=(const CChatRoom_RenameRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RenameRole_Response(CChatRoom_RenameRole_Response&& from) noexcept
    : CChatRoom_RenameRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameRole_Response& operator=(CChatRoom_RenameRole_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RenameRole_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RenameRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameRole_Response*>(
               &_CChatRoom_RenameRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CChatRoom_RenameRole_Response* other);
  friend void swap(CChatRoom_RenameRole_Response& a, CChatRoom_RenameRole_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RenameRole_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_RenameRole_Response>(NULL);
  }

  CChatRoom_RenameRole_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RenameRole_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RenameRole_Response& from);
  void MergeFrom(const CChatRoom_RenameRole_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameRole_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameRole_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderRole_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderRole_Request) */ {
 public:
  CChatRoom_ReorderRole_Request();
  virtual ~CChatRoom_ReorderRole_Request();

  CChatRoom_ReorderRole_Request(const CChatRoom_ReorderRole_Request& from);

  inline CChatRoom_ReorderRole_Request& operator=(const CChatRoom_ReorderRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ReorderRole_Request(CChatRoom_ReorderRole_Request&& from) noexcept
    : CChatRoom_ReorderRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderRole_Request& operator=(CChatRoom_ReorderRole_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ReorderRole_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ReorderRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderRole_Request*>(
               &_CChatRoom_ReorderRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CChatRoom_ReorderRole_Request* other);
  friend void swap(CChatRoom_ReorderRole_Request& a, CChatRoom_ReorderRole_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ReorderRole_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_ReorderRole_Request>(NULL);
  }

  CChatRoom_ReorderRole_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ReorderRole_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ReorderRole_Request& from);
  void MergeFrom(const CChatRoom_ReorderRole_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReorderRole_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // optional uint32 ordinal = 3;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 3;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderRole_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_ordinal();
  void clear_has_ordinal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint32 ordinal_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderRole_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderRole_Response) */ {
 public:
  CChatRoom_ReorderRole_Response();
  virtual ~CChatRoom_ReorderRole_Response();

  CChatRoom_ReorderRole_Response(const CChatRoom_ReorderRole_Response& from);

  inline CChatRoom_ReorderRole_Response& operator=(const CChatRoom_ReorderRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ReorderRole_Response(CChatRoom_ReorderRole_Response&& from) noexcept
    : CChatRoom_ReorderRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderRole_Response& operator=(CChatRoom_ReorderRole_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ReorderRole_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ReorderRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderRole_Response*>(
               &_CChatRoom_ReorderRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CChatRoom_ReorderRole_Response* other);
  friend void swap(CChatRoom_ReorderRole_Response& a, CChatRoom_ReorderRole_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ReorderRole_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_ReorderRole_Response>(NULL);
  }

  CChatRoom_ReorderRole_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ReorderRole_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ReorderRole_Response& from);
  void MergeFrom(const CChatRoom_ReorderRole_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReorderRole_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderRole_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRole_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRole_Request) */ {
 public:
  CChatRoom_DeleteRole_Request();
  virtual ~CChatRoom_DeleteRole_Request();

  CChatRoom_DeleteRole_Request(const CChatRoom_DeleteRole_Request& from);

  inline CChatRoom_DeleteRole_Request& operator=(const CChatRoom_DeleteRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteRole_Request(CChatRoom_DeleteRole_Request&& from) noexcept
    : CChatRoom_DeleteRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRole_Request& operator=(CChatRoom_DeleteRole_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteRole_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRole_Request*>(
               &_CChatRoom_DeleteRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CChatRoom_DeleteRole_Request* other);
  friend void swap(CChatRoom_DeleteRole_Request& a, CChatRoom_DeleteRole_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteRole_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteRole_Request>(NULL);
  }

  CChatRoom_DeleteRole_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRole_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteRole_Request& from);
  void MergeFrom(const CChatRoom_DeleteRole_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteRole_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRole_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRole_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRole_Response) */ {
 public:
  CChatRoom_DeleteRole_Response();
  virtual ~CChatRoom_DeleteRole_Response();

  CChatRoom_DeleteRole_Response(const CChatRoom_DeleteRole_Response& from);

  inline CChatRoom_DeleteRole_Response& operator=(const CChatRoom_DeleteRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteRole_Response(CChatRoom_DeleteRole_Response&& from) noexcept
    : CChatRoom_DeleteRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRole_Response& operator=(CChatRoom_DeleteRole_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteRole_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRole_Response*>(
               &_CChatRoom_DeleteRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CChatRoom_DeleteRole_Response* other);
  friend void swap(CChatRoom_DeleteRole_Response& a, CChatRoom_DeleteRole_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteRole_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteRole_Response>(NULL);
  }

  CChatRoom_DeleteRole_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRole_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteRole_Response& from);
  void MergeFrom(const CChatRoom_DeleteRole_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteRole_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRole_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoleActions_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoleActions_Request) */ {
 public:
  CChatRoom_GetRoleActions_Request();
  virtual ~CChatRoom_GetRoleActions_Request();

  CChatRoom_GetRoleActions_Request(const CChatRoom_GetRoleActions_Request& from);

  inline CChatRoom_GetRoleActions_Request& operator=(const CChatRoom_GetRoleActions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetRoleActions_Request(CChatRoom_GetRoleActions_Request&& from) noexcept
    : CChatRoom_GetRoleActions_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoleActions_Request& operator=(CChatRoom_GetRoleActions_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetRoleActions_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetRoleActions_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoleActions_Request*>(
               &_CChatRoom_GetRoleActions_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CChatRoom_GetRoleActions_Request* other);
  friend void swap(CChatRoom_GetRoleActions_Request& a, CChatRoom_GetRoleActions_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetRoleActions_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetRoleActions_Request>(NULL);
  }

  CChatRoom_GetRoleActions_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetRoleActions_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetRoleActions_Request& from);
  void MergeFrom(const CChatRoom_GetRoleActions_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoleActions_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoleActions_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoleActions_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoleActions_Response) */ {
 public:
  CChatRoom_GetRoleActions_Response();
  virtual ~CChatRoom_GetRoleActions_Response();

  CChatRoom_GetRoleActions_Response(const CChatRoom_GetRoleActions_Response& from);

  inline CChatRoom_GetRoleActions_Response& operator=(const CChatRoom_GetRoleActions_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetRoleActions_Response(CChatRoom_GetRoleActions_Response&& from) noexcept
    : CChatRoom_GetRoleActions_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoleActions_Response& operator=(CChatRoom_GetRoleActions_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetRoleActions_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetRoleActions_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoleActions_Response*>(
               &_CChatRoom_GetRoleActions_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CChatRoom_GetRoleActions_Response* other);
  friend void swap(CChatRoom_GetRoleActions_Response& a, CChatRoom_GetRoleActions_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetRoleActions_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetRoleActions_Response>(NULL);
  }

  CChatRoom_GetRoleActions_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetRoleActions_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetRoleActions_Response& from);
  void MergeFrom(const CChatRoom_GetRoleActions_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoleActions_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoleActions actions = 1;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 1;
  ::CChatRoleActions* mutable_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >*
      mutable_actions();
  const ::CChatRoleActions& actions(int index) const;
  ::CChatRoleActions* add_actions();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >&
      actions() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoleActions_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoleActions > actions_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ReplaceRoleActions_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReplaceRoleActions_Request) */ {
 public:
  CChatRoom_ReplaceRoleActions_Request();
  virtual ~CChatRoom_ReplaceRoleActions_Request();

  CChatRoom_ReplaceRoleActions_Request(const CChatRoom_ReplaceRoleActions_Request& from);

  inline CChatRoom_ReplaceRoleActions_Request& operator=(const CChatRoom_ReplaceRoleActions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ReplaceRoleActions_Request(CChatRoom_ReplaceRoleActions_Request&& from) noexcept
    : CChatRoom_ReplaceRoleActions_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReplaceRoleActions_Request& operator=(CChatRoom_ReplaceRoleActions_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ReplaceRoleActions_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ReplaceRoleActions_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReplaceRoleActions_Request*>(
               &_CChatRoom_ReplaceRoleActions_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CChatRoom_ReplaceRoleActions_Request* other);
  friend void swap(CChatRoom_ReplaceRoleActions_Request& a, CChatRoom_ReplaceRoleActions_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ReplaceRoleActions_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_ReplaceRoleActions_Request>(NULL);
  }

  CChatRoom_ReplaceRoleActions_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ReplaceRoleActions_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ReplaceRoleActions_Request& from);
  void MergeFrom(const CChatRoom_ReplaceRoleActions_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReplaceRoleActions_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoleActions actions = 4;
  bool has_actions() const;
  void clear_actions();
  static const int kActionsFieldNumber = 4;
  private:
  const ::CChatRoleActions& _internal_actions() const;
  public:
  const ::CChatRoleActions& actions() const;
  ::CChatRoleActions* release_actions();
  ::CChatRoleActions* mutable_actions();
  void set_allocated_actions(::CChatRoleActions* actions);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_ReplaceRoleActions_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_actions();
  void clear_has_actions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoleActions* actions_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ReplaceRoleActions_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReplaceRoleActions_Response) */ {
 public:
  CChatRoom_ReplaceRoleActions_Response();
  virtual ~CChatRoom_ReplaceRoleActions_Response();

  CChatRoom_ReplaceRoleActions_Response(const CChatRoom_ReplaceRoleActions_Response& from);

  inline CChatRoom_ReplaceRoleActions_Response& operator=(const CChatRoom_ReplaceRoleActions_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ReplaceRoleActions_Response(CChatRoom_ReplaceRoleActions_Response&& from) noexcept
    : CChatRoom_ReplaceRoleActions_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReplaceRoleActions_Response& operator=(CChatRoom_ReplaceRoleActions_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ReplaceRoleActions_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ReplaceRoleActions_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReplaceRoleActions_Response*>(
               &_CChatRoom_ReplaceRoleActions_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CChatRoom_ReplaceRoleActions_Response* other);
  friend void swap(CChatRoom_ReplaceRoleActions_Response& a, CChatRoom_ReplaceRoleActions_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ReplaceRoleActions_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_ReplaceRoleActions_Response>(NULL);
  }

  CChatRoom_ReplaceRoleActions_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ReplaceRoleActions_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ReplaceRoleActions_Response& from);
  void MergeFrom(const CChatRoom_ReplaceRoleActions_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReplaceRoleActions_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_ReplaceRoleActions_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_AddRoleToUser_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_AddRoleToUser_Request) */ {
 public:
  CChatRoom_AddRoleToUser_Request();
  virtual ~CChatRoom_AddRoleToUser_Request();

  CChatRoom_AddRoleToUser_Request(const CChatRoom_AddRoleToUser_Request& from);

  inline CChatRoom_AddRoleToUser_Request& operator=(const CChatRoom_AddRoleToUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_AddRoleToUser_Request(CChatRoom_AddRoleToUser_Request&& from) noexcept
    : CChatRoom_AddRoleToUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_AddRoleToUser_Request& operator=(CChatRoom_AddRoleToUser_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_AddRoleToUser_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_AddRoleToUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_AddRoleToUser_Request*>(
               &_CChatRoom_AddRoleToUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CChatRoom_AddRoleToUser_Request* other);
  friend void swap(CChatRoom_AddRoleToUser_Request& a, CChatRoom_AddRoleToUser_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_AddRoleToUser_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_AddRoleToUser_Request>(NULL);
  }

  CChatRoom_AddRoleToUser_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_AddRoleToUser_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_AddRoleToUser_Request& from);
  void MergeFrom(const CChatRoom_AddRoleToUser_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_AddRoleToUser_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 3;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 4;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 4;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_AddRoleToUser_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_AddRoleToUser_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_AddRoleToUser_Response) */ {
 public:
  CChatRoom_AddRoleToUser_Response();
  virtual ~CChatRoom_AddRoleToUser_Response();

  CChatRoom_AddRoleToUser_Response(const CChatRoom_AddRoleToUser_Response& from);

  inline CChatRoom_AddRoleToUser_Response& operator=(const CChatRoom_AddRoleToUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_AddRoleToUser_Response(CChatRoom_AddRoleToUser_Response&& from) noexcept
    : CChatRoom_AddRoleToUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_AddRoleToUser_Response& operator=(CChatRoom_AddRoleToUser_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_AddRoleToUser_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_AddRoleToUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_AddRoleToUser_Response*>(
               &_CChatRoom_AddRoleToUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CChatRoom_AddRoleToUser_Response* other);
  friend void swap(CChatRoom_AddRoleToUser_Response& a, CChatRoom_AddRoleToUser_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_AddRoleToUser_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_AddRoleToUser_Response>(NULL);
  }

  CChatRoom_AddRoleToUser_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_AddRoleToUser_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_AddRoleToUser_Response& from);
  void MergeFrom(const CChatRoom_AddRoleToUser_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_AddRoleToUser_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_AddRoleToUser_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetRolesForUser_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRolesForUser_Request) */ {
 public:
  CChatRoom_GetRolesForUser_Request();
  virtual ~CChatRoom_GetRolesForUser_Request();

  CChatRoom_GetRolesForUser_Request(const CChatRoom_GetRolesForUser_Request& from);

  inline CChatRoom_GetRolesForUser_Request& operator=(const CChatRoom_GetRolesForUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetRolesForUser_Request(CChatRoom_GetRolesForUser_Request&& from) noexcept
    : CChatRoom_GetRolesForUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRolesForUser_Request& operator=(CChatRoom_GetRolesForUser_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetRolesForUser_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetRolesForUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRolesForUser_Request*>(
               &_CChatRoom_GetRolesForUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CChatRoom_GetRolesForUser_Request* other);
  friend void swap(CChatRoom_GetRolesForUser_Request& a, CChatRoom_GetRolesForUser_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetRolesForUser_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetRolesForUser_Request>(NULL);
  }

  CChatRoom_GetRolesForUser_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetRolesForUser_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetRolesForUser_Request& from);
  void MergeFrom(const CChatRoom_GetRolesForUser_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRolesForUser_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 3;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRolesForUser_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetRolesForUser_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRolesForUser_Response) */ {
 public:
  CChatRoom_GetRolesForUser_Response();
  virtual ~CChatRoom_GetRolesForUser_Response();

  CChatRoom_GetRolesForUser_Response(const CChatRoom_GetRolesForUser_Response& from);

  inline CChatRoom_GetRolesForUser_Response& operator=(const CChatRoom_GetRolesForUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetRolesForUser_Response(CChatRoom_GetRolesForUser_Response&& from) noexcept
    : CChatRoom_GetRolesForUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRolesForUser_Response& operator=(CChatRoom_GetRolesForUser_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetRolesForUser_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetRolesForUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRolesForUser_Response*>(
               &_CChatRoom_GetRolesForUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CChatRoom_GetRolesForUser_Response* other);
  friend void swap(CChatRoom_GetRolesForUser_Response& a, CChatRoom_GetRolesForUser_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetRolesForUser_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetRolesForUser_Response>(NULL);
  }

  CChatRoom_GetRolesForUser_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetRolesForUser_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetRolesForUser_Response& from);
  void MergeFrom(const CChatRoom_GetRolesForUser_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRolesForUser_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 role_ids = 1;
  int role_ids_size() const;
  void clear_role_ids();
  static const int kRoleIdsFieldNumber = 1;
  ::google::protobuf::uint64 role_ids(int index) const;
  void set_role_ids(int index, ::google::protobuf::uint64 value);
  void add_role_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      role_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_role_ids();

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRolesForUser_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > role_ids_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRoleFromUser_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRoleFromUser_Request) */ {
 public:
  CChatRoom_DeleteRoleFromUser_Request();
  virtual ~CChatRoom_DeleteRoleFromUser_Request();

  CChatRoom_DeleteRoleFromUser_Request(const CChatRoom_DeleteRoleFromUser_Request& from);

  inline CChatRoom_DeleteRoleFromUser_Request& operator=(const CChatRoom_DeleteRoleFromUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteRoleFromUser_Request(CChatRoom_DeleteRoleFromUser_Request&& from) noexcept
    : CChatRoom_DeleteRoleFromUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRoleFromUser_Request& operator=(CChatRoom_DeleteRoleFromUser_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteRoleFromUser_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteRoleFromUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRoleFromUser_Request*>(
               &_CChatRoom_DeleteRoleFromUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CChatRoom_DeleteRoleFromUser_Request* other);
  friend void swap(CChatRoom_DeleteRoleFromUser_Request& a, CChatRoom_DeleteRoleFromUser_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteRoleFromUser_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteRoleFromUser_Request>(NULL);
  }

  CChatRoom_DeleteRoleFromUser_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRoleFromUser_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteRoleFromUser_Request& from);
  void MergeFrom(const CChatRoom_DeleteRoleFromUser_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteRoleFromUser_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 role_id = 3;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 4;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 4;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRoleFromUser_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_role_id();
  void clear_has_role_id();
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRoleFromUser_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRoleFromUser_Response) */ {
 public:
  CChatRoom_DeleteRoleFromUser_Response();
  virtual ~CChatRoom_DeleteRoleFromUser_Response();

  CChatRoom_DeleteRoleFromUser_Response(const CChatRoom_DeleteRoleFromUser_Response& from);

  inline CChatRoom_DeleteRoleFromUser_Response& operator=(const CChatRoom_DeleteRoleFromUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteRoleFromUser_Response(CChatRoom_DeleteRoleFromUser_Response&& from) noexcept
    : CChatRoom_DeleteRoleFromUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRoleFromUser_Response& operator=(CChatRoom_DeleteRoleFromUser_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteRoleFromUser_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteRoleFromUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRoleFromUser_Response*>(
               &_CChatRoom_DeleteRoleFromUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CChatRoom_DeleteRoleFromUser_Response* other);
  friend void swap(CChatRoom_DeleteRoleFromUser_Response& a, CChatRoom_DeleteRoleFromUser_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteRoleFromUser_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteRoleFromUser_Response>(NULL);
  }

  CChatRoom_DeleteRoleFromUser_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRoleFromUser_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteRoleFromUser_Response& from);
  void MergeFrom(const CChatRoom_DeleteRoleFromUser_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteRoleFromUser_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRoleFromUser_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_JoinChatRoomGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinChatRoomGroup_Request) */ {
 public:
  CChatRoom_JoinChatRoomGroup_Request();
  virtual ~CChatRoom_JoinChatRoomGroup_Request();

  CChatRoom_JoinChatRoomGroup_Request(const CChatRoom_JoinChatRoomGroup_Request& from);

  inline CChatRoom_JoinChatRoomGroup_Request& operator=(const CChatRoom_JoinChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_JoinChatRoomGroup_Request(CChatRoom_JoinChatRoomGroup_Request&& from) noexcept
    : CChatRoom_JoinChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinChatRoomGroup_Request& operator=(CChatRoom_JoinChatRoomGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_JoinChatRoomGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_JoinChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinChatRoomGroup_Request*>(
               &_CChatRoom_JoinChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CChatRoom_JoinChatRoomGroup_Request* other);
  friend void swap(CChatRoom_JoinChatRoomGroup_Request& a, CChatRoom_JoinChatRoomGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_JoinChatRoomGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_JoinChatRoomGroup_Request>(NULL);
  }

  CChatRoom_JoinChatRoomGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_JoinChatRoomGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_JoinChatRoomGroup_Request& from);
  void MergeFrom(const CChatRoom_JoinChatRoomGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinChatRoomGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invite_code = 2;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 2;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 3;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinChatRoomGroup_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_invite_code();
  void clear_has_invite_code();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_JoinChatRoomGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinChatRoomGroup_Response) */ {
 public:
  CChatRoom_JoinChatRoomGroup_Response();
  virtual ~CChatRoom_JoinChatRoomGroup_Response();

  CChatRoom_JoinChatRoomGroup_Response(const CChatRoom_JoinChatRoomGroup_Response& from);

  inline CChatRoom_JoinChatRoomGroup_Response& operator=(const CChatRoom_JoinChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_JoinChatRoomGroup_Response(CChatRoom_JoinChatRoomGroup_Response&& from) noexcept
    : CChatRoom_JoinChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinChatRoomGroup_Response& operator=(CChatRoom_JoinChatRoomGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_JoinChatRoomGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_JoinChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinChatRoomGroup_Response*>(
               &_CChatRoom_JoinChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(CChatRoom_JoinChatRoomGroup_Response* other);
  friend void swap(CChatRoom_JoinChatRoomGroup_Response& a, CChatRoom_JoinChatRoomGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_JoinChatRoomGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_JoinChatRoomGroup_Response>(NULL);
  }

  CChatRoom_JoinChatRoomGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_JoinChatRoomGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_JoinChatRoomGroup_Response& from);
  void MergeFrom(const CChatRoom_JoinChatRoomGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinChatRoomGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoomGroupState state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  private:
  const ::CChatRoomGroupState& _internal_state() const;
  public:
  const ::CChatRoomGroupState& state() const;
  ::CChatRoomGroupState* release_state();
  ::CChatRoomGroupState* mutable_state();
  void set_allocated_state(::CChatRoomGroupState* state);

  // optional .CUserChatRoomGroupState user_chat_state = 3;
  bool has_user_chat_state() const;
  void clear_user_chat_state();
  static const int kUserChatStateFieldNumber = 3;
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_state() const;
  public:
  const ::CUserChatRoomGroupState& user_chat_state() const;
  ::CUserChatRoomGroupState* release_user_chat_state();
  ::CUserChatRoomGroupState* mutable_user_chat_state();
  void set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state);

  // optional uint64 join_chat_id = 4;
  bool has_join_chat_id() const;
  void clear_join_chat_id();
  static const int kJoinChatIdFieldNumber = 4;
  ::google::protobuf::uint64 join_chat_id() const;
  void set_join_chat_id(::google::protobuf::uint64 value);

  // optional uint32 time_expire = 5;
  bool has_time_expire() const;
  void clear_time_expire();
  static const int kTimeExpireFieldNumber = 5;
  ::google::protobuf::uint32 time_expire() const;
  void set_time_expire(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinChatRoomGroup_Response)
 private:
  void set_has_state();
  void clear_has_state();
  void set_has_user_chat_state();
  void clear_has_user_chat_state();
  void set_has_join_chat_id();
  void clear_has_join_chat_id();
  void set_has_time_expire();
  void clear_has_time_expire();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoomGroupState* state_;
  ::CUserChatRoomGroupState* user_chat_state_;
  ::google::protobuf::uint64 join_chat_id_;
  ::google::protobuf::uint32 time_expire_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_InviteFriendToChatRoomGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_InviteFriendToChatRoomGroup_Request) */ {
 public:
  CChatRoom_InviteFriendToChatRoomGroup_Request();
  virtual ~CChatRoom_InviteFriendToChatRoomGroup_Request();

  CChatRoom_InviteFriendToChatRoomGroup_Request(const CChatRoom_InviteFriendToChatRoomGroup_Request& from);

  inline CChatRoom_InviteFriendToChatRoomGroup_Request& operator=(const CChatRoom_InviteFriendToChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_InviteFriendToChatRoomGroup_Request(CChatRoom_InviteFriendToChatRoomGroup_Request&& from) noexcept
    : CChatRoom_InviteFriendToChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_InviteFriendToChatRoomGroup_Request& operator=(CChatRoom_InviteFriendToChatRoomGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_InviteFriendToChatRoomGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_InviteFriendToChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_InviteFriendToChatRoomGroup_Request*>(
               &_CChatRoom_InviteFriendToChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(CChatRoom_InviteFriendToChatRoomGroup_Request* other);
  friend void swap(CChatRoom_InviteFriendToChatRoomGroup_Request& a, CChatRoom_InviteFriendToChatRoomGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_InviteFriendToChatRoomGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_InviteFriendToChatRoomGroup_Request>(NULL);
  }

  CChatRoom_InviteFriendToChatRoomGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_InviteFriendToChatRoomGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_InviteFriendToChatRoomGroup_Request& from);
  void MergeFrom(const CChatRoom_InviteFriendToChatRoomGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_InviteFriendToChatRoomGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 3;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional bool skip_friendsui_check = 4;
  bool has_skip_friendsui_check() const;
  void clear_skip_friendsui_check();
  static const int kSkipFriendsuiCheckFieldNumber = 4;
  bool skip_friendsui_check() const;
  void set_skip_friendsui_check(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_InviteFriendToChatRoomGroup_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_skip_friendsui_check();
  void clear_has_skip_friendsui_check();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 chat_id_;
  bool skip_friendsui_check_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_InviteFriendToChatRoomGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_InviteFriendToChatRoomGroup_Response) */ {
 public:
  CChatRoom_InviteFriendToChatRoomGroup_Response();
  virtual ~CChatRoom_InviteFriendToChatRoomGroup_Response();

  CChatRoom_InviteFriendToChatRoomGroup_Response(const CChatRoom_InviteFriendToChatRoomGroup_Response& from);

  inline CChatRoom_InviteFriendToChatRoomGroup_Response& operator=(const CChatRoom_InviteFriendToChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_InviteFriendToChatRoomGroup_Response(CChatRoom_InviteFriendToChatRoomGroup_Response&& from) noexcept
    : CChatRoom_InviteFriendToChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_InviteFriendToChatRoomGroup_Response& operator=(CChatRoom_InviteFriendToChatRoomGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_InviteFriendToChatRoomGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_InviteFriendToChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_InviteFriendToChatRoomGroup_Response*>(
               &_CChatRoom_InviteFriendToChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(CChatRoom_InviteFriendToChatRoomGroup_Response* other);
  friend void swap(CChatRoom_InviteFriendToChatRoomGroup_Response& a, CChatRoom_InviteFriendToChatRoomGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_InviteFriendToChatRoomGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_InviteFriendToChatRoomGroup_Response>(NULL);
  }

  CChatRoom_InviteFriendToChatRoomGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_InviteFriendToChatRoomGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_InviteFriendToChatRoomGroup_Response& from);
  void MergeFrom(const CChatRoom_InviteFriendToChatRoomGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_InviteFriendToChatRoomGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_InviteFriendToChatRoomGroup_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveChatRoomGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveChatRoomGroup_Request) */ {
 public:
  CChatRoom_LeaveChatRoomGroup_Request();
  virtual ~CChatRoom_LeaveChatRoomGroup_Request();

  CChatRoom_LeaveChatRoomGroup_Request(const CChatRoom_LeaveChatRoomGroup_Request& from);

  inline CChatRoom_LeaveChatRoomGroup_Request& operator=(const CChatRoom_LeaveChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_LeaveChatRoomGroup_Request(CChatRoom_LeaveChatRoomGroup_Request&& from) noexcept
    : CChatRoom_LeaveChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveChatRoomGroup_Request& operator=(CChatRoom_LeaveChatRoomGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_LeaveChatRoomGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_LeaveChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveChatRoomGroup_Request*>(
               &_CChatRoom_LeaveChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CChatRoom_LeaveChatRoomGroup_Request* other);
  friend void swap(CChatRoom_LeaveChatRoomGroup_Request& a, CChatRoom_LeaveChatRoomGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_LeaveChatRoomGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_LeaveChatRoomGroup_Request>(NULL);
  }

  CChatRoom_LeaveChatRoomGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_LeaveChatRoomGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_LeaveChatRoomGroup_Request& from);
  void MergeFrom(const CChatRoom_LeaveChatRoomGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_LeaveChatRoomGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveChatRoomGroup_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveChatRoomGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveChatRoomGroup_Response) */ {
 public:
  CChatRoom_LeaveChatRoomGroup_Response();
  virtual ~CChatRoom_LeaveChatRoomGroup_Response();

  CChatRoom_LeaveChatRoomGroup_Response(const CChatRoom_LeaveChatRoomGroup_Response& from);

  inline CChatRoom_LeaveChatRoomGroup_Response& operator=(const CChatRoom_LeaveChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_LeaveChatRoomGroup_Response(CChatRoom_LeaveChatRoomGroup_Response&& from) noexcept
    : CChatRoom_LeaveChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveChatRoomGroup_Response& operator=(CChatRoom_LeaveChatRoomGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_LeaveChatRoomGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_LeaveChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveChatRoomGroup_Response*>(
               &_CChatRoom_LeaveChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CChatRoom_LeaveChatRoomGroup_Response* other);
  friend void swap(CChatRoom_LeaveChatRoomGroup_Response& a, CChatRoom_LeaveChatRoomGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_LeaveChatRoomGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_LeaveChatRoomGroup_Response>(NULL);
  }

  CChatRoom_LeaveChatRoomGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_LeaveChatRoomGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_LeaveChatRoomGroup_Response& from);
  void MergeFrom(const CChatRoom_LeaveChatRoomGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_LeaveChatRoomGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveChatRoomGroup_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoom_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoom_Request) */ {
 public:
  CChatRoom_CreateChatRoom_Request();
  virtual ~CChatRoom_CreateChatRoom_Request();

  CChatRoom_CreateChatRoom_Request(const CChatRoom_CreateChatRoom_Request& from);

  inline CChatRoom_CreateChatRoom_Request& operator=(const CChatRoom_CreateChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateChatRoom_Request(CChatRoom_CreateChatRoom_Request&& from) noexcept
    : CChatRoom_CreateChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoom_Request& operator=(CChatRoom_CreateChatRoom_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateChatRoom_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoom_Request*>(
               &_CChatRoom_CreateChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(CChatRoom_CreateChatRoom_Request* other);
  friend void swap(CChatRoom_CreateChatRoom_Request& a, CChatRoom_CreateChatRoom_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateChatRoom_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoom_Request>(NULL);
  }

  CChatRoom_CreateChatRoom_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoom_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateChatRoom_Request& from);
  void MergeFrom(const CChatRoom_CreateChatRoom_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoom_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional bool allow_voice = 3;
  bool has_allow_voice() const;
  void clear_allow_voice();
  static const int kAllowVoiceFieldNumber = 3;
  bool allow_voice() const;
  void set_allow_voice(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoom_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_name();
  void clear_has_name();
  void set_has_allow_voice();
  void clear_has_allow_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 chat_group_id_;
  bool allow_voice_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoom_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoom_Response) */ {
 public:
  CChatRoom_CreateChatRoom_Response();
  virtual ~CChatRoom_CreateChatRoom_Response();

  CChatRoom_CreateChatRoom_Response(const CChatRoom_CreateChatRoom_Response& from);

  inline CChatRoom_CreateChatRoom_Response& operator=(const CChatRoom_CreateChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateChatRoom_Response(CChatRoom_CreateChatRoom_Response&& from) noexcept
    : CChatRoom_CreateChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoom_Response& operator=(CChatRoom_CreateChatRoom_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateChatRoom_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoom_Response*>(
               &_CChatRoom_CreateChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CChatRoom_CreateChatRoom_Response* other);
  friend void swap(CChatRoom_CreateChatRoom_Response& a, CChatRoom_CreateChatRoom_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateChatRoom_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoom_Response>(NULL);
  }

  CChatRoom_CreateChatRoom_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoom_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateChatRoom_Response& from);
  void MergeFrom(const CChatRoom_CreateChatRoom_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoom_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoomState chat_room = 1;
  bool has_chat_room() const;
  void clear_chat_room();
  static const int kChatRoomFieldNumber = 1;
  private:
  const ::CChatRoomState& _internal_chat_room() const;
  public:
  const ::CChatRoomState& chat_room() const;
  ::CChatRoomState* release_chat_room();
  ::CChatRoomState* mutable_chat_room();
  void set_allocated_chat_room(::CChatRoomState* chat_room);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoom_Response)
 private:
  void set_has_chat_room();
  void clear_has_chat_room();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoomState* chat_room_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatRoom_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatRoom_Request) */ {
 public:
  CChatRoom_DeleteChatRoom_Request();
  virtual ~CChatRoom_DeleteChatRoom_Request();

  CChatRoom_DeleteChatRoom_Request(const CChatRoom_DeleteChatRoom_Request& from);

  inline CChatRoom_DeleteChatRoom_Request& operator=(const CChatRoom_DeleteChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteChatRoom_Request(CChatRoom_DeleteChatRoom_Request&& from) noexcept
    : CChatRoom_DeleteChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatRoom_Request& operator=(CChatRoom_DeleteChatRoom_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteChatRoom_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatRoom_Request*>(
               &_CChatRoom_DeleteChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CChatRoom_DeleteChatRoom_Request* other);
  friend void swap(CChatRoom_DeleteChatRoom_Request& a, CChatRoom_DeleteChatRoom_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteChatRoom_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatRoom_Request>(NULL);
  }

  CChatRoom_DeleteChatRoom_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatRoom_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteChatRoom_Request& from);
  void MergeFrom(const CChatRoom_DeleteChatRoom_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatRoom_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatRoom_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatRoom_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatRoom_Response) */ {
 public:
  CChatRoom_DeleteChatRoom_Response();
  virtual ~CChatRoom_DeleteChatRoom_Response();

  CChatRoom_DeleteChatRoom_Response(const CChatRoom_DeleteChatRoom_Response& from);

  inline CChatRoom_DeleteChatRoom_Response& operator=(const CChatRoom_DeleteChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteChatRoom_Response(CChatRoom_DeleteChatRoom_Response&& from) noexcept
    : CChatRoom_DeleteChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatRoom_Response& operator=(CChatRoom_DeleteChatRoom_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteChatRoom_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatRoom_Response*>(
               &_CChatRoom_DeleteChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CChatRoom_DeleteChatRoom_Response* other);
  friend void swap(CChatRoom_DeleteChatRoom_Response& a, CChatRoom_DeleteChatRoom_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteChatRoom_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatRoom_Response>(NULL);
  }

  CChatRoom_DeleteChatRoom_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatRoom_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteChatRoom_Response& from);
  void MergeFrom(const CChatRoom_DeleteChatRoom_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatRoom_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatRoom_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoom_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoom_Request) */ {
 public:
  CChatRoom_RenameChatRoom_Request();
  virtual ~CChatRoom_RenameChatRoom_Request();

  CChatRoom_RenameChatRoom_Request(const CChatRoom_RenameChatRoom_Request& from);

  inline CChatRoom_RenameChatRoom_Request& operator=(const CChatRoom_RenameChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RenameChatRoom_Request(CChatRoom_RenameChatRoom_Request&& from) noexcept
    : CChatRoom_RenameChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoom_Request& operator=(CChatRoom_RenameChatRoom_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RenameChatRoom_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RenameChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoom_Request*>(
               &_CChatRoom_RenameChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CChatRoom_RenameChatRoom_Request* other);
  friend void swap(CChatRoom_RenameChatRoom_Request& a, CChatRoom_RenameChatRoom_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RenameChatRoom_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoom_Request>(NULL);
  }

  CChatRoom_RenameChatRoom_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoom_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RenameChatRoom_Request& from);
  void MergeFrom(const CChatRoom_RenameChatRoom_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoom_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoom_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoom_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoom_Response) */ {
 public:
  CChatRoom_RenameChatRoom_Response();
  virtual ~CChatRoom_RenameChatRoom_Response();

  CChatRoom_RenameChatRoom_Response(const CChatRoom_RenameChatRoom_Response& from);

  inline CChatRoom_RenameChatRoom_Response& operator=(const CChatRoom_RenameChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_RenameChatRoom_Response(CChatRoom_RenameChatRoom_Response&& from) noexcept
    : CChatRoom_RenameChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoom_Response& operator=(CChatRoom_RenameChatRoom_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_RenameChatRoom_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_RenameChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoom_Response*>(
               &_CChatRoom_RenameChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CChatRoom_RenameChatRoom_Response* other);
  friend void swap(CChatRoom_RenameChatRoom_Response& a, CChatRoom_RenameChatRoom_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_RenameChatRoom_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoom_Response>(NULL);
  }

  CChatRoom_RenameChatRoom_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoom_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_RenameChatRoom_Response& from);
  void MergeFrom(const CChatRoom_RenameChatRoom_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoom_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoom_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderChatRoom_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderChatRoom_Request) */ {
 public:
  CChatRoom_ReorderChatRoom_Request();
  virtual ~CChatRoom_ReorderChatRoom_Request();

  CChatRoom_ReorderChatRoom_Request(const CChatRoom_ReorderChatRoom_Request& from);

  inline CChatRoom_ReorderChatRoom_Request& operator=(const CChatRoom_ReorderChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ReorderChatRoom_Request(CChatRoom_ReorderChatRoom_Request&& from) noexcept
    : CChatRoom_ReorderChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderChatRoom_Request& operator=(CChatRoom_ReorderChatRoom_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ReorderChatRoom_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ReorderChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderChatRoom_Request*>(
               &_CChatRoom_ReorderChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CChatRoom_ReorderChatRoom_Request* other);
  friend void swap(CChatRoom_ReorderChatRoom_Request& a, CChatRoom_ReorderChatRoom_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ReorderChatRoom_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_ReorderChatRoom_Request>(NULL);
  }

  CChatRoom_ReorderChatRoom_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ReorderChatRoom_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ReorderChatRoom_Request& from);
  void MergeFrom(const CChatRoom_ReorderChatRoom_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReorderChatRoom_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint64 move_after_chat_id = 3;
  bool has_move_after_chat_id() const;
  void clear_move_after_chat_id();
  static const int kMoveAfterChatIdFieldNumber = 3;
  ::google::protobuf::uint64 move_after_chat_id() const;
  void set_move_after_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderChatRoom_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_move_after_chat_id();
  void clear_has_move_after_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint64 move_after_chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderChatRoom_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderChatRoom_Response) */ {
 public:
  CChatRoom_ReorderChatRoom_Response();
  virtual ~CChatRoom_ReorderChatRoom_Response();

  CChatRoom_ReorderChatRoom_Response(const CChatRoom_ReorderChatRoom_Response& from);

  inline CChatRoom_ReorderChatRoom_Response& operator=(const CChatRoom_ReorderChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ReorderChatRoom_Response(CChatRoom_ReorderChatRoom_Response&& from) noexcept
    : CChatRoom_ReorderChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderChatRoom_Response& operator=(CChatRoom_ReorderChatRoom_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ReorderChatRoom_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ReorderChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderChatRoom_Response*>(
               &_CChatRoom_ReorderChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(CChatRoom_ReorderChatRoom_Response* other);
  friend void swap(CChatRoom_ReorderChatRoom_Response& a, CChatRoom_ReorderChatRoom_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ReorderChatRoom_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_ReorderChatRoom_Response>(NULL);
  }

  CChatRoom_ReorderChatRoom_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ReorderChatRoom_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ReorderChatRoom_Response& from);
  void MergeFrom(const CChatRoom_ReorderChatRoom_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReorderChatRoom_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderChatRoom_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SendChatMessage_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SendChatMessage_Request) */ {
 public:
  CChatRoom_SendChatMessage_Request();
  virtual ~CChatRoom_SendChatMessage_Request();

  CChatRoom_SendChatMessage_Request(const CChatRoom_SendChatMessage_Request& from);

  inline CChatRoom_SendChatMessage_Request& operator=(const CChatRoom_SendChatMessage_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SendChatMessage_Request(CChatRoom_SendChatMessage_Request&& from) noexcept
    : CChatRoom_SendChatMessage_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SendChatMessage_Request& operator=(CChatRoom_SendChatMessage_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SendChatMessage_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SendChatMessage_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SendChatMessage_Request*>(
               &_CChatRoom_SendChatMessage_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(CChatRoom_SendChatMessage_Request* other);
  friend void swap(CChatRoom_SendChatMessage_Request& a, CChatRoom_SendChatMessage_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SendChatMessage_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SendChatMessage_Request>(NULL);
  }

  CChatRoom_SendChatMessage_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SendChatMessage_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SendChatMessage_Request& from);
  void MergeFrom(const CChatRoom_SendChatMessage_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SendChatMessage_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SendChatMessage_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SendChatMessage_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SendChatMessage_Response) */ {
 public:
  CChatRoom_SendChatMessage_Response();
  virtual ~CChatRoom_SendChatMessage_Response();

  CChatRoom_SendChatMessage_Response(const CChatRoom_SendChatMessage_Response& from);

  inline CChatRoom_SendChatMessage_Response& operator=(const CChatRoom_SendChatMessage_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SendChatMessage_Response(CChatRoom_SendChatMessage_Response&& from) noexcept
    : CChatRoom_SendChatMessage_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SendChatMessage_Response& operator=(CChatRoom_SendChatMessage_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SendChatMessage_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SendChatMessage_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SendChatMessage_Response*>(
               &_CChatRoom_SendChatMessage_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(CChatRoom_SendChatMessage_Response* other);
  friend void swap(CChatRoom_SendChatMessage_Response& a, CChatRoom_SendChatMessage_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SendChatMessage_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SendChatMessage_Response>(NULL);
  }

  CChatRoom_SendChatMessage_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SendChatMessage_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SendChatMessage_Response& from);
  void MergeFrom(const CChatRoom_SendChatMessage_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SendChatMessage_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string modified_message = 1;
  bool has_modified_message() const;
  void clear_modified_message();
  static const int kModifiedMessageFieldNumber = 1;
  const ::std::string& modified_message() const;
  void set_modified_message(const ::std::string& value);
  #if LANG_CXX11
  void set_modified_message(::std::string&& value);
  #endif
  void set_modified_message(const char* value);
  void set_modified_message(const char* value, size_t size);
  ::std::string* mutable_modified_message();
  ::std::string* release_modified_message();
  void set_allocated_modified_message(::std::string* modified_message);

  // optional uint32 server_timestamp = 2;
  bool has_server_timestamp() const;
  void clear_server_timestamp();
  static const int kServerTimestampFieldNumber = 2;
  ::google::protobuf::uint32 server_timestamp() const;
  void set_server_timestamp(::google::protobuf::uint32 value);

  // optional uint32 ordinal = 3;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 3;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SendChatMessage_Response)
 private:
  void set_has_modified_message();
  void clear_has_modified_message();
  void set_has_server_timestamp();
  void clear_has_server_timestamp();
  void set_has_ordinal();
  void clear_has_ordinal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr modified_message_;
  ::google::protobuf::uint32 server_timestamp_;
  ::google::protobuf::uint32 ordinal_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_JoinVoiceChat_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinVoiceChat_Request) */ {
 public:
  CChatRoom_JoinVoiceChat_Request();
  virtual ~CChatRoom_JoinVoiceChat_Request();

  CChatRoom_JoinVoiceChat_Request(const CChatRoom_JoinVoiceChat_Request& from);

  inline CChatRoom_JoinVoiceChat_Request& operator=(const CChatRoom_JoinVoiceChat_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_JoinVoiceChat_Request(CChatRoom_JoinVoiceChat_Request&& from) noexcept
    : CChatRoom_JoinVoiceChat_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinVoiceChat_Request& operator=(CChatRoom_JoinVoiceChat_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_JoinVoiceChat_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_JoinVoiceChat_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinVoiceChat_Request*>(
               &_CChatRoom_JoinVoiceChat_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(CChatRoom_JoinVoiceChat_Request* other);
  friend void swap(CChatRoom_JoinVoiceChat_Request& a, CChatRoom_JoinVoiceChat_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_JoinVoiceChat_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_JoinVoiceChat_Request>(NULL);
  }

  CChatRoom_JoinVoiceChat_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_JoinVoiceChat_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_JoinVoiceChat_Request& from);
  void MergeFrom(const CChatRoom_JoinVoiceChat_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinVoiceChat_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinVoiceChat_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_JoinVoiceChat_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinVoiceChat_Response) */ {
 public:
  CChatRoom_JoinVoiceChat_Response();
  virtual ~CChatRoom_JoinVoiceChat_Response();

  CChatRoom_JoinVoiceChat_Response(const CChatRoom_JoinVoiceChat_Response& from);

  inline CChatRoom_JoinVoiceChat_Response& operator=(const CChatRoom_JoinVoiceChat_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_JoinVoiceChat_Response(CChatRoom_JoinVoiceChat_Response&& from) noexcept
    : CChatRoom_JoinVoiceChat_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinVoiceChat_Response& operator=(CChatRoom_JoinVoiceChat_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_JoinVoiceChat_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_JoinVoiceChat_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinVoiceChat_Response*>(
               &_CChatRoom_JoinVoiceChat_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(CChatRoom_JoinVoiceChat_Response* other);
  friend void swap(CChatRoom_JoinVoiceChat_Response& a, CChatRoom_JoinVoiceChat_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_JoinVoiceChat_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_JoinVoiceChat_Response>(NULL);
  }

  CChatRoom_JoinVoiceChat_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_JoinVoiceChat_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_JoinVoiceChat_Response& from);
  void MergeFrom(const CChatRoom_JoinVoiceChat_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinVoiceChat_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 voice_chatid = 1;
  bool has_voice_chatid() const;
  void clear_voice_chatid();
  static const int kVoiceChatidFieldNumber = 1;
  ::google::protobuf::uint64 voice_chatid() const;
  void set_voice_chatid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinVoiceChat_Response)
 private:
  void set_has_voice_chatid();
  void clear_has_voice_chatid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 voice_chatid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveVoiceChat_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveVoiceChat_Request) */ {
 public:
  CChatRoom_LeaveVoiceChat_Request();
  virtual ~CChatRoom_LeaveVoiceChat_Request();

  CChatRoom_LeaveVoiceChat_Request(const CChatRoom_LeaveVoiceChat_Request& from);

  inline CChatRoom_LeaveVoiceChat_Request& operator=(const CChatRoom_LeaveVoiceChat_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_LeaveVoiceChat_Request(CChatRoom_LeaveVoiceChat_Request&& from) noexcept
    : CChatRoom_LeaveVoiceChat_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveVoiceChat_Request& operator=(CChatRoom_LeaveVoiceChat_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_LeaveVoiceChat_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_LeaveVoiceChat_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveVoiceChat_Request*>(
               &_CChatRoom_LeaveVoiceChat_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(CChatRoom_LeaveVoiceChat_Request* other);
  friend void swap(CChatRoom_LeaveVoiceChat_Request& a, CChatRoom_LeaveVoiceChat_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_LeaveVoiceChat_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_LeaveVoiceChat_Request>(NULL);
  }

  CChatRoom_LeaveVoiceChat_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_LeaveVoiceChat_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_LeaveVoiceChat_Request& from);
  void MergeFrom(const CChatRoom_LeaveVoiceChat_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_LeaveVoiceChat_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveVoiceChat_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveVoiceChat_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveVoiceChat_Response) */ {
 public:
  CChatRoom_LeaveVoiceChat_Response();
  virtual ~CChatRoom_LeaveVoiceChat_Response();

  CChatRoom_LeaveVoiceChat_Response(const CChatRoom_LeaveVoiceChat_Response& from);

  inline CChatRoom_LeaveVoiceChat_Response& operator=(const CChatRoom_LeaveVoiceChat_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_LeaveVoiceChat_Response(CChatRoom_LeaveVoiceChat_Response&& from) noexcept
    : CChatRoom_LeaveVoiceChat_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveVoiceChat_Response& operator=(CChatRoom_LeaveVoiceChat_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_LeaveVoiceChat_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_LeaveVoiceChat_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveVoiceChat_Response*>(
               &_CChatRoom_LeaveVoiceChat_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(CChatRoom_LeaveVoiceChat_Response* other);
  friend void swap(CChatRoom_LeaveVoiceChat_Response& a, CChatRoom_LeaveVoiceChat_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_LeaveVoiceChat_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_LeaveVoiceChat_Response>(NULL);
  }

  CChatRoom_LeaveVoiceChat_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_LeaveVoiceChat_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_LeaveVoiceChat_Response& from);
  void MergeFrom(const CChatRoom_LeaveVoiceChat_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_LeaveVoiceChat_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveVoiceChat_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Request) */ {
 public:
  CChatRoom_GetMessageHistory_Request();
  virtual ~CChatRoom_GetMessageHistory_Request();

  CChatRoom_GetMessageHistory_Request(const CChatRoom_GetMessageHistory_Request& from);

  inline CChatRoom_GetMessageHistory_Request& operator=(const CChatRoom_GetMessageHistory_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetMessageHistory_Request(CChatRoom_GetMessageHistory_Request&& from) noexcept
    : CChatRoom_GetMessageHistory_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Request& operator=(CChatRoom_GetMessageHistory_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetMessageHistory_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetMessageHistory_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Request*>(
               &_CChatRoom_GetMessageHistory_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(CChatRoom_GetMessageHistory_Request* other);
  friend void swap(CChatRoom_GetMessageHistory_Request& a, CChatRoom_GetMessageHistory_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetMessageHistory_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Request>(NULL);
  }

  CChatRoom_GetMessageHistory_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetMessageHistory_Request& from);
  void MergeFrom(const CChatRoom_GetMessageHistory_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint32 last_time = 3;
  bool has_last_time() const;
  void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  ::google::protobuf::uint32 last_time() const;
  void set_last_time(::google::protobuf::uint32 value);

  // optional uint32 last_ordinal = 4;
  bool has_last_ordinal() const;
  void clear_last_ordinal();
  static const int kLastOrdinalFieldNumber = 4;
  ::google::protobuf::uint32 last_ordinal() const;
  void set_last_ordinal(::google::protobuf::uint32 value);

  // optional uint32 start_time = 5;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 start_ordinal = 6;
  bool has_start_ordinal() const;
  void clear_start_ordinal();
  static const int kStartOrdinalFieldNumber = 6;
  ::google::protobuf::uint32 start_ordinal() const;
  void set_start_ordinal(::google::protobuf::uint32 value);

  // optional uint32 max_count = 7;
  bool has_max_count() const;
  void clear_max_count();
  static const int kMaxCountFieldNumber = 7;
  ::google::protobuf::uint32 max_count() const;
  void set_max_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_last_time();
  void clear_has_last_time();
  void set_has_last_ordinal();
  void clear_has_last_ordinal();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_start_ordinal();
  void clear_has_start_ordinal();
  void set_has_max_count();
  void clear_has_max_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint32 last_time_;
  ::google::protobuf::uint32 last_ordinal_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 start_ordinal_;
  ::google::protobuf::uint32 max_count_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerMessage) */ {
 public:
  ServerMessage();
  virtual ~ServerMessage();

  ServerMessage(const ServerMessage& from);

  inline ServerMessage& operator=(const ServerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerMessage(ServerMessage&& from) noexcept
    : ServerMessage() {
    *this = ::std::move(from);
  }

  inline ServerMessage& operator=(ServerMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerMessage* internal_default_instance() {
    return reinterpret_cast<const ServerMessage*>(
               &_ServerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(ServerMessage* other);
  friend void swap(ServerMessage& a, ServerMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerMessage* New() const final {
    return CreateMaybeMessage<ServerMessage>(NULL);
  }

  ServerMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerMessage& from);
  void MergeFrom(const ServerMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string_param = 2;
  bool has_string_param() const;
  void clear_string_param();
  static const int kStringParamFieldNumber = 2;
  const ::std::string& string_param() const;
  void set_string_param(const ::std::string& value);
  #if LANG_CXX11
  void set_string_param(::std::string&& value);
  #endif
  void set_string_param(const char* value);
  void set_string_param(const char* value, size_t size);
  ::std::string* mutable_string_param();
  ::std::string* release_string_param();
  void set_allocated_string_param(::std::string* string_param);

  // optional .EChatRoomServerMessage message = 1 [default = k_EChatRoomServerMsg_Invalid];
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  ::EChatRoomServerMessage message() const;
  void set_message(::EChatRoomServerMessage value);

  // optional uint32 accountid_param = 3;
  bool has_accountid_param() const;
  void clear_accountid_param();
  static const int kAccountidParamFieldNumber = 3;
  ::google::protobuf::uint32 accountid_param() const;
  void set_accountid_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerMessage)
 private:
  void set_has_message();
  void clear_has_message();
  void set_has_string_param();
  void clear_has_string_param();
  void set_has_accountid_param();
  void clear_has_accountid_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr string_param_;
  int message_;
  ::google::protobuf::uint32 accountid_param_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Response_ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Response.ChatMessage) */ {
 public:
  CChatRoom_GetMessageHistory_Response_ChatMessage();
  virtual ~CChatRoom_GetMessageHistory_Response_ChatMessage();

  CChatRoom_GetMessageHistory_Response_ChatMessage(const CChatRoom_GetMessageHistory_Response_ChatMessage& from);

  inline CChatRoom_GetMessageHistory_Response_ChatMessage& operator=(const CChatRoom_GetMessageHistory_Response_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetMessageHistory_Response_ChatMessage(CChatRoom_GetMessageHistory_Response_ChatMessage&& from) noexcept
    : CChatRoom_GetMessageHistory_Response_ChatMessage() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Response_ChatMessage& operator=(CChatRoom_GetMessageHistory_Response_ChatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetMessageHistory_Response_ChatMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetMessageHistory_Response_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Response_ChatMessage*>(
               &_CChatRoom_GetMessageHistory_Response_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(CChatRoom_GetMessageHistory_Response_ChatMessage* other);
  friend void swap(CChatRoom_GetMessageHistory_Response_ChatMessage& a, CChatRoom_GetMessageHistory_Response_ChatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetMessageHistory_Response_ChatMessage* New() const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response_ChatMessage>(NULL);
  }

  CChatRoom_GetMessageHistory_Response_ChatMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response_ChatMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetMessageHistory_Response_ChatMessage& from);
  void MergeFrom(const CChatRoom_GetMessageHistory_Response_ChatMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Response_ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional .ServerMessage server_message = 5;
  bool has_server_message() const;
  void clear_server_message();
  static const int kServerMessageFieldNumber = 5;
  private:
  const ::ServerMessage& _internal_server_message() const;
  public:
  const ::ServerMessage& server_message() const;
  ::ServerMessage* release_server_message();
  ::ServerMessage* mutable_server_message();
  void set_allocated_server_message(::ServerMessage* server_message);

  // optional uint32 sender = 1;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  ::google::protobuf::uint32 sender() const;
  void set_sender(::google::protobuf::uint32 value);

  // optional uint32 server_timestamp = 2;
  bool has_server_timestamp() const;
  void clear_server_timestamp();
  static const int kServerTimestampFieldNumber = 2;
  ::google::protobuf::uint32 server_timestamp() const;
  void set_server_timestamp(::google::protobuf::uint32 value);

  // optional uint32 ordinal = 4;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 4;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // optional bool deleted = 6;
  bool has_deleted() const;
  void clear_deleted();
  static const int kDeletedFieldNumber = 6;
  bool deleted() const;
  void set_deleted(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Response.ChatMessage)
 private:
  void set_has_sender();
  void clear_has_sender();
  void set_has_server_timestamp();
  void clear_has_server_timestamp();
  void set_has_message();
  void clear_has_message();
  void set_has_ordinal();
  void clear_has_ordinal();
  void set_has_server_message();
  void clear_has_server_message();
  void set_has_deleted();
  void clear_has_deleted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::ServerMessage* server_message_;
  ::google::protobuf::uint32 sender_;
  ::google::protobuf::uint32 server_timestamp_;
  ::google::protobuf::uint32 ordinal_;
  bool deleted_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Response) */ {
 public:
  CChatRoom_GetMessageHistory_Response();
  virtual ~CChatRoom_GetMessageHistory_Response();

  CChatRoom_GetMessageHistory_Response(const CChatRoom_GetMessageHistory_Response& from);

  inline CChatRoom_GetMessageHistory_Response& operator=(const CChatRoom_GetMessageHistory_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetMessageHistory_Response(CChatRoom_GetMessageHistory_Response&& from) noexcept
    : CChatRoom_GetMessageHistory_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Response& operator=(CChatRoom_GetMessageHistory_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetMessageHistory_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetMessageHistory_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Response*>(
               &_CChatRoom_GetMessageHistory_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(CChatRoom_GetMessageHistory_Response* other);
  friend void swap(CChatRoom_GetMessageHistory_Response& a, CChatRoom_GetMessageHistory_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetMessageHistory_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response>(NULL);
  }

  CChatRoom_GetMessageHistory_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetMessageHistory_Response& from);
  void MergeFrom(const CChatRoom_GetMessageHistory_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetMessageHistory_Response_ChatMessage ChatMessage;

  // accessors -------------------------------------------------------

  // repeated .CChatRoom_GetMessageHistory_Response.ChatMessage messages = 1;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 1;
  ::CChatRoom_GetMessageHistory_Response_ChatMessage* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >*
      mutable_messages();
  const ::CChatRoom_GetMessageHistory_Response_ChatMessage& messages(int index) const;
  ::CChatRoom_GetMessageHistory_Response_ChatMessage* add_messages();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >&
      messages() const;

  // optional bool more_available = 4;
  bool has_more_available() const;
  void clear_more_available();
  static const int kMoreAvailableFieldNumber = 4;
  bool more_available() const;
  void set_more_available(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Response)
 private:
  void set_has_more_available();
  void clear_has_more_available();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage > messages_;
  bool more_available_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetMyChatRoomGroups_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMyChatRoomGroups_Request) */ {
 public:
  CChatRoom_GetMyChatRoomGroups_Request();
  virtual ~CChatRoom_GetMyChatRoomGroups_Request();

  CChatRoom_GetMyChatRoomGroups_Request(const CChatRoom_GetMyChatRoomGroups_Request& from);

  inline CChatRoom_GetMyChatRoomGroups_Request& operator=(const CChatRoom_GetMyChatRoomGroups_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetMyChatRoomGroups_Request(CChatRoom_GetMyChatRoomGroups_Request&& from) noexcept
    : CChatRoom_GetMyChatRoomGroups_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMyChatRoomGroups_Request& operator=(CChatRoom_GetMyChatRoomGroups_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetMyChatRoomGroups_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetMyChatRoomGroups_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMyChatRoomGroups_Request*>(
               &_CChatRoom_GetMyChatRoomGroups_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(CChatRoom_GetMyChatRoomGroups_Request* other);
  friend void swap(CChatRoom_GetMyChatRoomGroups_Request& a, CChatRoom_GetMyChatRoomGroups_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetMyChatRoomGroups_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetMyChatRoomGroups_Request>(NULL);
  }

  CChatRoom_GetMyChatRoomGroups_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetMyChatRoomGroups_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetMyChatRoomGroups_Request& from);
  void MergeFrom(const CChatRoom_GetMyChatRoomGroups_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMyChatRoomGroups_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMyChatRoomGroups_Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupSummary_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupSummary_Response) */ {
 public:
  CChatRoom_GetChatRoomGroupSummary_Response();
  virtual ~CChatRoom_GetChatRoomGroupSummary_Response();

  CChatRoom_GetChatRoomGroupSummary_Response(const CChatRoom_GetChatRoomGroupSummary_Response& from);

  inline CChatRoom_GetChatRoomGroupSummary_Response& operator=(const CChatRoom_GetChatRoomGroupSummary_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetChatRoomGroupSummary_Response(CChatRoom_GetChatRoomGroupSummary_Response&& from) noexcept
    : CChatRoom_GetChatRoomGroupSummary_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupSummary_Response& operator=(CChatRoom_GetChatRoomGroupSummary_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetChatRoomGroupSummary_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetChatRoomGroupSummary_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupSummary_Response*>(
               &_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(CChatRoom_GetChatRoomGroupSummary_Response* other);
  friend void swap(CChatRoom_GetChatRoomGroupSummary_Response& a, CChatRoom_GetChatRoomGroupSummary_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetChatRoomGroupSummary_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupSummary_Response>(NULL);
  }

  CChatRoom_GetChatRoomGroupSummary_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupSummary_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetChatRoomGroupSummary_Response& from);
  void MergeFrom(const CChatRoom_GetChatRoomGroupSummary_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupSummary_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoomState chat_rooms = 6;
  int chat_rooms_size() const;
  void clear_chat_rooms();
  static const int kChatRoomsFieldNumber = 6;
  ::CChatRoomState* mutable_chat_rooms(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomState >*
      mutable_chat_rooms();
  const ::CChatRoomState& chat_rooms(int index) const;
  ::CChatRoomState* add_chat_rooms();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomState >&
      chat_rooms() const;

  // repeated uint32 top_members = 10;
  int top_members_size() const;
  void clear_top_members();
  static const int kTopMembersFieldNumber = 10;
  ::google::protobuf::uint32 top_members(int index) const;
  void set_top_members(int index, ::google::protobuf::uint32 value);
  void add_top_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      top_members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_top_members();

  // repeated uint64 role_ids = 14;
  int role_ids_size() const;
  void clear_role_ids();
  static const int kRoleIdsFieldNumber = 14;
  ::google::protobuf::uint64 role_ids(int index) const;
  void set_role_ids(int index, ::google::protobuf::uint64 value);
  void add_role_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      role_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_role_ids();

  // repeated .CChatRoleActions role_actions = 15;
  int role_actions_size() const;
  void clear_role_actions();
  static const int kRoleActionsFieldNumber = 15;
  ::CChatRoleActions* mutable_role_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >*
      mutable_role_actions();
  const ::CChatRoleActions& role_actions(int index) const;
  ::CChatRoleActions* add_role_actions();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >&
      role_actions() const;

  // repeated .CChatPartyBeacon party_beacons = 18;
  int party_beacons_size() const;
  void clear_party_beacons();
  static const int kPartyBeaconsFieldNumber = 18;
  ::CChatPartyBeacon* mutable_party_beacons(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >*
      mutable_party_beacons();
  const ::CChatPartyBeacon& party_beacons(int index) const;
  ::CChatPartyBeacon* add_party_beacons();
  const ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >&
      party_beacons() const;

  // optional string chat_group_name = 2;
  bool has_chat_group_name() const;
  void clear_chat_group_name();
  static const int kChatGroupNameFieldNumber = 2;
  const ::std::string& chat_group_name() const;
  void set_chat_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_group_name(::std::string&& value);
  #endif
  void set_chat_group_name(const char* value);
  void set_chat_group_name(const char* value, size_t size);
  ::std::string* mutable_chat_group_name();
  ::std::string* release_chat_group_name();
  void set_allocated_chat_group_name(::std::string* chat_group_name);

  // optional string chat_group_tagline = 8;
  bool has_chat_group_tagline() const;
  void clear_chat_group_tagline();
  static const int kChatGroupTaglineFieldNumber = 8;
  const ::std::string& chat_group_tagline() const;
  void set_chat_group_tagline(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_group_tagline(::std::string&& value);
  #endif
  void set_chat_group_tagline(const char* value);
  void set_chat_group_tagline(const char* value, size_t size);
  ::std::string* mutable_chat_group_tagline();
  ::std::string* release_chat_group_tagline();
  void set_allocated_chat_group_tagline(::std::string* chat_group_tagline);

  // optional bytes chat_group_avatar_sha = 11;
  bool has_chat_group_avatar_sha() const;
  void clear_chat_group_avatar_sha();
  static const int kChatGroupAvatarShaFieldNumber = 11;
  const ::std::string& chat_group_avatar_sha() const;
  void set_chat_group_avatar_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_group_avatar_sha(::std::string&& value);
  #endif
  void set_chat_group_avatar_sha(const char* value);
  void set_chat_group_avatar_sha(const void* value, size_t size);
  ::std::string* mutable_chat_group_avatar_sha();
  ::std::string* release_chat_group_avatar_sha();
  void set_allocated_chat_group_avatar_sha(::std::string* chat_group_avatar_sha);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint32 active_member_count = 3;
  bool has_active_member_count() const;
  void clear_active_member_count();
  static const int kActiveMemberCountFieldNumber = 3;
  ::google::protobuf::uint32 active_member_count() const;
  void set_active_member_count(::google::protobuf::uint32 value);

  // optional uint32 active_voice_member_count = 4;
  bool has_active_voice_member_count() const;
  void clear_active_voice_member_count();
  static const int kActiveVoiceMemberCountFieldNumber = 4;
  ::google::protobuf::uint32 active_voice_member_count() const;
  void set_active_voice_member_count(::google::protobuf::uint32 value);

  // optional uint64 default_chat_id = 5;
  bool has_default_chat_id() const;
  void clear_default_chat_id();
  static const int kDefaultChatIdFieldNumber = 5;
  ::google::protobuf::uint64 default_chat_id() const;
  void set_default_chat_id(::google::protobuf::uint64 value);

  // optional uint32 clanid = 7;
  bool has_clanid() const;
  void clear_clanid();
  static const int kClanidFieldNumber = 7;
  ::google::protobuf::uint32 clanid() const;
  void set_clanid(::google::protobuf::uint32 value);

  // optional uint32 accountid_owner = 9;
  bool has_accountid_owner() const;
  void clear_accountid_owner();
  static const int kAccountidOwnerFieldNumber = 9;
  ::google::protobuf::uint32 accountid_owner() const;
  void set_accountid_owner(::google::protobuf::uint32 value);

  // optional uint64 default_role_id = 13;
  bool has_default_role_id() const;
  void clear_default_role_id();
  static const int kDefaultRoleIdFieldNumber = 13;
  ::google::protobuf::uint64 default_role_id() const;
  void set_default_role_id(::google::protobuf::uint64 value);

  // optional .EChatRoomGroupRank rank = 12 [default = k_EChatRoomGroupRank_Default];
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 12;
  ::EChatRoomGroupRank rank() const;
  void set_rank(::EChatRoomGroupRank value);

  // optional uint32 watching_broadcast_accountid = 16;
  bool has_watching_broadcast_accountid() const;
  void clear_watching_broadcast_accountid();
  static const int kWatchingBroadcastAccountidFieldNumber = 16;
  ::google::protobuf::uint32 watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(::google::protobuf::uint32 value);

  // optional uint32 appid = 17;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 17;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupSummary_Response)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_group_name();
  void clear_has_chat_group_name();
  void set_has_active_member_count();
  void clear_has_active_member_count();
  void set_has_active_voice_member_count();
  void clear_has_active_voice_member_count();
  void set_has_default_chat_id();
  void clear_has_default_chat_id();
  void set_has_clanid();
  void clear_has_clanid();
  void set_has_chat_group_tagline();
  void clear_has_chat_group_tagline();
  void set_has_accountid_owner();
  void clear_has_accountid_owner();
  void set_has_chat_group_avatar_sha();
  void clear_has_chat_group_avatar_sha();
  void set_has_rank();
  void clear_has_rank();
  void set_has_default_role_id();
  void clear_has_default_role_id();
  void set_has_watching_broadcast_accountid();
  void clear_has_watching_broadcast_accountid();
  void set_has_appid();
  void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomState > chat_rooms_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > top_members_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > role_ids_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoleActions > role_actions_;
  ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon > party_beacons_;
  ::google::protobuf::internal::ArenaStringPtr chat_group_name_;
  ::google::protobuf::internal::ArenaStringPtr chat_group_tagline_;
  ::google::protobuf::internal::ArenaStringPtr chat_group_avatar_sha_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint32 active_member_count_;
  ::google::protobuf::uint32 active_voice_member_count_;
  ::google::protobuf::uint64 default_chat_id_;
  ::google::protobuf::uint32 clanid_;
  ::google::protobuf::uint32 accountid_owner_;
  ::google::protobuf::uint64 default_role_id_;
  int rank_;
  ::google::protobuf::uint32 watching_broadcast_accountid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoomSummaryPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoomSummaryPair) */ {
 public:
  CChatRoomSummaryPair();
  virtual ~CChatRoomSummaryPair();

  CChatRoomSummaryPair(const CChatRoomSummaryPair& from);

  inline CChatRoomSummaryPair& operator=(const CChatRoomSummaryPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoomSummaryPair(CChatRoomSummaryPair&& from) noexcept
    : CChatRoomSummaryPair() {
    *this = ::std::move(from);
  }

  inline CChatRoomSummaryPair& operator=(CChatRoomSummaryPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoomSummaryPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoomSummaryPair* internal_default_instance() {
    return reinterpret_cast<const CChatRoomSummaryPair*>(
               &_CChatRoomSummaryPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(CChatRoomSummaryPair* other);
  friend void swap(CChatRoomSummaryPair& a, CChatRoomSummaryPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoomSummaryPair* New() const final {
    return CreateMaybeMessage<CChatRoomSummaryPair>(NULL);
  }

  CChatRoomSummaryPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoomSummaryPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoomSummaryPair& from);
  void MergeFrom(const CChatRoomSummaryPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomSummaryPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CUserChatRoomGroupState user_chat_group_state = 1;
  bool has_user_chat_group_state() const;
  void clear_user_chat_group_state();
  static const int kUserChatGroupStateFieldNumber = 1;
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_group_state() const;
  public:
  const ::CUserChatRoomGroupState& user_chat_group_state() const;
  ::CUserChatRoomGroupState* release_user_chat_group_state();
  ::CUserChatRoomGroupState* mutable_user_chat_group_state();
  void set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state);

  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 2;
  bool has_group_summary() const;
  void clear_group_summary();
  static const int kGroupSummaryFieldNumber = 2;
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  public:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);

  // @@protoc_insertion_point(class_scope:CChatRoomSummaryPair)
 private:
  void set_has_user_chat_group_state();
  void clear_has_user_chat_group_state();
  void set_has_group_summary();
  void clear_has_group_summary();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CUserChatRoomGroupState* user_chat_group_state_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetMyChatRoomGroups_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMyChatRoomGroups_Response) */ {
 public:
  CChatRoom_GetMyChatRoomGroups_Response();
  virtual ~CChatRoom_GetMyChatRoomGroups_Response();

  CChatRoom_GetMyChatRoomGroups_Response(const CChatRoom_GetMyChatRoomGroups_Response& from);

  inline CChatRoom_GetMyChatRoomGroups_Response& operator=(const CChatRoom_GetMyChatRoomGroups_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetMyChatRoomGroups_Response(CChatRoom_GetMyChatRoomGroups_Response&& from) noexcept
    : CChatRoom_GetMyChatRoomGroups_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMyChatRoomGroups_Response& operator=(CChatRoom_GetMyChatRoomGroups_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetMyChatRoomGroups_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetMyChatRoomGroups_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMyChatRoomGroups_Response*>(
               &_CChatRoom_GetMyChatRoomGroups_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(CChatRoom_GetMyChatRoomGroups_Response* other);
  friend void swap(CChatRoom_GetMyChatRoomGroups_Response& a, CChatRoom_GetMyChatRoomGroups_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetMyChatRoomGroups_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetMyChatRoomGroups_Response>(NULL);
  }

  CChatRoom_GetMyChatRoomGroups_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetMyChatRoomGroups_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetMyChatRoomGroups_Response& from);
  void MergeFrom(const CChatRoom_GetMyChatRoomGroups_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMyChatRoomGroups_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoomSummaryPair chat_room_groups = 1;
  int chat_room_groups_size() const;
  void clear_chat_room_groups();
  static const int kChatRoomGroupsFieldNumber = 1;
  ::CChatRoomSummaryPair* mutable_chat_room_groups(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomSummaryPair >*
      mutable_chat_room_groups();
  const ::CChatRoomSummaryPair& chat_room_groups(int index) const;
  ::CChatRoomSummaryPair* add_chat_room_groups();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomSummaryPair >&
      chat_room_groups() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMyChatRoomGroups_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomSummaryPair > chat_room_groups_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupState_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupState_Request) */ {
 public:
  CChatRoom_GetChatRoomGroupState_Request();
  virtual ~CChatRoom_GetChatRoomGroupState_Request();

  CChatRoom_GetChatRoomGroupState_Request(const CChatRoom_GetChatRoomGroupState_Request& from);

  inline CChatRoom_GetChatRoomGroupState_Request& operator=(const CChatRoom_GetChatRoomGroupState_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetChatRoomGroupState_Request(CChatRoom_GetChatRoomGroupState_Request&& from) noexcept
    : CChatRoom_GetChatRoomGroupState_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupState_Request& operator=(CChatRoom_GetChatRoomGroupState_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetChatRoomGroupState_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetChatRoomGroupState_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupState_Request*>(
               &_CChatRoom_GetChatRoomGroupState_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(CChatRoom_GetChatRoomGroupState_Request* other);
  friend void swap(CChatRoom_GetChatRoomGroupState_Request& a, CChatRoom_GetChatRoomGroupState_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetChatRoomGroupState_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupState_Request>(NULL);
  }

  CChatRoom_GetChatRoomGroupState_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupState_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetChatRoomGroupState_Request& from);
  void MergeFrom(const CChatRoom_GetChatRoomGroupState_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupState_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupState_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupState_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupState_Response) */ {
 public:
  CChatRoom_GetChatRoomGroupState_Response();
  virtual ~CChatRoom_GetChatRoomGroupState_Response();

  CChatRoom_GetChatRoomGroupState_Response(const CChatRoom_GetChatRoomGroupState_Response& from);

  inline CChatRoom_GetChatRoomGroupState_Response& operator=(const CChatRoom_GetChatRoomGroupState_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetChatRoomGroupState_Response(CChatRoom_GetChatRoomGroupState_Response&& from) noexcept
    : CChatRoom_GetChatRoomGroupState_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupState_Response& operator=(CChatRoom_GetChatRoomGroupState_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetChatRoomGroupState_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetChatRoomGroupState_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupState_Response*>(
               &_CChatRoom_GetChatRoomGroupState_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(CChatRoom_GetChatRoomGroupState_Response* other);
  friend void swap(CChatRoom_GetChatRoomGroupState_Response& a, CChatRoom_GetChatRoomGroupState_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetChatRoomGroupState_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupState_Response>(NULL);
  }

  CChatRoom_GetChatRoomGroupState_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupState_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetChatRoomGroupState_Response& from);
  void MergeFrom(const CChatRoom_GetChatRoomGroupState_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupState_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoomGroupState state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  private:
  const ::CChatRoomGroupState& _internal_state() const;
  public:
  const ::CChatRoomGroupState& state() const;
  ::CChatRoomGroupState* release_state();
  ::CChatRoomGroupState* mutable_state();
  void set_allocated_state(::CChatRoomGroupState* state);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupState_Response)
 private:
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoomGroupState* state_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupSummary_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupSummary_Request) */ {
 public:
  CChatRoom_GetChatRoomGroupSummary_Request();
  virtual ~CChatRoom_GetChatRoomGroupSummary_Request();

  CChatRoom_GetChatRoomGroupSummary_Request(const CChatRoom_GetChatRoomGroupSummary_Request& from);

  inline CChatRoom_GetChatRoomGroupSummary_Request& operator=(const CChatRoom_GetChatRoomGroupSummary_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetChatRoomGroupSummary_Request(CChatRoom_GetChatRoomGroupSummary_Request&& from) noexcept
    : CChatRoom_GetChatRoomGroupSummary_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupSummary_Request& operator=(CChatRoom_GetChatRoomGroupSummary_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetChatRoomGroupSummary_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetChatRoomGroupSummary_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupSummary_Request*>(
               &_CChatRoom_GetChatRoomGroupSummary_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(CChatRoom_GetChatRoomGroupSummary_Request* other);
  friend void swap(CChatRoom_GetChatRoomGroupSummary_Request& a, CChatRoom_GetChatRoomGroupSummary_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetChatRoomGroupSummary_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupSummary_Request>(NULL);
  }

  CChatRoom_GetChatRoomGroupSummary_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupSummary_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetChatRoomGroupSummary_Request& from);
  void MergeFrom(const CChatRoom_GetChatRoomGroupSummary_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupSummary_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupSummary_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_AckChatMessage_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_AckChatMessage_Notification) */ {
 public:
  CChatRoom_AckChatMessage_Notification();
  virtual ~CChatRoom_AckChatMessage_Notification();

  CChatRoom_AckChatMessage_Notification(const CChatRoom_AckChatMessage_Notification& from);

  inline CChatRoom_AckChatMessage_Notification& operator=(const CChatRoom_AckChatMessage_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_AckChatMessage_Notification(CChatRoom_AckChatMessage_Notification&& from) noexcept
    : CChatRoom_AckChatMessage_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_AckChatMessage_Notification& operator=(CChatRoom_AckChatMessage_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_AckChatMessage_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_AckChatMessage_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_AckChatMessage_Notification*>(
               &_CChatRoom_AckChatMessage_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(CChatRoom_AckChatMessage_Notification* other);
  friend void swap(CChatRoom_AckChatMessage_Notification& a, CChatRoom_AckChatMessage_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_AckChatMessage_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_AckChatMessage_Notification>(NULL);
  }

  CChatRoom_AckChatMessage_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_AckChatMessage_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_AckChatMessage_Notification& from);
  void MergeFrom(const CChatRoom_AckChatMessage_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_AckChatMessage_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_AckChatMessage_Notification)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateInviteLink_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateInviteLink_Request) */ {
 public:
  CChatRoom_CreateInviteLink_Request();
  virtual ~CChatRoom_CreateInviteLink_Request();

  CChatRoom_CreateInviteLink_Request(const CChatRoom_CreateInviteLink_Request& from);

  inline CChatRoom_CreateInviteLink_Request& operator=(const CChatRoom_CreateInviteLink_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateInviteLink_Request(CChatRoom_CreateInviteLink_Request&& from) noexcept
    : CChatRoom_CreateInviteLink_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateInviteLink_Request& operator=(CChatRoom_CreateInviteLink_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateInviteLink_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateInviteLink_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateInviteLink_Request*>(
               &_CChatRoom_CreateInviteLink_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(CChatRoom_CreateInviteLink_Request* other);
  friend void swap(CChatRoom_CreateInviteLink_Request& a, CChatRoom_CreateInviteLink_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateInviteLink_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateInviteLink_Request>(NULL);
  }

  CChatRoom_CreateInviteLink_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateInviteLink_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateInviteLink_Request& from);
  void MergeFrom(const CChatRoom_CreateInviteLink_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateInviteLink_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 3;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint32 seconds_valid = 2;
  bool has_seconds_valid() const;
  void clear_seconds_valid();
  static const int kSecondsValidFieldNumber = 2;
  ::google::protobuf::uint32 seconds_valid() const;
  void set_seconds_valid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateInviteLink_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_seconds_valid();
  void clear_has_seconds_valid();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint32 seconds_valid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_CreateInviteLink_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateInviteLink_Response) */ {
 public:
  CChatRoom_CreateInviteLink_Response();
  virtual ~CChatRoom_CreateInviteLink_Response();

  CChatRoom_CreateInviteLink_Response(const CChatRoom_CreateInviteLink_Response& from);

  inline CChatRoom_CreateInviteLink_Response& operator=(const CChatRoom_CreateInviteLink_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_CreateInviteLink_Response(CChatRoom_CreateInviteLink_Response&& from) noexcept
    : CChatRoom_CreateInviteLink_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateInviteLink_Response& operator=(CChatRoom_CreateInviteLink_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_CreateInviteLink_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_CreateInviteLink_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateInviteLink_Response*>(
               &_CChatRoom_CreateInviteLink_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(CChatRoom_CreateInviteLink_Response* other);
  friend void swap(CChatRoom_CreateInviteLink_Response& a, CChatRoom_CreateInviteLink_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_CreateInviteLink_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_CreateInviteLink_Response>(NULL);
  }

  CChatRoom_CreateInviteLink_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_CreateInviteLink_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_CreateInviteLink_Response& from);
  void MergeFrom(const CChatRoom_CreateInviteLink_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateInviteLink_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invite_code = 1;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 1;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional uint32 seconds_valid = 2;
  bool has_seconds_valid() const;
  void clear_seconds_valid();
  static const int kSecondsValidFieldNumber = 2;
  ::google::protobuf::uint32 seconds_valid() const;
  void set_seconds_valid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateInviteLink_Response)
 private:
  void set_has_invite_code();
  void clear_has_invite_code();
  void set_has_seconds_valid();
  void clear_has_seconds_valid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::uint32 seconds_valid_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinkInfo_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinkInfo_Request) */ {
 public:
  CChatRoom_GetInviteLinkInfo_Request();
  virtual ~CChatRoom_GetInviteLinkInfo_Request();

  CChatRoom_GetInviteLinkInfo_Request(const CChatRoom_GetInviteLinkInfo_Request& from);

  inline CChatRoom_GetInviteLinkInfo_Request& operator=(const CChatRoom_GetInviteLinkInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteLinkInfo_Request(CChatRoom_GetInviteLinkInfo_Request&& from) noexcept
    : CChatRoom_GetInviteLinkInfo_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinkInfo_Request& operator=(CChatRoom_GetInviteLinkInfo_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteLinkInfo_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteLinkInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinkInfo_Request*>(
               &_CChatRoom_GetInviteLinkInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(CChatRoom_GetInviteLinkInfo_Request* other);
  friend void swap(CChatRoom_GetInviteLinkInfo_Request& a, CChatRoom_GetInviteLinkInfo_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteLinkInfo_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinkInfo_Request>(NULL);
  }

  CChatRoom_GetInviteLinkInfo_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinkInfo_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteLinkInfo_Request& from);
  void MergeFrom(const CChatRoom_GetInviteLinkInfo_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinkInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invite_code = 1;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 1;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinkInfo_Request)
 private:
  void set_has_invite_code();
  void clear_has_invite_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinkInfo_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinkInfo_Response) */ {
 public:
  CChatRoom_GetInviteLinkInfo_Response();
  virtual ~CChatRoom_GetInviteLinkInfo_Response();

  CChatRoom_GetInviteLinkInfo_Response(const CChatRoom_GetInviteLinkInfo_Response& from);

  inline CChatRoom_GetInviteLinkInfo_Response& operator=(const CChatRoom_GetInviteLinkInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteLinkInfo_Response(CChatRoom_GetInviteLinkInfo_Response&& from) noexcept
    : CChatRoom_GetInviteLinkInfo_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinkInfo_Response& operator=(CChatRoom_GetInviteLinkInfo_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteLinkInfo_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteLinkInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinkInfo_Response*>(
               &_CChatRoom_GetInviteLinkInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(CChatRoom_GetInviteLinkInfo_Response* other);
  friend void swap(CChatRoom_GetInviteLinkInfo_Response& a, CChatRoom_GetInviteLinkInfo_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteLinkInfo_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinkInfo_Response>(NULL);
  }

  CChatRoom_GetInviteLinkInfo_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinkInfo_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteLinkInfo_Response& from);
  void MergeFrom(const CChatRoom_GetInviteLinkInfo_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinkInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 8;
  bool has_group_summary() const;
  void clear_group_summary();
  static const int kGroupSummaryFieldNumber = 8;
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  public:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);

  // optional .CUserChatRoomGroupState user_chat_group_state = 9;
  bool has_user_chat_group_state() const;
  void clear_user_chat_group_state();
  static const int kUserChatGroupStateFieldNumber = 9;
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_group_state() const;
  public:
  const ::CUserChatRoomGroupState& user_chat_group_state() const;
  ::CUserChatRoomGroupState* release_user_chat_group_state();
  ::CUserChatRoomGroupState* mutable_user_chat_group_state();
  void set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state);

  // optional fixed64 steamid_sender = 3;
  bool has_steamid_sender() const;
  void clear_steamid_sender();
  static const int kSteamidSenderFieldNumber = 3;
  ::google::protobuf::uint64 steamid_sender() const;
  void set_steamid_sender(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 6;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 6;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint32 time_expires = 4;
  bool has_time_expires() const;
  void clear_time_expires();
  static const int kTimeExpiresFieldNumber = 4;
  ::google::protobuf::uint32 time_expires() const;
  void set_time_expires(::google::protobuf::uint32 value);

  // optional uint32 time_kick_expire = 10;
  bool has_time_kick_expire() const;
  void clear_time_kick_expire();
  static const int kTimeKickExpireFieldNumber = 10;
  ::google::protobuf::uint32 time_kick_expire() const;
  void set_time_kick_expire(::google::protobuf::uint32 value);

  // optional bool banned = 11;
  bool has_banned() const;
  void clear_banned();
  static const int kBannedFieldNumber = 11;
  bool banned() const;
  void set_banned(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinkInfo_Response)
 private:
  void set_has_steamid_sender();
  void clear_has_steamid_sender();
  void set_has_time_expires();
  void clear_has_time_expires();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_group_summary();
  void clear_has_group_summary();
  void set_has_user_chat_group_state();
  void clear_has_user_chat_group_state();
  void set_has_time_kick_expire();
  void clear_has_time_kick_expire();
  void set_has_banned();
  void clear_has_banned();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  ::CUserChatRoomGroupState* user_chat_group_state_;
  ::google::protobuf::uint64 steamid_sender_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint32 time_expires_;
  ::google::protobuf::uint32 time_kick_expire_;
  bool banned_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteInfo_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteInfo_Request) */ {
 public:
  CChatRoom_GetInviteInfo_Request();
  virtual ~CChatRoom_GetInviteInfo_Request();

  CChatRoom_GetInviteInfo_Request(const CChatRoom_GetInviteInfo_Request& from);

  inline CChatRoom_GetInviteInfo_Request& operator=(const CChatRoom_GetInviteInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteInfo_Request(CChatRoom_GetInviteInfo_Request&& from) noexcept
    : CChatRoom_GetInviteInfo_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteInfo_Request& operator=(CChatRoom_GetInviteInfo_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteInfo_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteInfo_Request*>(
               &_CChatRoom_GetInviteInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(CChatRoom_GetInviteInfo_Request* other);
  friend void swap(CChatRoom_GetInviteInfo_Request& a, CChatRoom_GetInviteInfo_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteInfo_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteInfo_Request>(NULL);
  }

  CChatRoom_GetInviteInfo_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteInfo_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteInfo_Request& from);
  void MergeFrom(const CChatRoom_GetInviteInfo_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invite_code = 4;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 4;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional fixed64 steamid_invitee = 1;
  bool has_steamid_invitee() const;
  void clear_steamid_invitee();
  static const int kSteamidInviteeFieldNumber = 1;
  ::google::protobuf::uint64 steamid_invitee() const;
  void set_steamid_invitee(::google::protobuf::uint64 value);

  // optional uint64 chat_group_id = 2;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 3;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteInfo_Request)
 private:
  void set_has_steamid_invitee();
  void clear_has_steamid_invitee();
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_invite_code();
  void clear_has_invite_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::uint64 steamid_invitee_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteInfo_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteInfo_Response) */ {
 public:
  CChatRoom_GetInviteInfo_Response();
  virtual ~CChatRoom_GetInviteInfo_Response();

  CChatRoom_GetInviteInfo_Response(const CChatRoom_GetInviteInfo_Response& from);

  inline CChatRoom_GetInviteInfo_Response& operator=(const CChatRoom_GetInviteInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteInfo_Response(CChatRoom_GetInviteInfo_Response&& from) noexcept
    : CChatRoom_GetInviteInfo_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteInfo_Response& operator=(CChatRoom_GetInviteInfo_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteInfo_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteInfo_Response*>(
               &_CChatRoom_GetInviteInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(CChatRoom_GetInviteInfo_Response* other);
  friend void swap(CChatRoom_GetInviteInfo_Response& a, CChatRoom_GetInviteInfo_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteInfo_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteInfo_Response>(NULL);
  }

  CChatRoom_GetInviteInfo_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteInfo_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteInfo_Response& from);
  void MergeFrom(const CChatRoom_GetInviteInfo_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 1;
  bool has_group_summary() const;
  void clear_group_summary();
  static const int kGroupSummaryFieldNumber = 1;
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  public:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);

  // optional uint32 time_kick_expire = 2;
  bool has_time_kick_expire() const;
  void clear_time_kick_expire();
  static const int kTimeKickExpireFieldNumber = 2;
  ::google::protobuf::uint32 time_kick_expire() const;
  void set_time_kick_expire(::google::protobuf::uint32 value);

  // optional bool banned = 3;
  bool has_banned() const;
  void clear_banned();
  static const int kBannedFieldNumber = 3;
  bool banned() const;
  void set_banned(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteInfo_Response)
 private:
  void set_has_group_summary();
  void clear_has_group_summary();
  void set_has_time_kick_expire();
  void clear_has_time_kick_expire();
  void set_has_banned();
  void clear_has_banned();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  ::google::protobuf::uint32 time_kick_expire_;
  bool banned_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinksForGroup_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinksForGroup_Request) */ {
 public:
  CChatRoom_GetInviteLinksForGroup_Request();
  virtual ~CChatRoom_GetInviteLinksForGroup_Request();

  CChatRoom_GetInviteLinksForGroup_Request(const CChatRoom_GetInviteLinksForGroup_Request& from);

  inline CChatRoom_GetInviteLinksForGroup_Request& operator=(const CChatRoom_GetInviteLinksForGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteLinksForGroup_Request(CChatRoom_GetInviteLinksForGroup_Request&& from) noexcept
    : CChatRoom_GetInviteLinksForGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinksForGroup_Request& operator=(CChatRoom_GetInviteLinksForGroup_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteLinksForGroup_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteLinksForGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinksForGroup_Request*>(
               &_CChatRoom_GetInviteLinksForGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(CChatRoom_GetInviteLinksForGroup_Request* other);
  friend void swap(CChatRoom_GetInviteLinksForGroup_Request& a, CChatRoom_GetInviteLinksForGroup_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteLinksForGroup_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Request>(NULL);
  }

  CChatRoom_GetInviteLinksForGroup_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteLinksForGroup_Request& from);
  void MergeFrom(const CChatRoom_GetInviteLinksForGroup_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinksForGroup_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinksForGroup_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinksForGroup_Response_LinkInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo) */ {
 public:
  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo();
  virtual ~CChatRoom_GetInviteLinksForGroup_Response_LinkInfo();

  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from);

  inline CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& operator=(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo&& from) noexcept
    : CChatRoom_GetInviteLinksForGroup_Response_LinkInfo() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& operator=(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo*>(
               &_CChatRoom_GetInviteLinksForGroup_Response_LinkInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* other);
  friend void swap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& a, CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Response_LinkInfo>(NULL);
  }

  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Response_LinkInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from);
  void MergeFrom(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invite_code = 1;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 1;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional fixed64 steamid_creator = 2;
  bool has_steamid_creator() const;
  void clear_steamid_creator();
  static const int kSteamidCreatorFieldNumber = 2;
  ::google::protobuf::uint64 steamid_creator() const;
  void set_steamid_creator(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 4;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 4;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint32 time_expires = 3;
  bool has_time_expires() const;
  void clear_time_expires();
  static const int kTimeExpiresFieldNumber = 3;
  ::google::protobuf::uint32 time_expires() const;
  void set_time_expires(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo)
 private:
  void set_has_invite_code();
  void clear_has_invite_code();
  void set_has_steamid_creator();
  void clear_has_steamid_creator();
  void set_has_time_expires();
  void clear_has_time_expires();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::uint64 steamid_creator_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint32 time_expires_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinksForGroup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinksForGroup_Response) */ {
 public:
  CChatRoom_GetInviteLinksForGroup_Response();
  virtual ~CChatRoom_GetInviteLinksForGroup_Response();

  CChatRoom_GetInviteLinksForGroup_Response(const CChatRoom_GetInviteLinksForGroup_Response& from);

  inline CChatRoom_GetInviteLinksForGroup_Response& operator=(const CChatRoom_GetInviteLinksForGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteLinksForGroup_Response(CChatRoom_GetInviteLinksForGroup_Response&& from) noexcept
    : CChatRoom_GetInviteLinksForGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinksForGroup_Response& operator=(CChatRoom_GetInviteLinksForGroup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteLinksForGroup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteLinksForGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinksForGroup_Response*>(
               &_CChatRoom_GetInviteLinksForGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(CChatRoom_GetInviteLinksForGroup_Response* other);
  friend void swap(CChatRoom_GetInviteLinksForGroup_Response& a, CChatRoom_GetInviteLinksForGroup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteLinksForGroup_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Response>(NULL);
  }

  CChatRoom_GetInviteLinksForGroup_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteLinksForGroup_Response& from);
  void MergeFrom(const CChatRoom_GetInviteLinksForGroup_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinksForGroup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetInviteLinksForGroup_Response_LinkInfo LinkInfo;

  // accessors -------------------------------------------------------

  // repeated .CChatRoom_GetInviteLinksForGroup_Response.LinkInfo invite_links = 1;
  int invite_links_size() const;
  void clear_invite_links();
  static const int kInviteLinksFieldNumber = 1;
  ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* mutable_invite_links(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >*
      mutable_invite_links();
  const ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& invite_links(int index) const;
  ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* add_invite_links();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >&
      invite_links() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinksForGroup_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo > invite_links_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetBanList_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetBanList_Request) */ {
 public:
  CChatRoom_GetBanList_Request();
  virtual ~CChatRoom_GetBanList_Request();

  CChatRoom_GetBanList_Request(const CChatRoom_GetBanList_Request& from);

  inline CChatRoom_GetBanList_Request& operator=(const CChatRoom_GetBanList_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetBanList_Request(CChatRoom_GetBanList_Request&& from) noexcept
    : CChatRoom_GetBanList_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetBanList_Request& operator=(CChatRoom_GetBanList_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetBanList_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetBanList_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetBanList_Request*>(
               &_CChatRoom_GetBanList_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(CChatRoom_GetBanList_Request* other);
  friend void swap(CChatRoom_GetBanList_Request& a, CChatRoom_GetBanList_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetBanList_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Request>(NULL);
  }

  CChatRoom_GetBanList_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetBanList_Request& from);
  void MergeFrom(const CChatRoom_GetBanList_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetBanList_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetBanList_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetBanList_Response_BanInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetBanList_Response.BanInfo) */ {
 public:
  CChatRoom_GetBanList_Response_BanInfo();
  virtual ~CChatRoom_GetBanList_Response_BanInfo();

  CChatRoom_GetBanList_Response_BanInfo(const CChatRoom_GetBanList_Response_BanInfo& from);

  inline CChatRoom_GetBanList_Response_BanInfo& operator=(const CChatRoom_GetBanList_Response_BanInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetBanList_Response_BanInfo(CChatRoom_GetBanList_Response_BanInfo&& from) noexcept
    : CChatRoom_GetBanList_Response_BanInfo() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetBanList_Response_BanInfo& operator=(CChatRoom_GetBanList_Response_BanInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetBanList_Response_BanInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetBanList_Response_BanInfo* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetBanList_Response_BanInfo*>(
               &_CChatRoom_GetBanList_Response_BanInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(CChatRoom_GetBanList_Response_BanInfo* other);
  friend void swap(CChatRoom_GetBanList_Response_BanInfo& a, CChatRoom_GetBanList_Response_BanInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetBanList_Response_BanInfo* New() const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Response_BanInfo>(NULL);
  }

  CChatRoom_GetBanList_Response_BanInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Response_BanInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetBanList_Response_BanInfo& from);
  void MergeFrom(const CChatRoom_GetBanList_Response_BanInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetBanList_Response_BanInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ban_reason = 4;
  bool has_ban_reason() const;
  void clear_ban_reason();
  static const int kBanReasonFieldNumber = 4;
  const ::std::string& ban_reason() const;
  void set_ban_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_ban_reason(::std::string&& value);
  #endif
  void set_ban_reason(const char* value);
  void set_ban_reason(const char* value, size_t size);
  ::std::string* mutable_ban_reason();
  ::std::string* release_ban_reason();
  void set_allocated_ban_reason(::std::string* ban_reason);

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 accountid_actor = 2;
  bool has_accountid_actor() const;
  void clear_accountid_actor();
  static const int kAccountidActorFieldNumber = 2;
  ::google::protobuf::uint32 accountid_actor() const;
  void set_accountid_actor(::google::protobuf::uint32 value);

  // optional uint32 time_banned = 3;
  bool has_time_banned() const;
  void clear_time_banned();
  static const int kTimeBannedFieldNumber = 3;
  ::google::protobuf::uint32 time_banned() const;
  void set_time_banned(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetBanList_Response.BanInfo)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_accountid_actor();
  void clear_has_accountid_actor();
  void set_has_time_banned();
  void clear_has_time_banned();
  void set_has_ban_reason();
  void clear_has_ban_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ban_reason_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 accountid_actor_;
  ::google::protobuf::uint32 time_banned_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetBanList_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetBanList_Response) */ {
 public:
  CChatRoom_GetBanList_Response();
  virtual ~CChatRoom_GetBanList_Response();

  CChatRoom_GetBanList_Response(const CChatRoom_GetBanList_Response& from);

  inline CChatRoom_GetBanList_Response& operator=(const CChatRoom_GetBanList_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetBanList_Response(CChatRoom_GetBanList_Response&& from) noexcept
    : CChatRoom_GetBanList_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetBanList_Response& operator=(CChatRoom_GetBanList_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetBanList_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetBanList_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetBanList_Response*>(
               &_CChatRoom_GetBanList_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(CChatRoom_GetBanList_Response* other);
  friend void swap(CChatRoom_GetBanList_Response& a, CChatRoom_GetBanList_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetBanList_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Response>(NULL);
  }

  CChatRoom_GetBanList_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetBanList_Response& from);
  void MergeFrom(const CChatRoom_GetBanList_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetBanList_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetBanList_Response_BanInfo BanInfo;

  // accessors -------------------------------------------------------

  // repeated .CChatRoom_GetBanList_Response.BanInfo bans = 1;
  int bans_size() const;
  void clear_bans();
  static const int kBansFieldNumber = 1;
  ::CChatRoom_GetBanList_Response_BanInfo* mutable_bans(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >*
      mutable_bans();
  const ::CChatRoom_GetBanList_Response_BanInfo& bans(int index) const;
  ::CChatRoom_GetBanList_Response_BanInfo* add_bans();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >&
      bans() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetBanList_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo > bans_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteList_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteList_Request) */ {
 public:
  CChatRoom_GetInviteList_Request();
  virtual ~CChatRoom_GetInviteList_Request();

  CChatRoom_GetInviteList_Request(const CChatRoom_GetInviteList_Request& from);

  inline CChatRoom_GetInviteList_Request& operator=(const CChatRoom_GetInviteList_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteList_Request(CChatRoom_GetInviteList_Request&& from) noexcept
    : CChatRoom_GetInviteList_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteList_Request& operator=(CChatRoom_GetInviteList_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteList_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteList_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteList_Request*>(
               &_CChatRoom_GetInviteList_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(CChatRoom_GetInviteList_Request* other);
  friend void swap(CChatRoom_GetInviteList_Request& a, CChatRoom_GetInviteList_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteList_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteList_Request>(NULL);
  }

  CChatRoom_GetInviteList_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteList_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteList_Request& from);
  void MergeFrom(const CChatRoom_GetInviteList_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteList_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteList_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoomGroupInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoomGroupInvite) */ {
 public:
  CChatRoomGroupInvite();
  virtual ~CChatRoomGroupInvite();

  CChatRoomGroupInvite(const CChatRoomGroupInvite& from);

  inline CChatRoomGroupInvite& operator=(const CChatRoomGroupInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoomGroupInvite(CChatRoomGroupInvite&& from) noexcept
    : CChatRoomGroupInvite() {
    *this = ::std::move(from);
  }

  inline CChatRoomGroupInvite& operator=(CChatRoomGroupInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoomGroupInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoomGroupInvite* internal_default_instance() {
    return reinterpret_cast<const CChatRoomGroupInvite*>(
               &_CChatRoomGroupInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(CChatRoomGroupInvite* other);
  friend void swap(CChatRoomGroupInvite& a, CChatRoomGroupInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoomGroupInvite* New() const final {
    return CreateMaybeMessage<CChatRoomGroupInvite>(NULL);
  }

  CChatRoomGroupInvite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoomGroupInvite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoomGroupInvite& from);
  void MergeFrom(const CChatRoomGroupInvite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomGroupInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 accountid_actor = 2;
  bool has_accountid_actor() const;
  void clear_accountid_actor();
  static const int kAccountidActorFieldNumber = 2;
  ::google::protobuf::uint32 accountid_actor() const;
  void set_accountid_actor(::google::protobuf::uint32 value);

  // optional uint32 time_invited = 3;
  bool has_time_invited() const;
  void clear_time_invited();
  static const int kTimeInvitedFieldNumber = 3;
  ::google::protobuf::uint32 time_invited() const;
  void set_time_invited(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoomGroupInvite)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_accountid_actor();
  void clear_has_accountid_actor();
  void set_has_time_invited();
  void clear_has_time_invited();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 accountid_actor_;
  ::google::protobuf::uint32 time_invited_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteList_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteList_Response) */ {
 public:
  CChatRoom_GetInviteList_Response();
  virtual ~CChatRoom_GetInviteList_Response();

  CChatRoom_GetInviteList_Response(const CChatRoom_GetInviteList_Response& from);

  inline CChatRoom_GetInviteList_Response& operator=(const CChatRoom_GetInviteList_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_GetInviteList_Response(CChatRoom_GetInviteList_Response&& from) noexcept
    : CChatRoom_GetInviteList_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteList_Response& operator=(CChatRoom_GetInviteList_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_GetInviteList_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_GetInviteList_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteList_Response*>(
               &_CChatRoom_GetInviteList_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(CChatRoom_GetInviteList_Response* other);
  friend void swap(CChatRoom_GetInviteList_Response& a, CChatRoom_GetInviteList_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_GetInviteList_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_GetInviteList_Response>(NULL);
  }

  CChatRoom_GetInviteList_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteList_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_GetInviteList_Response& from);
  void MergeFrom(const CChatRoom_GetInviteList_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteList_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoomGroupInvite invites = 1;
  int invites_size() const;
  void clear_invites();
  static const int kInvitesFieldNumber = 1;
  ::CChatRoomGroupInvite* mutable_invites(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupInvite >*
      mutable_invites();
  const ::CChatRoomGroupInvite& invites(int index) const;
  ::CChatRoomGroupInvite* add_invites();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupInvite >&
      invites() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteList_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupInvite > invites_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteInviteLink_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteInviteLink_Request) */ {
 public:
  CChatRoom_DeleteInviteLink_Request();
  virtual ~CChatRoom_DeleteInviteLink_Request();

  CChatRoom_DeleteInviteLink_Request(const CChatRoom_DeleteInviteLink_Request& from);

  inline CChatRoom_DeleteInviteLink_Request& operator=(const CChatRoom_DeleteInviteLink_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteInviteLink_Request(CChatRoom_DeleteInviteLink_Request&& from) noexcept
    : CChatRoom_DeleteInviteLink_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteInviteLink_Request& operator=(CChatRoom_DeleteInviteLink_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteInviteLink_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteInviteLink_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteInviteLink_Request*>(
               &_CChatRoom_DeleteInviteLink_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(CChatRoom_DeleteInviteLink_Request* other);
  friend void swap(CChatRoom_DeleteInviteLink_Request& a, CChatRoom_DeleteInviteLink_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteInviteLink_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteInviteLink_Request>(NULL);
  }

  CChatRoom_DeleteInviteLink_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteInviteLink_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteInviteLink_Request& from);
  void MergeFrom(const CChatRoom_DeleteInviteLink_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteInviteLink_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invite_code = 2;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 2;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteInviteLink_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_invite_code();
  void clear_has_invite_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteInviteLink_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteInviteLink_Response) */ {
 public:
  CChatRoom_DeleteInviteLink_Response();
  virtual ~CChatRoom_DeleteInviteLink_Response();

  CChatRoom_DeleteInviteLink_Response(const CChatRoom_DeleteInviteLink_Response& from);

  inline CChatRoom_DeleteInviteLink_Response& operator=(const CChatRoom_DeleteInviteLink_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteInviteLink_Response(CChatRoom_DeleteInviteLink_Response&& from) noexcept
    : CChatRoom_DeleteInviteLink_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteInviteLink_Response& operator=(CChatRoom_DeleteInviteLink_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteInviteLink_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteInviteLink_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteInviteLink_Response*>(
               &_CChatRoom_DeleteInviteLink_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(CChatRoom_DeleteInviteLink_Response* other);
  friend void swap(CChatRoom_DeleteInviteLink_Response& a, CChatRoom_DeleteInviteLink_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteInviteLink_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteInviteLink_Response>(NULL);
  }

  CChatRoom_DeleteInviteLink_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteInviteLink_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteInviteLink_Response& from);
  void MergeFrom(const CChatRoom_DeleteInviteLink_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteInviteLink_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteInviteLink_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetSessionActiveChatRoomGroups_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetSessionActiveChatRoomGroups_Request) */ {
 public:
  CChatRoom_SetSessionActiveChatRoomGroups_Request();
  virtual ~CChatRoom_SetSessionActiveChatRoomGroups_Request();

  CChatRoom_SetSessionActiveChatRoomGroups_Request(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from);

  inline CChatRoom_SetSessionActiveChatRoomGroups_Request& operator=(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetSessionActiveChatRoomGroups_Request(CChatRoom_SetSessionActiveChatRoomGroups_Request&& from) noexcept
    : CChatRoom_SetSessionActiveChatRoomGroups_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetSessionActiveChatRoomGroups_Request& operator=(CChatRoom_SetSessionActiveChatRoomGroups_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetSessionActiveChatRoomGroups_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetSessionActiveChatRoomGroups_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetSessionActiveChatRoomGroups_Request*>(
               &_CChatRoom_SetSessionActiveChatRoomGroups_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(CChatRoom_SetSessionActiveChatRoomGroups_Request* other);
  friend void swap(CChatRoom_SetSessionActiveChatRoomGroups_Request& a, CChatRoom_SetSessionActiveChatRoomGroups_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetSessionActiveChatRoomGroups_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SetSessionActiveChatRoomGroups_Request>(NULL);
  }

  CChatRoom_SetSessionActiveChatRoomGroups_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetSessionActiveChatRoomGroups_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from);
  void MergeFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetSessionActiveChatRoomGroups_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 chat_group_ids = 1;
  int chat_group_ids_size() const;
  void clear_chat_group_ids();
  static const int kChatGroupIdsFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_ids(int index) const;
  void set_chat_group_ids(int index, ::google::protobuf::uint64 value);
  void add_chat_group_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      chat_group_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_chat_group_ids();

  // repeated uint64 chat_groups_data_requested = 2;
  int chat_groups_data_requested_size() const;
  void clear_chat_groups_data_requested();
  static const int kChatGroupsDataRequestedFieldNumber = 2;
  ::google::protobuf::uint64 chat_groups_data_requested(int index) const;
  void set_chat_groups_data_requested(int index, ::google::protobuf::uint64 value);
  void add_chat_groups_data_requested(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      chat_groups_data_requested() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_chat_groups_data_requested();

  // @@protoc_insertion_point(class_scope:CChatRoom_SetSessionActiveChatRoomGroups_Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > chat_group_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > chat_groups_data_requested_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetSessionActiveChatRoomGroups_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetSessionActiveChatRoomGroups_Response) */ {
 public:
  CChatRoom_SetSessionActiveChatRoomGroups_Response();
  virtual ~CChatRoom_SetSessionActiveChatRoomGroups_Response();

  CChatRoom_SetSessionActiveChatRoomGroups_Response(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from);

  inline CChatRoom_SetSessionActiveChatRoomGroups_Response& operator=(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetSessionActiveChatRoomGroups_Response(CChatRoom_SetSessionActiveChatRoomGroups_Response&& from) noexcept
    : CChatRoom_SetSessionActiveChatRoomGroups_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetSessionActiveChatRoomGroups_Response& operator=(CChatRoom_SetSessionActiveChatRoomGroups_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetSessionActiveChatRoomGroups_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetSessionActiveChatRoomGroups_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetSessionActiveChatRoomGroups_Response*>(
               &_CChatRoom_SetSessionActiveChatRoomGroups_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(CChatRoom_SetSessionActiveChatRoomGroups_Response* other);
  friend void swap(CChatRoom_SetSessionActiveChatRoomGroups_Response& a, CChatRoom_SetSessionActiveChatRoomGroups_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetSessionActiveChatRoomGroups_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SetSessionActiveChatRoomGroups_Response>(NULL);
  }

  CChatRoom_SetSessionActiveChatRoomGroups_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetSessionActiveChatRoomGroups_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from);
  void MergeFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetSessionActiveChatRoomGroups_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoomGroupState chat_states = 1;
  int chat_states_size() const;
  void clear_chat_states();
  static const int kChatStatesFieldNumber = 1;
  ::CChatRoomGroupState* mutable_chat_states(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupState >*
      mutable_chat_states();
  const ::CChatRoomGroupState& chat_states(int index) const;
  ::CChatRoomGroupState* add_chat_states();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupState >&
      chat_states() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_SetSessionActiveChatRoomGroups_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupState > chat_states_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences) */ {
 public:
  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences();
  virtual ~CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences();

  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from);

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& operator=(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& operator=(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences*>(
               &_CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* other);
  friend void swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& a, CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* New() const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(NULL);
  }

  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from);
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EChatRoomNotificationLevel desktop_notification_level = 1 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  void clear_desktop_notification_level();
  static const int kDesktopNotificationLevelFieldNumber = 1;
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);

  // optional .EChatRoomNotificationLevel mobile_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  void clear_mobile_notification_level();
  static const int kMobileNotificationLevelFieldNumber = 2;
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);

  // optional bool unread_indicator_muted = 3;
  bool has_unread_indicator_muted() const;
  void clear_unread_indicator_muted();
  static const int kUnreadIndicatorMutedFieldNumber = 3;
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences)
 private:
  void set_has_desktop_notification_level();
  void clear_has_desktop_notification_level();
  void set_has_mobile_notification_level();
  void clear_has_mobile_notification_level();
  void set_has_unread_indicator_muted();
  void clear_has_unread_indicator_muted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  bool unread_indicator_muted_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences) */ {
 public:
  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences();
  virtual ~CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences();

  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from);

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& operator=(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& operator=(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences*>(
               &_CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* other);
  friend void swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& a, CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* New() const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>(NULL);
  }

  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from);
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional .EChatRoomNotificationLevel desktop_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  void clear_desktop_notification_level();
  static const int kDesktopNotificationLevelFieldNumber = 2;
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);

  // optional .EChatRoomNotificationLevel mobile_notification_level = 3 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  void clear_mobile_notification_level();
  static const int kMobileNotificationLevelFieldNumber = 3;
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);

  // optional bool unread_indicator_muted = 4;
  bool has_unread_indicator_muted() const;
  void clear_unread_indicator_muted();
  static const int kUnreadIndicatorMutedFieldNumber = 4;
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences)
 private:
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_desktop_notification_level();
  void clear_has_desktop_notification_level();
  void set_has_mobile_notification_level();
  void clear_has_mobile_notification_level();
  void set_has_unread_indicator_muted();
  void clear_has_unread_indicator_muted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_id_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  bool unread_indicator_muted_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Request) */ {
 public:
  CChatRoom_SetUserChatGroupPreferences_Request();
  virtual ~CChatRoom_SetUserChatGroupPreferences_Request();

  CChatRoom_SetUserChatGroupPreferences_Request(const CChatRoom_SetUserChatGroupPreferences_Request& from);

  inline CChatRoom_SetUserChatGroupPreferences_Request& operator=(const CChatRoom_SetUserChatGroupPreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetUserChatGroupPreferences_Request(CChatRoom_SetUserChatGroupPreferences_Request&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Request& operator=(CChatRoom_SetUserChatGroupPreferences_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetUserChatGroupPreferences_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetUserChatGroupPreferences_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Request*>(
               &_CChatRoom_SetUserChatGroupPreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(CChatRoom_SetUserChatGroupPreferences_Request* other);
  friend void swap(CChatRoom_SetUserChatGroupPreferences_Request& a, CChatRoom_SetUserChatGroupPreferences_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetUserChatGroupPreferences_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request>(NULL);
  }

  CChatRoom_SetUserChatGroupPreferences_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Request& from);
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences ChatGroupPreferences;
  typedef CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences ChatRoomPreferences;

  // accessors -------------------------------------------------------

  // repeated .CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences chat_room_preferences = 3;
  int chat_room_preferences_size() const;
  void clear_chat_room_preferences();
  static const int kChatRoomPreferencesFieldNumber = 3;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* mutable_chat_room_preferences(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >*
      mutable_chat_room_preferences();
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& chat_room_preferences(int index) const;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* add_chat_room_preferences();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >&
      chat_room_preferences() const;

  // optional .CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences chat_group_preferences = 2;
  bool has_chat_group_preferences() const;
  void clear_chat_group_preferences();
  static const int kChatGroupPreferencesFieldNumber = 2;
  private:
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& _internal_chat_group_preferences() const;
  public:
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& chat_group_preferences() const;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* release_chat_group_preferences();
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* mutable_chat_group_preferences();
  void set_allocated_chat_group_preferences(::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_group_preferences();
  void clear_has_chat_group_preferences();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences > chat_room_preferences_;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Response) */ {
 public:
  CChatRoom_SetUserChatGroupPreferences_Response();
  virtual ~CChatRoom_SetUserChatGroupPreferences_Response();

  CChatRoom_SetUserChatGroupPreferences_Response(const CChatRoom_SetUserChatGroupPreferences_Response& from);

  inline CChatRoom_SetUserChatGroupPreferences_Response& operator=(const CChatRoom_SetUserChatGroupPreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_SetUserChatGroupPreferences_Response(CChatRoom_SetUserChatGroupPreferences_Response&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Response& operator=(CChatRoom_SetUserChatGroupPreferences_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_SetUserChatGroupPreferences_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_SetUserChatGroupPreferences_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Response*>(
               &_CChatRoom_SetUserChatGroupPreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(CChatRoom_SetUserChatGroupPreferences_Response* other);
  friend void swap(CChatRoom_SetUserChatGroupPreferences_Response& a, CChatRoom_SetUserChatGroupPreferences_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_SetUserChatGroupPreferences_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Response>(NULL);
  }

  CChatRoom_SetUserChatGroupPreferences_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Response& from);
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatMessages_Request_Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatMessages_Request.Message) */ {
 public:
  CChatRoom_DeleteChatMessages_Request_Message();
  virtual ~CChatRoom_DeleteChatMessages_Request_Message();

  CChatRoom_DeleteChatMessages_Request_Message(const CChatRoom_DeleteChatMessages_Request_Message& from);

  inline CChatRoom_DeleteChatMessages_Request_Message& operator=(const CChatRoom_DeleteChatMessages_Request_Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteChatMessages_Request_Message(CChatRoom_DeleteChatMessages_Request_Message&& from) noexcept
    : CChatRoom_DeleteChatMessages_Request_Message() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatMessages_Request_Message& operator=(CChatRoom_DeleteChatMessages_Request_Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteChatMessages_Request_Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteChatMessages_Request_Message* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatMessages_Request_Message*>(
               &_CChatRoom_DeleteChatMessages_Request_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(CChatRoom_DeleteChatMessages_Request_Message* other);
  friend void swap(CChatRoom_DeleteChatMessages_Request_Message& a, CChatRoom_DeleteChatMessages_Request_Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteChatMessages_Request_Message* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Request_Message>(NULL);
  }

  CChatRoom_DeleteChatMessages_Request_Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Request_Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteChatMessages_Request_Message& from);
  void MergeFrom(const CChatRoom_DeleteChatMessages_Request_Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatMessages_Request_Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_timestamp = 1;
  bool has_server_timestamp() const;
  void clear_server_timestamp();
  static const int kServerTimestampFieldNumber = 1;
  ::google::protobuf::uint32 server_timestamp() const;
  void set_server_timestamp(::google::protobuf::uint32 value);

  // optional uint32 ordinal = 2;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 2;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatMessages_Request.Message)
 private:
  void set_has_server_timestamp();
  void clear_has_server_timestamp();
  void set_has_ordinal();
  void clear_has_ordinal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 server_timestamp_;
  ::google::protobuf::uint32 ordinal_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatMessages_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatMessages_Request) */ {
 public:
  CChatRoom_DeleteChatMessages_Request();
  virtual ~CChatRoom_DeleteChatMessages_Request();

  CChatRoom_DeleteChatMessages_Request(const CChatRoom_DeleteChatMessages_Request& from);

  inline CChatRoom_DeleteChatMessages_Request& operator=(const CChatRoom_DeleteChatMessages_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteChatMessages_Request(CChatRoom_DeleteChatMessages_Request&& from) noexcept
    : CChatRoom_DeleteChatMessages_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatMessages_Request& operator=(CChatRoom_DeleteChatMessages_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteChatMessages_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteChatMessages_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatMessages_Request*>(
               &_CChatRoom_DeleteChatMessages_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(CChatRoom_DeleteChatMessages_Request* other);
  friend void swap(CChatRoom_DeleteChatMessages_Request& a, CChatRoom_DeleteChatMessages_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteChatMessages_Request* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Request>(NULL);
  }

  CChatRoom_DeleteChatMessages_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteChatMessages_Request& from);
  void MergeFrom(const CChatRoom_DeleteChatMessages_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatMessages_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_DeleteChatMessages_Request_Message Message;

  // accessors -------------------------------------------------------

  // repeated .CChatRoom_DeleteChatMessages_Request.Message messages = 3;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 3;
  ::CChatRoom_DeleteChatMessages_Request_Message* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >*
      mutable_messages();
  const ::CChatRoom_DeleteChatMessages_Request_Message& messages(int index) const;
  ::CChatRoom_DeleteChatMessages_Request_Message* add_messages();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >&
      messages() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatMessages_Request)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message > messages_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatMessages_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatMessages_Response) */ {
 public:
  CChatRoom_DeleteChatMessages_Response();
  virtual ~CChatRoom_DeleteChatMessages_Response();

  CChatRoom_DeleteChatMessages_Response(const CChatRoom_DeleteChatMessages_Response& from);

  inline CChatRoom_DeleteChatMessages_Response& operator=(const CChatRoom_DeleteChatMessages_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_DeleteChatMessages_Response(CChatRoom_DeleteChatMessages_Response&& from) noexcept
    : CChatRoom_DeleteChatMessages_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatMessages_Response& operator=(CChatRoom_DeleteChatMessages_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_DeleteChatMessages_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_DeleteChatMessages_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatMessages_Response*>(
               &_CChatRoom_DeleteChatMessages_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(CChatRoom_DeleteChatMessages_Response* other);
  friend void swap(CChatRoom_DeleteChatMessages_Response& a, CChatRoom_DeleteChatMessages_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_DeleteChatMessages_Response* New() const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Response>(NULL);
  }

  CChatRoom_DeleteChatMessages_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_DeleteChatMessages_Response& from);
  void MergeFrom(const CChatRoom_DeleteChatMessages_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatMessages_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatMessages_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CClanChatRooms_GetClanChatRoomInfo_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_GetClanChatRoomInfo_Request) */ {
 public:
  CClanChatRooms_GetClanChatRoomInfo_Request();
  virtual ~CClanChatRooms_GetClanChatRoomInfo_Request();

  CClanChatRooms_GetClanChatRoomInfo_Request(const CClanChatRooms_GetClanChatRoomInfo_Request& from);

  inline CClanChatRooms_GetClanChatRoomInfo_Request& operator=(const CClanChatRooms_GetClanChatRoomInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClanChatRooms_GetClanChatRoomInfo_Request(CClanChatRooms_GetClanChatRoomInfo_Request&& from) noexcept
    : CClanChatRooms_GetClanChatRoomInfo_Request() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_GetClanChatRoomInfo_Request& operator=(CClanChatRooms_GetClanChatRoomInfo_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CClanChatRooms_GetClanChatRoomInfo_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClanChatRooms_GetClanChatRoomInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_GetClanChatRoomInfo_Request*>(
               &_CClanChatRooms_GetClanChatRoomInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(CClanChatRooms_GetClanChatRoomInfo_Request* other);
  friend void swap(CClanChatRooms_GetClanChatRoomInfo_Request& a, CClanChatRooms_GetClanChatRoomInfo_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClanChatRooms_GetClanChatRoomInfo_Request* New() const final {
    return CreateMaybeMessage<CClanChatRooms_GetClanChatRoomInfo_Request>(NULL);
  }

  CClanChatRooms_GetClanChatRoomInfo_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClanChatRooms_GetClanChatRoomInfo_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClanChatRooms_GetClanChatRoomInfo_Request& from);
  void MergeFrom(const CClanChatRooms_GetClanChatRoomInfo_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_GetClanChatRoomInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool autocreate = 2 [default = true, (.description) = "Create a default chat room if none has been created before."];
  bool has_autocreate() const;
  void clear_autocreate();
  static const int kAutocreateFieldNumber = 2;
  bool autocreate() const;
  void set_autocreate(bool value);

  // @@protoc_insertion_point(class_scope:CClanChatRooms_GetClanChatRoomInfo_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_autocreate();
  void clear_has_autocreate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool autocreate_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CClanChatRooms_GetClanChatRoomInfo_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_GetClanChatRoomInfo_Response) */ {
 public:
  CClanChatRooms_GetClanChatRoomInfo_Response();
  virtual ~CClanChatRooms_GetClanChatRoomInfo_Response();

  CClanChatRooms_GetClanChatRoomInfo_Response(const CClanChatRooms_GetClanChatRoomInfo_Response& from);

  inline CClanChatRooms_GetClanChatRoomInfo_Response& operator=(const CClanChatRooms_GetClanChatRoomInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClanChatRooms_GetClanChatRoomInfo_Response(CClanChatRooms_GetClanChatRoomInfo_Response&& from) noexcept
    : CClanChatRooms_GetClanChatRoomInfo_Response() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_GetClanChatRoomInfo_Response& operator=(CClanChatRooms_GetClanChatRoomInfo_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CClanChatRooms_GetClanChatRoomInfo_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClanChatRooms_GetClanChatRoomInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_GetClanChatRoomInfo_Response*>(
               &_CClanChatRooms_GetClanChatRoomInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(CClanChatRooms_GetClanChatRoomInfo_Response* other);
  friend void swap(CClanChatRooms_GetClanChatRoomInfo_Response& a, CClanChatRooms_GetClanChatRoomInfo_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClanChatRooms_GetClanChatRoomInfo_Response* New() const final {
    return CreateMaybeMessage<CClanChatRooms_GetClanChatRoomInfo_Response>(NULL);
  }

  CClanChatRooms_GetClanChatRoomInfo_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClanChatRooms_GetClanChatRoomInfo_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClanChatRooms_GetClanChatRoomInfo_Response& from);
  void MergeFrom(const CClanChatRooms_GetClanChatRoomInfo_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_GetClanChatRoomInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoom_GetChatRoomGroupSummary_Response chat_group_summary = 1;
  bool has_chat_group_summary() const;
  void clear_chat_group_summary();
  static const int kChatGroupSummaryFieldNumber = 1;
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_chat_group_summary() const;
  public:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& chat_group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* release_chat_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_chat_group_summary();
  void set_allocated_chat_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary);

  // @@protoc_insertion_point(class_scope:CClanChatRooms_GetClanChatRoomInfo_Response)
 private:
  void set_has_chat_group_summary();
  void clear_has_chat_group_summary();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CClanChatRooms_SetClanChatRoomPrivate_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_SetClanChatRoomPrivate_Request) */ {
 public:
  CClanChatRooms_SetClanChatRoomPrivate_Request();
  virtual ~CClanChatRooms_SetClanChatRoomPrivate_Request();

  CClanChatRooms_SetClanChatRoomPrivate_Request(const CClanChatRooms_SetClanChatRoomPrivate_Request& from);

  inline CClanChatRooms_SetClanChatRoomPrivate_Request& operator=(const CClanChatRooms_SetClanChatRoomPrivate_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClanChatRooms_SetClanChatRoomPrivate_Request(CClanChatRooms_SetClanChatRoomPrivate_Request&& from) noexcept
    : CClanChatRooms_SetClanChatRoomPrivate_Request() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_SetClanChatRoomPrivate_Request& operator=(CClanChatRooms_SetClanChatRoomPrivate_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CClanChatRooms_SetClanChatRoomPrivate_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClanChatRooms_SetClanChatRoomPrivate_Request* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_SetClanChatRoomPrivate_Request*>(
               &_CClanChatRooms_SetClanChatRoomPrivate_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(CClanChatRooms_SetClanChatRoomPrivate_Request* other);
  friend void swap(CClanChatRooms_SetClanChatRoomPrivate_Request& a, CClanChatRooms_SetClanChatRoomPrivate_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClanChatRooms_SetClanChatRoomPrivate_Request* New() const final {
    return CreateMaybeMessage<CClanChatRooms_SetClanChatRoomPrivate_Request>(NULL);
  }

  CClanChatRooms_SetClanChatRoomPrivate_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClanChatRooms_SetClanChatRoomPrivate_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClanChatRooms_SetClanChatRoomPrivate_Request& from);
  void MergeFrom(const CClanChatRooms_SetClanChatRoomPrivate_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_SetClanChatRoomPrivate_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool chat_room_private = 2;
  bool has_chat_room_private() const;
  void clear_chat_room_private();
  static const int kChatRoomPrivateFieldNumber = 2;
  bool chat_room_private() const;
  void set_chat_room_private(bool value);

  // @@protoc_insertion_point(class_scope:CClanChatRooms_SetClanChatRoomPrivate_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_chat_room_private();
  void clear_has_chat_room_private();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool chat_room_private_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CClanChatRooms_SetClanChatRoomPrivate_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_SetClanChatRoomPrivate_Response) */ {
 public:
  CClanChatRooms_SetClanChatRoomPrivate_Response();
  virtual ~CClanChatRooms_SetClanChatRoomPrivate_Response();

  CClanChatRooms_SetClanChatRoomPrivate_Response(const CClanChatRooms_SetClanChatRoomPrivate_Response& from);

  inline CClanChatRooms_SetClanChatRoomPrivate_Response& operator=(const CClanChatRooms_SetClanChatRoomPrivate_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClanChatRooms_SetClanChatRoomPrivate_Response(CClanChatRooms_SetClanChatRoomPrivate_Response&& from) noexcept
    : CClanChatRooms_SetClanChatRoomPrivate_Response() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_SetClanChatRoomPrivate_Response& operator=(CClanChatRooms_SetClanChatRoomPrivate_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CClanChatRooms_SetClanChatRoomPrivate_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClanChatRooms_SetClanChatRoomPrivate_Response* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_SetClanChatRoomPrivate_Response*>(
               &_CClanChatRooms_SetClanChatRoomPrivate_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(CClanChatRooms_SetClanChatRoomPrivate_Response* other);
  friend void swap(CClanChatRooms_SetClanChatRoomPrivate_Response& a, CClanChatRooms_SetClanChatRoomPrivate_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClanChatRooms_SetClanChatRoomPrivate_Response* New() const final {
    return CreateMaybeMessage<CClanChatRooms_SetClanChatRoomPrivate_Response>(NULL);
  }

  CClanChatRooms_SetClanChatRoomPrivate_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClanChatRooms_SetClanChatRoomPrivate_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClanChatRooms_SetClanChatRoomPrivate_Response& from);
  void MergeFrom(const CClanChatRooms_SetClanChatRoomPrivate_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_SetClanChatRoomPrivate_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool chat_room_private = 1;
  bool has_chat_room_private() const;
  void clear_chat_room_private();
  static const int kChatRoomPrivateFieldNumber = 1;
  bool chat_room_private() const;
  void set_chat_room_private(bool value);

  // @@protoc_insertion_point(class_scope:CClanChatRooms_SetClanChatRoomPrivate_Response)
 private:
  void set_has_chat_room_private();
  void clear_has_chat_room_private();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool chat_room_private_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatMentions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatMentions) */ {
 public:
  CChatMentions();
  virtual ~CChatMentions();

  CChatMentions(const CChatMentions& from);

  inline CChatMentions& operator=(const CChatMentions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatMentions(CChatMentions&& from) noexcept
    : CChatMentions() {
    *this = ::std::move(from);
  }

  inline CChatMentions& operator=(CChatMentions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatMentions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatMentions* internal_default_instance() {
    return reinterpret_cast<const CChatMentions*>(
               &_CChatMentions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(CChatMentions* other);
  friend void swap(CChatMentions& a, CChatMentions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatMentions* New() const final {
    return CreateMaybeMessage<CChatMentions>(NULL);
  }

  CChatMentions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatMentions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatMentions& from);
  void MergeFrom(const CChatMentions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatMentions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mention_accountids = 3;
  int mention_accountids_size() const;
  void clear_mention_accountids();
  static const int kMentionAccountidsFieldNumber = 3;
  ::google::protobuf::uint32 mention_accountids(int index) const;
  void set_mention_accountids(int index, ::google::protobuf::uint32 value);
  void add_mention_accountids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mention_accountids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mention_accountids();

  // optional bool mention_all = 1;
  bool has_mention_all() const;
  void clear_mention_all();
  static const int kMentionAllFieldNumber = 1;
  bool mention_all() const;
  void set_mention_all(bool value);

  // optional bool mention_here = 2;
  bool has_mention_here() const;
  void clear_mention_here();
  static const int kMentionHereFieldNumber = 2;
  bool mention_here() const;
  void set_mention_here(bool value);

  // @@protoc_insertion_point(class_scope:CChatMentions)
 private:
  void set_has_mention_all();
  void clear_has_mention_all();
  void set_has_mention_here();
  void clear_has_mention_here();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mention_accountids_;
  bool mention_all_;
  bool mention_here_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_IncomingChatMessage_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_IncomingChatMessage_Notification) */ {
 public:
  CChatRoom_IncomingChatMessage_Notification();
  virtual ~CChatRoom_IncomingChatMessage_Notification();

  CChatRoom_IncomingChatMessage_Notification(const CChatRoom_IncomingChatMessage_Notification& from);

  inline CChatRoom_IncomingChatMessage_Notification& operator=(const CChatRoom_IncomingChatMessage_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_IncomingChatMessage_Notification(CChatRoom_IncomingChatMessage_Notification&& from) noexcept
    : CChatRoom_IncomingChatMessage_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_IncomingChatMessage_Notification& operator=(CChatRoom_IncomingChatMessage_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_IncomingChatMessage_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_IncomingChatMessage_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_IncomingChatMessage_Notification*>(
               &_CChatRoom_IncomingChatMessage_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(CChatRoom_IncomingChatMessage_Notification* other);
  friend void swap(CChatRoom_IncomingChatMessage_Notification& a, CChatRoom_IncomingChatMessage_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_IncomingChatMessage_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_IncomingChatMessage_Notification>(NULL);
  }

  CChatRoom_IncomingChatMessage_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_IncomingChatMessage_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_IncomingChatMessage_Notification& from);
  void MergeFrom(const CChatRoom_IncomingChatMessage_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_IncomingChatMessage_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 4;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional string message_no_bbcode = 9;
  bool has_message_no_bbcode() const;
  void clear_message_no_bbcode();
  static const int kMessageNoBbcodeFieldNumber = 9;
  const ::std::string& message_no_bbcode() const;
  void set_message_no_bbcode(const ::std::string& value);
  #if LANG_CXX11
  void set_message_no_bbcode(::std::string&& value);
  #endif
  void set_message_no_bbcode(const char* value);
  void set_message_no_bbcode(const char* value, size_t size);
  ::std::string* mutable_message_no_bbcode();
  ::std::string* release_message_no_bbcode();
  void set_allocated_message_no_bbcode(::std::string* message_no_bbcode);

  // optional .CChatMentions mentions = 6;
  bool has_mentions() const;
  void clear_mentions();
  static const int kMentionsFieldNumber = 6;
  private:
  const ::CChatMentions& _internal_mentions() const;
  public:
  const ::CChatMentions& mentions() const;
  ::CChatMentions* release_mentions();
  ::CChatMentions* mutable_mentions();
  void set_allocated_mentions(::CChatMentions* mentions);

  // optional .ServerMessage server_message = 8;
  bool has_server_message() const;
  void clear_server_message();
  static const int kServerMessageFieldNumber = 8;
  private:
  const ::ServerMessage& _internal_server_message() const;
  public:
  const ::ServerMessage& server_message() const;
  ::ServerMessage* release_server_message();
  ::ServerMessage* mutable_server_message();
  void set_allocated_server_message(::ServerMessage* server_message);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid_sender = 3;
  bool has_steamid_sender() const;
  void clear_steamid_sender();
  static const int kSteamidSenderFieldNumber = 3;
  ::google::protobuf::uint64 steamid_sender() const;
  void set_steamid_sender(::google::protobuf::uint64 value);

  // optional uint32 timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 ordinal = 7;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 7;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_IncomingChatMessage_Notification)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_steamid_sender();
  void clear_has_steamid_sender();
  void set_has_message();
  void clear_has_message();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_mentions();
  void clear_has_mentions();
  void set_has_ordinal();
  void clear_has_ordinal();
  void set_has_server_message();
  void clear_has_server_message();
  void set_has_message_no_bbcode();
  void clear_has_message_no_bbcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr message_no_bbcode_;
  ::CChatMentions* mentions_;
  ::ServerMessage* server_message_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint64 steamid_sender_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 ordinal_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ChatMessageModified_Notification_ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatMessageModified_Notification.ChatMessage) */ {
 public:
  CChatRoom_ChatMessageModified_Notification_ChatMessage();
  virtual ~CChatRoom_ChatMessageModified_Notification_ChatMessage();

  CChatRoom_ChatMessageModified_Notification_ChatMessage(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from);

  inline CChatRoom_ChatMessageModified_Notification_ChatMessage& operator=(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ChatMessageModified_Notification_ChatMessage(CChatRoom_ChatMessageModified_Notification_ChatMessage&& from) noexcept
    : CChatRoom_ChatMessageModified_Notification_ChatMessage() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatMessageModified_Notification_ChatMessage& operator=(CChatRoom_ChatMessageModified_Notification_ChatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ChatMessageModified_Notification_ChatMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ChatMessageModified_Notification_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatMessageModified_Notification_ChatMessage*>(
               &_CChatRoom_ChatMessageModified_Notification_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(CChatRoom_ChatMessageModified_Notification_ChatMessage* other);
  friend void swap(CChatRoom_ChatMessageModified_Notification_ChatMessage& a, CChatRoom_ChatMessageModified_Notification_ChatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ChatMessageModified_Notification_ChatMessage* New() const final {
    return CreateMaybeMessage<CChatRoom_ChatMessageModified_Notification_ChatMessage>(NULL);
  }

  CChatRoom_ChatMessageModified_Notification_ChatMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ChatMessageModified_Notification_ChatMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from);
  void MergeFrom(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatMessageModified_Notification_ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_timestamp = 1;
  bool has_server_timestamp() const;
  void clear_server_timestamp();
  static const int kServerTimestampFieldNumber = 1;
  ::google::protobuf::uint32 server_timestamp() const;
  void set_server_timestamp(::google::protobuf::uint32 value);

  // optional uint32 ordinal = 2;
  bool has_ordinal() const;
  void clear_ordinal();
  static const int kOrdinalFieldNumber = 2;
  ::google::protobuf::uint32 ordinal() const;
  void set_ordinal(::google::protobuf::uint32 value);

  // optional bool deleted = 3;
  bool has_deleted() const;
  void clear_deleted();
  static const int kDeletedFieldNumber = 3;
  bool deleted() const;
  void set_deleted(bool value);

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatMessageModified_Notification.ChatMessage)
 private:
  void set_has_server_timestamp();
  void clear_has_server_timestamp();
  void set_has_ordinal();
  void clear_has_ordinal();
  void set_has_deleted();
  void clear_has_deleted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 server_timestamp_;
  ::google::protobuf::uint32 ordinal_;
  bool deleted_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ChatMessageModified_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatMessageModified_Notification) */ {
 public:
  CChatRoom_ChatMessageModified_Notification();
  virtual ~CChatRoom_ChatMessageModified_Notification();

  CChatRoom_ChatMessageModified_Notification(const CChatRoom_ChatMessageModified_Notification& from);

  inline CChatRoom_ChatMessageModified_Notification& operator=(const CChatRoom_ChatMessageModified_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ChatMessageModified_Notification(CChatRoom_ChatMessageModified_Notification&& from) noexcept
    : CChatRoom_ChatMessageModified_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatMessageModified_Notification& operator=(CChatRoom_ChatMessageModified_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ChatMessageModified_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ChatMessageModified_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatMessageModified_Notification*>(
               &_CChatRoom_ChatMessageModified_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  void Swap(CChatRoom_ChatMessageModified_Notification* other);
  friend void swap(CChatRoom_ChatMessageModified_Notification& a, CChatRoom_ChatMessageModified_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ChatMessageModified_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_ChatMessageModified_Notification>(NULL);
  }

  CChatRoom_ChatMessageModified_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ChatMessageModified_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ChatMessageModified_Notification& from);
  void MergeFrom(const CChatRoom_ChatMessageModified_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatMessageModified_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_ChatMessageModified_Notification_ChatMessage ChatMessage;

  // accessors -------------------------------------------------------

  // repeated .CChatRoom_ChatMessageModified_Notification.ChatMessage messages = 3;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 3;
  ::CChatRoom_ChatMessageModified_Notification_ChatMessage* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >*
      mutable_messages();
  const ::CChatRoom_ChatMessageModified_Notification_ChatMessage& messages(int index) const;
  ::CChatRoom_ChatMessageModified_Notification_ChatMessage* add_messages();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >&
      messages() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatMessageModified_Notification)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_chat_id();
  void clear_has_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage > messages_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_MemberStateChange_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_MemberStateChange_Notification) */ {
 public:
  CChatRoom_MemberStateChange_Notification();
  virtual ~CChatRoom_MemberStateChange_Notification();

  CChatRoom_MemberStateChange_Notification(const CChatRoom_MemberStateChange_Notification& from);

  inline CChatRoom_MemberStateChange_Notification& operator=(const CChatRoom_MemberStateChange_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_MemberStateChange_Notification(CChatRoom_MemberStateChange_Notification&& from) noexcept
    : CChatRoom_MemberStateChange_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MemberStateChange_Notification& operator=(CChatRoom_MemberStateChange_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_MemberStateChange_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_MemberStateChange_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MemberStateChange_Notification*>(
               &_CChatRoom_MemberStateChange_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(CChatRoom_MemberStateChange_Notification* other);
  friend void swap(CChatRoom_MemberStateChange_Notification& a, CChatRoom_MemberStateChange_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_MemberStateChange_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_MemberStateChange_Notification>(NULL);
  }

  CChatRoom_MemberStateChange_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_MemberStateChange_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_MemberStateChange_Notification& from);
  void MergeFrom(const CChatRoom_MemberStateChange_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_MemberStateChange_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoomMember member = 2;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 2;
  private:
  const ::CChatRoomMember& _internal_member() const;
  public:
  const ::CChatRoomMember& member() const;
  ::CChatRoomMember* release_member();
  ::CChatRoomMember* mutable_member();
  void set_allocated_member(::CChatRoomMember* member);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional .EChatRoomMemberStateChange change = 3 [default = k_EChatRoomMemberStateChange_Invalid];
  bool has_change() const;
  void clear_change();
  static const int kChangeFieldNumber = 3;
  ::EChatRoomMemberStateChange change() const;
  void set_change(::EChatRoomMemberStateChange value);

  // @@protoc_insertion_point(class_scope:CChatRoom_MemberStateChange_Notification)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_member();
  void clear_has_member();
  void set_has_change();
  void clear_has_change();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoomMember* member_;
  ::google::protobuf::uint64 chat_group_id_;
  int change_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ChatRoomHeaderState_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatRoomHeaderState_Notification) */ {
 public:
  CChatRoom_ChatRoomHeaderState_Notification();
  virtual ~CChatRoom_ChatRoomHeaderState_Notification();

  CChatRoom_ChatRoomHeaderState_Notification(const CChatRoom_ChatRoomHeaderState_Notification& from);

  inline CChatRoom_ChatRoomHeaderState_Notification& operator=(const CChatRoom_ChatRoomHeaderState_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ChatRoomHeaderState_Notification(CChatRoom_ChatRoomHeaderState_Notification&& from) noexcept
    : CChatRoom_ChatRoomHeaderState_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatRoomHeaderState_Notification& operator=(CChatRoom_ChatRoomHeaderState_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ChatRoomHeaderState_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ChatRoomHeaderState_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatRoomHeaderState_Notification*>(
               &_CChatRoom_ChatRoomHeaderState_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(CChatRoom_ChatRoomHeaderState_Notification* other);
  friend void swap(CChatRoom_ChatRoomHeaderState_Notification& a, CChatRoom_ChatRoomHeaderState_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ChatRoomHeaderState_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_ChatRoomHeaderState_Notification>(NULL);
  }

  CChatRoom_ChatRoomHeaderState_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ChatRoomHeaderState_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ChatRoomHeaderState_Notification& from);
  void MergeFrom(const CChatRoom_ChatRoomHeaderState_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatRoomHeaderState_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CChatRoomGroupHeaderState header_state = 1;
  bool has_header_state() const;
  void clear_header_state();
  static const int kHeaderStateFieldNumber = 1;
  private:
  const ::CChatRoomGroupHeaderState& _internal_header_state() const;
  public:
  const ::CChatRoomGroupHeaderState& header_state() const;
  ::CChatRoomGroupHeaderState* release_header_state();
  ::CChatRoomGroupHeaderState* mutable_header_state();
  void set_allocated_header_state(::CChatRoomGroupHeaderState* header_state);

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatRoomHeaderState_Notification)
 private:
  void set_has_header_state();
  void clear_has_header_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatRoomGroupHeaderState* header_state_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_ChatRoomGroupRoomsChange_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatRoomGroupRoomsChange_Notification) */ {
 public:
  CChatRoom_ChatRoomGroupRoomsChange_Notification();
  virtual ~CChatRoom_ChatRoomGroupRoomsChange_Notification();

  CChatRoom_ChatRoomGroupRoomsChange_Notification(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from);

  inline CChatRoom_ChatRoomGroupRoomsChange_Notification& operator=(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_ChatRoomGroupRoomsChange_Notification(CChatRoom_ChatRoomGroupRoomsChange_Notification&& from) noexcept
    : CChatRoom_ChatRoomGroupRoomsChange_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatRoomGroupRoomsChange_Notification& operator=(CChatRoom_ChatRoomGroupRoomsChange_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_ChatRoomGroupRoomsChange_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_ChatRoomGroupRoomsChange_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatRoomGroupRoomsChange_Notification*>(
               &_CChatRoom_ChatRoomGroupRoomsChange_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(CChatRoom_ChatRoomGroupRoomsChange_Notification* other);
  friend void swap(CChatRoom_ChatRoomGroupRoomsChange_Notification& a, CChatRoom_ChatRoomGroupRoomsChange_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_ChatRoomGroupRoomsChange_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_ChatRoomGroupRoomsChange_Notification>(NULL);
  }

  CChatRoom_ChatRoomGroupRoomsChange_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_ChatRoomGroupRoomsChange_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from);
  void MergeFrom(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatRoomGroupRoomsChange_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CChatRoomState chat_rooms = 3;
  int chat_rooms_size() const;
  void clear_chat_rooms();
  static const int kChatRoomsFieldNumber = 3;
  ::CChatRoomState* mutable_chat_rooms(int index);
  ::google::protobuf::RepeatedPtrField< ::CChatRoomState >*
      mutable_chat_rooms();
  const ::CChatRoomState& chat_rooms(int index) const;
  ::CChatRoomState* add_chat_rooms();
  const ::google::protobuf::RepeatedPtrField< ::CChatRoomState >&
      chat_rooms() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional uint64 default_chat_id = 2;
  bool has_default_chat_id() const;
  void clear_default_chat_id();
  static const int kDefaultChatIdFieldNumber = 2;
  ::google::protobuf::uint64 default_chat_id() const;
  void set_default_chat_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatRoomGroupRoomsChange_Notification)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_default_chat_id();
  void clear_has_default_chat_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CChatRoomState > chat_rooms_;
  ::google::protobuf::uint64 chat_group_id_;
  ::google::protobuf::uint64 default_chat_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification) */ {
 public:
  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification();
  virtual ~CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification();

  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from);

  inline CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& operator=(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification&& from) noexcept
    : CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& operator=(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification*>(
               &_CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* other);
  friend void swap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& a, CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* New() const final {
    return CreateMaybeMessage<CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification>(NULL);
  }

  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from);
  void MergeFrom(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_id() const;
  void set_chat_id(::google::protobuf::uint64 value);

  // optional uint64 chat_group_id = 2;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 2;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification)
 private:
  void set_has_chat_id();
  void clear_has_chat_id();
  void set_has_chat_group_id();
  void clear_has_chat_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 chat_id_;
  ::google::protobuf::uint64 chat_group_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRoomClient_NotifyChatGroupUserStateChanged_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification) */ {
 public:
  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification();
  virtual ~ChatRoomClient_NotifyChatGroupUserStateChanged_Notification();

  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from);

  inline ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& operator=(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification&& from) noexcept
    : ChatRoomClient_NotifyChatGroupUserStateChanged_Notification() {
    *this = ::std::move(from);
  }

  inline ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& operator=(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* internal_default_instance() {
    return reinterpret_cast<const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification*>(
               &_ChatRoomClient_NotifyChatGroupUserStateChanged_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* other);
  friend void swap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& a, ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* New() const final {
    return CreateMaybeMessage<ChatRoomClient_NotifyChatGroupUserStateChanged_Notification>(NULL);
  }

  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChatRoomClient_NotifyChatGroupUserStateChanged_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from);
  void MergeFrom(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CUserChatRoomGroupState user_chat_group_state = 2;
  bool has_user_chat_group_state() const;
  void clear_user_chat_group_state();
  static const int kUserChatGroupStateFieldNumber = 2;
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_group_state() const;
  public:
  const ::CUserChatRoomGroupState& user_chat_group_state() const;
  ::CUserChatRoomGroupState* release_user_chat_group_state();
  ::CUserChatRoomGroupState* mutable_user_chat_group_state();
  void set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state);

  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 3;
  bool has_group_summary() const;
  void clear_group_summary();
  static const int kGroupSummaryFieldNumber = 3;
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  public:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  void clear_chat_group_id();
  static const int kChatGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 chat_group_id() const;
  void set_chat_group_id(::google::protobuf::uint64 value);

  // optional .EChatRoomMemberStateChange user_action = 4 [default = k_EChatRoomMemberStateChange_Invalid];
  bool has_user_action() const;
  void clear_user_action();
  static const int kUserActionFieldNumber = 4;
  ::EChatRoomMemberStateChange user_action() const;
  void set_user_action(::EChatRoomMemberStateChange value);

  // @@protoc_insertion_point(class_scope:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification)
 private:
  void set_has_chat_group_id();
  void clear_has_chat_group_id();
  void set_has_user_chat_group_state();
  void clear_has_user_chat_group_state();
  void set_has_group_summary();
  void clear_has_group_summary();
  void set_has_user_action();
  void clear_has_user_action();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CUserChatRoomGroupState* user_chat_group_state_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  ::google::protobuf::uint64 chat_group_id_;
  int user_action_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_Settings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.Settings) */ {
 public:
  CChatUsability_ClientUsabilityMetrics_Notification_Settings();
  virtual ~CChatUsability_ClientUsabilityMetrics_Notification_Settings();

  CChatUsability_ClientUsabilityMetrics_Notification_Settings(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from);

  inline CChatUsability_ClientUsabilityMetrics_Notification_Settings& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_ClientUsabilityMetrics_Notification_Settings(CChatUsability_ClientUsabilityMetrics_Notification_Settings&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_Settings() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_Settings& operator=(CChatUsability_ClientUsabilityMetrics_Notification_Settings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_ClientUsabilityMetrics_Notification_Settings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_Settings* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_Settings*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(CChatUsability_ClientUsabilityMetrics_Notification_Settings* other);
  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_Settings& a, CChatUsability_ClientUsabilityMetrics_Notification_Settings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_ClientUsabilityMetrics_Notification_Settings* New() const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_Settings>(NULL);
  }

  CChatUsability_ClientUsabilityMetrics_Notification_Settings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_Settings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from);
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_Settings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool notifications_show_ingame = 1;
  bool has_notifications_show_ingame() const;
  void clear_notifications_show_ingame();
  static const int kNotificationsShowIngameFieldNumber = 1;
  bool notifications_show_ingame() const;
  void set_notifications_show_ingame(bool value);

  // optional bool notifications_show_online = 2;
  bool has_notifications_show_online() const;
  void clear_notifications_show_online();
  static const int kNotificationsShowOnlineFieldNumber = 2;
  bool notifications_show_online() const;
  void set_notifications_show_online(bool value);

  // optional bool notifications_show_message = 3;
  bool has_notifications_show_message() const;
  void clear_notifications_show_message();
  static const int kNotificationsShowMessageFieldNumber = 3;
  bool notifications_show_message() const;
  void set_notifications_show_message(bool value);

  // optional bool notifications_events_and_announcements = 4;
  bool has_notifications_events_and_announcements() const;
  void clear_notifications_events_and_announcements();
  static const int kNotificationsEventsAndAnnouncementsFieldNumber = 4;
  bool notifications_events_and_announcements() const;
  void set_notifications_events_and_announcements(bool value);

  // optional bool sounds_play_ingame = 5;
  bool has_sounds_play_ingame() const;
  void clear_sounds_play_ingame();
  static const int kSoundsPlayIngameFieldNumber = 5;
  bool sounds_play_ingame() const;
  void set_sounds_play_ingame(bool value);

  // optional bool sounds_play_online = 6;
  bool has_sounds_play_online() const;
  void clear_sounds_play_online();
  static const int kSoundsPlayOnlineFieldNumber = 6;
  bool sounds_play_online() const;
  void set_sounds_play_online(bool value);

  // optional bool sounds_play_message = 7;
  bool has_sounds_play_message() const;
  void clear_sounds_play_message();
  static const int kSoundsPlayMessageFieldNumber = 7;
  bool sounds_play_message() const;
  void set_sounds_play_message(bool value);

  // optional bool sounds_events_and_announcements = 8;
  bool has_sounds_events_and_announcements() const;
  void clear_sounds_events_and_announcements();
  static const int kSoundsEventsAndAnnouncementsFieldNumber = 8;
  bool sounds_events_and_announcements() const;
  void set_sounds_events_and_announcements(bool value);

  // optional int32 chat_flash_mode = 11;
  bool has_chat_flash_mode() const;
  void clear_chat_flash_mode();
  static const int kChatFlashModeFieldNumber = 11;
  ::google::protobuf::int32 chat_flash_mode() const;
  void set_chat_flash_mode(::google::protobuf::int32 value);

  // optional bool always_new_chat_window = 9;
  bool has_always_new_chat_window() const;
  void clear_always_new_chat_window();
  static const int kAlwaysNewChatWindowFieldNumber = 9;
  bool always_new_chat_window() const;
  void set_always_new_chat_window(bool value);

  // optional bool force_alphabetic_friend_sorting = 10;
  bool has_force_alphabetic_friend_sorting() const;
  void clear_force_alphabetic_friend_sorting();
  static const int kForceAlphabeticFriendSortingFieldNumber = 10;
  bool force_alphabetic_friend_sorting() const;
  void set_force_alphabetic_friend_sorting(bool value);

  // optional bool remember_open_chats = 12;
  bool has_remember_open_chats() const;
  void clear_remember_open_chats();
  static const int kRememberOpenChatsFieldNumber = 12;
  bool remember_open_chats() const;
  void set_remember_open_chats(bool value);

  // optional bool compact_quick_access = 13;
  bool has_compact_quick_access() const;
  void clear_compact_quick_access();
  static const int kCompactQuickAccessFieldNumber = 13;
  bool compact_quick_access() const;
  void set_compact_quick_access(bool value);

  // optional bool compact_friends_list = 14;
  bool has_compact_friends_list() const;
  void clear_compact_friends_list();
  static const int kCompactFriendsListFieldNumber = 14;
  bool compact_friends_list() const;
  void set_compact_friends_list(bool value);

  // optional bool notifications_show_chat_room_notification = 15;
  bool has_notifications_show_chat_room_notification() const;
  void clear_notifications_show_chat_room_notification();
  static const int kNotificationsShowChatRoomNotificationFieldNumber = 15;
  bool notifications_show_chat_room_notification() const;
  void set_notifications_show_chat_room_notification(bool value);

  // optional bool sounds_play_chat_room_notification = 16;
  bool has_sounds_play_chat_room_notification() const;
  void clear_sounds_play_chat_room_notification();
  static const int kSoundsPlayChatRoomNotificationFieldNumber = 16;
  bool sounds_play_chat_room_notification() const;
  void set_sounds_play_chat_room_notification(bool value);

  // optional bool hide_offline_friends_in_tag_groups = 17;
  bool has_hide_offline_friends_in_tag_groups() const;
  void clear_hide_offline_friends_in_tag_groups();
  static const int kHideOfflineFriendsInTagGroupsFieldNumber = 17;
  bool hide_offline_friends_in_tag_groups() const;
  void set_hide_offline_friends_in_tag_groups(bool value);

  // optional int32 chat_font_size = 20;
  bool has_chat_font_size() const;
  void clear_chat_font_size();
  static const int kChatFontSizeFieldNumber = 20;
  ::google::protobuf::int32 chat_font_size() const;
  void set_chat_font_size(::google::protobuf::int32 value);

  // optional bool hide_categorized_friends = 18;
  bool has_hide_categorized_friends() const;
  void clear_hide_categorized_friends();
  static const int kHideCategorizedFriendsFieldNumber = 18;
  bool hide_categorized_friends() const;
  void set_hide_categorized_friends(bool value);

  // optional bool categorize_in_game_friends_by_game = 19;
  bool has_categorize_in_game_friends_by_game() const;
  void clear_categorize_in_game_friends_by_game();
  static const int kCategorizeInGameFriendsByGameFieldNumber = 19;
  bool categorize_in_game_friends_by_game() const;
  void set_categorize_in_game_friends_by_game(bool value);

  // optional bool use24hour_clock = 21;
  bool has_use24hour_clock() const;
  void clear_use24hour_clock();
  static const int kUse24HourClockFieldNumber = 21;
  bool use24hour_clock() const;
  void set_use24hour_clock(bool value);

  // optional bool do_not_disturb_mode = 22;
  bool has_do_not_disturb_mode() const;
  void clear_do_not_disturb_mode();
  static const int kDoNotDisturbModeFieldNumber = 22;
  bool do_not_disturb_mode() const;
  void set_do_not_disturb_mode(bool value);

  // optional bool disable_embed_inlining = 23;
  bool has_disable_embed_inlining() const;
  void clear_disable_embed_inlining();
  static const int kDisableEmbedInliningFieldNumber = 23;
  bool disable_embed_inlining() const;
  void set_disable_embed_inlining(bool value);

  // optional bool sign_into_friends = 24;
  bool has_sign_into_friends() const;
  void clear_sign_into_friends();
  static const int kSignIntoFriendsFieldNumber = 24;
  bool sign_into_friends() const;
  void set_sign_into_friends(bool value);

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.Settings)
 private:
  void set_has_notifications_show_ingame();
  void clear_has_notifications_show_ingame();
  void set_has_notifications_show_online();
  void clear_has_notifications_show_online();
  void set_has_notifications_show_message();
  void clear_has_notifications_show_message();
  void set_has_notifications_events_and_announcements();
  void clear_has_notifications_events_and_announcements();
  void set_has_sounds_play_ingame();
  void clear_has_sounds_play_ingame();
  void set_has_sounds_play_online();
  void clear_has_sounds_play_online();
  void set_has_sounds_play_message();
  void clear_has_sounds_play_message();
  void set_has_sounds_events_and_announcements();
  void clear_has_sounds_events_and_announcements();
  void set_has_always_new_chat_window();
  void clear_has_always_new_chat_window();
  void set_has_force_alphabetic_friend_sorting();
  void clear_has_force_alphabetic_friend_sorting();
  void set_has_chat_flash_mode();
  void clear_has_chat_flash_mode();
  void set_has_remember_open_chats();
  void clear_has_remember_open_chats();
  void set_has_compact_quick_access();
  void clear_has_compact_quick_access();
  void set_has_compact_friends_list();
  void clear_has_compact_friends_list();
  void set_has_notifications_show_chat_room_notification();
  void clear_has_notifications_show_chat_room_notification();
  void set_has_sounds_play_chat_room_notification();
  void clear_has_sounds_play_chat_room_notification();
  void set_has_hide_offline_friends_in_tag_groups();
  void clear_has_hide_offline_friends_in_tag_groups();
  void set_has_hide_categorized_friends();
  void clear_has_hide_categorized_friends();
  void set_has_categorize_in_game_friends_by_game();
  void clear_has_categorize_in_game_friends_by_game();
  void set_has_chat_font_size();
  void clear_has_chat_font_size();
  void set_has_use24hour_clock();
  void clear_has_use24hour_clock();
  void set_has_do_not_disturb_mode();
  void clear_has_do_not_disturb_mode();
  void set_has_disable_embed_inlining();
  void clear_has_disable_embed_inlining();
  void set_has_sign_into_friends();
  void clear_has_sign_into_friends();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool notifications_show_ingame_;
  bool notifications_show_online_;
  bool notifications_show_message_;
  bool notifications_events_and_announcements_;
  bool sounds_play_ingame_;
  bool sounds_play_online_;
  bool sounds_play_message_;
  bool sounds_events_and_announcements_;
  ::google::protobuf::int32 chat_flash_mode_;
  bool always_new_chat_window_;
  bool force_alphabetic_friend_sorting_;
  bool remember_open_chats_;
  bool compact_quick_access_;
  bool compact_friends_list_;
  bool notifications_show_chat_room_notification_;
  bool sounds_play_chat_room_notification_;
  bool hide_offline_friends_in_tag_groups_;
  ::google::protobuf::int32 chat_font_size_;
  bool hide_categorized_friends_;
  bool categorize_in_game_friends_by_game_;
  bool use24hour_clock_;
  bool do_not_disturb_mode_;
  bool disable_embed_inlining_;
  bool sign_into_friends_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings) */ {
 public:
  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings();
  virtual ~CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings();

  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from);

  inline CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& operator=(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* other);
  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& a, CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* New() const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(NULL);
  }

  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from);
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float voice_input_gain = 1;
  bool has_voice_input_gain() const;
  void clear_voice_input_gain();
  static const int kVoiceInputGainFieldNumber = 1;
  float voice_input_gain() const;
  void set_voice_input_gain(float value);

  // optional float voice_output_gain = 2;
  bool has_voice_output_gain() const;
  void clear_voice_output_gain();
  static const int kVoiceOutputGainFieldNumber = 2;
  float voice_output_gain() const;
  void set_voice_output_gain(float value);

  // optional int32 noise_gate_level = 3;
  bool has_noise_gate_level() const;
  void clear_noise_gate_level();
  static const int kNoiseGateLevelFieldNumber = 3;
  ::google::protobuf::int32 noise_gate_level() const;
  void set_noise_gate_level(::google::protobuf::int32 value);

  // optional bool voice_use_echo_cancellation = 4;
  bool has_voice_use_echo_cancellation() const;
  void clear_voice_use_echo_cancellation();
  static const int kVoiceUseEchoCancellationFieldNumber = 4;
  bool voice_use_echo_cancellation() const;
  void set_voice_use_echo_cancellation(bool value);

  // optional bool voice_use_noise_cancellation = 5;
  bool has_voice_use_noise_cancellation() const;
  void clear_voice_use_noise_cancellation();
  static const int kVoiceUseNoiseCancellationFieldNumber = 5;
  bool voice_use_noise_cancellation() const;
  void set_voice_use_noise_cancellation(bool value);

  // optional bool voice_use_auto_gain_control = 6;
  bool has_voice_use_auto_gain_control() const;
  void clear_voice_use_auto_gain_control();
  static const int kVoiceUseAutoGainControlFieldNumber = 6;
  bool voice_use_auto_gain_control() const;
  void set_voice_use_auto_gain_control(bool value);

  // optional bool selected_non_default_mic = 7;
  bool has_selected_non_default_mic() const;
  void clear_selected_non_default_mic();
  static const int kSelectedNonDefaultMicFieldNumber = 7;
  bool selected_non_default_mic() const;
  void set_selected_non_default_mic(bool value);

  // optional bool selected_non_default_output = 8;
  bool has_selected_non_default_output() const;
  void clear_selected_non_default_output();
  static const int kSelectedNonDefaultOutputFieldNumber = 8;
  bool selected_non_default_output() const;
  void set_selected_non_default_output(bool value);

  // optional bool push_to_talk_enabled = 9;
  bool has_push_to_talk_enabled() const;
  void clear_push_to_talk_enabled();
  static const int kPushToTalkEnabledFieldNumber = 9;
  bool push_to_talk_enabled() const;
  void set_push_to_talk_enabled(bool value);

  // optional bool push_to_mute_enabled = 10;
  bool has_push_to_mute_enabled() const;
  void clear_push_to_mute_enabled();
  static const int kPushToMuteEnabledFieldNumber = 10;
  bool push_to_mute_enabled() const;
  void set_push_to_mute_enabled(bool value);

  // optional bool play_ptt_sounds = 11;
  bool has_play_ptt_sounds() const;
  void clear_play_ptt_sounds();
  static const int kPlayPttSoundsFieldNumber = 11;
  bool play_ptt_sounds() const;
  void set_play_ptt_sounds(bool value);

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings)
 private:
  void set_has_voice_input_gain();
  void clear_has_voice_input_gain();
  void set_has_voice_output_gain();
  void clear_has_voice_output_gain();
  void set_has_noise_gate_level();
  void clear_has_noise_gate_level();
  void set_has_voice_use_echo_cancellation();
  void clear_has_voice_use_echo_cancellation();
  void set_has_voice_use_noise_cancellation();
  void clear_has_voice_use_noise_cancellation();
  void set_has_voice_use_auto_gain_control();
  void clear_has_voice_use_auto_gain_control();
  void set_has_selected_non_default_mic();
  void clear_has_selected_non_default_mic();
  void set_has_selected_non_default_output();
  void clear_has_selected_non_default_output();
  void set_has_push_to_talk_enabled();
  void clear_has_push_to_talk_enabled();
  void set_has_push_to_mute_enabled();
  void clear_has_push_to_mute_enabled();
  void set_has_play_ptt_sounds();
  void clear_has_play_ptt_sounds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float voice_input_gain_;
  float voice_output_gain_;
  ::google::protobuf::int32 noise_gate_level_;
  bool voice_use_echo_cancellation_;
  bool voice_use_noise_cancellation_;
  bool voice_use_auto_gain_control_;
  bool selected_non_default_mic_;
  bool selected_non_default_output_;
  bool push_to_talk_enabled_;
  bool push_to_mute_enabled_;
  bool play_ptt_sounds_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState) */ {
 public:
  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState();
  virtual ~CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState();

  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from);

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& operator=(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* other);
  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& a, CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* New() const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(NULL);
  }

  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from);
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool in_game_collapsed = 1;
  bool has_in_game_collapsed() const;
  void clear_in_game_collapsed();
  static const int kInGameCollapsedFieldNumber = 1;
  bool in_game_collapsed() const;
  void set_in_game_collapsed(bool value);

  // optional bool online_collapsed = 2;
  bool has_online_collapsed() const;
  void clear_online_collapsed();
  static const int kOnlineCollapsedFieldNumber = 2;
  bool online_collapsed() const;
  void set_online_collapsed(bool value);

  // optional bool offline_collapsed = 3;
  bool has_offline_collapsed() const;
  void clear_offline_collapsed();
  static const int kOfflineCollapsedFieldNumber = 3;
  bool offline_collapsed() const;
  void set_offline_collapsed(bool value);

  // optional int32 game_groups_collapsed = 4;
  bool has_game_groups_collapsed() const;
  void clear_game_groups_collapsed();
  static const int kGameGroupsCollapsedFieldNumber = 4;
  ::google::protobuf::int32 game_groups_collapsed() const;
  void set_game_groups_collapsed(::google::protobuf::int32 value);

  // optional int32 categories_collapsed = 5;
  bool has_categories_collapsed() const;
  void clear_categories_collapsed();
  static const int kCategoriesCollapsedFieldNumber = 5;
  ::google::protobuf::int32 categories_collapsed() const;
  void set_categories_collapsed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState)
 private:
  void set_has_in_game_collapsed();
  void clear_has_in_game_collapsed();
  void set_has_online_collapsed();
  void clear_has_online_collapsed();
  void set_has_offline_collapsed();
  void clear_has_offline_collapsed();
  void set_has_game_groups_collapsed();
  void clear_has_game_groups_collapsed();
  void set_has_categories_collapsed();
  void clear_has_categories_collapsed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool in_game_collapsed_;
  bool online_collapsed_;
  bool offline_collapsed_;
  ::google::protobuf::int32 game_groups_collapsed_;
  ::google::protobuf::int32 categories_collapsed_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_UIState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.UIState) */ {
 public:
  CChatUsability_ClientUsabilityMetrics_Notification_UIState();
  virtual ~CChatUsability_ClientUsabilityMetrics_Notification_UIState();

  CChatUsability_ClientUsabilityMetrics_Notification_UIState(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from);

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_ClientUsabilityMetrics_Notification_UIState(CChatUsability_ClientUsabilityMetrics_Notification_UIState&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_UIState() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState& operator=(CChatUsability_ClientUsabilityMetrics_Notification_UIState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_ClientUsabilityMetrics_Notification_UIState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_UIState* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_UIState*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_UIState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState* other);
  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState& a, CChatUsability_ClientUsabilityMetrics_Notification_UIState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState* New() const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState>(NULL);
  }

  CChatUsability_ClientUsabilityMetrics_Notification_UIState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from);
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_UIState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState CategoryCollapseState;

  // accessors -------------------------------------------------------

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState category_collapse = 12;
  bool has_category_collapse() const;
  void clear_category_collapse();
  static const int kCategoryCollapseFieldNumber = 12;
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& _internal_category_collapse() const;
  public:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& category_collapse() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* release_category_collapse();
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* mutable_category_collapse();
  void set_allocated_category_collapse(::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse);

  // optional int32 friends_list_height = 1;
  bool has_friends_list_height() const;
  void clear_friends_list_height();
  static const int kFriendsListHeightFieldNumber = 1;
  ::google::protobuf::int32 friends_list_height() const;
  void set_friends_list_height(::google::protobuf::int32 value);

  // optional int32 friends_list_width = 2;
  bool has_friends_list_width() const;
  void clear_friends_list_width();
  static const int kFriendsListWidthFieldNumber = 2;
  ::google::protobuf::int32 friends_list_width() const;
  void set_friends_list_width(::google::protobuf::int32 value);

  // optional int32 friends_list_group_chats_height = 5;
  bool has_friends_list_group_chats_height() const;
  void clear_friends_list_group_chats_height();
  static const int kFriendsListGroupChatsHeightFieldNumber = 5;
  ::google::protobuf::int32 friends_list_group_chats_height() const;
  void set_friends_list_group_chats_height(::google::protobuf::int32 value);

  // optional int32 chat_popups_opened = 7;
  bool has_chat_popups_opened() const;
  void clear_chat_popups_opened();
  static const int kChatPopupsOpenedFieldNumber = 7;
  ::google::protobuf::int32 chat_popups_opened() const;
  void set_chat_popups_opened(::google::protobuf::int32 value);

  // optional bool friends_list_docked = 3;
  bool has_friends_list_docked() const;
  void clear_friends_list_docked();
  static const int kFriendsListDockedFieldNumber = 3;
  bool friends_list_docked() const;
  void set_friends_list_docked(bool value);

  // optional bool friends_list_collapsed = 4;
  bool has_friends_list_collapsed() const;
  void clear_friends_list_collapsed();
  static const int kFriendsListCollapsedFieldNumber = 4;
  bool friends_list_collapsed() const;
  void set_friends_list_collapsed(bool value);

  // optional bool friends_list_visible = 6;
  bool has_friends_list_visible() const;
  void clear_friends_list_visible();
  static const int kFriendsListVisibleFieldNumber = 6;
  bool friends_list_visible() const;
  void set_friends_list_visible(bool value);

  // optional bool in_one_on_one_voice_chat = 15;
  bool has_in_one_on_one_voice_chat() const;
  void clear_in_one_on_one_voice_chat();
  static const int kInOneOnOneVoiceChatFieldNumber = 15;
  bool in_one_on_one_voice_chat() const;
  void set_in_one_on_one_voice_chat(bool value);

  // optional int32 group_chat_tabs_opened = 8;
  bool has_group_chat_tabs_opened() const;
  void clear_group_chat_tabs_opened();
  static const int kGroupChatTabsOpenedFieldNumber = 8;
  ::google::protobuf::int32 group_chat_tabs_opened() const;
  void set_group_chat_tabs_opened(::google::protobuf::int32 value);

  // optional int32 friend_chat_tabs_opened = 9;
  bool has_friend_chat_tabs_opened() const;
  void clear_friend_chat_tabs_opened();
  static const int kFriendChatTabsOpenedFieldNumber = 9;
  ::google::protobuf::int32 friend_chat_tabs_opened() const;
  void set_friend_chat_tabs_opened(::google::protobuf::int32 value);

  // optional int32 chat_window_width = 10;
  bool has_chat_window_width() const;
  void clear_chat_window_width();
  static const int kChatWindowWidthFieldNumber = 10;
  ::google::protobuf::int32 chat_window_width() const;
  void set_chat_window_width(::google::protobuf::int32 value);

  // optional int32 chat_window_height = 11;
  bool has_chat_window_height() const;
  void clear_chat_window_height();
  static const int kChatWindowHeightFieldNumber = 11;
  ::google::protobuf::int32 chat_window_height() const;
  void set_chat_window_height(::google::protobuf::int32 value);

  // optional int32 group_chat_left_col_collapsed = 13;
  bool has_group_chat_left_col_collapsed() const;
  void clear_group_chat_left_col_collapsed();
  static const int kGroupChatLeftColCollapsedFieldNumber = 13;
  ::google::protobuf::int32 group_chat_left_col_collapsed() const;
  void set_group_chat_left_col_collapsed(::google::protobuf::int32 value);

  // optional int32 group_chat_right_col_collapsed = 14;
  bool has_group_chat_right_col_collapsed() const;
  void clear_group_chat_right_col_collapsed();
  static const int kGroupChatRightColCollapsedFieldNumber = 14;
  ::google::protobuf::int32 group_chat_right_col_collapsed() const;
  void set_group_chat_right_col_collapsed(::google::protobuf::int32 value);

  // optional bool in_group_voice_chat = 16;
  bool has_in_group_voice_chat() const;
  void clear_in_group_voice_chat();
  static const int kInGroupVoiceChatFieldNumber = 16;
  bool in_group_voice_chat() const;
  void set_in_group_voice_chat(bool value);

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.UIState)
 private:
  void set_has_friends_list_height();
  void clear_has_friends_list_height();
  void set_has_friends_list_width();
  void clear_has_friends_list_width();
  void set_has_friends_list_docked();
  void clear_has_friends_list_docked();
  void set_has_friends_list_collapsed();
  void clear_has_friends_list_collapsed();
  void set_has_friends_list_group_chats_height();
  void clear_has_friends_list_group_chats_height();
  void set_has_friends_list_visible();
  void clear_has_friends_list_visible();
  void set_has_chat_popups_opened();
  void clear_has_chat_popups_opened();
  void set_has_group_chat_tabs_opened();
  void clear_has_group_chat_tabs_opened();
  void set_has_friend_chat_tabs_opened();
  void clear_has_friend_chat_tabs_opened();
  void set_has_chat_window_width();
  void clear_has_chat_window_width();
  void set_has_chat_window_height();
  void clear_has_chat_window_height();
  void set_has_category_collapse();
  void clear_has_category_collapse();
  void set_has_group_chat_left_col_collapsed();
  void clear_has_group_chat_left_col_collapsed();
  void set_has_group_chat_right_col_collapsed();
  void clear_has_group_chat_right_col_collapsed();
  void set_has_in_one_on_one_voice_chat();
  void clear_has_in_one_on_one_voice_chat();
  void set_has_in_group_voice_chat();
  void clear_has_in_group_voice_chat();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse_;
  ::google::protobuf::int32 friends_list_height_;
  ::google::protobuf::int32 friends_list_width_;
  ::google::protobuf::int32 friends_list_group_chats_height_;
  ::google::protobuf::int32 chat_popups_opened_;
  bool friends_list_docked_;
  bool friends_list_collapsed_;
  bool friends_list_visible_;
  bool in_one_on_one_voice_chat_;
  ::google::protobuf::int32 group_chat_tabs_opened_;
  ::google::protobuf::int32 friend_chat_tabs_opened_;
  ::google::protobuf::int32 chat_window_width_;
  ::google::protobuf::int32 chat_window_height_;
  ::google::protobuf::int32 group_chat_left_col_collapsed_;
  ::google::protobuf::int32 group_chat_right_col_collapsed_;
  bool in_group_voice_chat_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_Metrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.Metrics) */ {
 public:
  CChatUsability_ClientUsabilityMetrics_Notification_Metrics();
  virtual ~CChatUsability_ClientUsabilityMetrics_Notification_Metrics();

  CChatUsability_ClientUsabilityMetrics_Notification_Metrics(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from);

  inline CChatUsability_ClientUsabilityMetrics_Notification_Metrics& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_ClientUsabilityMetrics_Notification_Metrics(CChatUsability_ClientUsabilityMetrics_Notification_Metrics&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_Metrics() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_Metrics& operator=(CChatUsability_ClientUsabilityMetrics_Notification_Metrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_Metrics* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_Metrics*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_Metrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics* other);
  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics& a, CChatUsability_ClientUsabilityMetrics_Notification_Metrics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_ClientUsabilityMetrics_Notification_Metrics* New() const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(NULL);
  }

  CChatUsability_ClientUsabilityMetrics_Notification_Metrics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from);
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friends_count = 1;
  bool has_friends_count() const;
  void clear_friends_count();
  static const int kFriendsCountFieldNumber = 1;
  ::google::protobuf::int32 friends_count() const;
  void set_friends_count(::google::protobuf::int32 value);

  // optional int32 friends_category_count = 2;
  bool has_friends_category_count() const;
  void clear_friends_category_count();
  static const int kFriendsCategoryCountFieldNumber = 2;
  ::google::protobuf::int32 friends_category_count() const;
  void set_friends_category_count(::google::protobuf::int32 value);

  // optional int32 friends_categorized_count = 3;
  bool has_friends_categorized_count() const;
  void clear_friends_categorized_count();
  static const int kFriendsCategorizedCountFieldNumber = 3;
  ::google::protobuf::int32 friends_categorized_count() const;
  void set_friends_categorized_count(::google::protobuf::int32 value);

  // optional int32 friends_online_count = 4;
  bool has_friends_online_count() const;
  void clear_friends_online_count();
  static const int kFriendsOnlineCountFieldNumber = 4;
  ::google::protobuf::int32 friends_online_count() const;
  void set_friends_online_count(::google::protobuf::int32 value);

  // optional int32 friends_in_game_count = 5;
  bool has_friends_in_game_count() const;
  void clear_friends_in_game_count();
  static const int kFriendsInGameCountFieldNumber = 5;
  ::google::protobuf::int32 friends_in_game_count() const;
  void set_friends_in_game_count(::google::protobuf::int32 value);

  // optional int32 friends_in_game_singleton_count = 6;
  bool has_friends_in_game_singleton_count() const;
  void clear_friends_in_game_singleton_count();
  static const int kFriendsInGameSingletonCountFieldNumber = 6;
  ::google::protobuf::int32 friends_in_game_singleton_count() const;
  void set_friends_in_game_singleton_count(::google::protobuf::int32 value);

  // optional int32 game_group_count = 7;
  bool has_game_group_count() const;
  void clear_game_group_count();
  static const int kGameGroupCountFieldNumber = 7;
  ::google::protobuf::int32 game_group_count() const;
  void set_game_group_count(::google::protobuf::int32 value);

  // optional int32 friends_favorite_count = 8;
  bool has_friends_favorite_count() const;
  void clear_friends_favorite_count();
  static const int kFriendsFavoriteCountFieldNumber = 8;
  ::google::protobuf::int32 friends_favorite_count() const;
  void set_friends_favorite_count(::google::protobuf::int32 value);

  // optional int32 group_chat_count = 9;
  bool has_group_chat_count() const;
  void clear_group_chat_count();
  static const int kGroupChatCountFieldNumber = 9;
  ::google::protobuf::int32 group_chat_count() const;
  void set_group_chat_count(::google::protobuf::int32 value);

  // optional int32 group_chat_favorite_count = 10;
  bool has_group_chat_favorite_count() const;
  void clear_group_chat_favorite_count();
  static const int kGroupChatFavoriteCountFieldNumber = 10;
  ::google::protobuf::int32 group_chat_favorite_count() const;
  void set_group_chat_favorite_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.Metrics)
 private:
  void set_has_friends_count();
  void clear_has_friends_count();
  void set_has_friends_category_count();
  void clear_has_friends_category_count();
  void set_has_friends_categorized_count();
  void clear_has_friends_categorized_count();
  void set_has_friends_online_count();
  void clear_has_friends_online_count();
  void set_has_friends_in_game_count();
  void clear_has_friends_in_game_count();
  void set_has_friends_in_game_singleton_count();
  void clear_has_friends_in_game_singleton_count();
  void set_has_game_group_count();
  void clear_has_game_group_count();
  void set_has_friends_favorite_count();
  void clear_has_friends_favorite_count();
  void set_has_group_chat_count();
  void clear_has_group_chat_count();
  void set_has_group_chat_favorite_count();
  void clear_has_group_chat_favorite_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 friends_count_;
  ::google::protobuf::int32 friends_category_count_;
  ::google::protobuf::int32 friends_categorized_count_;
  ::google::protobuf::int32 friends_online_count_;
  ::google::protobuf::int32 friends_in_game_count_;
  ::google::protobuf::int32 friends_in_game_singleton_count_;
  ::google::protobuf::int32 game_group_count_;
  ::google::protobuf::int32 friends_favorite_count_;
  ::google::protobuf::int32 group_chat_count_;
  ::google::protobuf::int32 group_chat_favorite_count_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification) */ {
 public:
  CChatUsability_ClientUsabilityMetrics_Notification();
  virtual ~CChatUsability_ClientUsabilityMetrics_Notification();

  CChatUsability_ClientUsabilityMetrics_Notification(const CChatUsability_ClientUsabilityMetrics_Notification& from);

  inline CChatUsability_ClientUsabilityMetrics_Notification& operator=(const CChatUsability_ClientUsabilityMetrics_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_ClientUsabilityMetrics_Notification(CChatUsability_ClientUsabilityMetrics_Notification&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification& operator=(CChatUsability_ClientUsabilityMetrics_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_ClientUsabilityMetrics_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_ClientUsabilityMetrics_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(CChatUsability_ClientUsabilityMetrics_Notification* other);
  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification& a, CChatUsability_ClientUsabilityMetrics_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_ClientUsabilityMetrics_Notification* New() const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification>(NULL);
  }

  CChatUsability_ClientUsabilityMetrics_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification& from);
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatUsability_ClientUsabilityMetrics_Notification_Settings Settings;
  typedef CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings VoiceSettings;
  typedef CChatUsability_ClientUsabilityMetrics_Notification_UIState UIState;
  typedef CChatUsability_ClientUsabilityMetrics_Notification_Metrics Metrics;

  // accessors -------------------------------------------------------

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.Settings settings = 10;
  bool has_settings() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 10;
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& _internal_settings() const;
  public:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& settings() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* release_settings();
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* mutable_settings();
  void set_allocated_settings(::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings);

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings voice_settings = 11;
  bool has_voice_settings() const;
  void clear_voice_settings();
  static const int kVoiceSettingsFieldNumber = 11;
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& _internal_voice_settings() const;
  public:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& voice_settings() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* release_voice_settings();
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* mutable_voice_settings();
  void set_allocated_voice_settings(::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings);

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState ui_state = 12;
  bool has_ui_state() const;
  void clear_ui_state();
  static const int kUiStateFieldNumber = 12;
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& _internal_ui_state() const;
  public:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& ui_state() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* release_ui_state();
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* mutable_ui_state();
  void set_allocated_ui_state(::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state);

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.Metrics metrics = 13;
  bool has_metrics() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 13;
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& _internal_metrics() const;
  public:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& metrics() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* release_metrics();
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* mutable_metrics();
  void set_allocated_metrics(::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics);

  // optional uint32 metrics_run_id = 1;
  bool has_metrics_run_id() const;
  void clear_metrics_run_id();
  static const int kMetricsRunIdFieldNumber = 1;
  ::google::protobuf::uint32 metrics_run_id() const;
  void set_metrics_run_id(::google::protobuf::uint32 value);

  // optional uint32 client_build = 2;
  bool has_client_build() const;
  void clear_client_build();
  static const int kClientBuildFieldNumber = 2;
  ::google::protobuf::uint32 client_build() const;
  void set_client_build(::google::protobuf::uint32 value);

  // optional uint32 metrics_version = 3;
  bool has_metrics_version() const;
  void clear_metrics_version();
  static const int kMetricsVersionFieldNumber = 3;
  ::google::protobuf::uint32 metrics_version() const;
  void set_metrics_version(::google::protobuf::uint32 value);

  // optional bool in_web = 4;
  bool has_in_web() const;
  void clear_in_web();
  static const int kInWebFieldNumber = 4;
  bool in_web() const;
  void set_in_web(bool value);

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification)
 private:
  void set_has_metrics_run_id();
  void clear_has_metrics_run_id();
  void set_has_client_build();
  void clear_has_client_build();
  void set_has_metrics_version();
  void clear_has_metrics_version();
  void set_has_in_web();
  void clear_has_in_web();
  void set_has_settings();
  void clear_has_settings();
  void set_has_voice_settings();
  void clear_has_voice_settings();
  void set_has_ui_state();
  void clear_has_ui_state();
  void set_has_metrics();
  void clear_has_metrics();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics_;
  ::google::protobuf::uint32 metrics_run_id_;
  ::google::protobuf::uint32 client_build_;
  ::google::protobuf::uint32 metrics_version_;
  bool in_web_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CChatUsability_RequestClientUsabilityMetrics_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CChatUsability_RequestClientUsabilityMetrics_Notification) */ {
 public:
  CChatUsability_RequestClientUsabilityMetrics_Notification();
  virtual ~CChatUsability_RequestClientUsabilityMetrics_Notification();

  CChatUsability_RequestClientUsabilityMetrics_Notification(const CChatUsability_RequestClientUsabilityMetrics_Notification& from);

  inline CChatUsability_RequestClientUsabilityMetrics_Notification& operator=(const CChatUsability_RequestClientUsabilityMetrics_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CChatUsability_RequestClientUsabilityMetrics_Notification(CChatUsability_RequestClientUsabilityMetrics_Notification&& from) noexcept
    : CChatUsability_RequestClientUsabilityMetrics_Notification() {
    *this = ::std::move(from);
  }

  inline CChatUsability_RequestClientUsabilityMetrics_Notification& operator=(CChatUsability_RequestClientUsabilityMetrics_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CChatUsability_RequestClientUsabilityMetrics_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CChatUsability_RequestClientUsabilityMetrics_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_RequestClientUsabilityMetrics_Notification*>(
               &_CChatUsability_RequestClientUsabilityMetrics_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(CChatUsability_RequestClientUsabilityMetrics_Notification* other);
  friend void swap(CChatUsability_RequestClientUsabilityMetrics_Notification& a, CChatUsability_RequestClientUsabilityMetrics_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CChatUsability_RequestClientUsabilityMetrics_Notification* New() const final {
    return CreateMaybeMessage<CChatUsability_RequestClientUsabilityMetrics_Notification>(NULL);
  }

  CChatUsability_RequestClientUsabilityMetrics_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CChatUsability_RequestClientUsabilityMetrics_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CChatUsability_RequestClientUsabilityMetrics_Notification& from);
  void MergeFrom(const CChatUsability_RequestClientUsabilityMetrics_Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_RequestClientUsabilityMetrics_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 metrics_run_id = 1;
  bool has_metrics_run_id() const;
  void clear_metrics_run_id();
  static const int kMetricsRunIdFieldNumber = 1;
  ::google::protobuf::uint32 metrics_run_id() const;
  void set_metrics_run_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CChatUsability_RequestClientUsabilityMetrics_Notification)
 private:
  void set_has_metrics_run_id();
  void clear_has_metrics_run_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 metrics_run_id_;
  friend struct ::protobuf_steammessages_5fchat_2esteamclient_2eproto::TableStruct;
};
// ===================================================================

class Chat_Stub;

class Chat : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Chat() {};
 public:
  virtual ~Chat();

  typedef Chat_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void RequestFriendPersonaStates(::google::protobuf::RpcController* controller,
                       const ::CChat_RequestFriendPersonaStates_Request* request,
                       ::CChat_RequestFriendPersonaStates_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Chat);
};

class Chat_Stub : public Chat {
 public:
  Chat_Stub(::google::protobuf::RpcChannel* channel);
  Chat_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Chat_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Chat ------------------------------------------

  void RequestFriendPersonaStates(::google::protobuf::RpcController* controller,
                       const ::CChat_RequestFriendPersonaStates_Request* request,
                       ::CChat_RequestFriendPersonaStates_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Chat_Stub);
};


// -------------------------------------------------------------------

class ChatRoom_Stub;

class ChatRoom : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatRoom() {};
 public:
  virtual ~ChatRoom();

  typedef ChatRoom_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void CreateChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateChatRoomGroup_Request* request,
                       ::CChatRoom_CreateChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SaveChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SaveChatRoomGroup_Request* request,
                       ::CChatRoom_SaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RenameChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RenameChatRoomGroup_Request* request,
                       ::CChatRoom_RenameChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetChatRoomGroupTagline(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupTagline_Request* request,
                       ::CChatRoom_SetChatRoomGroupTagline_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetChatRoomGroupAvatar(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupAvatar_Request* request,
                       ::CChatRoom_SetChatRoomGroupAvatar_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetChatRoomGroupWatchingBroadcast(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* request,
                       ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void MuteUserInGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_MuteUser_Request* request,
                       ::CChatRoom_MuteUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void KickUserFromGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_KickUser_Request* request,
                       ::CChatRoom_KickUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetUserBanState(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetUserBanState_Request* request,
                       ::CChatRoom_SetUserBanState_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RevokeInviteToGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RevokeInvite_Request* request,
                       ::CChatRoom_RevokeInvite_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateRole_Request* request,
                       ::CChatRoom_CreateRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRoles(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetRoles_Request* request,
                       ::CChatRoom_GetRoles_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RenameRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RenameRole_Request* request,
                       ::CChatRoom_RenameRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReorderRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ReorderRole_Request* request,
                       ::CChatRoom_ReorderRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteRole_Request* request,
                       ::CChatRoom_DeleteRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRoleActions(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetRoleActions_Request* request,
                       ::CChatRoom_GetRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReplaceRoleActions(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ReplaceRoleActions_Request* request,
                       ::CChatRoom_ReplaceRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AddRoleToUser(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_AddRoleToUser_Request* request,
                       ::CChatRoom_AddRoleToUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRolesForUser(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetRolesForUser_Request* request,
                       ::CChatRoom_GetRolesForUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteRoleFromUser(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteRoleFromUser_Request* request,
                       ::CChatRoom_DeleteRoleFromUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void JoinChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_JoinChatRoomGroup_Request* request,
                       ::CChatRoom_JoinChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void InviteFriendToChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_InviteFriendToChatRoomGroup_Request* request,
                       ::CChatRoom_InviteFriendToChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void LeaveChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_LeaveChatRoomGroup_Request* request,
                       ::CChatRoom_LeaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateChatRoom_Request* request,
                       ::CChatRoom_CreateChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteChatRoom_Request* request,
                       ::CChatRoom_DeleteChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RenameChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RenameChatRoom_Request* request,
                       ::CChatRoom_RenameChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReorderChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ReorderChatRoom_Request* request,
                       ::CChatRoom_ReorderChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SendChatMessage(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SendChatMessage_Request* request,
                       ::CChatRoom_SendChatMessage_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void JoinVoiceChat(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_JoinVoiceChat_Request* request,
                       ::CChatRoom_JoinVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void LeaveVoiceChat(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_LeaveVoiceChat_Request* request,
                       ::CChatRoom_LeaveVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetMessageHistory(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetMessageHistory_Request* request,
                       ::CChatRoom_GetMessageHistory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetMyChatRoomGroups(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetMyChatRoomGroups_Request* request,
                       ::CChatRoom_GetMyChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetChatRoomGroupState(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupState_Request* request,
                       ::CChatRoom_GetChatRoomGroupState_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetChatRoomGroupSummary(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupSummary_Request* request,
                       ::CChatRoom_GetChatRoomGroupSummary_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AckChatMessage(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateInviteLink(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateInviteLink_Request* request,
                       ::CChatRoom_CreateInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteLinkInfo(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteLinkInfo_Request* request,
                       ::CChatRoom_GetInviteLinkInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteInfo(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteInfo_Request* request,
                       ::CChatRoom_GetInviteInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteLinksForGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteLinksForGroup_Request* request,
                       ::CChatRoom_GetInviteLinksForGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetBanList(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetBanList_Request* request,
                       ::CChatRoom_GetBanList_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteList(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteList_Request* request,
                       ::CChatRoom_GetInviteList_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteInviteLink(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteInviteLink_Request* request,
                       ::CChatRoom_DeleteInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetSessionActiveChatRoomGroups(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetSessionActiveChatRoomGroups_Request* request,
                       ::CChatRoom_SetSessionActiveChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetUserChatGroupPreferences(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetUserChatGroupPreferences_Request* request,
                       ::CChatRoom_SetUserChatGroupPreferences_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteChatMessages(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteChatMessages_Request* request,
                       ::CChatRoom_DeleteChatMessages_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoom);
};

class ChatRoom_Stub : public ChatRoom {
 public:
  ChatRoom_Stub(::google::protobuf::RpcChannel* channel);
  ChatRoom_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ChatRoom_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ChatRoom ------------------------------------------

  void CreateChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateChatRoomGroup_Request* request,
                       ::CChatRoom_CreateChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void SaveChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SaveChatRoomGroup_Request* request,
                       ::CChatRoom_SaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void RenameChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RenameChatRoomGroup_Request* request,
                       ::CChatRoom_RenameChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void SetChatRoomGroupTagline(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupTagline_Request* request,
                       ::CChatRoom_SetChatRoomGroupTagline_Response* response,
                       ::google::protobuf::Closure* done);
  void SetChatRoomGroupAvatar(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupAvatar_Request* request,
                       ::CChatRoom_SetChatRoomGroupAvatar_Response* response,
                       ::google::protobuf::Closure* done);
  void SetChatRoomGroupWatchingBroadcast(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* request,
                       ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* response,
                       ::google::protobuf::Closure* done);
  void MuteUserInGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_MuteUser_Request* request,
                       ::CChatRoom_MuteUser_Response* response,
                       ::google::protobuf::Closure* done);
  void KickUserFromGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_KickUser_Request* request,
                       ::CChatRoom_KickUser_Response* response,
                       ::google::protobuf::Closure* done);
  void SetUserBanState(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetUserBanState_Request* request,
                       ::CChatRoom_SetUserBanState_Response* response,
                       ::google::protobuf::Closure* done);
  void RevokeInviteToGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RevokeInvite_Request* request,
                       ::CChatRoom_RevokeInvite_Response* response,
                       ::google::protobuf::Closure* done);
  void CreateRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateRole_Request* request,
                       ::CChatRoom_CreateRole_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRoles(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetRoles_Request* request,
                       ::CChatRoom_GetRoles_Response* response,
                       ::google::protobuf::Closure* done);
  void RenameRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RenameRole_Request* request,
                       ::CChatRoom_RenameRole_Response* response,
                       ::google::protobuf::Closure* done);
  void ReorderRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ReorderRole_Request* request,
                       ::CChatRoom_ReorderRole_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteRole(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteRole_Request* request,
                       ::CChatRoom_DeleteRole_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRoleActions(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetRoleActions_Request* request,
                       ::CChatRoom_GetRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  void ReplaceRoleActions(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ReplaceRoleActions_Request* request,
                       ::CChatRoom_ReplaceRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  void AddRoleToUser(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_AddRoleToUser_Request* request,
                       ::CChatRoom_AddRoleToUser_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRolesForUser(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetRolesForUser_Request* request,
                       ::CChatRoom_GetRolesForUser_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteRoleFromUser(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteRoleFromUser_Request* request,
                       ::CChatRoom_DeleteRoleFromUser_Response* response,
                       ::google::protobuf::Closure* done);
  void JoinChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_JoinChatRoomGroup_Request* request,
                       ::CChatRoom_JoinChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void InviteFriendToChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_InviteFriendToChatRoomGroup_Request* request,
                       ::CChatRoom_InviteFriendToChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void LeaveChatRoomGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_LeaveChatRoomGroup_Request* request,
                       ::CChatRoom_LeaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void CreateChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateChatRoom_Request* request,
                       ::CChatRoom_CreateChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteChatRoom_Request* request,
                       ::CChatRoom_DeleteChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void RenameChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_RenameChatRoom_Request* request,
                       ::CChatRoom_RenameChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void ReorderChatRoom(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ReorderChatRoom_Request* request,
                       ::CChatRoom_ReorderChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void SendChatMessage(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SendChatMessage_Request* request,
                       ::CChatRoom_SendChatMessage_Response* response,
                       ::google::protobuf::Closure* done);
  void JoinVoiceChat(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_JoinVoiceChat_Request* request,
                       ::CChatRoom_JoinVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  void LeaveVoiceChat(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_LeaveVoiceChat_Request* request,
                       ::CChatRoom_LeaveVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  void GetMessageHistory(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetMessageHistory_Request* request,
                       ::CChatRoom_GetMessageHistory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetMyChatRoomGroups(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetMyChatRoomGroups_Request* request,
                       ::CChatRoom_GetMyChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  void GetChatRoomGroupState(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupState_Request* request,
                       ::CChatRoom_GetChatRoomGroupState_Response* response,
                       ::google::protobuf::Closure* done);
  void GetChatRoomGroupSummary(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupSummary_Request* request,
                       ::CChatRoom_GetChatRoomGroupSummary_Response* response,
                       ::google::protobuf::Closure* done);
  void AckChatMessage(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateInviteLink(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_CreateInviteLink_Request* request,
                       ::CChatRoom_CreateInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteLinkInfo(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteLinkInfo_Request* request,
                       ::CChatRoom_GetInviteLinkInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteInfo(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteInfo_Request* request,
                       ::CChatRoom_GetInviteInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteLinksForGroup(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteLinksForGroup_Request* request,
                       ::CChatRoom_GetInviteLinksForGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void GetBanList(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetBanList_Request* request,
                       ::CChatRoom_GetBanList_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteList(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_GetInviteList_Request* request,
                       ::CChatRoom_GetInviteList_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteInviteLink(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteInviteLink_Request* request,
                       ::CChatRoom_DeleteInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  void SetSessionActiveChatRoomGroups(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetSessionActiveChatRoomGroups_Request* request,
                       ::CChatRoom_SetSessionActiveChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  void SetUserChatGroupPreferences(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_SetUserChatGroupPreferences_Request* request,
                       ::CChatRoom_SetUserChatGroupPreferences_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteChatMessages(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_DeleteChatMessages_Request* request,
                       ::CChatRoom_DeleteChatMessages_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoom_Stub);
};


// -------------------------------------------------------------------

class ClanChatRooms_Stub;

class ClanChatRooms : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ClanChatRooms() {};
 public:
  virtual ~ClanChatRooms();

  typedef ClanChatRooms_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetClanChatRoomInfo(::google::protobuf::RpcController* controller,
                       const ::CClanChatRooms_GetClanChatRoomInfo_Request* request,
                       ::CClanChatRooms_GetClanChatRoomInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetClanChatRoomPrivate(::google::protobuf::RpcController* controller,
                       const ::CClanChatRooms_SetClanChatRoomPrivate_Request* request,
                       ::CClanChatRooms_SetClanChatRoomPrivate_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClanChatRooms);
};

class ClanChatRooms_Stub : public ClanChatRooms {
 public:
  ClanChatRooms_Stub(::google::protobuf::RpcChannel* channel);
  ClanChatRooms_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ClanChatRooms_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ClanChatRooms ------------------------------------------

  void GetClanChatRoomInfo(::google::protobuf::RpcController* controller,
                       const ::CClanChatRooms_GetClanChatRoomInfo_Request* request,
                       ::CClanChatRooms_GetClanChatRoomInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void SetClanChatRoomPrivate(::google::protobuf::RpcController* controller,
                       const ::CClanChatRooms_SetClanChatRoomPrivate_Request* request,
                       ::CClanChatRooms_SetClanChatRoomPrivate_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClanChatRooms_Stub);
};


// -------------------------------------------------------------------

class ChatRoomClient_Stub;

class ChatRoomClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatRoomClient() {};
 public:
  virtual ~ChatRoomClient();

  typedef ChatRoomClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyIncomingChatMessage(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_IncomingChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatMessageModified(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ChatMessageModified_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyMemberStateChange(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_MemberStateChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatRoomHeaderStateChange(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ChatRoomHeaderState_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatRoomGroupRoomsChange(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ChatRoomGroupRoomsChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyShouldRejoinChatRoomVoiceChat(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatGroupUserStateChanged(::google::protobuf::RpcController* controller,
                       const ::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyAckChatMessageEcho(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoomClient);
};

class ChatRoomClient_Stub : public ChatRoomClient {
 public:
  ChatRoomClient_Stub(::google::protobuf::RpcChannel* channel);
  ChatRoomClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ChatRoomClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ChatRoomClient ------------------------------------------

  void NotifyIncomingChatMessage(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_IncomingChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatMessageModified(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ChatMessageModified_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyMemberStateChange(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_MemberStateChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatRoomHeaderStateChange(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ChatRoomHeaderState_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatRoomGroupRoomsChange(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_ChatRoomGroupRoomsChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyShouldRejoinChatRoomVoiceChat(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatGroupUserStateChanged(::google::protobuf::RpcController* controller,
                       const ::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyAckChatMessageEcho(::google::protobuf::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoomClient_Stub);
};


// -------------------------------------------------------------------

class ChatUsability_Stub;

class ChatUsability : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatUsability() {};
 public:
  virtual ~ChatUsability();

  typedef ChatUsability_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyClientUsabilityMetrics(::google::protobuf::RpcController* controller,
                       const ::CChatUsability_ClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsability);
};

class ChatUsability_Stub : public ChatUsability {
 public:
  ChatUsability_Stub(::google::protobuf::RpcChannel* channel);
  ChatUsability_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ChatUsability_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ChatUsability ------------------------------------------

  void NotifyClientUsabilityMetrics(::google::protobuf::RpcController* controller,
                       const ::CChatUsability_ClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsability_Stub);
};


// -------------------------------------------------------------------

class ChatUsabilityClient_Stub;

class ChatUsabilityClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatUsabilityClient() {};
 public:
  virtual ~ChatUsabilityClient();

  typedef ChatUsabilityClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyRequestClientUsabilityMetrics(::google::protobuf::RpcController* controller,
                       const ::CChatUsability_RequestClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsabilityClient);
};

class ChatUsabilityClient_Stub : public ChatUsabilityClient {
 public:
  ChatUsabilityClient_Stub(::google::protobuf::RpcChannel* channel);
  ChatUsabilityClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ChatUsabilityClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ChatUsabilityClient ------------------------------------------

  void NotifyRequestClientUsabilityMetrics(::google::protobuf::RpcController* controller,
                       const ::CChatUsability_RequestClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsabilityClient_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CChat_RequestFriendPersonaStates_Request

// -------------------------------------------------------------------

// CChat_RequestFriendPersonaStates_Response

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoomGroup_Request

// optional fixed64 steamid_partner = 1;
inline bool CChatRoom_CreateChatRoomGroup_Request::has_steamid_partner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_has_steamid_partner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_has_steamid_partner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_steamid_partner() {
  steamid_partner_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_partner();
}
inline ::google::protobuf::uint64 CChatRoom_CreateChatRoomGroup_Request::steamid_partner() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.steamid_partner)
  return steamid_partner_;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_steamid_partner(::google::protobuf::uint64 value) {
  set_has_steamid_partner();
  steamid_partner_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.steamid_partner)
}

// optional fixed64 steamid_invited = 2;
inline bool CChatRoom_CreateChatRoomGroup_Request::has_steamid_invited() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_has_steamid_invited() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_has_steamid_invited() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_steamid_invited() {
  steamid_invited_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_invited();
}
inline ::google::protobuf::uint64 CChatRoom_CreateChatRoomGroup_Request::steamid_invited() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.steamid_invited)
  return steamid_invited_;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_steamid_invited(::google::protobuf::uint64 value) {
  set_has_steamid_invited();
  steamid_invited_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.steamid_invited)
}

// optional string name = 3;
inline bool CChatRoom_CreateChatRoomGroup_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_CreateChatRoomGroup_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_CreateChatRoomGroup_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_CreateChatRoomGroup_Request.name)
}
#endif
inline void CChatRoom_CreateChatRoomGroup_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_CreateChatRoomGroup_Request.name)
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_CreateChatRoomGroup_Request.name)
}
inline ::std::string* CChatRoom_CreateChatRoomGroup_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoomGroup_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_CreateChatRoomGroup_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoomGroup_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoomGroup_Request.name)
}

// repeated fixed64 steamid_invitees = 4;
inline int CChatRoom_CreateChatRoomGroup_Request::steamid_invitees_size() const {
  return steamid_invitees_.size();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_steamid_invitees() {
  steamid_invitees_.Clear();
}
inline ::google::protobuf::uint64 CChatRoom_CreateChatRoomGroup_Request::steamid_invitees(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
  return steamid_invitees_.Get(index);
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_steamid_invitees(int index, ::google::protobuf::uint64 value) {
  steamid_invitees_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
}
inline void CChatRoom_CreateChatRoomGroup_Request::add_steamid_invitees(::google::protobuf::uint64 value) {
  steamid_invitees_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CChatRoom_CreateChatRoomGroup_Request::steamid_invitees() const {
  // @@protoc_insertion_point(field_list:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
  return steamid_invitees_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CChatRoom_CreateChatRoomGroup_Request::mutable_steamid_invitees() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
  return &steamid_invitees_;
}

// optional uint32 watching_broadcast_accountid = 6;
inline bool CChatRoom_CreateChatRoomGroup_Request::has_watching_broadcast_accountid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_has_watching_broadcast_accountid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_has_watching_broadcast_accountid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  clear_has_watching_broadcast_accountid();
}
inline ::google::protobuf::uint32 CChatRoom_CreateChatRoomGroup_Request::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.watching_broadcast_accountid)
  return watching_broadcast_accountid_;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_watching_broadcast_accountid(::google::protobuf::uint32 value) {
  set_has_watching_broadcast_accountid();
  watching_broadcast_accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.watching_broadcast_accountid)
}

// -------------------------------------------------------------------

// CChatRole

// optional uint64 role_id = 1;
inline bool CChatRole::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRole::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRole::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRole::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRole::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRole.role_id)
  return role_id_;
}
inline void CChatRole::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRole.role_id)
}

// optional string name = 2;
inline bool CChatRole::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRole::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRole::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRole::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRole::name() const {
  // @@protoc_insertion_point(field_get:CChatRole.name)
  return name_.GetNoArena();
}
inline void CChatRole::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRole.name)
}
#if LANG_CXX11
inline void CChatRole::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRole.name)
}
#endif
inline void CChatRole::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRole.name)
}
inline void CChatRole::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRole.name)
}
inline ::std::string* CChatRole::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRole.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRole::release_name() {
  // @@protoc_insertion_point(field_release:CChatRole.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRole::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRole.name)
}

// optional uint32 ordinal = 3;
inline bool CChatRole::has_ordinal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRole::set_has_ordinal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRole::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRole::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRole::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRole.ordinal)
  return ordinal_;
}
inline void CChatRole::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRole.ordinal)
}

// -------------------------------------------------------------------

// CChatRoleActions

// optional uint64 role_id = 1;
inline bool CChatRoleActions::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoleActions::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoleActions::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoleActions::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoleActions::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.role_id)
  return role_id_;
}
inline void CChatRoleActions::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.role_id)
}

// optional bool can_create_rename_delete_channel = 2;
inline bool CChatRoleActions::has_can_create_rename_delete_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoleActions::set_has_can_create_rename_delete_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoleActions::clear_has_can_create_rename_delete_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoleActions::clear_can_create_rename_delete_channel() {
  can_create_rename_delete_channel_ = false;
  clear_has_can_create_rename_delete_channel();
}
inline bool CChatRoleActions::can_create_rename_delete_channel() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_create_rename_delete_channel)
  return can_create_rename_delete_channel_;
}
inline void CChatRoleActions::set_can_create_rename_delete_channel(bool value) {
  set_has_can_create_rename_delete_channel();
  can_create_rename_delete_channel_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_create_rename_delete_channel)
}

// optional bool can_kick = 3;
inline bool CChatRoleActions::has_can_kick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoleActions::set_has_can_kick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoleActions::clear_has_can_kick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoleActions::clear_can_kick() {
  can_kick_ = false;
  clear_has_can_kick();
}
inline bool CChatRoleActions::can_kick() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_kick)
  return can_kick_;
}
inline void CChatRoleActions::set_can_kick(bool value) {
  set_has_can_kick();
  can_kick_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_kick)
}

// optional bool can_ban = 4;
inline bool CChatRoleActions::has_can_ban() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoleActions::set_has_can_ban() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoleActions::clear_has_can_ban() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoleActions::clear_can_ban() {
  can_ban_ = false;
  clear_has_can_ban();
}
inline bool CChatRoleActions::can_ban() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_ban)
  return can_ban_;
}
inline void CChatRoleActions::set_can_ban(bool value) {
  set_has_can_ban();
  can_ban_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_ban)
}

// optional bool can_invite = 5;
inline bool CChatRoleActions::has_can_invite() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoleActions::set_has_can_invite() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoleActions::clear_has_can_invite() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoleActions::clear_can_invite() {
  can_invite_ = false;
  clear_has_can_invite();
}
inline bool CChatRoleActions::can_invite() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_invite)
  return can_invite_;
}
inline void CChatRoleActions::set_can_invite(bool value) {
  set_has_can_invite();
  can_invite_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_invite)
}

// optional bool can_change_tagline_avatar_name = 6;
inline bool CChatRoleActions::has_can_change_tagline_avatar_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoleActions::set_has_can_change_tagline_avatar_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoleActions::clear_has_can_change_tagline_avatar_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoleActions::clear_can_change_tagline_avatar_name() {
  can_change_tagline_avatar_name_ = false;
  clear_has_can_change_tagline_avatar_name();
}
inline bool CChatRoleActions::can_change_tagline_avatar_name() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_change_tagline_avatar_name)
  return can_change_tagline_avatar_name_;
}
inline void CChatRoleActions::set_can_change_tagline_avatar_name(bool value) {
  set_has_can_change_tagline_avatar_name();
  can_change_tagline_avatar_name_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_change_tagline_avatar_name)
}

// optional bool can_chat = 7;
inline bool CChatRoleActions::has_can_chat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatRoleActions::set_has_can_chat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatRoleActions::clear_has_can_chat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatRoleActions::clear_can_chat() {
  can_chat_ = false;
  clear_has_can_chat();
}
inline bool CChatRoleActions::can_chat() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_chat)
  return can_chat_;
}
inline void CChatRoleActions::set_can_chat(bool value) {
  set_has_can_chat();
  can_chat_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_chat)
}

// optional bool can_view_history = 8;
inline bool CChatRoleActions::has_can_view_history() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatRoleActions::set_has_can_view_history() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatRoleActions::clear_has_can_view_history() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatRoleActions::clear_can_view_history() {
  can_view_history_ = false;
  clear_has_can_view_history();
}
inline bool CChatRoleActions::can_view_history() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_view_history)
  return can_view_history_;
}
inline void CChatRoleActions::set_can_view_history(bool value) {
  set_has_can_view_history();
  can_view_history_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_view_history)
}

// optional bool can_change_group_roles = 9;
inline bool CChatRoleActions::has_can_change_group_roles() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatRoleActions::set_has_can_change_group_roles() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatRoleActions::clear_has_can_change_group_roles() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatRoleActions::clear_can_change_group_roles() {
  can_change_group_roles_ = false;
  clear_has_can_change_group_roles();
}
inline bool CChatRoleActions::can_change_group_roles() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_change_group_roles)
  return can_change_group_roles_;
}
inline void CChatRoleActions::set_can_change_group_roles(bool value) {
  set_has_can_change_group_roles();
  can_change_group_roles_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_change_group_roles)
}

// optional bool can_change_user_roles = 10;
inline bool CChatRoleActions::has_can_change_user_roles() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CChatRoleActions::set_has_can_change_user_roles() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CChatRoleActions::clear_has_can_change_user_roles() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CChatRoleActions::clear_can_change_user_roles() {
  can_change_user_roles_ = false;
  clear_has_can_change_user_roles();
}
inline bool CChatRoleActions::can_change_user_roles() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_change_user_roles)
  return can_change_user_roles_;
}
inline void CChatRoleActions::set_can_change_user_roles(bool value) {
  set_has_can_change_user_roles();
  can_change_user_roles_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_change_user_roles)
}

// optional bool can_mention_all = 11;
inline bool CChatRoleActions::has_can_mention_all() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CChatRoleActions::set_has_can_mention_all() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CChatRoleActions::clear_has_can_mention_all() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CChatRoleActions::clear_can_mention_all() {
  can_mention_all_ = false;
  clear_has_can_mention_all();
}
inline bool CChatRoleActions::can_mention_all() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_mention_all)
  return can_mention_all_;
}
inline void CChatRoleActions::set_can_mention_all(bool value) {
  set_has_can_mention_all();
  can_mention_all_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_mention_all)
}

// optional bool can_set_watching_broadcast = 12;
inline bool CChatRoleActions::has_can_set_watching_broadcast() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CChatRoleActions::set_has_can_set_watching_broadcast() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CChatRoleActions::clear_has_can_set_watching_broadcast() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CChatRoleActions::clear_can_set_watching_broadcast() {
  can_set_watching_broadcast_ = false;
  clear_has_can_set_watching_broadcast();
}
inline bool CChatRoleActions::can_set_watching_broadcast() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_set_watching_broadcast)
  return can_set_watching_broadcast_;
}
inline void CChatRoleActions::set_can_set_watching_broadcast(bool value) {
  set_has_can_set_watching_broadcast();
  can_set_watching_broadcast_ = value;
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_set_watching_broadcast)
}

// -------------------------------------------------------------------

// CChatPartyBeacon

// optional uint32 app_id = 1;
inline bool CChatPartyBeacon::has_app_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatPartyBeacon::set_has_app_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatPartyBeacon::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatPartyBeacon::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CChatPartyBeacon::app_id() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.app_id)
  return app_id_;
}
inline void CChatPartyBeacon::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.app_id)
}

// optional fixed64 steamid_owner = 2;
inline bool CChatPartyBeacon::has_steamid_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatPartyBeacon::set_has_steamid_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatPartyBeacon::clear_has_steamid_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatPartyBeacon::clear_steamid_owner() {
  steamid_owner_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_owner();
}
inline ::google::protobuf::uint64 CChatPartyBeacon::steamid_owner() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.steamid_owner)
  return steamid_owner_;
}
inline void CChatPartyBeacon::set_steamid_owner(::google::protobuf::uint64 value) {
  set_has_steamid_owner();
  steamid_owner_ = value;
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.steamid_owner)
}

// optional fixed64 beacon_id = 3;
inline bool CChatPartyBeacon::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatPartyBeacon::set_has_beacon_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatPartyBeacon::clear_has_beacon_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatPartyBeacon::clear_beacon_id() {
  beacon_id_ = GOOGLE_ULONGLONG(0);
  clear_has_beacon_id();
}
inline ::google::protobuf::uint64 CChatPartyBeacon::beacon_id() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.beacon_id)
  return beacon_id_;
}
inline void CChatPartyBeacon::set_beacon_id(::google::protobuf::uint64 value) {
  set_has_beacon_id();
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.beacon_id)
}

// optional string game_metadata = 4;
inline bool CChatPartyBeacon::has_game_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatPartyBeacon::set_has_game_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatPartyBeacon::clear_has_game_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatPartyBeacon::clear_game_metadata() {
  game_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_metadata();
}
inline const ::std::string& CChatPartyBeacon::game_metadata() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.game_metadata)
  return game_metadata_.GetNoArena();
}
inline void CChatPartyBeacon::set_game_metadata(const ::std::string& value) {
  set_has_game_metadata();
  game_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.game_metadata)
}
#if LANG_CXX11
inline void CChatPartyBeacon::set_game_metadata(::std::string&& value) {
  set_has_game_metadata();
  game_metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatPartyBeacon.game_metadata)
}
#endif
inline void CChatPartyBeacon::set_game_metadata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_metadata();
  game_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatPartyBeacon.game_metadata)
}
inline void CChatPartyBeacon::set_game_metadata(const char* value, size_t size) {
  set_has_game_metadata();
  game_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatPartyBeacon.game_metadata)
}
inline ::std::string* CChatPartyBeacon::mutable_game_metadata() {
  set_has_game_metadata();
  // @@protoc_insertion_point(field_mutable:CChatPartyBeacon.game_metadata)
  return game_metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatPartyBeacon::release_game_metadata() {
  // @@protoc_insertion_point(field_release:CChatPartyBeacon.game_metadata)
  if (!has_game_metadata()) {
    return NULL;
  }
  clear_has_game_metadata();
  return game_metadata_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatPartyBeacon::set_allocated_game_metadata(::std::string* game_metadata) {
  if (game_metadata != NULL) {
    set_has_game_metadata();
  } else {
    clear_has_game_metadata();
  }
  game_metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_metadata);
  // @@protoc_insertion_point(field_set_allocated:CChatPartyBeacon.game_metadata)
}

// -------------------------------------------------------------------

// CChatRoomGroupHeaderState

// optional uint64 chat_group_id = 1;
inline bool CChatRoomGroupHeaderState::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoomGroupHeaderState::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoomGroupHeaderState::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoomGroupHeaderState::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoomGroupHeaderState::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.chat_group_id)
}

// optional string chat_name = 2;
inline bool CChatRoomGroupHeaderState::has_chat_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_chat_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoomGroupHeaderState::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoomGroupHeaderState::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& CChatRoomGroupHeaderState::chat_name() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.chat_name)
  return chat_name_.GetNoArena();
}
inline void CChatRoomGroupHeaderState::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.chat_name)
}
#if LANG_CXX11
inline void CChatRoomGroupHeaderState::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoomGroupHeaderState.chat_name)
}
#endif
inline void CChatRoomGroupHeaderState::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoomGroupHeaderState.chat_name)
}
inline void CChatRoomGroupHeaderState::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoomGroupHeaderState.chat_name)
}
inline ::std::string* CChatRoomGroupHeaderState::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoomGroupHeaderState::release_chat_name() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.chat_name)
  if (!has_chat_name()) {
    return NULL;
  }
  clear_has_chat_name();
  return chat_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoomGroupHeaderState::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.chat_name)
}

// optional uint32 clanid = 13;
inline bool CChatRoomGroupHeaderState::has_clanid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_clanid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoomGroupHeaderState::clear_has_clanid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoomGroupHeaderState::clear_clanid() {
  clanid_ = 0u;
  clear_has_clanid();
}
inline ::google::protobuf::uint32 CChatRoomGroupHeaderState::clanid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.clanid)
  return clanid_;
}
inline void CChatRoomGroupHeaderState::set_clanid(::google::protobuf::uint32 value) {
  set_has_clanid();
  clanid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.clanid)
}

// optional uint32 accountid_owner = 14;
inline bool CChatRoomGroupHeaderState::has_accountid_owner() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_accountid_owner() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoomGroupHeaderState::clear_has_accountid_owner() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoomGroupHeaderState::clear_accountid_owner() {
  accountid_owner_ = 0u;
  clear_has_accountid_owner();
}
inline ::google::protobuf::uint32 CChatRoomGroupHeaderState::accountid_owner() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.accountid_owner)
  return accountid_owner_;
}
inline void CChatRoomGroupHeaderState::set_accountid_owner(::google::protobuf::uint32 value) {
  set_has_accountid_owner();
  accountid_owner_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.accountid_owner)
}

// optional uint32 appid = 21;
inline bool CChatRoomGroupHeaderState::has_appid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_appid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatRoomGroupHeaderState::clear_has_appid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatRoomGroupHeaderState::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CChatRoomGroupHeaderState::appid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.appid)
  return appid_;
}
inline void CChatRoomGroupHeaderState::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.appid)
}

// optional string tagline = 15;
inline bool CChatRoomGroupHeaderState::has_tagline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_tagline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoomGroupHeaderState::clear_has_tagline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoomGroupHeaderState::clear_tagline() {
  tagline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagline();
}
inline const ::std::string& CChatRoomGroupHeaderState::tagline() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.tagline)
  return tagline_.GetNoArena();
}
inline void CChatRoomGroupHeaderState::set_tagline(const ::std::string& value) {
  set_has_tagline();
  tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.tagline)
}
#if LANG_CXX11
inline void CChatRoomGroupHeaderState::set_tagline(::std::string&& value) {
  set_has_tagline();
  tagline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoomGroupHeaderState.tagline)
}
#endif
inline void CChatRoomGroupHeaderState::set_tagline(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tagline();
  tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoomGroupHeaderState.tagline)
}
inline void CChatRoomGroupHeaderState::set_tagline(const char* value, size_t size) {
  set_has_tagline();
  tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoomGroupHeaderState.tagline)
}
inline ::std::string* CChatRoomGroupHeaderState::mutable_tagline() {
  set_has_tagline();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.tagline)
  return tagline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoomGroupHeaderState::release_tagline() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.tagline)
  if (!has_tagline()) {
    return NULL;
  }
  clear_has_tagline();
  return tagline_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoomGroupHeaderState::set_allocated_tagline(::std::string* tagline) {
  if (tagline != NULL) {
    set_has_tagline();
  } else {
    clear_has_tagline();
  }
  tagline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagline);
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.tagline)
}

// optional bytes avatar_sha = 16;
inline bool CChatRoomGroupHeaderState::has_avatar_sha() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_avatar_sha() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoomGroupHeaderState::clear_has_avatar_sha() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoomGroupHeaderState::clear_avatar_sha() {
  avatar_sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar_sha();
}
inline const ::std::string& CChatRoomGroupHeaderState::avatar_sha() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.avatar_sha)
  return avatar_sha_.GetNoArena();
}
inline void CChatRoomGroupHeaderState::set_avatar_sha(const ::std::string& value) {
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.avatar_sha)
}
#if LANG_CXX11
inline void CChatRoomGroupHeaderState::set_avatar_sha(::std::string&& value) {
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoomGroupHeaderState.avatar_sha)
}
#endif
inline void CChatRoomGroupHeaderState::set_avatar_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoomGroupHeaderState.avatar_sha)
}
inline void CChatRoomGroupHeaderState::set_avatar_sha(const void* value, size_t size) {
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoomGroupHeaderState.avatar_sha)
}
inline ::std::string* CChatRoomGroupHeaderState::mutable_avatar_sha() {
  set_has_avatar_sha();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.avatar_sha)
  return avatar_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoomGroupHeaderState::release_avatar_sha() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.avatar_sha)
  if (!has_avatar_sha()) {
    return NULL;
  }
  clear_has_avatar_sha();
  return avatar_sha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoomGroupHeaderState::set_allocated_avatar_sha(::std::string* avatar_sha) {
  if (avatar_sha != NULL) {
    set_has_avatar_sha();
  } else {
    clear_has_avatar_sha();
  }
  avatar_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_sha);
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.avatar_sha)
}

// optional uint64 default_role_id = 17;
inline bool CChatRoomGroupHeaderState::has_default_role_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_default_role_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatRoomGroupHeaderState::clear_has_default_role_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatRoomGroupHeaderState::clear_default_role_id() {
  default_role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_default_role_id();
}
inline ::google::protobuf::uint64 CChatRoomGroupHeaderState::default_role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.default_role_id)
  return default_role_id_;
}
inline void CChatRoomGroupHeaderState::set_default_role_id(::google::protobuf::uint64 value) {
  set_has_default_role_id();
  default_role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.default_role_id)
}

// repeated .CChatRole roles = 18;
inline int CChatRoomGroupHeaderState::roles_size() const {
  return roles_.size();
}
inline void CChatRoomGroupHeaderState::clear_roles() {
  roles_.Clear();
}
inline ::CChatRole* CChatRoomGroupHeaderState::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRole >*
CChatRoomGroupHeaderState::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupHeaderState.roles)
  return &roles_;
}
inline const ::CChatRole& CChatRoomGroupHeaderState::roles(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.roles)
  return roles_.Get(index);
}
inline ::CChatRole* CChatRoomGroupHeaderState::add_roles() {
  // @@protoc_insertion_point(field_add:CChatRoomGroupHeaderState.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRole >&
CChatRoomGroupHeaderState::roles() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupHeaderState.roles)
  return roles_;
}

// repeated .CChatRoleActions role_actions = 19;
inline int CChatRoomGroupHeaderState::role_actions_size() const {
  return role_actions_.size();
}
inline void CChatRoomGroupHeaderState::clear_role_actions() {
  role_actions_.Clear();
}
inline ::CChatRoleActions* CChatRoomGroupHeaderState::mutable_role_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.role_actions)
  return role_actions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >*
CChatRoomGroupHeaderState::mutable_role_actions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupHeaderState.role_actions)
  return &role_actions_;
}
inline const ::CChatRoleActions& CChatRoomGroupHeaderState::role_actions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.role_actions)
  return role_actions_.Get(index);
}
inline ::CChatRoleActions* CChatRoomGroupHeaderState::add_role_actions() {
  // @@protoc_insertion_point(field_add:CChatRoomGroupHeaderState.role_actions)
  return role_actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >&
CChatRoomGroupHeaderState::role_actions() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupHeaderState.role_actions)
  return role_actions_;
}

// optional uint32 watching_broadcast_accountid = 20;
inline bool CChatRoomGroupHeaderState::has_watching_broadcast_accountid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatRoomGroupHeaderState::set_has_watching_broadcast_accountid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatRoomGroupHeaderState::clear_has_watching_broadcast_accountid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatRoomGroupHeaderState::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  clear_has_watching_broadcast_accountid();
}
inline ::google::protobuf::uint32 CChatRoomGroupHeaderState::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.watching_broadcast_accountid)
  return watching_broadcast_accountid_;
}
inline void CChatRoomGroupHeaderState::set_watching_broadcast_accountid(::google::protobuf::uint32 value) {
  set_has_watching_broadcast_accountid();
  watching_broadcast_accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.watching_broadcast_accountid)
}

// repeated .CChatPartyBeacon party_beacons = 22;
inline int CChatRoomGroupHeaderState::party_beacons_size() const {
  return party_beacons_.size();
}
inline void CChatRoomGroupHeaderState::clear_party_beacons() {
  party_beacons_.Clear();
}
inline ::CChatPartyBeacon* CChatRoomGroupHeaderState::mutable_party_beacons(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.party_beacons)
  return party_beacons_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >*
CChatRoomGroupHeaderState::mutable_party_beacons() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupHeaderState.party_beacons)
  return &party_beacons_;
}
inline const ::CChatPartyBeacon& CChatRoomGroupHeaderState::party_beacons(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.party_beacons)
  return party_beacons_.Get(index);
}
inline ::CChatPartyBeacon* CChatRoomGroupHeaderState::add_party_beacons() {
  // @@protoc_insertion_point(field_add:CChatRoomGroupHeaderState.party_beacons)
  return party_beacons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >&
CChatRoomGroupHeaderState::party_beacons() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupHeaderState.party_beacons)
  return party_beacons_;
}

// -------------------------------------------------------------------

// CChatRoomMember

// optional uint32 accountid = 1;
inline bool CChatRoomMember::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoomMember::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoomMember::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoomMember::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CChatRoomMember::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.accountid)
  return accountid_;
}
inline void CChatRoomMember::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomMember.accountid)
}

// optional .EChatRoomJoinState state = 3 [default = k_EChatRoomJoinState_Default];
inline bool CChatRoomMember::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoomMember::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoomMember::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoomMember::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::EChatRoomJoinState CChatRoomMember::state() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.state)
  return static_cast< ::EChatRoomJoinState >(state_);
}
inline void CChatRoomMember::set_state(::EChatRoomJoinState value) {
  assert(::EChatRoomJoinState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomMember.state)
}

// optional .EChatRoomGroupRank rank = 4 [default = k_EChatRoomGroupRank_Default];
inline bool CChatRoomMember::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoomMember::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoomMember::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoomMember::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::EChatRoomGroupRank CChatRoomMember::rank() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.rank)
  return static_cast< ::EChatRoomGroupRank >(rank_);
}
inline void CChatRoomMember::set_rank(::EChatRoomGroupRank value) {
  assert(::EChatRoomGroupRank_IsValid(value));
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomMember.rank)
}

// optional uint32 time_kick_expire = 6;
inline bool CChatRoomMember::has_time_kick_expire() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoomMember::set_has_time_kick_expire() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoomMember::clear_has_time_kick_expire() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoomMember::clear_time_kick_expire() {
  time_kick_expire_ = 0u;
  clear_has_time_kick_expire();
}
inline ::google::protobuf::uint32 CChatRoomMember::time_kick_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.time_kick_expire)
  return time_kick_expire_;
}
inline void CChatRoomMember::set_time_kick_expire(::google::protobuf::uint32 value) {
  set_has_time_kick_expire();
  time_kick_expire_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomMember.time_kick_expire)
}

// repeated uint64 role_ids = 7;
inline int CChatRoomMember::role_ids_size() const {
  return role_ids_.size();
}
inline void CChatRoomMember::clear_role_ids() {
  role_ids_.Clear();
}
inline ::google::protobuf::uint64 CChatRoomMember::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.role_ids)
  return role_ids_.Get(index);
}
inline void CChatRoomMember::set_role_ids(int index, ::google::protobuf::uint64 value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoomMember.role_ids)
}
inline void CChatRoomMember::add_role_ids(::google::protobuf::uint64 value) {
  role_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoomMember.role_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CChatRoomMember::role_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoomMember.role_ids)
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CChatRoomMember::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomMember.role_ids)
  return &role_ids_;
}

// -------------------------------------------------------------------

// CChatRoomState

// optional uint64 chat_id = 1;
inline bool CChatRoomState::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoomState::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoomState::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoomState::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoomState::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.chat_id)
  return chat_id_;
}
inline void CChatRoomState::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomState.chat_id)
}

// optional string chat_name = 2;
inline bool CChatRoomState::has_chat_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoomState::set_has_chat_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoomState::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoomState::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& CChatRoomState::chat_name() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.chat_name)
  return chat_name_.GetNoArena();
}
inline void CChatRoomState::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoomState.chat_name)
}
#if LANG_CXX11
inline void CChatRoomState::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoomState.chat_name)
}
#endif
inline void CChatRoomState::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoomState.chat_name)
}
inline void CChatRoomState::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoomState.chat_name)
}
inline ::std::string* CChatRoomState::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:CChatRoomState.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoomState::release_chat_name() {
  // @@protoc_insertion_point(field_release:CChatRoomState.chat_name)
  if (!has_chat_name()) {
    return NULL;
  }
  clear_has_chat_name();
  return chat_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoomState::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoomState.chat_name)
}

// optional bool voice_allowed = 3;
inline bool CChatRoomState::has_voice_allowed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoomState::set_has_voice_allowed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoomState::clear_has_voice_allowed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoomState::clear_voice_allowed() {
  voice_allowed_ = false;
  clear_has_voice_allowed();
}
inline bool CChatRoomState::voice_allowed() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.voice_allowed)
  return voice_allowed_;
}
inline void CChatRoomState::set_voice_allowed(bool value) {
  set_has_voice_allowed();
  voice_allowed_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomState.voice_allowed)
}

// repeated uint32 members_in_voice = 4;
inline int CChatRoomState::members_in_voice_size() const {
  return members_in_voice_.size();
}
inline void CChatRoomState::clear_members_in_voice() {
  members_in_voice_.Clear();
}
inline ::google::protobuf::uint32 CChatRoomState::members_in_voice(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomState.members_in_voice)
  return members_in_voice_.Get(index);
}
inline void CChatRoomState::set_members_in_voice(int index, ::google::protobuf::uint32 value) {
  members_in_voice_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoomState.members_in_voice)
}
inline void CChatRoomState::add_members_in_voice(::google::protobuf::uint32 value) {
  members_in_voice_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoomState.members_in_voice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CChatRoomState::members_in_voice() const {
  // @@protoc_insertion_point(field_list:CChatRoomState.members_in_voice)
  return members_in_voice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CChatRoomState::mutable_members_in_voice() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomState.members_in_voice)
  return &members_in_voice_;
}

// optional uint32 time_last_message = 5;
inline bool CChatRoomState::has_time_last_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoomState::set_has_time_last_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoomState::clear_has_time_last_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoomState::clear_time_last_message() {
  time_last_message_ = 0u;
  clear_has_time_last_message();
}
inline ::google::protobuf::uint32 CChatRoomState::time_last_message() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.time_last_message)
  return time_last_message_;
}
inline void CChatRoomState::set_time_last_message(::google::protobuf::uint32 value) {
  set_has_time_last_message();
  time_last_message_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomState.time_last_message)
}

// optional uint32 sort_order = 6;
inline bool CChatRoomState::has_sort_order() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoomState::set_has_sort_order() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoomState::clear_has_sort_order() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoomState::clear_sort_order() {
  sort_order_ = 0u;
  clear_has_sort_order();
}
inline ::google::protobuf::uint32 CChatRoomState::sort_order() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.sort_order)
  return sort_order_;
}
inline void CChatRoomState::set_sort_order(::google::protobuf::uint32 value) {
  set_has_sort_order();
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomState.sort_order)
}

// -------------------------------------------------------------------

// CChatRoomGroupState

// optional .CChatRoomGroupHeaderState header_state = 1;
inline bool CChatRoomGroupState::has_header_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoomGroupState::set_has_header_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoomGroupState::clear_has_header_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoomGroupState::clear_header_state() {
  if (header_state_ != NULL) header_state_->Clear();
  clear_has_header_state();
}
inline const ::CChatRoomGroupHeaderState& CChatRoomGroupState::_internal_header_state() const {
  return *header_state_;
}
inline const ::CChatRoomGroupHeaderState& CChatRoomGroupState::header_state() const {
  const ::CChatRoomGroupHeaderState* p = header_state_;
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.header_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomGroupHeaderState*>(
      &::_CChatRoomGroupHeaderState_default_instance_);
}
inline ::CChatRoomGroupHeaderState* CChatRoomGroupState::release_header_state() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupState.header_state)
  clear_has_header_state();
  ::CChatRoomGroupHeaderState* temp = header_state_;
  header_state_ = NULL;
  return temp;
}
inline ::CChatRoomGroupHeaderState* CChatRoomGroupState::mutable_header_state() {
  set_has_header_state();
  if (header_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupHeaderState>(GetArenaNoVirtual());
    header_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.header_state)
  return header_state_;
}
inline void CChatRoomGroupState::set_allocated_header_state(::CChatRoomGroupHeaderState* header_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_state_;
  }
  if (header_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header_state, submessage_arena);
    }
    set_has_header_state();
  } else {
    clear_has_header_state();
  }
  header_state_ = header_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupState.header_state)
}

// repeated .CChatRoomMember members = 2;
inline int CChatRoomGroupState::members_size() const {
  return members_.size();
}
inline void CChatRoomGroupState::clear_members() {
  members_.Clear();
}
inline ::CChatRoomMember* CChatRoomGroupState::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.members)
  return members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >*
CChatRoomGroupState::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupState.members)
  return &members_;
}
inline const ::CChatRoomMember& CChatRoomGroupState::members(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.members)
  return members_.Get(index);
}
inline ::CChatRoomMember* CChatRoomGroupState::add_members() {
  // @@protoc_insertion_point(field_add:CChatRoomGroupState.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >&
CChatRoomGroupState::members() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupState.members)
  return members_;
}

// optional uint64 default_chat_id = 4;
inline bool CChatRoomGroupState::has_default_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoomGroupState::set_has_default_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoomGroupState::clear_has_default_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoomGroupState::clear_default_chat_id() {
  default_chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_default_chat_id();
}
inline ::google::protobuf::uint64 CChatRoomGroupState::default_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.default_chat_id)
  return default_chat_id_;
}
inline void CChatRoomGroupState::set_default_chat_id(::google::protobuf::uint64 value) {
  set_has_default_chat_id();
  default_chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupState.default_chat_id)
}

// repeated .CChatRoomState chat_rooms = 5;
inline int CChatRoomGroupState::chat_rooms_size() const {
  return chat_rooms_.size();
}
inline void CChatRoomGroupState::clear_chat_rooms() {
  chat_rooms_.Clear();
}
inline ::CChatRoomState* CChatRoomGroupState::mutable_chat_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.chat_rooms)
  return chat_rooms_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomState >*
CChatRoomGroupState::mutable_chat_rooms() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupState.chat_rooms)
  return &chat_rooms_;
}
inline const ::CChatRoomState& CChatRoomGroupState::chat_rooms(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.chat_rooms)
  return chat_rooms_.Get(index);
}
inline ::CChatRoomState* CChatRoomGroupState::add_chat_rooms() {
  // @@protoc_insertion_point(field_add:CChatRoomGroupState.chat_rooms)
  return chat_rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomState >&
CChatRoomGroupState::chat_rooms() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupState.chat_rooms)
  return chat_rooms_;
}

// repeated .CChatRoomMember kicked = 7;
inline int CChatRoomGroupState::kicked_size() const {
  return kicked_.size();
}
inline void CChatRoomGroupState::clear_kicked() {
  kicked_.Clear();
}
inline ::CChatRoomMember* CChatRoomGroupState::mutable_kicked(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.kicked)
  return kicked_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >*
CChatRoomGroupState::mutable_kicked() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupState.kicked)
  return &kicked_;
}
inline const ::CChatRoomMember& CChatRoomGroupState::kicked(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.kicked)
  return kicked_.Get(index);
}
inline ::CChatRoomMember* CChatRoomGroupState::add_kicked() {
  // @@protoc_insertion_point(field_add:CChatRoomGroupState.kicked)
  return kicked_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomMember >&
CChatRoomGroupState::kicked() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupState.kicked)
  return kicked_;
}

// -------------------------------------------------------------------

// CUserChatRoomState

// optional uint64 chat_id = 1;
inline bool CUserChatRoomState::has_chat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserChatRoomState::set_has_chat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserChatRoomState::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserChatRoomState::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CUserChatRoomState::chat_id() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.chat_id)
  return chat_id_;
}
inline void CUserChatRoomState::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.chat_id)
}

// optional uint32 time_joined = 2;
inline bool CUserChatRoomState::has_time_joined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserChatRoomState::set_has_time_joined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserChatRoomState::clear_has_time_joined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserChatRoomState::clear_time_joined() {
  time_joined_ = 0u;
  clear_has_time_joined();
}
inline ::google::protobuf::uint32 CUserChatRoomState::time_joined() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_joined)
  return time_joined_;
}
inline void CUserChatRoomState::set_time_joined(::google::protobuf::uint32 value) {
  set_has_time_joined();
  time_joined_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_joined)
}

// optional uint32 time_last_ack = 3;
inline bool CUserChatRoomState::has_time_last_ack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserChatRoomState::set_has_time_last_ack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserChatRoomState::clear_has_time_last_ack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserChatRoomState::clear_time_last_ack() {
  time_last_ack_ = 0u;
  clear_has_time_last_ack();
}
inline ::google::protobuf::uint32 CUserChatRoomState::time_last_ack() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_last_ack)
  return time_last_ack_;
}
inline void CUserChatRoomState::set_time_last_ack(::google::protobuf::uint32 value) {
  set_has_time_last_ack();
  time_last_ack_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_last_ack)
}

// optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomState::has_desktop_notification_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserChatRoomState::set_has_desktop_notification_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserChatRoomState::clear_has_desktop_notification_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserChatRoomState::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  clear_has_desktop_notification_level();
}
inline ::EChatRoomNotificationLevel CUserChatRoomState::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.desktop_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline void CUserChatRoomState::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_desktop_notification_level();
  desktop_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomState::has_mobile_notification_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserChatRoomState::set_has_mobile_notification_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUserChatRoomState::clear_has_mobile_notification_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUserChatRoomState::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  clear_has_mobile_notification_level();
}
inline ::EChatRoomNotificationLevel CUserChatRoomState::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.mobile_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline void CUserChatRoomState::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_mobile_notification_level();
  mobile_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.mobile_notification_level)
}

// optional uint32 time_last_mention = 6;
inline bool CUserChatRoomState::has_time_last_mention() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserChatRoomState::set_has_time_last_mention() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CUserChatRoomState::clear_has_time_last_mention() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CUserChatRoomState::clear_time_last_mention() {
  time_last_mention_ = 0u;
  clear_has_time_last_mention();
}
inline ::google::protobuf::uint32 CUserChatRoomState::time_last_mention() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_last_mention)
  return time_last_mention_;
}
inline void CUserChatRoomState::set_time_last_mention(::google::protobuf::uint32 value) {
  set_has_time_last_mention();
  time_last_mention_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_last_mention)
}

// optional bool unread_indicator_muted = 7 [default = false];
inline bool CUserChatRoomState::has_unread_indicator_muted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUserChatRoomState::set_has_unread_indicator_muted() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CUserChatRoomState::clear_has_unread_indicator_muted() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CUserChatRoomState::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  clear_has_unread_indicator_muted();
}
inline bool CUserChatRoomState::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.unread_indicator_muted)
  return unread_indicator_muted_;
}
inline void CUserChatRoomState::set_unread_indicator_muted(bool value) {
  set_has_unread_indicator_muted();
  unread_indicator_muted_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomState.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CUserChatRoomGroupState

// optional uint64 chat_group_id = 1;
inline bool CUserChatRoomGroupState::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserChatRoomGroupState::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserChatRoomGroupState::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserChatRoomGroupState::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CUserChatRoomGroupState::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.chat_group_id)
  return chat_group_id_;
}
inline void CUserChatRoomGroupState::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.chat_group_id)
}

// optional uint32 time_joined = 2;
inline bool CUserChatRoomGroupState::has_time_joined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserChatRoomGroupState::set_has_time_joined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserChatRoomGroupState::clear_has_time_joined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserChatRoomGroupState::clear_time_joined() {
  time_joined_ = 0u;
  clear_has_time_joined();
}
inline ::google::protobuf::uint32 CUserChatRoomGroupState::time_joined() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.time_joined)
  return time_joined_;
}
inline void CUserChatRoomGroupState::set_time_joined(::google::protobuf::uint32 value) {
  set_has_time_joined();
  time_joined_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.time_joined)
}

// repeated .CUserChatRoomState user_chat_room_state = 3;
inline int CUserChatRoomGroupState::user_chat_room_state_size() const {
  return user_chat_room_state_.size();
}
inline void CUserChatRoomGroupState::clear_user_chat_room_state() {
  user_chat_room_state_.Clear();
}
inline ::CUserChatRoomState* CUserChatRoomGroupState::mutable_user_chat_room_state(int index) {
  // @@protoc_insertion_point(field_mutable:CUserChatRoomGroupState.user_chat_room_state)
  return user_chat_room_state_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CUserChatRoomState >*
CUserChatRoomGroupState::mutable_user_chat_room_state() {
  // @@protoc_insertion_point(field_mutable_list:CUserChatRoomGroupState.user_chat_room_state)
  return &user_chat_room_state_;
}
inline const ::CUserChatRoomState& CUserChatRoomGroupState::user_chat_room_state(int index) const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.user_chat_room_state)
  return user_chat_room_state_.Get(index);
}
inline ::CUserChatRoomState* CUserChatRoomGroupState::add_user_chat_room_state() {
  // @@protoc_insertion_point(field_add:CUserChatRoomGroupState.user_chat_room_state)
  return user_chat_room_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CUserChatRoomState >&
CUserChatRoomGroupState::user_chat_room_state() const {
  // @@protoc_insertion_point(field_list:CUserChatRoomGroupState.user_chat_room_state)
  return user_chat_room_state_;
}

// optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomGroupState::has_desktop_notification_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserChatRoomGroupState::set_has_desktop_notification_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserChatRoomGroupState::clear_has_desktop_notification_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserChatRoomGroupState::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  clear_has_desktop_notification_level();
}
inline ::EChatRoomNotificationLevel CUserChatRoomGroupState::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.desktop_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline void CUserChatRoomGroupState::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_desktop_notification_level();
  desktop_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomGroupState::has_mobile_notification_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserChatRoomGroupState::set_has_mobile_notification_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserChatRoomGroupState::clear_has_mobile_notification_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserChatRoomGroupState::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  clear_has_mobile_notification_level();
}
inline ::EChatRoomNotificationLevel CUserChatRoomGroupState::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.mobile_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline void CUserChatRoomGroupState::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_mobile_notification_level();
  mobile_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.mobile_notification_level)
}

// optional uint32 time_last_group_ack = 6;
inline bool CUserChatRoomGroupState::has_time_last_group_ack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserChatRoomGroupState::set_has_time_last_group_ack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUserChatRoomGroupState::clear_has_time_last_group_ack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUserChatRoomGroupState::clear_time_last_group_ack() {
  time_last_group_ack_ = 0u;
  clear_has_time_last_group_ack();
}
inline ::google::protobuf::uint32 CUserChatRoomGroupState::time_last_group_ack() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.time_last_group_ack)
  return time_last_group_ack_;
}
inline void CUserChatRoomGroupState::set_time_last_group_ack(::google::protobuf::uint32 value) {
  set_has_time_last_group_ack();
  time_last_group_ack_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.time_last_group_ack)
}

// optional bool unread_indicator_muted = 7 [default = false];
inline bool CUserChatRoomGroupState::has_unread_indicator_muted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserChatRoomGroupState::set_has_unread_indicator_muted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CUserChatRoomGroupState::clear_has_unread_indicator_muted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CUserChatRoomGroupState::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  clear_has_unread_indicator_muted();
}
inline bool CUserChatRoomGroupState::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.unread_indicator_muted)
  return unread_indicator_muted_;
}
inline void CUserChatRoomGroupState::set_unread_indicator_muted(bool value) {
  set_has_unread_indicator_muted();
  unread_indicator_muted_ = value;
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoomGroup_Response

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateChatRoomGroup_Response::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_CreateChatRoomGroup_Response::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Response.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Response.chat_group_id)
}

// optional .CChatRoomGroupState state = 2;
inline bool CChatRoom_CreateChatRoomGroup_Response::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::CChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::_internal_state() const {
  return *state_;
}
inline const ::CChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::state() const {
  const ::CChatRoomGroupState* p = state_;
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Response.state)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomGroupState*>(
      &::_CChatRoomGroupState_default_instance_);
}
inline ::CChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::release_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoomGroup_Response.state)
  clear_has_state();
  ::CChatRoomGroupState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupState>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoomGroup_Response.state)
  return state_;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_allocated_state(::CChatRoomGroupState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoomGroup_Response.state)
}

// optional .CUserChatRoomGroupState user_chat_state = 3;
inline bool CChatRoom_CreateChatRoomGroup_Response::has_user_chat_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_has_user_chat_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_has_user_chat_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_user_chat_state() {
  if (user_chat_state_ != NULL) user_chat_state_->Clear();
  clear_has_user_chat_state();
}
inline const ::CUserChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::_internal_user_chat_state() const {
  return *user_chat_state_;
}
inline const ::CUserChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::user_chat_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_state_;
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CUserChatRoomGroupState*>(
      &::_CUserChatRoomGroupState_default_instance_);
}
inline ::CUserChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::release_user_chat_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
  clear_has_user_chat_state();
  ::CUserChatRoomGroupState* temp = user_chat_state_;
  user_chat_state_ = NULL;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::mutable_user_chat_state() {
  set_has_user_chat_state();
  if (user_chat_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaNoVirtual());
    user_chat_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
  return user_chat_state_;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_chat_state_;
  }
  if (user_chat_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_chat_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_chat_state, submessage_arena);
    }
    set_has_user_chat_state();
  } else {
    clear_has_user_chat_state();
  }
  user_chat_state_ = user_chat_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
}

// -------------------------------------------------------------------

// CChatRoom_SaveChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SaveChatRoomGroup_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SaveChatRoomGroup_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SaveChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SaveChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SaveChatRoomGroup_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SaveChatRoomGroup_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_SaveChatRoomGroup_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SaveChatRoomGroup_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SaveChatRoomGroup_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_SaveChatRoomGroup_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SaveChatRoomGroup_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_SaveChatRoomGroup_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_SaveChatRoomGroup_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_SaveChatRoomGroup_Request.name)
}
#endif
inline void CChatRoom_SaveChatRoomGroup_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_SaveChatRoomGroup_Request.name)
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_SaveChatRoomGroup_Request.name)
}
inline ::std::string* CChatRoom_SaveChatRoomGroup_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SaveChatRoomGroup_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_SaveChatRoomGroup_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_SaveChatRoomGroup_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SaveChatRoomGroup_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_SaveChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RenameChatRoomGroup_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_RenameChatRoomGroup_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_RenameChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_RenameChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoomGroup_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoomGroup_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_RenameChatRoomGroup_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_RenameChatRoomGroup_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_RenameChatRoomGroup_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_RenameChatRoomGroup_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoomGroup_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoomGroup_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_RenameChatRoomGroup_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_RenameChatRoomGroup_Request.name)
}
#endif
inline void CChatRoom_RenameChatRoomGroup_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_RenameChatRoomGroup_Request.name)
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_RenameChatRoomGroup_Request.name)
}
inline ::std::string* CChatRoom_RenameChatRoomGroup_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameChatRoomGroup_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_RenameChatRoomGroup_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameChatRoomGroup_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameChatRoomGroup_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoomGroup_Response

// optional string name = 1;
inline bool CChatRoom_RenameChatRoomGroup_Response::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_RenameChatRoomGroup_Response::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_RenameChatRoomGroup_Response::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_RenameChatRoomGroup_Response::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_RenameChatRoomGroup_Response::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoomGroup_Response.name)
  return name_.GetNoArena();
}
inline void CChatRoom_RenameChatRoomGroup_Response::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoomGroup_Response.name)
}
#if LANG_CXX11
inline void CChatRoom_RenameChatRoomGroup_Response::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_RenameChatRoomGroup_Response.name)
}
#endif
inline void CChatRoom_RenameChatRoomGroup_Response::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_RenameChatRoomGroup_Response.name)
}
inline void CChatRoom_RenameChatRoomGroup_Response::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_RenameChatRoomGroup_Response.name)
}
inline ::std::string* CChatRoom_RenameChatRoomGroup_Response::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameChatRoomGroup_Response.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_RenameChatRoomGroup_Response::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameChatRoomGroup_Response.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_RenameChatRoomGroup_Response::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameChatRoomGroup_Response.name)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupTagline_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetChatRoomGroupTagline_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SetChatRoomGroupTagline_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupTagline_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupTagline_Request.chat_group_id)
}

// optional string tagline = 2;
inline bool CChatRoom_SetChatRoomGroupTagline_Request::has_tagline() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_has_tagline() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::clear_has_tagline() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::clear_tagline() {
  tagline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagline();
}
inline const ::std::string& CChatRoom_SetChatRoomGroupTagline_Request::tagline() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
  return tagline_.GetNoArena();
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_tagline(const ::std::string& value) {
  set_has_tagline();
  tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}
#if LANG_CXX11
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_tagline(::std::string&& value) {
  set_has_tagline();
  tagline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}
#endif
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_tagline(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tagline();
  tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_tagline(const char* value, size_t size) {
  set_has_tagline();
  tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}
inline ::std::string* CChatRoom_SetChatRoomGroupTagline_Request::mutable_tagline() {
  set_has_tagline();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
  return tagline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_SetChatRoomGroupTagline_Request::release_tagline() {
  // @@protoc_insertion_point(field_release:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
  if (!has_tagline()) {
    return NULL;
  }
  clear_has_tagline();
  return tagline_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_allocated_tagline(::std::string* tagline) {
  if (tagline != NULL) {
    set_has_tagline();
  } else {
    clear_has_tagline();
  }
  tagline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagline);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupTagline_Response

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupAvatar_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetChatRoomGroupAvatar_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SetChatRoomGroupAvatar_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupAvatar_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupAvatar_Request.chat_group_id)
}

// optional bytes avatar_sha = 2;
inline bool CChatRoom_SetChatRoomGroupAvatar_Request::has_avatar_sha() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_has_avatar_sha() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::clear_has_avatar_sha() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::clear_avatar_sha() {
  avatar_sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar_sha();
}
inline const ::std::string& CChatRoom_SetChatRoomGroupAvatar_Request::avatar_sha() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
  return avatar_sha_.GetNoArena();
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_avatar_sha(const ::std::string& value) {
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}
#if LANG_CXX11
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_avatar_sha(::std::string&& value) {
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}
#endif
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_avatar_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_avatar_sha(const void* value, size_t size) {
  set_has_avatar_sha();
  avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}
inline ::std::string* CChatRoom_SetChatRoomGroupAvatar_Request::mutable_avatar_sha() {
  set_has_avatar_sha();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
  return avatar_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_SetChatRoomGroupAvatar_Request::release_avatar_sha() {
  // @@protoc_insertion_point(field_release:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
  if (!has_avatar_sha()) {
    return NULL;
  }
  clear_has_avatar_sha();
  return avatar_sha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_allocated_avatar_sha(::std::string* avatar_sha) {
  if (avatar_sha != NULL) {
    set_has_avatar_sha();
  } else {
    clear_has_avatar_sha();
  }
  avatar_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_sha);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupAvatar_Response

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupWatchingBroadcast_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.chat_group_id)
}

// optional uint32 watching_broadcast_accountid = 2;
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::has_watching_broadcast_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_has_watching_broadcast_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_has_watching_broadcast_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  clear_has_watching_broadcast_accountid();
}
inline ::google::protobuf::uint32 CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.watching_broadcast_accountid)
  return watching_broadcast_accountid_;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_watching_broadcast_accountid(::google::protobuf::uint32 value) {
  set_has_watching_broadcast_accountid();
  watching_broadcast_accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.watching_broadcast_accountid)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupWatchingBroadcast_Response

// -------------------------------------------------------------------

// CChatRoom_MuteUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_MuteUser_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_MuteUser_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_MuteUser_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_MuteUser_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_MuteUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MuteUser_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_MuteUser_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_MuteUser_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_MuteUser_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_MuteUser_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_MuteUser_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_MuteUser_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_MuteUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MuteUser_Request.steamid)
  return steamid_;
}
inline void CChatRoom_MuteUser_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_MuteUser_Request.steamid)
}

// optional int32 expiration = 3;
inline bool CChatRoom_MuteUser_Request::has_expiration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_MuteUser_Request::set_has_expiration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_MuteUser_Request::clear_has_expiration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_MuteUser_Request::clear_expiration() {
  expiration_ = 0;
  clear_has_expiration();
}
inline ::google::protobuf::int32 CChatRoom_MuteUser_Request::expiration() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MuteUser_Request.expiration)
  return expiration_;
}
inline void CChatRoom_MuteUser_Request::set_expiration(::google::protobuf::int32 value) {
  set_has_expiration();
  expiration_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_MuteUser_Request.expiration)
}

// -------------------------------------------------------------------

// CChatRoom_MuteUser_Response

// -------------------------------------------------------------------

// CChatRoom_KickUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_KickUser_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_KickUser_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_KickUser_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_KickUser_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_KickUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_KickUser_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_KickUser_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_KickUser_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_KickUser_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_KickUser_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_KickUser_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_KickUser_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_KickUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_KickUser_Request.steamid)
  return steamid_;
}
inline void CChatRoom_KickUser_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_KickUser_Request.steamid)
}

// optional int32 expiration = 3;
inline bool CChatRoom_KickUser_Request::has_expiration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_KickUser_Request::set_has_expiration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_KickUser_Request::clear_has_expiration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_KickUser_Request::clear_expiration() {
  expiration_ = 0;
  clear_has_expiration();
}
inline ::google::protobuf::int32 CChatRoom_KickUser_Request::expiration() const {
  // @@protoc_insertion_point(field_get:CChatRoom_KickUser_Request.expiration)
  return expiration_;
}
inline void CChatRoom_KickUser_Request::set_expiration(::google::protobuf::int32 value) {
  set_has_expiration();
  expiration_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_KickUser_Request.expiration)
}

// -------------------------------------------------------------------

// CChatRoom_KickUser_Response

// -------------------------------------------------------------------

// CChatRoom_SetUserBanState_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetUserBanState_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetUserBanState_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetUserBanState_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetUserBanState_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SetUserBanState_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserBanState_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SetUserBanState_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserBanState_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_SetUserBanState_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetUserBanState_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetUserBanState_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetUserBanState_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_SetUserBanState_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserBanState_Request.steamid)
  return steamid_;
}
inline void CChatRoom_SetUserBanState_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserBanState_Request.steamid)
}

// optional bool ban_state = 3;
inline bool CChatRoom_SetUserBanState_Request::has_ban_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_SetUserBanState_Request::set_has_ban_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_SetUserBanState_Request::clear_has_ban_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_SetUserBanState_Request::clear_ban_state() {
  ban_state_ = false;
  clear_has_ban_state();
}
inline bool CChatRoom_SetUserBanState_Request::ban_state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserBanState_Request.ban_state)
  return ban_state_;
}
inline void CChatRoom_SetUserBanState_Request::set_ban_state(bool value) {
  set_has_ban_state();
  ban_state_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserBanState_Request.ban_state)
}

// -------------------------------------------------------------------

// CChatRoom_SetUserBanState_Response

// -------------------------------------------------------------------

// CChatRoom_RevokeInvite_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RevokeInvite_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_RevokeInvite_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_RevokeInvite_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_RevokeInvite_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_RevokeInvite_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RevokeInvite_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_RevokeInvite_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RevokeInvite_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_RevokeInvite_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_RevokeInvite_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_RevokeInvite_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_RevokeInvite_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_RevokeInvite_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RevokeInvite_Request.steamid)
  return steamid_;
}
inline void CChatRoom_RevokeInvite_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RevokeInvite_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_RevokeInvite_Response

// -------------------------------------------------------------------

// CChatRoom_CreateRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateRole_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_CreateRole_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_CreateRole_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_CreateRole_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_CreateRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateRole_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_CreateRole_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateRole_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_CreateRole_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateRole_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateRole_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateRole_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_CreateRole_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateRole_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_CreateRole_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateRole_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_CreateRole_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_CreateRole_Request.name)
}
#endif
inline void CChatRoom_CreateRole_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_CreateRole_Request.name)
}
inline void CChatRoom_CreateRole_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_CreateRole_Request.name)
}
inline ::std::string* CChatRoom_CreateRole_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateRole_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_CreateRole_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateRole_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_CreateRole_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateRole_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_CreateRole_Response

// optional .CChatRoleActions actions = 2;
inline bool CChatRoom_CreateRole_Response::has_actions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateRole_Response::set_has_actions() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateRole_Response::clear_has_actions() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateRole_Response::clear_actions() {
  if (actions_ != NULL) actions_->Clear();
  clear_has_actions();
}
inline const ::CChatRoleActions& CChatRoom_CreateRole_Response::_internal_actions() const {
  return *actions_;
}
inline const ::CChatRoleActions& CChatRoom_CreateRole_Response::actions() const {
  const ::CChatRoleActions* p = actions_;
  // @@protoc_insertion_point(field_get:CChatRoom_CreateRole_Response.actions)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoleActions*>(
      &::_CChatRoleActions_default_instance_);
}
inline ::CChatRoleActions* CChatRoom_CreateRole_Response::release_actions() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateRole_Response.actions)
  clear_has_actions();
  ::CChatRoleActions* temp = actions_;
  actions_ = NULL;
  return temp;
}
inline ::CChatRoleActions* CChatRoom_CreateRole_Response::mutable_actions() {
  set_has_actions();
  if (actions_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoleActions>(GetArenaNoVirtual());
    actions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateRole_Response.actions)
  return actions_;
}
inline void CChatRoom_CreateRole_Response::set_allocated_actions(::CChatRoleActions* actions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actions_;
  }
  if (actions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actions, submessage_arena);
    }
    set_has_actions();
  } else {
    clear_has_actions();
  }
  actions_ = actions;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateRole_Response.actions)
}

// -------------------------------------------------------------------

// CChatRoom_GetRoles_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetRoles_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetRoles_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetRoles_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetRoles_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetRoles_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoles_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetRoles_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetRoles_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetRoles_Response

// repeated .CChatRole roles = 1;
inline int CChatRoom_GetRoles_Response::roles_size() const {
  return roles_.size();
}
inline void CChatRoom_GetRoles_Response::clear_roles() {
  roles_.Clear();
}
inline ::CChatRole* CChatRoom_GetRoles_Response::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetRoles_Response.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRole >*
CChatRoom_GetRoles_Response::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetRoles_Response.roles)
  return &roles_;
}
inline const ::CChatRole& CChatRoom_GetRoles_Response::roles(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoles_Response.roles)
  return roles_.Get(index);
}
inline ::CChatRole* CChatRoom_GetRoles_Response::add_roles() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetRoles_Response.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRole >&
CChatRoom_GetRoles_Response::roles() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetRoles_Response.roles)
  return roles_;
}

// -------------------------------------------------------------------

// CChatRoom_RenameRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RenameRole_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_RenameRole_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_RenameRole_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_RenameRole_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_RenameRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameRole_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_RenameRole_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RenameRole_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_RenameRole_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_RenameRole_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_RenameRole_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_RenameRole_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_RenameRole_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameRole_Request.role_id)
  return role_id_;
}
inline void CChatRoom_RenameRole_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RenameRole_Request.role_id)
}

// optional string name = 3;
inline bool CChatRoom_RenameRole_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_RenameRole_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_RenameRole_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_RenameRole_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_RenameRole_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameRole_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_RenameRole_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameRole_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_RenameRole_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_RenameRole_Request.name)
}
#endif
inline void CChatRoom_RenameRole_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_RenameRole_Request.name)
}
inline void CChatRoom_RenameRole_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_RenameRole_Request.name)
}
inline ::std::string* CChatRoom_RenameRole_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameRole_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_RenameRole_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameRole_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_RenameRole_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameRole_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_RenameRole_Response

// -------------------------------------------------------------------

// CChatRoom_ReorderRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ReorderRole_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ReorderRole_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ReorderRole_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ReorderRole_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReorderRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderRole_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_ReorderRole_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderRole_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_ReorderRole_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_ReorderRole_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_ReorderRole_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_ReorderRole_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReorderRole_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderRole_Request.role_id)
  return role_id_;
}
inline void CChatRoom_ReorderRole_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderRole_Request.role_id)
}

// optional uint32 ordinal = 3;
inline bool CChatRoom_ReorderRole_Request::has_ordinal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_ReorderRole_Request::set_has_ordinal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_ReorderRole_Request::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_ReorderRole_Request::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_ReorderRole_Request::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderRole_Request.ordinal)
  return ordinal_;
}
inline void CChatRoom_ReorderRole_Request::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderRole_Request.ordinal)
}

// -------------------------------------------------------------------

// CChatRoom_ReorderRole_Response

// -------------------------------------------------------------------

// CChatRoom_DeleteRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteRole_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_DeleteRole_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_DeleteRole_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_DeleteRole_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRole_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_DeleteRole_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRole_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_DeleteRole_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_DeleteRole_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_DeleteRole_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_DeleteRole_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteRole_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRole_Request.role_id)
  return role_id_;
}
inline void CChatRoom_DeleteRole_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRole_Request.role_id)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteRole_Response

// -------------------------------------------------------------------

// CChatRoom_GetRoleActions_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetRoleActions_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetRoleActions_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetRoleActions_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetRoleActions_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetRoleActions_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoleActions_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetRoleActions_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetRoleActions_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_GetRoleActions_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetRoleActions_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetRoleActions_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetRoleActions_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetRoleActions_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoleActions_Request.role_id)
  return role_id_;
}
inline void CChatRoom_GetRoleActions_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetRoleActions_Request.role_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetRoleActions_Response

// repeated .CChatRoleActions actions = 1;
inline int CChatRoom_GetRoleActions_Response::actions_size() const {
  return actions_.size();
}
inline void CChatRoom_GetRoleActions_Response::clear_actions() {
  actions_.Clear();
}
inline ::CChatRoleActions* CChatRoom_GetRoleActions_Response::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetRoleActions_Response.actions)
  return actions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >*
CChatRoom_GetRoleActions_Response::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetRoleActions_Response.actions)
  return &actions_;
}
inline const ::CChatRoleActions& CChatRoom_GetRoleActions_Response::actions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoleActions_Response.actions)
  return actions_.Get(index);
}
inline ::CChatRoleActions* CChatRoom_GetRoleActions_Response::add_actions() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetRoleActions_Response.actions)
  return actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >&
CChatRoom_GetRoleActions_Response::actions() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetRoleActions_Response.actions)
  return actions_;
}

// -------------------------------------------------------------------

// CChatRoom_ReplaceRoleActions_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ReplaceRoleActions_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReplaceRoleActions_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReplaceRoleActions_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReplaceRoleActions_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_ReplaceRoleActions_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReplaceRoleActions_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReplaceRoleActions_Request.role_id)
  return role_id_;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReplaceRoleActions_Request.role_id)
}

// optional .CChatRoleActions actions = 4;
inline bool CChatRoom_ReplaceRoleActions_Request::has_actions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_has_actions() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_has_actions() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_actions() {
  if (actions_ != NULL) actions_->Clear();
  clear_has_actions();
}
inline const ::CChatRoleActions& CChatRoom_ReplaceRoleActions_Request::_internal_actions() const {
  return *actions_;
}
inline const ::CChatRoleActions& CChatRoom_ReplaceRoleActions_Request::actions() const {
  const ::CChatRoleActions* p = actions_;
  // @@protoc_insertion_point(field_get:CChatRoom_ReplaceRoleActions_Request.actions)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoleActions*>(
      &::_CChatRoleActions_default_instance_);
}
inline ::CChatRoleActions* CChatRoom_ReplaceRoleActions_Request::release_actions() {
  // @@protoc_insertion_point(field_release:CChatRoom_ReplaceRoleActions_Request.actions)
  clear_has_actions();
  ::CChatRoleActions* temp = actions_;
  actions_ = NULL;
  return temp;
}
inline ::CChatRoleActions* CChatRoom_ReplaceRoleActions_Request::mutable_actions() {
  set_has_actions();
  if (actions_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoleActions>(GetArenaNoVirtual());
    actions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_ReplaceRoleActions_Request.actions)
  return actions_;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_allocated_actions(::CChatRoleActions* actions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actions_;
  }
  if (actions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actions, submessage_arena);
    }
    set_has_actions();
  } else {
    clear_has_actions();
  }
  actions_ = actions;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_ReplaceRoleActions_Request.actions)
}

// -------------------------------------------------------------------

// CChatRoom_ReplaceRoleActions_Response

// -------------------------------------------------------------------

// CChatRoom_AddRoleToUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_AddRoleToUser_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_AddRoleToUser_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_AddRoleToUser_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_AddRoleToUser_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_AddRoleToUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AddRoleToUser_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_AddRoleToUser_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_AddRoleToUser_Request.chat_group_id)
}

// optional uint64 role_id = 3;
inline bool CChatRoom_AddRoleToUser_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_AddRoleToUser_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_AddRoleToUser_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_AddRoleToUser_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_AddRoleToUser_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AddRoleToUser_Request.role_id)
  return role_id_;
}
inline void CChatRoom_AddRoleToUser_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_AddRoleToUser_Request.role_id)
}

// optional fixed64 steamid = 4;
inline bool CChatRoom_AddRoleToUser_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_AddRoleToUser_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_AddRoleToUser_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_AddRoleToUser_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_AddRoleToUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AddRoleToUser_Request.steamid)
  return steamid_;
}
inline void CChatRoom_AddRoleToUser_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_AddRoleToUser_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_AddRoleToUser_Response

// -------------------------------------------------------------------

// CChatRoom_GetRolesForUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetRolesForUser_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetRolesForUser_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetRolesForUser_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetRolesForUser_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetRolesForUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRolesForUser_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetRolesForUser_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetRolesForUser_Request.chat_group_id)
}

// optional fixed64 steamid = 3;
inline bool CChatRoom_GetRolesForUser_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetRolesForUser_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetRolesForUser_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetRolesForUser_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_GetRolesForUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRolesForUser_Request.steamid)
  return steamid_;
}
inline void CChatRoom_GetRolesForUser_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetRolesForUser_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_GetRolesForUser_Response

// repeated uint64 role_ids = 1;
inline int CChatRoom_GetRolesForUser_Response::role_ids_size() const {
  return role_ids_.size();
}
inline void CChatRoom_GetRolesForUser_Response::clear_role_ids() {
  role_ids_.Clear();
}
inline ::google::protobuf::uint64 CChatRoom_GetRolesForUser_Response::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRolesForUser_Response.role_ids)
  return role_ids_.Get(index);
}
inline void CChatRoom_GetRolesForUser_Response::set_role_ids(int index, ::google::protobuf::uint64 value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRolesForUser_Response.role_ids)
}
inline void CChatRoom_GetRolesForUser_Response::add_role_ids(::google::protobuf::uint64 value) {
  role_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetRolesForUser_Response.role_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CChatRoom_GetRolesForUser_Response::role_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetRolesForUser_Response.role_ids)
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CChatRoom_GetRolesForUser_Response::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetRolesForUser_Response.role_ids)
  return &role_ids_;
}

// -------------------------------------------------------------------

// CChatRoom_DeleteRoleFromUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteRoleFromUser_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteRoleFromUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRoleFromUser_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRoleFromUser_Request.chat_group_id)
}

// optional uint64 role_id = 3;
inline bool CChatRoom_DeleteRoleFromUser_Request::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteRoleFromUser_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRoleFromUser_Request.role_id)
  return role_id_;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRoleFromUser_Request.role_id)
}

// optional fixed64 steamid = 4;
inline bool CChatRoom_DeleteRoleFromUser_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteRoleFromUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRoleFromUser_Request.steamid)
  return steamid_;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRoleFromUser_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteRoleFromUser_Response

// -------------------------------------------------------------------

// CChatRoom_JoinChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_JoinChatRoomGroup_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_JoinChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Request.chat_group_id)
}

// optional string invite_code = 2;
inline bool CChatRoom_JoinChatRoomGroup_Request::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CChatRoom_JoinChatRoomGroup_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Request.invite_code)
  return invite_code_.GetNoArena();
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}
#if LANG_CXX11
inline void CChatRoom_JoinChatRoomGroup_Request::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}
#endif
inline void CChatRoom_JoinChatRoomGroup_Request::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}
inline ::std::string* CChatRoom_JoinChatRoomGroup_Request::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_JoinChatRoomGroup_Request.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_JoinChatRoomGroup_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_JoinChatRoomGroup_Request.invite_code)
  if (!has_invite_code()) {
    return NULL;
  }
  clear_has_invite_code();
  return invite_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_JoinChatRoomGroup_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_JoinChatRoomGroup_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_JoinChatRoomGroup_Response

// optional .CChatRoomGroupState state = 1;
inline bool CChatRoom_JoinChatRoomGroup_Response::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::CChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::_internal_state() const {
  return *state_;
}
inline const ::CChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::state() const {
  const ::CChatRoomGroupState* p = state_;
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.state)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomGroupState*>(
      &::_CChatRoomGroupState_default_instance_);
}
inline ::CChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::release_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_JoinChatRoomGroup_Response.state)
  clear_has_state();
  ::CChatRoomGroupState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupState>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_JoinChatRoomGroup_Response.state)
  return state_;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_allocated_state(::CChatRoomGroupState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_JoinChatRoomGroup_Response.state)
}

// optional .CUserChatRoomGroupState user_chat_state = 3;
inline bool CChatRoom_JoinChatRoomGroup_Response::has_user_chat_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_has_user_chat_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_has_user_chat_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_user_chat_state() {
  if (user_chat_state_ != NULL) user_chat_state_->Clear();
  clear_has_user_chat_state();
}
inline const ::CUserChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::_internal_user_chat_state() const {
  return *user_chat_state_;
}
inline const ::CUserChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::user_chat_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_state_;
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CUserChatRoomGroupState*>(
      &::_CUserChatRoomGroupState_default_instance_);
}
inline ::CUserChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::release_user_chat_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
  clear_has_user_chat_state();
  ::CUserChatRoomGroupState* temp = user_chat_state_;
  user_chat_state_ = NULL;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::mutable_user_chat_state() {
  set_has_user_chat_state();
  if (user_chat_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaNoVirtual());
    user_chat_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
  return user_chat_state_;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_chat_state_;
  }
  if (user_chat_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_chat_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_chat_state, submessage_arena);
    }
    set_has_user_chat_state();
  } else {
    clear_has_user_chat_state();
  }
  user_chat_state_ = user_chat_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
}

// optional uint64 join_chat_id = 4;
inline bool CChatRoom_JoinChatRoomGroup_Response::has_join_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_has_join_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_has_join_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_join_chat_id() {
  join_chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_join_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_JoinChatRoomGroup_Response::join_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.join_chat_id)
  return join_chat_id_;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_join_chat_id(::google::protobuf::uint64 value) {
  set_has_join_chat_id();
  join_chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Response.join_chat_id)
}

// optional uint32 time_expire = 5;
inline bool CChatRoom_JoinChatRoomGroup_Response::has_time_expire() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_has_time_expire() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_has_time_expire() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_time_expire() {
  time_expire_ = 0u;
  clear_has_time_expire();
}
inline ::google::protobuf::uint32 CChatRoom_JoinChatRoomGroup_Response::time_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.time_expire)
  return time_expire_;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_time_expire(::google::protobuf::uint32 value) {
  set_has_time_expire();
  time_expire_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Response.time_expire)
}

// -------------------------------------------------------------------

// CChatRoom_InviteFriendToChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_InviteFriendToChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CChatRoom_InviteFriendToChatRoomGroup_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.steamid)
  return steamid_;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.steamid)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_InviteFriendToChatRoomGroup_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_id)
}

// optional bool skip_friendsui_check = 4;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_skip_friendsui_check() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_has_skip_friendsui_check() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_has_skip_friendsui_check() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_skip_friendsui_check() {
  skip_friendsui_check_ = false;
  clear_has_skip_friendsui_check();
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::skip_friendsui_check() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.skip_friendsui_check)
  return skip_friendsui_check_;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_skip_friendsui_check(bool value) {
  set_has_skip_friendsui_check();
  skip_friendsui_check_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.skip_friendsui_check)
}

// -------------------------------------------------------------------

// CChatRoom_InviteFriendToChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_LeaveChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_LeaveChatRoomGroup_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_LeaveChatRoomGroup_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_LeaveChatRoomGroup_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_LeaveChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_LeaveChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_LeaveChatRoomGroup_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_LeaveChatRoomGroup_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_LeaveChatRoomGroup_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_LeaveChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateChatRoom_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_CreateChatRoom_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_CreateChatRoom_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_CreateChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_CreateChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_CreateChatRoom_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoom_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_CreateChatRoom_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateChatRoom_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateChatRoom_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateChatRoom_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_CreateChatRoom_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_CreateChatRoom_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoom_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_CreateChatRoom_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_CreateChatRoom_Request.name)
}
#endif
inline void CChatRoom_CreateChatRoom_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_CreateChatRoom_Request.name)
}
inline void CChatRoom_CreateChatRoom_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_CreateChatRoom_Request.name)
}
inline ::std::string* CChatRoom_CreateChatRoom_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoom_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_CreateChatRoom_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoom_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_CreateChatRoom_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoom_Request.name)
}

// optional bool allow_voice = 3;
inline bool CChatRoom_CreateChatRoom_Request::has_allow_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_CreateChatRoom_Request::set_has_allow_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_CreateChatRoom_Request::clear_has_allow_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_CreateChatRoom_Request::clear_allow_voice() {
  allow_voice_ = false;
  clear_has_allow_voice();
}
inline bool CChatRoom_CreateChatRoom_Request::allow_voice() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Request.allow_voice)
  return allow_voice_;
}
inline void CChatRoom_CreateChatRoom_Request::set_allow_voice(bool value) {
  set_has_allow_voice();
  allow_voice_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoom_Request.allow_voice)
}

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoom_Response

// optional .CChatRoomState chat_room = 1;
inline bool CChatRoom_CreateChatRoom_Response::has_chat_room() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateChatRoom_Response::set_has_chat_room() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateChatRoom_Response::clear_has_chat_room() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateChatRoom_Response::clear_chat_room() {
  if (chat_room_ != NULL) chat_room_->Clear();
  clear_has_chat_room();
}
inline const ::CChatRoomState& CChatRoom_CreateChatRoom_Response::_internal_chat_room() const {
  return *chat_room_;
}
inline const ::CChatRoomState& CChatRoom_CreateChatRoom_Response::chat_room() const {
  const ::CChatRoomState* p = chat_room_;
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Response.chat_room)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomState*>(
      &::_CChatRoomState_default_instance_);
}
inline ::CChatRoomState* CChatRoom_CreateChatRoom_Response::release_chat_room() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoom_Response.chat_room)
  clear_has_chat_room();
  ::CChatRoomState* temp = chat_room_;
  chat_room_ = NULL;
  return temp;
}
inline ::CChatRoomState* CChatRoom_CreateChatRoom_Response::mutable_chat_room() {
  set_has_chat_room();
  if (chat_room_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomState>(GetArenaNoVirtual());
    chat_room_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoom_Response.chat_room)
  return chat_room_;
}
inline void CChatRoom_CreateChatRoom_Response::set_allocated_chat_room(::CChatRoomState* chat_room) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chat_room_;
  }
  if (chat_room) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chat_room = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chat_room, submessage_arena);
    }
    set_has_chat_room();
  } else {
    clear_has_chat_room();
  }
  chat_room_ = chat_room;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoom_Response.chat_room)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteChatRoom_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_DeleteChatRoom_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_DeleteChatRoom_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_DeleteChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatRoom_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_DeleteChatRoom_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatRoom_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_DeleteChatRoom_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_DeleteChatRoom_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_DeleteChatRoom_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_DeleteChatRoom_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteChatRoom_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatRoom_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_DeleteChatRoom_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatRoom_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatRoom_Response

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RenameChatRoom_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_RenameChatRoom_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_RenameChatRoom_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_RenameChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_RenameChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoom_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_RenameChatRoom_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoom_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_RenameChatRoom_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_RenameChatRoom_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_RenameChatRoom_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_RenameChatRoom_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_RenameChatRoom_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoom_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_RenameChatRoom_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoom_Request.chat_id)
}

// optional string name = 3;
inline bool CChatRoom_RenameChatRoom_Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_RenameChatRoom_Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_RenameChatRoom_Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_RenameChatRoom_Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CChatRoom_RenameChatRoom_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoom_Request.name)
  return name_.GetNoArena();
}
inline void CChatRoom_RenameChatRoom_Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoom_Request.name)
}
#if LANG_CXX11
inline void CChatRoom_RenameChatRoom_Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_RenameChatRoom_Request.name)
}
#endif
inline void CChatRoom_RenameChatRoom_Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_RenameChatRoom_Request.name)
}
inline void CChatRoom_RenameChatRoom_Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_RenameChatRoom_Request.name)
}
inline ::std::string* CChatRoom_RenameChatRoom_Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameChatRoom_Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_RenameChatRoom_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameChatRoom_Request.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_RenameChatRoom_Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameChatRoom_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoom_Response

// -------------------------------------------------------------------

// CChatRoom_ReorderChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ReorderChatRoom_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ReorderChatRoom_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ReorderChatRoom_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ReorderChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReorderChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderChatRoom_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_ReorderChatRoom_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderChatRoom_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_ReorderChatRoom_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_ReorderChatRoom_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_ReorderChatRoom_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_ReorderChatRoom_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReorderChatRoom_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderChatRoom_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_ReorderChatRoom_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderChatRoom_Request.chat_id)
}

// optional uint64 move_after_chat_id = 3;
inline bool CChatRoom_ReorderChatRoom_Request::has_move_after_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_ReorderChatRoom_Request::set_has_move_after_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_ReorderChatRoom_Request::clear_has_move_after_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_ReorderChatRoom_Request::clear_move_after_chat_id() {
  move_after_chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_move_after_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_ReorderChatRoom_Request::move_after_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderChatRoom_Request.move_after_chat_id)
  return move_after_chat_id_;
}
inline void CChatRoom_ReorderChatRoom_Request::set_move_after_chat_id(::google::protobuf::uint64 value) {
  set_has_move_after_chat_id();
  move_after_chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderChatRoom_Request.move_after_chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_ReorderChatRoom_Response

// -------------------------------------------------------------------

// CChatRoom_SendChatMessage_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SendChatMessage_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SendChatMessage_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SendChatMessage_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SendChatMessage_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SendChatMessage_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SendChatMessage_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_SendChatMessage_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_SendChatMessage_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_SendChatMessage_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_SendChatMessage_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_SendChatMessage_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_SendChatMessage_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.chat_id)
}

// optional string message = 3;
inline bool CChatRoom_SendChatMessage_Request::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SendChatMessage_Request::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SendChatMessage_Request::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SendChatMessage_Request::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CChatRoom_SendChatMessage_Request::message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.message)
  return message_.GetNoArena();
}
inline void CChatRoom_SendChatMessage_Request::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.message)
}
#if LANG_CXX11
inline void CChatRoom_SendChatMessage_Request::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_SendChatMessage_Request.message)
}
#endif
inline void CChatRoom_SendChatMessage_Request::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_SendChatMessage_Request.message)
}
inline void CChatRoom_SendChatMessage_Request::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_SendChatMessage_Request.message)
}
inline ::std::string* CChatRoom_SendChatMessage_Request::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SendChatMessage_Request.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_SendChatMessage_Request::release_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_SendChatMessage_Request.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_SendChatMessage_Request::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SendChatMessage_Request.message)
}

// -------------------------------------------------------------------

// CChatRoom_SendChatMessage_Response

// optional string modified_message = 1;
inline bool CChatRoom_SendChatMessage_Response::has_modified_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SendChatMessage_Response::set_has_modified_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SendChatMessage_Response::clear_has_modified_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SendChatMessage_Response::clear_modified_message() {
  modified_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_modified_message();
}
inline const ::std::string& CChatRoom_SendChatMessage_Response::modified_message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.modified_message)
  return modified_message_.GetNoArena();
}
inline void CChatRoom_SendChatMessage_Response::set_modified_message(const ::std::string& value) {
  set_has_modified_message();
  modified_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.modified_message)
}
#if LANG_CXX11
inline void CChatRoom_SendChatMessage_Response::set_modified_message(::std::string&& value) {
  set_has_modified_message();
  modified_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_SendChatMessage_Response.modified_message)
}
#endif
inline void CChatRoom_SendChatMessage_Response::set_modified_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_modified_message();
  modified_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_SendChatMessage_Response.modified_message)
}
inline void CChatRoom_SendChatMessage_Response::set_modified_message(const char* value, size_t size) {
  set_has_modified_message();
  modified_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_SendChatMessage_Response.modified_message)
}
inline ::std::string* CChatRoom_SendChatMessage_Response::mutable_modified_message() {
  set_has_modified_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SendChatMessage_Response.modified_message)
  return modified_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_SendChatMessage_Response::release_modified_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_SendChatMessage_Response.modified_message)
  if (!has_modified_message()) {
    return NULL;
  }
  clear_has_modified_message();
  return modified_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_SendChatMessage_Response::set_allocated_modified_message(::std::string* modified_message) {
  if (modified_message != NULL) {
    set_has_modified_message();
  } else {
    clear_has_modified_message();
  }
  modified_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_message);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SendChatMessage_Response.modified_message)
}

// optional uint32 server_timestamp = 2;
inline bool CChatRoom_SendChatMessage_Response::has_server_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SendChatMessage_Response::set_has_server_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SendChatMessage_Response::clear_has_server_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SendChatMessage_Response::clear_server_timestamp() {
  server_timestamp_ = 0u;
  clear_has_server_timestamp();
}
inline ::google::protobuf::uint32 CChatRoom_SendChatMessage_Response::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.server_timestamp)
  return server_timestamp_;
}
inline void CChatRoom_SendChatMessage_Response::set_server_timestamp(::google::protobuf::uint32 value) {
  set_has_server_timestamp();
  server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.server_timestamp)
}

// optional uint32 ordinal = 3;
inline bool CChatRoom_SendChatMessage_Response::has_ordinal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_SendChatMessage_Response::set_has_ordinal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_SendChatMessage_Response::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_SendChatMessage_Response::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_SendChatMessage_Response::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.ordinal)
  return ordinal_;
}
inline void CChatRoom_SendChatMessage_Response::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.ordinal)
}

// -------------------------------------------------------------------

// CChatRoom_JoinVoiceChat_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_JoinVoiceChat_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_JoinVoiceChat_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_JoinVoiceChat_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_JoinVoiceChat_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_JoinVoiceChat_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinVoiceChat_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_JoinVoiceChat_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinVoiceChat_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_JoinVoiceChat_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_JoinVoiceChat_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_JoinVoiceChat_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_JoinVoiceChat_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_JoinVoiceChat_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinVoiceChat_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_JoinVoiceChat_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinVoiceChat_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_JoinVoiceChat_Response

// optional uint64 voice_chatid = 1;
inline bool CChatRoom_JoinVoiceChat_Response::has_voice_chatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_JoinVoiceChat_Response::set_has_voice_chatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_JoinVoiceChat_Response::clear_has_voice_chatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_JoinVoiceChat_Response::clear_voice_chatid() {
  voice_chatid_ = GOOGLE_ULONGLONG(0);
  clear_has_voice_chatid();
}
inline ::google::protobuf::uint64 CChatRoom_JoinVoiceChat_Response::voice_chatid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinVoiceChat_Response.voice_chatid)
  return voice_chatid_;
}
inline void CChatRoom_JoinVoiceChat_Response::set_voice_chatid(::google::protobuf::uint64 value) {
  set_has_voice_chatid();
  voice_chatid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_JoinVoiceChat_Response.voice_chatid)
}

// -------------------------------------------------------------------

// CChatRoom_LeaveVoiceChat_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_LeaveVoiceChat_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_LeaveVoiceChat_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_LeaveVoiceChat_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_LeaveVoiceChat_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_LeaveVoiceChat_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_LeaveVoiceChat_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_LeaveVoiceChat_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_LeaveVoiceChat_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_LeaveVoiceChat_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_LeaveVoiceChat_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_LeaveVoiceChat_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_LeaveVoiceChat_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_LeaveVoiceChat_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_LeaveVoiceChat_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_LeaveVoiceChat_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_LeaveVoiceChat_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_LeaveVoiceChat_Response

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetMessageHistory_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetMessageHistory_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetMessageHistory_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_GetMessageHistory_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetMessageHistory_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_GetMessageHistory_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.chat_id)
}

// optional uint32 last_time = 3;
inline bool CChatRoom_GetMessageHistory_Request::has_last_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_last_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_last_time() {
  last_time_ = 0u;
  clear_has_last_time();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Request::last_time() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.last_time)
  return last_time_;
}
inline void CChatRoom_GetMessageHistory_Request::set_last_time(::google::protobuf::uint32 value) {
  set_has_last_time();
  last_time_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.last_time)
}

// optional uint32 last_ordinal = 4;
inline bool CChatRoom_GetMessageHistory_Request::has_last_ordinal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_last_ordinal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_last_ordinal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_last_ordinal() {
  last_ordinal_ = 0u;
  clear_has_last_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Request::last_ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.last_ordinal)
  return last_ordinal_;
}
inline void CChatRoom_GetMessageHistory_Request::set_last_ordinal(::google::protobuf::uint32 value) {
  set_has_last_ordinal();
  last_ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.last_ordinal)
}

// optional uint32 start_time = 5;
inline bool CChatRoom_GetMessageHistory_Request::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Request::start_time() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.start_time)
  return start_time_;
}
inline void CChatRoom_GetMessageHistory_Request::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.start_time)
}

// optional uint32 start_ordinal = 6;
inline bool CChatRoom_GetMessageHistory_Request::has_start_ordinal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_start_ordinal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_start_ordinal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_start_ordinal() {
  start_ordinal_ = 0u;
  clear_has_start_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Request::start_ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.start_ordinal)
  return start_ordinal_;
}
inline void CChatRoom_GetMessageHistory_Request::set_start_ordinal(::google::protobuf::uint32 value) {
  set_has_start_ordinal();
  start_ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.start_ordinal)
}

// optional uint32 max_count = 7;
inline bool CChatRoom_GetMessageHistory_Request::has_max_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatRoom_GetMessageHistory_Request::set_has_max_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatRoom_GetMessageHistory_Request::clear_max_count() {
  max_count_ = 0u;
  clear_has_max_count();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Request::max_count() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.max_count)
  return max_count_;
}
inline void CChatRoom_GetMessageHistory_Request::set_max_count(::google::protobuf::uint32 value) {
  set_has_max_count();
  max_count_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.max_count)
}

// -------------------------------------------------------------------

// ServerMessage

// optional .EChatRoomServerMessage message = 1 [default = k_EChatRoomServerMsg_Invalid];
inline bool ServerMessage::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerMessage::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerMessage::clear_message() {
  message_ = 0;
  clear_has_message();
}
inline ::EChatRoomServerMessage ServerMessage::message() const {
  // @@protoc_insertion_point(field_get:ServerMessage.message)
  return static_cast< ::EChatRoomServerMessage >(message_);
}
inline void ServerMessage::set_message(::EChatRoomServerMessage value) {
  assert(::EChatRoomServerMessage_IsValid(value));
  set_has_message();
  message_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.message)
}

// optional string string_param = 2;
inline bool ServerMessage::has_string_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerMessage::set_has_string_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerMessage::clear_has_string_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerMessage::clear_string_param() {
  string_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_param();
}
inline const ::std::string& ServerMessage::string_param() const {
  // @@protoc_insertion_point(field_get:ServerMessage.string_param)
  return string_param_.GetNoArena();
}
inline void ServerMessage::set_string_param(const ::std::string& value) {
  set_has_string_param();
  string_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerMessage.string_param)
}
#if LANG_CXX11
inline void ServerMessage::set_string_param(::std::string&& value) {
  set_has_string_param();
  string_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMessage.string_param)
}
#endif
inline void ServerMessage::set_string_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string_param();
  string_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMessage.string_param)
}
inline void ServerMessage::set_string_param(const char* value, size_t size) {
  set_has_string_param();
  string_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMessage.string_param)
}
inline ::std::string* ServerMessage::mutable_string_param() {
  set_has_string_param();
  // @@protoc_insertion_point(field_mutable:ServerMessage.string_param)
  return string_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerMessage::release_string_param() {
  // @@protoc_insertion_point(field_release:ServerMessage.string_param)
  if (!has_string_param()) {
    return NULL;
  }
  clear_has_string_param();
  return string_param_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerMessage::set_allocated_string_param(::std::string* string_param) {
  if (string_param != NULL) {
    set_has_string_param();
  } else {
    clear_has_string_param();
  }
  string_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_param);
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.string_param)
}

// optional uint32 accountid_param = 3;
inline bool ServerMessage::has_accountid_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerMessage::set_has_accountid_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerMessage::clear_has_accountid_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerMessage::clear_accountid_param() {
  accountid_param_ = 0u;
  clear_has_accountid_param();
}
inline ::google::protobuf::uint32 ServerMessage::accountid_param() const {
  // @@protoc_insertion_point(field_get:ServerMessage.accountid_param)
  return accountid_param_;
}
inline void ServerMessage::set_accountid_param(::google::protobuf::uint32 value) {
  set_has_accountid_param();
  accountid_param_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.accountid_param)
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Response_ChatMessage

// optional uint32 sender = 1;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_sender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_has_sender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_has_sender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_sender() {
  sender_ = 0u;
  clear_has_sender();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Response_ChatMessage::sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.sender)
  return sender_;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_sender(::google::protobuf::uint32 value) {
  set_has_sender();
  sender_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.sender)
}

// optional uint32 server_timestamp = 2;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_server_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_has_server_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_has_server_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_server_timestamp() {
  server_timestamp_ = 0u;
  clear_has_server_timestamp();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Response_ChatMessage::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.server_timestamp)
  return server_timestamp_;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_server_timestamp(::google::protobuf::uint32 value) {
  set_has_server_timestamp();
  server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.server_timestamp)
}

// optional string message = 3;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CChatRoom_GetMessageHistory_Response_ChatMessage::message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
  return message_.GetNoArena();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}
#if LANG_CXX11
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}
#endif
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}
inline ::std::string* CChatRoom_GetMessageHistory_Response_ChatMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetMessageHistory_Response_ChatMessage::release_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}

// optional uint32 ordinal = 4;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_ordinal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_has_ordinal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_GetMessageHistory_Response_ChatMessage::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.ordinal)
  return ordinal_;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.ordinal)
}

// optional .ServerMessage server_message = 5;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_server_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_has_server_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_has_server_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_server_message() {
  if (server_message_ != NULL) server_message_->Clear();
  clear_has_server_message();
}
inline const ::ServerMessage& CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_server_message() const {
  return *server_message_;
}
inline const ::ServerMessage& CChatRoom_GetMessageHistory_Response_ChatMessage::server_message() const {
  const ::ServerMessage* p = server_message_;
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
  return p != NULL ? *p : *reinterpret_cast<const ::ServerMessage*>(
      &::_ServerMessage_default_instance_);
}
inline ::ServerMessage* CChatRoom_GetMessageHistory_Response_ChatMessage::release_server_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
  clear_has_server_message();
  ::ServerMessage* temp = server_message_;
  server_message_ = NULL;
  return temp;
}
inline ::ServerMessage* CChatRoom_GetMessageHistory_Response_ChatMessage::mutable_server_message() {
  set_has_server_message();
  if (server_message_ == NULL) {
    auto* p = CreateMaybeMessage<::ServerMessage>(GetArenaNoVirtual());
    server_message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
  return server_message_;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_allocated_server_message(::ServerMessage* server_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_message_;
  }
  if (server_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_message, submessage_arena);
    }
    set_has_server_message();
  } else {
    clear_has_server_message();
  }
  server_message_ = server_message;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
}

// optional bool deleted = 6;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_deleted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_has_deleted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::deleted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.deleted)
  return deleted_;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.deleted)
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Response

// repeated .CChatRoom_GetMessageHistory_Response.ChatMessage messages = 1;
inline int CChatRoom_GetMessageHistory_Response::messages_size() const {
  return messages_.size();
}
inline void CChatRoom_GetMessageHistory_Response::clear_messages() {
  messages_.Clear();
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage* CChatRoom_GetMessageHistory_Response::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.messages)
  return messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >*
CChatRoom_GetMessageHistory_Response::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetMessageHistory_Response.messages)
  return &messages_;
}
inline const ::CChatRoom_GetMessageHistory_Response_ChatMessage& CChatRoom_GetMessageHistory_Response::messages(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.messages)
  return messages_.Get(index);
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage* CChatRoom_GetMessageHistory_Response::add_messages() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetMessageHistory_Response.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >&
CChatRoom_GetMessageHistory_Response::messages() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetMessageHistory_Response.messages)
  return messages_;
}

// optional bool more_available = 4;
inline bool CChatRoom_GetMessageHistory_Response::has_more_available() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetMessageHistory_Response::set_has_more_available() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetMessageHistory_Response::clear_has_more_available() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetMessageHistory_Response::clear_more_available() {
  more_available_ = false;
  clear_has_more_available();
}
inline bool CChatRoom_GetMessageHistory_Response::more_available() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.more_available)
  return more_available_;
}
inline void CChatRoom_GetMessageHistory_Response::set_more_available(bool value) {
  set_has_more_available();
  more_available_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.more_available)
}

// -------------------------------------------------------------------

// CChatRoom_GetMyChatRoomGroups_Request

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupSummary_Response

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetChatRoomGroupSummary_Response::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_id)
}

// optional string chat_group_name = 2;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_chat_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_chat_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_name() {
  chat_group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_group_name();
}
inline const ::std::string& CChatRoom_GetChatRoomGroupSummary_Response::chat_group_name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
  return chat_group_name_.GetNoArena();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_name(const ::std::string& value) {
  set_has_chat_group_name();
  chat_group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}
#if LANG_CXX11
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_name(::std::string&& value) {
  set_has_chat_group_name();
  chat_group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}
#endif
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_group_name();
  chat_group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_name(const char* value, size_t size) {
  set_has_chat_group_name();
  chat_group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}
inline ::std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_group_name() {
  set_has_chat_group_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
  return chat_group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_chat_group_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
  if (!has_chat_group_name()) {
    return NULL;
  }
  clear_has_chat_group_name();
  return chat_group_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_chat_group_name(::std::string* chat_group_name) {
  if (chat_group_name != NULL) {
    set_has_chat_group_name();
  } else {
    clear_has_chat_group_name();
  }
  chat_group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_group_name);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}

// optional uint32 active_member_count = 3;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_active_member_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_active_member_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_active_member_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_active_member_count() {
  active_member_count_ = 0u;
  clear_has_active_member_count();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::active_member_count() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.active_member_count)
  return active_member_count_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_active_member_count(::google::protobuf::uint32 value) {
  set_has_active_member_count();
  active_member_count_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.active_member_count)
}

// optional uint32 active_voice_member_count = 4;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_active_voice_member_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_active_voice_member_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_active_voice_member_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_active_voice_member_count() {
  active_voice_member_count_ = 0u;
  clear_has_active_voice_member_count();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::active_voice_member_count() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.active_voice_member_count)
  return active_voice_member_count_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_active_voice_member_count(::google::protobuf::uint32 value) {
  set_has_active_voice_member_count();
  active_voice_member_count_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.active_voice_member_count)
}

// optional uint64 default_chat_id = 5;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_default_chat_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_default_chat_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_default_chat_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_default_chat_id() {
  default_chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_default_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetChatRoomGroupSummary_Response::default_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.default_chat_id)
  return default_chat_id_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_default_chat_id(::google::protobuf::uint64 value) {
  set_has_default_chat_id();
  default_chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.default_chat_id)
}

// repeated .CChatRoomState chat_rooms = 6;
inline int CChatRoom_GetChatRoomGroupSummary_Response::chat_rooms_size() const {
  return chat_rooms_.size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_rooms() {
  chat_rooms_.Clear();
}
inline ::CChatRoomState* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return chat_rooms_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomState >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_rooms() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return &chat_rooms_;
}
inline const ::CChatRoomState& CChatRoom_GetChatRoomGroupSummary_Response::chat_rooms(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return chat_rooms_.Get(index);
}
inline ::CChatRoomState* CChatRoom_GetChatRoomGroupSummary_Response::add_chat_rooms() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return chat_rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomState >&
CChatRoom_GetChatRoomGroupSummary_Response::chat_rooms() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return chat_rooms_;
}

// optional uint32 clanid = 7;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_clanid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_clanid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_clanid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_clanid() {
  clanid_ = 0u;
  clear_has_clanid();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::clanid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.clanid)
  return clanid_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_clanid(::google::protobuf::uint32 value) {
  set_has_clanid();
  clanid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.clanid)
}

// optional string chat_group_tagline = 8;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_tagline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_chat_group_tagline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_chat_group_tagline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_tagline() {
  chat_group_tagline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_group_tagline();
}
inline const ::std::string& CChatRoom_GetChatRoomGroupSummary_Response::chat_group_tagline() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
  return chat_group_tagline_.GetNoArena();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_tagline(const ::std::string& value) {
  set_has_chat_group_tagline();
  chat_group_tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}
#if LANG_CXX11
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_tagline(::std::string&& value) {
  set_has_chat_group_tagline();
  chat_group_tagline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}
#endif
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_tagline(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_group_tagline();
  chat_group_tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_tagline(const char* value, size_t size) {
  set_has_chat_group_tagline();
  chat_group_tagline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}
inline ::std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_group_tagline() {
  set_has_chat_group_tagline();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
  return chat_group_tagline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_chat_group_tagline() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
  if (!has_chat_group_tagline()) {
    return NULL;
  }
  clear_has_chat_group_tagline();
  return chat_group_tagline_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_chat_group_tagline(::std::string* chat_group_tagline) {
  if (chat_group_tagline != NULL) {
    set_has_chat_group_tagline();
  } else {
    clear_has_chat_group_tagline();
  }
  chat_group_tagline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_group_tagline);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}

// optional uint32 accountid_owner = 9;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_accountid_owner() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_accountid_owner() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_accountid_owner() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_accountid_owner() {
  accountid_owner_ = 0u;
  clear_has_accountid_owner();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::accountid_owner() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.accountid_owner)
  return accountid_owner_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_accountid_owner(::google::protobuf::uint32 value) {
  set_has_accountid_owner();
  accountid_owner_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.accountid_owner)
}

// repeated uint32 top_members = 10;
inline int CChatRoom_GetChatRoomGroupSummary_Response::top_members_size() const {
  return top_members_.size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_top_members() {
  top_members_.Clear();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::top_members(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
  return top_members_.Get(index);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_top_members(int index, ::google::protobuf::uint32 value) {
  top_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::add_top_members(::google::protobuf::uint32 value) {
  top_members_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CChatRoom_GetChatRoomGroupSummary_Response::top_members() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
  return top_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_top_members() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
  return &top_members_;
}

// optional bytes chat_group_avatar_sha = 11;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_avatar_sha() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_chat_group_avatar_sha() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_chat_group_avatar_sha() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_avatar_sha() {
  chat_group_avatar_sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_group_avatar_sha();
}
inline const ::std::string& CChatRoom_GetChatRoomGroupSummary_Response::chat_group_avatar_sha() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
  return chat_group_avatar_sha_.GetNoArena();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_avatar_sha(const ::std::string& value) {
  set_has_chat_group_avatar_sha();
  chat_group_avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}
#if LANG_CXX11
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_avatar_sha(::std::string&& value) {
  set_has_chat_group_avatar_sha();
  chat_group_avatar_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}
#endif
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_avatar_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_group_avatar_sha();
  chat_group_avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_avatar_sha(const void* value, size_t size) {
  set_has_chat_group_avatar_sha();
  chat_group_avatar_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}
inline ::std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_group_avatar_sha() {
  set_has_chat_group_avatar_sha();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
  return chat_group_avatar_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_chat_group_avatar_sha() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
  if (!has_chat_group_avatar_sha()) {
    return NULL;
  }
  clear_has_chat_group_avatar_sha();
  return chat_group_avatar_sha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_chat_group_avatar_sha(::std::string* chat_group_avatar_sha) {
  if (chat_group_avatar_sha != NULL) {
    set_has_chat_group_avatar_sha();
  } else {
    clear_has_chat_group_avatar_sha();
  }
  chat_group_avatar_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_group_avatar_sha);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}

// optional .EChatRoomGroupRank rank = 12 [default = k_EChatRoomGroupRank_Default];
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_rank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_rank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_rank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::EChatRoomGroupRank CChatRoom_GetChatRoomGroupSummary_Response::rank() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.rank)
  return static_cast< ::EChatRoomGroupRank >(rank_);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_rank(::EChatRoomGroupRank value) {
  assert(::EChatRoomGroupRank_IsValid(value));
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.rank)
}

// optional uint64 default_role_id = 13;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_default_role_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_default_role_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_default_role_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_default_role_id() {
  default_role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_default_role_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetChatRoomGroupSummary_Response::default_role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.default_role_id)
  return default_role_id_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_default_role_id(::google::protobuf::uint64 value) {
  set_has_default_role_id();
  default_role_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.default_role_id)
}

// repeated uint64 role_ids = 14;
inline int CChatRoom_GetChatRoomGroupSummary_Response::role_ids_size() const {
  return role_ids_.size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_role_ids() {
  role_ids_.Clear();
}
inline ::google::protobuf::uint64 CChatRoom_GetChatRoomGroupSummary_Response::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
  return role_ids_.Get(index);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_role_ids(int index, ::google::protobuf::uint64 value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::add_role_ids(::google::protobuf::uint64 value) {
  role_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CChatRoom_GetChatRoomGroupSummary_Response::role_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
  return &role_ids_;
}

// repeated .CChatRoleActions role_actions = 15;
inline int CChatRoom_GetChatRoomGroupSummary_Response::role_actions_size() const {
  return role_actions_.size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_role_actions() {
  role_actions_.Clear();
}
inline ::CChatRoleActions* CChatRoom_GetChatRoomGroupSummary_Response::mutable_role_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return role_actions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_role_actions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return &role_actions_;
}
inline const ::CChatRoleActions& CChatRoom_GetChatRoomGroupSummary_Response::role_actions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return role_actions_.Get(index);
}
inline ::CChatRoleActions* CChatRoom_GetChatRoomGroupSummary_Response::add_role_actions() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return role_actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoleActions >&
CChatRoom_GetChatRoomGroupSummary_Response::role_actions() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return role_actions_;
}

// optional uint32 watching_broadcast_accountid = 16;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_watching_broadcast_accountid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_watching_broadcast_accountid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_watching_broadcast_accountid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  clear_has_watching_broadcast_accountid();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.watching_broadcast_accountid)
  return watching_broadcast_accountid_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_watching_broadcast_accountid(::google::protobuf::uint32 value) {
  set_has_watching_broadcast_accountid();
  watching_broadcast_accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.watching_broadcast_accountid)
}

// optional uint32 appid = 17;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_appid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_has_appid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_has_appid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CChatRoom_GetChatRoomGroupSummary_Response::appid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.appid)
  return appid_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.appid)
}

// repeated .CChatPartyBeacon party_beacons = 18;
inline int CChatRoom_GetChatRoomGroupSummary_Response::party_beacons_size() const {
  return party_beacons_.size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_party_beacons() {
  party_beacons_.Clear();
}
inline ::CChatPartyBeacon* CChatRoom_GetChatRoomGroupSummary_Response::mutable_party_beacons(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return party_beacons_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_party_beacons() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return &party_beacons_;
}
inline const ::CChatPartyBeacon& CChatRoom_GetChatRoomGroupSummary_Response::party_beacons(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return party_beacons_.Get(index);
}
inline ::CChatPartyBeacon* CChatRoom_GetChatRoomGroupSummary_Response::add_party_beacons() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return party_beacons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatPartyBeacon >&
CChatRoom_GetChatRoomGroupSummary_Response::party_beacons() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return party_beacons_;
}

// -------------------------------------------------------------------

// CChatRoomSummaryPair

// optional .CUserChatRoomGroupState user_chat_group_state = 1;
inline bool CChatRoomSummaryPair::has_user_chat_group_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoomSummaryPair::set_has_user_chat_group_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoomSummaryPair::clear_has_user_chat_group_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoomSummaryPair::clear_user_chat_group_state() {
  if (user_chat_group_state_ != NULL) user_chat_group_state_->Clear();
  clear_has_user_chat_group_state();
}
inline const ::CUserChatRoomGroupState& CChatRoomSummaryPair::_internal_user_chat_group_state() const {
  return *user_chat_group_state_;
}
inline const ::CUserChatRoomGroupState& CChatRoomSummaryPair::user_chat_group_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_group_state_;
  // @@protoc_insertion_point(field_get:CChatRoomSummaryPair.user_chat_group_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CUserChatRoomGroupState*>(
      &::_CUserChatRoomGroupState_default_instance_);
}
inline ::CUserChatRoomGroupState* CChatRoomSummaryPair::release_user_chat_group_state() {
  // @@protoc_insertion_point(field_release:CChatRoomSummaryPair.user_chat_group_state)
  clear_has_user_chat_group_state();
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = NULL;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoomSummaryPair::mutable_user_chat_group_state() {
  set_has_user_chat_group_state();
  if (user_chat_group_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaNoVirtual());
    user_chat_group_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoomSummaryPair.user_chat_group_state)
  return user_chat_group_state_;
}
inline void CChatRoomSummaryPair::set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_chat_group_state_;
  }
  if (user_chat_group_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_chat_group_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_chat_group_state, submessage_arena);
    }
    set_has_user_chat_group_state();
  } else {
    clear_has_user_chat_group_state();
  }
  user_chat_group_state_ = user_chat_group_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomSummaryPair.user_chat_group_state)
}

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 2;
inline bool CChatRoomSummaryPair::has_group_summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoomSummaryPair::set_has_group_summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoomSummaryPair::clear_has_group_summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoomSummaryPair::clear_group_summary() {
  if (group_summary_ != NULL) group_summary_->Clear();
  clear_has_group_summary();
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoomSummaryPair::_internal_group_summary() const {
  return *group_summary_;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoomSummaryPair::group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  // @@protoc_insertion_point(field_get:CChatRoomSummaryPair.group_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response*>(
      &::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoomSummaryPair::release_group_summary() {
  // @@protoc_insertion_point(field_release:CChatRoomSummaryPair.group_summary)
  clear_has_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = NULL;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoomSummaryPair::mutable_group_summary() {
  set_has_group_summary();
  if (group_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaNoVirtual());
    group_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoomSummaryPair.group_summary)
  return group_summary_;
}
inline void CChatRoomSummaryPair::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_summary_;
  }
  if (group_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    set_has_group_summary();
  } else {
    clear_has_group_summary();
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomSummaryPair.group_summary)
}

// -------------------------------------------------------------------

// CChatRoom_GetMyChatRoomGroups_Response

// repeated .CChatRoomSummaryPair chat_room_groups = 1;
inline int CChatRoom_GetMyChatRoomGroups_Response::chat_room_groups_size() const {
  return chat_room_groups_.size();
}
inline void CChatRoom_GetMyChatRoomGroups_Response::clear_chat_room_groups() {
  chat_room_groups_.Clear();
}
inline ::CChatRoomSummaryPair* CChatRoom_GetMyChatRoomGroups_Response::mutable_chat_room_groups(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return chat_room_groups_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomSummaryPair >*
CChatRoom_GetMyChatRoomGroups_Response::mutable_chat_room_groups() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return &chat_room_groups_;
}
inline const ::CChatRoomSummaryPair& CChatRoom_GetMyChatRoomGroups_Response::chat_room_groups(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return chat_room_groups_.Get(index);
}
inline ::CChatRoomSummaryPair* CChatRoom_GetMyChatRoomGroups_Response::add_chat_room_groups() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return chat_room_groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomSummaryPair >&
CChatRoom_GetMyChatRoomGroups_Response::chat_room_groups() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return chat_room_groups_;
}

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupState_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetChatRoomGroupState_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetChatRoomGroupState_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupState_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupState_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetChatRoomGroupState_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupState_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetChatRoomGroupState_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupState_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupState_Response

// optional .CChatRoomGroupState state = 1;
inline bool CChatRoom_GetChatRoomGroupState_Response::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetChatRoomGroupState_Response::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupState_Response::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupState_Response::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::CChatRoomGroupState& CChatRoom_GetChatRoomGroupState_Response::_internal_state() const {
  return *state_;
}
inline const ::CChatRoomGroupState& CChatRoom_GetChatRoomGroupState_Response::state() const {
  const ::CChatRoomGroupState* p = state_;
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupState_Response.state)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomGroupState*>(
      &::_CChatRoomGroupState_default_instance_);
}
inline ::CChatRoomGroupState* CChatRoom_GetChatRoomGroupState_Response::release_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupState_Response.state)
  clear_has_state();
  ::CChatRoomGroupState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_GetChatRoomGroupState_Response::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupState>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupState_Response.state)
  return state_;
}
inline void CChatRoom_GetChatRoomGroupState_Response::set_allocated_state(::CChatRoomGroupState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupState_Response.state)
}

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupSummary_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetChatRoomGroupSummary_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetChatRoomGroupSummary_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_AckChatMessage_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_AckChatMessage_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_AckChatMessage_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_AckChatMessage_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_AckChatMessage_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_AckChatMessage_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AckChatMessage_Notification.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_AckChatMessage_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_AckChatMessage_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_AckChatMessage_Notification::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_AckChatMessage_Notification::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_AckChatMessage_Notification::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_AckChatMessage_Notification::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_AckChatMessage_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AckChatMessage_Notification.chat_id)
  return chat_id_;
}
inline void CChatRoom_AckChatMessage_Notification::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_AckChatMessage_Notification.chat_id)
}

// optional uint32 timestamp = 3;
inline bool CChatRoom_AckChatMessage_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_AckChatMessage_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_AckChatMessage_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_AckChatMessage_Notification::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CChatRoom_AckChatMessage_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AckChatMessage_Notification.timestamp)
  return timestamp_;
}
inline void CChatRoom_AckChatMessage_Notification::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_AckChatMessage_Notification.timestamp)
}

// -------------------------------------------------------------------

// CChatRoom_CreateInviteLink_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateInviteLink_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateInviteLink_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateInviteLink_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateInviteLink_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_CreateInviteLink_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_CreateInviteLink_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Request.chat_group_id)
}

// optional uint32 seconds_valid = 2;
inline bool CChatRoom_CreateInviteLink_Request::has_seconds_valid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_CreateInviteLink_Request::set_has_seconds_valid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_CreateInviteLink_Request::clear_has_seconds_valid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_CreateInviteLink_Request::clear_seconds_valid() {
  seconds_valid_ = 0u;
  clear_has_seconds_valid();
}
inline ::google::protobuf::uint32 CChatRoom_CreateInviteLink_Request::seconds_valid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Request.seconds_valid)
  return seconds_valid_;
}
inline void CChatRoom_CreateInviteLink_Request::set_seconds_valid(::google::protobuf::uint32 value) {
  set_has_seconds_valid();
  seconds_valid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Request.seconds_valid)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_CreateInviteLink_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_CreateInviteLink_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_CreateInviteLink_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_CreateInviteLink_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_CreateInviteLink_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_CreateInviteLink_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_CreateInviteLink_Response

// optional string invite_code = 1;
inline bool CChatRoom_CreateInviteLink_Response::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_CreateInviteLink_Response::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_CreateInviteLink_Response::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_CreateInviteLink_Response::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CChatRoom_CreateInviteLink_Response::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Response.invite_code)
  return invite_code_.GetNoArena();
}
inline void CChatRoom_CreateInviteLink_Response::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Response.invite_code)
}
#if LANG_CXX11
inline void CChatRoom_CreateInviteLink_Response::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_CreateInviteLink_Response.invite_code)
}
#endif
inline void CChatRoom_CreateInviteLink_Response::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_CreateInviteLink_Response.invite_code)
}
inline void CChatRoom_CreateInviteLink_Response::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_CreateInviteLink_Response.invite_code)
}
inline ::std::string* CChatRoom_CreateInviteLink_Response::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateInviteLink_Response.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_CreateInviteLink_Response::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateInviteLink_Response.invite_code)
  if (!has_invite_code()) {
    return NULL;
  }
  clear_has_invite_code();
  return invite_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_CreateInviteLink_Response::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateInviteLink_Response.invite_code)
}

// optional uint32 seconds_valid = 2;
inline bool CChatRoom_CreateInviteLink_Response::has_seconds_valid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_CreateInviteLink_Response::set_has_seconds_valid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_CreateInviteLink_Response::clear_has_seconds_valid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_CreateInviteLink_Response::clear_seconds_valid() {
  seconds_valid_ = 0u;
  clear_has_seconds_valid();
}
inline ::google::protobuf::uint32 CChatRoom_CreateInviteLink_Response::seconds_valid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Response.seconds_valid)
  return seconds_valid_;
}
inline void CChatRoom_CreateInviteLink_Response::set_seconds_valid(::google::protobuf::uint32 value) {
  set_has_seconds_valid();
  seconds_valid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Response.seconds_valid)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinkInfo_Request

// optional string invite_code = 1;
inline bool CChatRoom_GetInviteLinkInfo_Request::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Request::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteLinkInfo_Request::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteLinkInfo_Request::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CChatRoom_GetInviteLinkInfo_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Request.invite_code)
  return invite_code_.GetNoArena();
}
inline void CChatRoom_GetInviteLinkInfo_Request::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}
#if LANG_CXX11
inline void CChatRoom_GetInviteLinkInfo_Request::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}
#endif
inline void CChatRoom_GetInviteLinkInfo_Request::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}
inline void CChatRoom_GetInviteLinkInfo_Request::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}
inline ::std::string* CChatRoom_GetInviteLinkInfo_Request::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinkInfo_Request.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetInviteLinkInfo_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinkInfo_Request.invite_code)
  if (!has_invite_code()) {
    return NULL;
  }
  clear_has_invite_code();
  return invite_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetInviteLinkInfo_Request::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinkInfo_Response

// optional fixed64 steamid_sender = 3;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_steamid_sender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_steamid_sender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_steamid_sender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_steamid_sender() {
  steamid_sender_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_sender();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteLinkInfo_Response::steamid_sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.steamid_sender)
  return steamid_sender_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_steamid_sender(::google::protobuf::uint64 value) {
  set_has_steamid_sender();
  steamid_sender_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.steamid_sender)
}

// optional uint32 time_expires = 4;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_time_expires() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_time_expires() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_time_expires() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_time_expires() {
  time_expires_ = 0u;
  clear_has_time_expires();
}
inline ::google::protobuf::uint32 CChatRoom_GetInviteLinkInfo_Response::time_expires() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.time_expires)
  return time_expires_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_time_expires(::google::protobuf::uint32 value) {
  set_has_time_expires();
  time_expires_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.time_expires)
}

// optional uint64 chat_id = 6;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_chat_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_chat_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteLinkInfo_Response::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.chat_id)
  return chat_id_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.chat_id)
}

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 8;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_group_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_group_summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_group_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_group_summary() {
  if (group_summary_ != NULL) group_summary_->Clear();
  clear_has_group_summary();
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteLinkInfo_Response::_internal_group_summary() const {
  return *group_summary_;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteLinkInfo_Response::group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.group_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response*>(
      &::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteLinkInfo_Response::release_group_summary() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinkInfo_Response.group_summary)
  clear_has_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = NULL;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteLinkInfo_Response::mutable_group_summary() {
  set_has_group_summary();
  if (group_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaNoVirtual());
    group_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinkInfo_Response.group_summary)
  return group_summary_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_summary_;
  }
  if (group_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    set_has_group_summary();
  } else {
    clear_has_group_summary();
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinkInfo_Response.group_summary)
}

// optional .CUserChatRoomGroupState user_chat_group_state = 9;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_user_chat_group_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_user_chat_group_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_user_chat_group_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_user_chat_group_state() {
  if (user_chat_group_state_ != NULL) user_chat_group_state_->Clear();
  clear_has_user_chat_group_state();
}
inline const ::CUserChatRoomGroupState& CChatRoom_GetInviteLinkInfo_Response::_internal_user_chat_group_state() const {
  return *user_chat_group_state_;
}
inline const ::CUserChatRoomGroupState& CChatRoom_GetInviteLinkInfo_Response::user_chat_group_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_group_state_;
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CUserChatRoomGroupState*>(
      &::_CUserChatRoomGroupState_default_instance_);
}
inline ::CUserChatRoomGroupState* CChatRoom_GetInviteLinkInfo_Response::release_user_chat_group_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
  clear_has_user_chat_group_state();
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = NULL;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_GetInviteLinkInfo_Response::mutable_user_chat_group_state() {
  set_has_user_chat_group_state();
  if (user_chat_group_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaNoVirtual());
    user_chat_group_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
  return user_chat_group_state_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_chat_group_state_;
  }
  if (user_chat_group_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_chat_group_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_chat_group_state, submessage_arena);
    }
    set_has_user_chat_group_state();
  } else {
    clear_has_user_chat_group_state();
  }
  user_chat_group_state_ = user_chat_group_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
}

// optional uint32 time_kick_expire = 10;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_time_kick_expire() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_time_kick_expire() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_time_kick_expire() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_time_kick_expire() {
  time_kick_expire_ = 0u;
  clear_has_time_kick_expire();
}
inline ::google::protobuf::uint32 CChatRoom_GetInviteLinkInfo_Response::time_kick_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.time_kick_expire)
  return time_kick_expire_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_time_kick_expire(::google::protobuf::uint32 value) {
  set_has_time_kick_expire();
  time_kick_expire_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.time_kick_expire)
}

// optional bool banned = 11;
inline bool CChatRoom_GetInviteLinkInfo_Response::has_banned() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_has_banned() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_has_banned() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_banned() {
  banned_ = false;
  clear_has_banned();
}
inline bool CChatRoom_GetInviteLinkInfo_Response::banned() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.banned)
  return banned_;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_banned(bool value) {
  set_has_banned();
  banned_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.banned)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteInfo_Request

// optional fixed64 steamid_invitee = 1;
inline bool CChatRoom_GetInviteInfo_Request::has_steamid_invitee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetInviteInfo_Request::set_has_steamid_invitee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_has_steamid_invitee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_steamid_invitee() {
  steamid_invitee_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_invitee();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteInfo_Request::steamid_invitee() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.steamid_invitee)
  return steamid_invitee_;
}
inline void CChatRoom_GetInviteInfo_Request::set_steamid_invitee(::google::protobuf::uint64 value) {
  set_has_steamid_invitee();
  steamid_invitee_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.steamid_invitee)
}

// optional uint64 chat_group_id = 2;
inline bool CChatRoom_GetInviteInfo_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetInviteInfo_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteInfo_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetInviteInfo_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.chat_group_id)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_GetInviteInfo_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetInviteInfo_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteInfo_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_GetInviteInfo_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.chat_id)
}

// optional string invite_code = 4;
inline bool CChatRoom_GetInviteInfo_Request::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteInfo_Request::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteInfo_Request::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CChatRoom_GetInviteInfo_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.invite_code)
  return invite_code_.GetNoArena();
}
inline void CChatRoom_GetInviteInfo_Request::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.invite_code)
}
#if LANG_CXX11
inline void CChatRoom_GetInviteInfo_Request::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetInviteInfo_Request.invite_code)
}
#endif
inline void CChatRoom_GetInviteInfo_Request::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetInviteInfo_Request.invite_code)
}
inline void CChatRoom_GetInviteInfo_Request::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetInviteInfo_Request.invite_code)
}
inline ::std::string* CChatRoom_GetInviteInfo_Request::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteInfo_Request.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetInviteInfo_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteInfo_Request.invite_code)
  if (!has_invite_code()) {
    return NULL;
  }
  clear_has_invite_code();
  return invite_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetInviteInfo_Request::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteInfo_Request.invite_code)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteInfo_Response

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 1;
inline bool CChatRoom_GetInviteInfo_Response::has_group_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteInfo_Response::set_has_group_summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteInfo_Response::clear_has_group_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteInfo_Response::clear_group_summary() {
  if (group_summary_ != NULL) group_summary_->Clear();
  clear_has_group_summary();
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteInfo_Response::_internal_group_summary() const {
  return *group_summary_;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteInfo_Response::group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Response.group_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response*>(
      &::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteInfo_Response::release_group_summary() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteInfo_Response.group_summary)
  clear_has_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = NULL;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteInfo_Response::mutable_group_summary() {
  set_has_group_summary();
  if (group_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaNoVirtual());
    group_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteInfo_Response.group_summary)
  return group_summary_;
}
inline void CChatRoom_GetInviteInfo_Response::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_summary_;
  }
  if (group_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    set_has_group_summary();
  } else {
    clear_has_group_summary();
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteInfo_Response.group_summary)
}

// optional uint32 time_kick_expire = 2;
inline bool CChatRoom_GetInviteInfo_Response::has_time_kick_expire() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetInviteInfo_Response::set_has_time_kick_expire() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetInviteInfo_Response::clear_has_time_kick_expire() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetInviteInfo_Response::clear_time_kick_expire() {
  time_kick_expire_ = 0u;
  clear_has_time_kick_expire();
}
inline ::google::protobuf::uint32 CChatRoom_GetInviteInfo_Response::time_kick_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Response.time_kick_expire)
  return time_kick_expire_;
}
inline void CChatRoom_GetInviteInfo_Response::set_time_kick_expire(::google::protobuf::uint32 value) {
  set_has_time_kick_expire();
  time_kick_expire_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Response.time_kick_expire)
}

// optional bool banned = 3;
inline bool CChatRoom_GetInviteInfo_Response::has_banned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetInviteInfo_Response::set_has_banned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetInviteInfo_Response::clear_has_banned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetInviteInfo_Response::clear_banned() {
  banned_ = false;
  clear_has_banned();
}
inline bool CChatRoom_GetInviteInfo_Response::banned() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Response.banned)
  return banned_;
}
inline void CChatRoom_GetInviteInfo_Response::set_banned(bool value) {
  set_has_banned();
  banned_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Response.banned)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinksForGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetInviteLinksForGroup_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteLinksForGroup_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteLinksForGroup_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteLinksForGroup_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteLinksForGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetInviteLinksForGroup_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinksForGroup_Response_LinkInfo

// optional string invite_code = 1;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
  return invite_code_.GetNoArena();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}
#if LANG_CXX11
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}
#endif
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}
inline ::std::string* CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
  if (!has_invite_code()) {
    return NULL;
  }
  clear_has_invite_code();
  return invite_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}

// optional fixed64 steamid_creator = 2;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_steamid_creator() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_has_steamid_creator() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_has_steamid_creator() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_steamid_creator() {
  steamid_creator_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_creator();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::steamid_creator() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.steamid_creator)
  return steamid_creator_;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_steamid_creator(::google::protobuf::uint64 value) {
  set_has_steamid_creator();
  steamid_creator_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.steamid_creator)
}

// optional uint32 time_expires = 3;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_time_expires() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_has_time_expires() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_has_time_expires() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_time_expires() {
  time_expires_ = 0u;
  clear_has_time_expires();
}
inline ::google::protobuf::uint32 CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::time_expires() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.time_expires)
  return time_expires_;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_time_expires(::google::protobuf::uint32 value) {
  set_has_time_expires();
  time_expires_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.time_expires)
}

// optional uint64 chat_id = 4;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_chat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_has_chat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.chat_id)
  return chat_id_;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinksForGroup_Response

// repeated .CChatRoom_GetInviteLinksForGroup_Response.LinkInfo invite_links = 1;
inline int CChatRoom_GetInviteLinksForGroup_Response::invite_links_size() const {
  return invite_links_.size();
}
inline void CChatRoom_GetInviteLinksForGroup_Response::clear_invite_links() {
  invite_links_.Clear();
}
inline ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* CChatRoom_GetInviteLinksForGroup_Response::mutable_invite_links(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return invite_links_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >*
CChatRoom_GetInviteLinksForGroup_Response::mutable_invite_links() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return &invite_links_;
}
inline const ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& CChatRoom_GetInviteLinksForGroup_Response::invite_links(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return invite_links_.Get(index);
}
inline ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* CChatRoom_GetInviteLinksForGroup_Response::add_invite_links() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return invite_links_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >&
CChatRoom_GetInviteLinksForGroup_Response::invite_links() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return invite_links_;
}

// -------------------------------------------------------------------

// CChatRoom_GetBanList_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetBanList_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetBanList_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetBanList_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetBanList_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetBanList_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetBanList_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetBanList_Response_BanInfo

// optional uint32 accountid = 1;
inline bool CChatRoom_GetBanList_Response_BanInfo::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CChatRoom_GetBanList_Response_BanInfo::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.accountid)
  return accountid_;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.accountid)
}

// optional uint32 accountid_actor = 2;
inline bool CChatRoom_GetBanList_Response_BanInfo::has_accountid_actor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_has_accountid_actor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_has_accountid_actor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_accountid_actor() {
  accountid_actor_ = 0u;
  clear_has_accountid_actor();
}
inline ::google::protobuf::uint32 CChatRoom_GetBanList_Response_BanInfo::accountid_actor() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.accountid_actor)
  return accountid_actor_;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_accountid_actor(::google::protobuf::uint32 value) {
  set_has_accountid_actor();
  accountid_actor_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.accountid_actor)
}

// optional uint32 time_banned = 3;
inline bool CChatRoom_GetBanList_Response_BanInfo::has_time_banned() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_has_time_banned() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_has_time_banned() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_time_banned() {
  time_banned_ = 0u;
  clear_has_time_banned();
}
inline ::google::protobuf::uint32 CChatRoom_GetBanList_Response_BanInfo::time_banned() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.time_banned)
  return time_banned_;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_time_banned(::google::protobuf::uint32 value) {
  set_has_time_banned();
  time_banned_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.time_banned)
}

// optional string ban_reason = 4;
inline bool CChatRoom_GetBanList_Response_BanInfo::has_ban_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_has_ban_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_has_ban_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_ban_reason() {
  ban_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ban_reason();
}
inline const ::std::string& CChatRoom_GetBanList_Response_BanInfo::ban_reason() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
  return ban_reason_.GetNoArena();
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_ban_reason(const ::std::string& value) {
  set_has_ban_reason();
  ban_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}
#if LANG_CXX11
inline void CChatRoom_GetBanList_Response_BanInfo::set_ban_reason(::std::string&& value) {
  set_has_ban_reason();
  ban_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}
#endif
inline void CChatRoom_GetBanList_Response_BanInfo::set_ban_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ban_reason();
  ban_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_ban_reason(const char* value, size_t size) {
  set_has_ban_reason();
  ban_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}
inline ::std::string* CChatRoom_GetBanList_Response_BanInfo::mutable_ban_reason() {
  set_has_ban_reason();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
  return ban_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_GetBanList_Response_BanInfo::release_ban_reason() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
  if (!has_ban_reason()) {
    return NULL;
  }
  clear_has_ban_reason();
  return ban_reason_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_allocated_ban_reason(::std::string* ban_reason) {
  if (ban_reason != NULL) {
    set_has_ban_reason();
  } else {
    clear_has_ban_reason();
  }
  ban_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ban_reason);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}

// -------------------------------------------------------------------

// CChatRoom_GetBanList_Response

// repeated .CChatRoom_GetBanList_Response.BanInfo bans = 1;
inline int CChatRoom_GetBanList_Response::bans_size() const {
  return bans_.size();
}
inline void CChatRoom_GetBanList_Response::clear_bans() {
  bans_.Clear();
}
inline ::CChatRoom_GetBanList_Response_BanInfo* CChatRoom_GetBanList_Response::mutable_bans(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetBanList_Response.bans)
  return bans_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >*
CChatRoom_GetBanList_Response::mutable_bans() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetBanList_Response.bans)
  return &bans_;
}
inline const ::CChatRoom_GetBanList_Response_BanInfo& CChatRoom_GetBanList_Response::bans(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.bans)
  return bans_.Get(index);
}
inline ::CChatRoom_GetBanList_Response_BanInfo* CChatRoom_GetBanList_Response::add_bans() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetBanList_Response.bans)
  return bans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >&
CChatRoom_GetBanList_Response::bans() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetBanList_Response.bans)
  return bans_;
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteList_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetInviteList_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_GetInviteList_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_GetInviteList_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_GetInviteList_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_GetInviteList_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteList_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_GetInviteList_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteList_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoomGroupInvite

// optional uint32 accountid = 1;
inline bool CChatRoomGroupInvite::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoomGroupInvite::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoomGroupInvite::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoomGroupInvite::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CChatRoomGroupInvite::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupInvite.accountid)
  return accountid_;
}
inline void CChatRoomGroupInvite::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupInvite.accountid)
}

// optional uint32 accountid_actor = 2;
inline bool CChatRoomGroupInvite::has_accountid_actor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoomGroupInvite::set_has_accountid_actor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoomGroupInvite::clear_has_accountid_actor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoomGroupInvite::clear_accountid_actor() {
  accountid_actor_ = 0u;
  clear_has_accountid_actor();
}
inline ::google::protobuf::uint32 CChatRoomGroupInvite::accountid_actor() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupInvite.accountid_actor)
  return accountid_actor_;
}
inline void CChatRoomGroupInvite::set_accountid_actor(::google::protobuf::uint32 value) {
  set_has_accountid_actor();
  accountid_actor_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupInvite.accountid_actor)
}

// optional uint32 time_invited = 3;
inline bool CChatRoomGroupInvite::has_time_invited() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoomGroupInvite::set_has_time_invited() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoomGroupInvite::clear_has_time_invited() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoomGroupInvite::clear_time_invited() {
  time_invited_ = 0u;
  clear_has_time_invited();
}
inline ::google::protobuf::uint32 CChatRoomGroupInvite::time_invited() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupInvite.time_invited)
  return time_invited_;
}
inline void CChatRoomGroupInvite::set_time_invited(::google::protobuf::uint32 value) {
  set_has_time_invited();
  time_invited_ = value;
  // @@protoc_insertion_point(field_set:CChatRoomGroupInvite.time_invited)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteList_Response

// repeated .CChatRoomGroupInvite invites = 1;
inline int CChatRoom_GetInviteList_Response::invites_size() const {
  return invites_.size();
}
inline void CChatRoom_GetInviteList_Response::clear_invites() {
  invites_.Clear();
}
inline ::CChatRoomGroupInvite* CChatRoom_GetInviteList_Response::mutable_invites(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteList_Response.invites)
  return invites_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupInvite >*
CChatRoom_GetInviteList_Response::mutable_invites() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetInviteList_Response.invites)
  return &invites_;
}
inline const ::CChatRoomGroupInvite& CChatRoom_GetInviteList_Response::invites(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteList_Response.invites)
  return invites_.Get(index);
}
inline ::CChatRoomGroupInvite* CChatRoom_GetInviteList_Response::add_invites() {
  // @@protoc_insertion_point(field_add:CChatRoom_GetInviteList_Response.invites)
  return invites_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupInvite >&
CChatRoom_GetInviteList_Response::invites() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetInviteList_Response.invites)
  return invites_;
}

// -------------------------------------------------------------------

// CChatRoom_DeleteInviteLink_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteInviteLink_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_DeleteInviteLink_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_DeleteInviteLink_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_DeleteInviteLink_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteInviteLink_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteInviteLink_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_DeleteInviteLink_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteInviteLink_Request.chat_group_id)
}

// optional string invite_code = 2;
inline bool CChatRoom_DeleteInviteLink_Request::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_DeleteInviteLink_Request::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_DeleteInviteLink_Request::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_DeleteInviteLink_Request::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CChatRoom_DeleteInviteLink_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteInviteLink_Request.invite_code)
  return invite_code_.GetNoArena();
}
inline void CChatRoom_DeleteInviteLink_Request::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteInviteLink_Request.invite_code)
}
#if LANG_CXX11
inline void CChatRoom_DeleteInviteLink_Request::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_DeleteInviteLink_Request.invite_code)
}
#endif
inline void CChatRoom_DeleteInviteLink_Request::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_DeleteInviteLink_Request.invite_code)
}
inline void CChatRoom_DeleteInviteLink_Request::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_DeleteInviteLink_Request.invite_code)
}
inline ::std::string* CChatRoom_DeleteInviteLink_Request::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_DeleteInviteLink_Request.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_DeleteInviteLink_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_DeleteInviteLink_Request.invite_code)
  if (!has_invite_code()) {
    return NULL;
  }
  clear_has_invite_code();
  return invite_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_DeleteInviteLink_Request::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_DeleteInviteLink_Request.invite_code)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteInviteLink_Response

// -------------------------------------------------------------------

// CChatRoom_SetSessionActiveChatRoomGroups_Request

// repeated uint64 chat_group_ids = 1;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_group_ids_size() const {
  return chat_group_ids_.size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::clear_chat_group_ids() {
  chat_group_ids_.Clear();
}
inline ::google::protobuf::uint64 CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
  return chat_group_ids_.Get(index);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::set_chat_group_ids(int index, ::google::protobuf::uint64 value) {
  chat_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::add_chat_group_ids(::google::protobuf::uint64 value) {
  chat_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_group_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
  return chat_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CChatRoom_SetSessionActiveChatRoomGroups_Request::mutable_chat_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
  return &chat_group_ids_;
}

// repeated uint64 chat_groups_data_requested = 2;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_groups_data_requested_size() const {
  return chat_groups_data_requested_.size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::clear_chat_groups_data_requested() {
  chat_groups_data_requested_.Clear();
}
inline ::google::protobuf::uint64 CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_groups_data_requested(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
  return chat_groups_data_requested_.Get(index);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::set_chat_groups_data_requested(int index, ::google::protobuf::uint64 value) {
  chat_groups_data_requested_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::add_chat_groups_data_requested(::google::protobuf::uint64 value) {
  chat_groups_data_requested_.Add(value);
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_groups_data_requested() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
  return chat_groups_data_requested_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CChatRoom_SetSessionActiveChatRoomGroups_Request::mutable_chat_groups_data_requested() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
  return &chat_groups_data_requested_;
}

// -------------------------------------------------------------------

// CChatRoom_SetSessionActiveChatRoomGroups_Response

// repeated .CChatRoomGroupState chat_states = 1;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Response::chat_states_size() const {
  return chat_states_.size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Response::clear_chat_states() {
  chat_states_.Clear();
}
inline ::CChatRoomGroupState* CChatRoom_SetSessionActiveChatRoomGroups_Response::mutable_chat_states(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return chat_states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupState >*
CChatRoom_SetSessionActiveChatRoomGroups_Response::mutable_chat_states() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return &chat_states_;
}
inline const ::CChatRoomGroupState& CChatRoom_SetSessionActiveChatRoomGroups_Response::chat_states(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return chat_states_.Get(index);
}
inline ::CChatRoomGroupState* CChatRoom_SetSessionActiveChatRoomGroups_Response::add_chat_states() {
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return chat_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomGroupState >&
CChatRoom_SetSessionActiveChatRoomGroups_Response::chat_states() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return chat_states_;
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences

// optional .EChatRoomNotificationLevel desktop_notification_level = 1 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::has_desktop_notification_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_has_desktop_notification_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_has_desktop_notification_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  clear_has_desktop_notification_level();
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.desktop_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_desktop_notification_level();
  desktop_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::has_mobile_notification_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_has_mobile_notification_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_has_mobile_notification_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  clear_has_mobile_notification_level();
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.mobile_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_mobile_notification_level();
  mobile_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.mobile_notification_level)
}

// optional bool unread_indicator_muted = 3;
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::has_unread_indicator_muted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_has_unread_indicator_muted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_has_unread_indicator_muted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  clear_has_unread_indicator_muted();
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.unread_indicator_muted)
  return unread_indicator_muted_;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_unread_indicator_muted(bool value) {
  set_has_unread_indicator_muted();
  unread_indicator_muted_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences

// optional uint64 chat_id = 1;
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_chat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_has_chat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.chat_id)
  return chat_id_;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.chat_id)
}

// optional .EChatRoomNotificationLevel desktop_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_desktop_notification_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_has_desktop_notification_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_has_desktop_notification_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  clear_has_desktop_notification_level();
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.desktop_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_desktop_notification_level();
  desktop_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 3 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_mobile_notification_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_has_mobile_notification_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_has_mobile_notification_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  clear_has_mobile_notification_level();
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.mobile_notification_level)
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  set_has_mobile_notification_level();
  mobile_notification_level_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.mobile_notification_level)
}

// optional bool unread_indicator_muted = 4;
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_unread_indicator_muted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_has_unread_indicator_muted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_has_unread_indicator_muted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  clear_has_unread_indicator_muted();
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.unread_indicator_muted)
  return unread_indicator_muted_;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_unread_indicator_muted(bool value) {
  set_has_unread_indicator_muted();
  unread_indicator_muted_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetUserChatGroupPreferences_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_SetUserChatGroupPreferences_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_id)
}

// optional .CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences chat_group_preferences = 2;
inline bool CChatRoom_SetUserChatGroupPreferences_Request::has_chat_group_preferences() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::set_has_chat_group_preferences() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_has_chat_group_preferences() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_chat_group_preferences() {
  if (chat_group_preferences_ != NULL) chat_group_preferences_->Clear();
  clear_has_chat_group_preferences();
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& CChatRoom_SetUserChatGroupPreferences_Request::_internal_chat_group_preferences() const {
  return *chat_group_preferences_;
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& CChatRoom_SetUserChatGroupPreferences_Request::chat_group_preferences() const {
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* p = chat_group_preferences_;
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences*>(
      &::_CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences_default_instance_);
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* CChatRoom_SetUserChatGroupPreferences_Request::release_chat_group_preferences() {
  // @@protoc_insertion_point(field_release:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
  clear_has_chat_group_preferences();
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* temp = chat_group_preferences_;
  chat_group_preferences_ = NULL;
  return temp;
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* CChatRoom_SetUserChatGroupPreferences_Request::mutable_chat_group_preferences() {
  set_has_chat_group_preferences();
  if (chat_group_preferences_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(GetArenaNoVirtual());
    chat_group_preferences_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
  return chat_group_preferences_;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::set_allocated_chat_group_preferences(::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chat_group_preferences_;
  }
  if (chat_group_preferences) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chat_group_preferences = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chat_group_preferences, submessage_arena);
    }
    set_has_chat_group_preferences();
  } else {
    clear_has_chat_group_preferences();
  }
  chat_group_preferences_ = chat_group_preferences;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
}

// repeated .CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences chat_room_preferences = 3;
inline int CChatRoom_SetUserChatGroupPreferences_Request::chat_room_preferences_size() const {
  return chat_room_preferences_.size();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_chat_room_preferences() {
  chat_room_preferences_.Clear();
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* CChatRoom_SetUserChatGroupPreferences_Request::mutable_chat_room_preferences(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return chat_room_preferences_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >*
CChatRoom_SetUserChatGroupPreferences_Request::mutable_chat_room_preferences() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return &chat_room_preferences_;
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& CChatRoom_SetUserChatGroupPreferences_Request::chat_room_preferences(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return chat_room_preferences_.Get(index);
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* CChatRoom_SetUserChatGroupPreferences_Request::add_chat_room_preferences() {
  // @@protoc_insertion_point(field_add:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return chat_room_preferences_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >&
CChatRoom_SetUserChatGroupPreferences_Request::chat_room_preferences() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return chat_room_preferences_;
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Response

// -------------------------------------------------------------------

// CChatRoom_DeleteChatMessages_Request_Message

// optional uint32 server_timestamp = 1;
inline bool CChatRoom_DeleteChatMessages_Request_Message::has_server_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::set_has_server_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::clear_has_server_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::clear_server_timestamp() {
  server_timestamp_ = 0u;
  clear_has_server_timestamp();
}
inline ::google::protobuf::uint32 CChatRoom_DeleteChatMessages_Request_Message::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.Message.server_timestamp)
  return server_timestamp_;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::set_server_timestamp(::google::protobuf::uint32 value) {
  set_has_server_timestamp();
  server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.Message.server_timestamp)
}

// optional uint32 ordinal = 2;
inline bool CChatRoom_DeleteChatMessages_Request_Message::has_ordinal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::set_has_ordinal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_DeleteChatMessages_Request_Message::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.Message.ordinal)
  return ordinal_;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.Message.ordinal)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatMessages_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteChatMessages_Request::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_DeleteChatMessages_Request::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_DeleteChatMessages_Request::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_DeleteChatMessages_Request::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteChatMessages_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_DeleteChatMessages_Request::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_DeleteChatMessages_Request::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_DeleteChatMessages_Request::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_DeleteChatMessages_Request::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_DeleteChatMessages_Request::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_DeleteChatMessages_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.chat_id)
  return chat_id_;
}
inline void CChatRoom_DeleteChatMessages_Request::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.chat_id)
}

// repeated .CChatRoom_DeleteChatMessages_Request.Message messages = 3;
inline int CChatRoom_DeleteChatMessages_Request::messages_size() const {
  return messages_.size();
}
inline void CChatRoom_DeleteChatMessages_Request::clear_messages() {
  messages_.Clear();
}
inline ::CChatRoom_DeleteChatMessages_Request_Message* CChatRoom_DeleteChatMessages_Request::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_DeleteChatMessages_Request.messages)
  return messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >*
CChatRoom_DeleteChatMessages_Request::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_DeleteChatMessages_Request.messages)
  return &messages_;
}
inline const ::CChatRoom_DeleteChatMessages_Request_Message& CChatRoom_DeleteChatMessages_Request::messages(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.messages)
  return messages_.Get(index);
}
inline ::CChatRoom_DeleteChatMessages_Request_Message* CChatRoom_DeleteChatMessages_Request::add_messages() {
  // @@protoc_insertion_point(field_add:CChatRoom_DeleteChatMessages_Request.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >&
CChatRoom_DeleteChatMessages_Request::messages() const {
  // @@protoc_insertion_point(field_list:CChatRoom_DeleteChatMessages_Request.messages)
  return messages_;
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatMessages_Response

// -------------------------------------------------------------------

// CClanChatRooms_GetClanChatRoomInfo_Request

// optional fixed64 steamid = 1;
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CClanChatRooms_GetClanChatRoomInfo_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_GetClanChatRoomInfo_Request.steamid)
  return steamid_;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CClanChatRooms_GetClanChatRoomInfo_Request.steamid)
}

// optional bool autocreate = 2 [default = true, (.description) = "Create a default chat room if none has been created before."];
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::has_autocreate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::set_has_autocreate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::clear_has_autocreate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::clear_autocreate() {
  autocreate_ = true;
  clear_has_autocreate();
}
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::autocreate() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_GetClanChatRoomInfo_Request.autocreate)
  return autocreate_;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::set_autocreate(bool value) {
  set_has_autocreate();
  autocreate_ = value;
  // @@protoc_insertion_point(field_set:CClanChatRooms_GetClanChatRoomInfo_Request.autocreate)
}

// -------------------------------------------------------------------

// CClanChatRooms_GetClanChatRoomInfo_Response

// optional .CChatRoom_GetChatRoomGroupSummary_Response chat_group_summary = 1;
inline bool CClanChatRooms_GetClanChatRoomInfo_Response::has_chat_group_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::set_has_chat_group_summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::clear_has_chat_group_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::clear_chat_group_summary() {
  if (chat_group_summary_ != NULL) chat_group_summary_->Clear();
  clear_has_chat_group_summary();
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CClanChatRooms_GetClanChatRoomInfo_Response::_internal_chat_group_summary() const {
  return *chat_group_summary_;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CClanChatRooms_GetClanChatRoomInfo_Response::chat_group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = chat_group_summary_;
  // @@protoc_insertion_point(field_get:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response*>(
      &::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CClanChatRooms_GetClanChatRoomInfo_Response::release_chat_group_summary() {
  // @@protoc_insertion_point(field_release:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
  clear_has_chat_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = chat_group_summary_;
  chat_group_summary_ = NULL;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CClanChatRooms_GetClanChatRoomInfo_Response::mutable_chat_group_summary() {
  set_has_chat_group_summary();
  if (chat_group_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaNoVirtual());
    chat_group_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
  return chat_group_summary_;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::set_allocated_chat_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chat_group_summary_;
  }
  if (chat_group_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chat_group_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chat_group_summary, submessage_arena);
    }
    set_has_chat_group_summary();
  } else {
    clear_has_chat_group_summary();
  }
  chat_group_summary_ = chat_group_summary;
  // @@protoc_insertion_point(field_set_allocated:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
}

// -------------------------------------------------------------------

// CClanChatRooms_SetClanChatRoomPrivate_Request

// optional fixed64 steamid = 1;
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CClanChatRooms_SetClanChatRoomPrivate_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_SetClanChatRoomPrivate_Request.steamid)
  return steamid_;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CClanChatRooms_SetClanChatRoomPrivate_Request.steamid)
}

// optional bool chat_room_private = 2;
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::has_chat_room_private() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::set_has_chat_room_private() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::clear_has_chat_room_private() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::clear_chat_room_private() {
  chat_room_private_ = false;
  clear_has_chat_room_private();
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::chat_room_private() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_SetClanChatRoomPrivate_Request.chat_room_private)
  return chat_room_private_;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::set_chat_room_private(bool value) {
  set_has_chat_room_private();
  chat_room_private_ = value;
  // @@protoc_insertion_point(field_set:CClanChatRooms_SetClanChatRoomPrivate_Request.chat_room_private)
}

// -------------------------------------------------------------------

// CClanChatRooms_SetClanChatRoomPrivate_Response

// optional bool chat_room_private = 1;
inline bool CClanChatRooms_SetClanChatRoomPrivate_Response::has_chat_room_private() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::set_has_chat_room_private() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::clear_has_chat_room_private() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::clear_chat_room_private() {
  chat_room_private_ = false;
  clear_has_chat_room_private();
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Response::chat_room_private() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_SetClanChatRoomPrivate_Response.chat_room_private)
  return chat_room_private_;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::set_chat_room_private(bool value) {
  set_has_chat_room_private();
  chat_room_private_ = value;
  // @@protoc_insertion_point(field_set:CClanChatRooms_SetClanChatRoomPrivate_Response.chat_room_private)
}

// -------------------------------------------------------------------

// CChatMentions

// optional bool mention_all = 1;
inline bool CChatMentions::has_mention_all() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatMentions::set_has_mention_all() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatMentions::clear_has_mention_all() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatMentions::clear_mention_all() {
  mention_all_ = false;
  clear_has_mention_all();
}
inline bool CChatMentions::mention_all() const {
  // @@protoc_insertion_point(field_get:CChatMentions.mention_all)
  return mention_all_;
}
inline void CChatMentions::set_mention_all(bool value) {
  set_has_mention_all();
  mention_all_ = value;
  // @@protoc_insertion_point(field_set:CChatMentions.mention_all)
}

// optional bool mention_here = 2;
inline bool CChatMentions::has_mention_here() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatMentions::set_has_mention_here() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatMentions::clear_has_mention_here() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatMentions::clear_mention_here() {
  mention_here_ = false;
  clear_has_mention_here();
}
inline bool CChatMentions::mention_here() const {
  // @@protoc_insertion_point(field_get:CChatMentions.mention_here)
  return mention_here_;
}
inline void CChatMentions::set_mention_here(bool value) {
  set_has_mention_here();
  mention_here_ = value;
  // @@protoc_insertion_point(field_set:CChatMentions.mention_here)
}

// repeated uint32 mention_accountids = 3;
inline int CChatMentions::mention_accountids_size() const {
  return mention_accountids_.size();
}
inline void CChatMentions::clear_mention_accountids() {
  mention_accountids_.Clear();
}
inline ::google::protobuf::uint32 CChatMentions::mention_accountids(int index) const {
  // @@protoc_insertion_point(field_get:CChatMentions.mention_accountids)
  return mention_accountids_.Get(index);
}
inline void CChatMentions::set_mention_accountids(int index, ::google::protobuf::uint32 value) {
  mention_accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatMentions.mention_accountids)
}
inline void CChatMentions::add_mention_accountids(::google::protobuf::uint32 value) {
  mention_accountids_.Add(value);
  // @@protoc_insertion_point(field_add:CChatMentions.mention_accountids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CChatMentions::mention_accountids() const {
  // @@protoc_insertion_point(field_list:CChatMentions.mention_accountids)
  return mention_accountids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CChatMentions::mutable_mention_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CChatMentions.mention_accountids)
  return &mention_accountids_;
}

// -------------------------------------------------------------------

// CChatRoom_IncomingChatMessage_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_IncomingChatMessage_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_IncomingChatMessage_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_IncomingChatMessage_Notification::has_chat_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_chat_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_IncomingChatMessage_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.chat_id)
  return chat_id_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.chat_id)
}

// optional fixed64 steamid_sender = 3;
inline bool CChatRoom_IncomingChatMessage_Notification::has_steamid_sender() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_steamid_sender() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_steamid_sender() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_steamid_sender() {
  steamid_sender_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_sender();
}
inline ::google::protobuf::uint64 CChatRoom_IncomingChatMessage_Notification::steamid_sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.steamid_sender)
  return steamid_sender_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_steamid_sender(::google::protobuf::uint64 value) {
  set_has_steamid_sender();
  steamid_sender_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.steamid_sender)
}

// optional string message = 4;
inline bool CChatRoom_IncomingChatMessage_Notification::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CChatRoom_IncomingChatMessage_Notification::message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.message)
  return message_.GetNoArena();
}
inline void CChatRoom_IncomingChatMessage_Notification::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.message)
}
#if LANG_CXX11
inline void CChatRoom_IncomingChatMessage_Notification::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_IncomingChatMessage_Notification.message)
}
#endif
inline void CChatRoom_IncomingChatMessage_Notification::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_IncomingChatMessage_Notification.message)
}
inline void CChatRoom_IncomingChatMessage_Notification::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_IncomingChatMessage_Notification.message)
}
inline ::std::string* CChatRoom_IncomingChatMessage_Notification::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_IncomingChatMessage_Notification::release_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.message)
}

// optional uint32 timestamp = 5;
inline bool CChatRoom_IncomingChatMessage_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CChatRoom_IncomingChatMessage_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.timestamp)
  return timestamp_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.timestamp)
}

// optional .CChatMentions mentions = 6;
inline bool CChatRoom_IncomingChatMessage_Notification::has_mentions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_mentions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_mentions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_mentions() {
  if (mentions_ != NULL) mentions_->Clear();
  clear_has_mentions();
}
inline const ::CChatMentions& CChatRoom_IncomingChatMessage_Notification::_internal_mentions() const {
  return *mentions_;
}
inline const ::CChatMentions& CChatRoom_IncomingChatMessage_Notification::mentions() const {
  const ::CChatMentions* p = mentions_;
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.mentions)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatMentions*>(
      &::_CChatMentions_default_instance_);
}
inline ::CChatMentions* CChatRoom_IncomingChatMessage_Notification::release_mentions() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.mentions)
  clear_has_mentions();
  ::CChatMentions* temp = mentions_;
  mentions_ = NULL;
  return temp;
}
inline ::CChatMentions* CChatRoom_IncomingChatMessage_Notification::mutable_mentions() {
  set_has_mentions();
  if (mentions_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatMentions>(GetArenaNoVirtual());
    mentions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.mentions)
  return mentions_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_mentions(::CChatMentions* mentions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mentions_;
  }
  if (mentions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mentions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mentions, submessage_arena);
    }
    set_has_mentions();
  } else {
    clear_has_mentions();
  }
  mentions_ = mentions;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.mentions)
}

// optional uint32 ordinal = 7;
inline bool CChatRoom_IncomingChatMessage_Notification::has_ordinal() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_ordinal() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_IncomingChatMessage_Notification::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.ordinal)
  return ordinal_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.ordinal)
}

// optional .ServerMessage server_message = 8;
inline bool CChatRoom_IncomingChatMessage_Notification::has_server_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_server_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_server_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_server_message() {
  if (server_message_ != NULL) server_message_->Clear();
  clear_has_server_message();
}
inline const ::ServerMessage& CChatRoom_IncomingChatMessage_Notification::_internal_server_message() const {
  return *server_message_;
}
inline const ::ServerMessage& CChatRoom_IncomingChatMessage_Notification::server_message() const {
  const ::ServerMessage* p = server_message_;
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.server_message)
  return p != NULL ? *p : *reinterpret_cast<const ::ServerMessage*>(
      &::_ServerMessage_default_instance_);
}
inline ::ServerMessage* CChatRoom_IncomingChatMessage_Notification::release_server_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.server_message)
  clear_has_server_message();
  ::ServerMessage* temp = server_message_;
  server_message_ = NULL;
  return temp;
}
inline ::ServerMessage* CChatRoom_IncomingChatMessage_Notification::mutable_server_message() {
  set_has_server_message();
  if (server_message_ == NULL) {
    auto* p = CreateMaybeMessage<::ServerMessage>(GetArenaNoVirtual());
    server_message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.server_message)
  return server_message_;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_server_message(::ServerMessage* server_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_message_;
  }
  if (server_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_message, submessage_arena);
    }
    set_has_server_message();
  } else {
    clear_has_server_message();
  }
  server_message_ = server_message;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.server_message)
}

// optional string message_no_bbcode = 9;
inline bool CChatRoom_IncomingChatMessage_Notification::has_message_no_bbcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_has_message_no_bbcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_has_message_no_bbcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_message_no_bbcode() {
  message_no_bbcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_no_bbcode();
}
inline const ::std::string& CChatRoom_IncomingChatMessage_Notification::message_no_bbcode() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
  return message_no_bbcode_.GetNoArena();
}
inline void CChatRoom_IncomingChatMessage_Notification::set_message_no_bbcode(const ::std::string& value) {
  set_has_message_no_bbcode();
  message_no_bbcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}
#if LANG_CXX11
inline void CChatRoom_IncomingChatMessage_Notification::set_message_no_bbcode(::std::string&& value) {
  set_has_message_no_bbcode();
  message_no_bbcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}
#endif
inline void CChatRoom_IncomingChatMessage_Notification::set_message_no_bbcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message_no_bbcode();
  message_no_bbcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}
inline void CChatRoom_IncomingChatMessage_Notification::set_message_no_bbcode(const char* value, size_t size) {
  set_has_message_no_bbcode();
  message_no_bbcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}
inline ::std::string* CChatRoom_IncomingChatMessage_Notification::mutable_message_no_bbcode() {
  set_has_message_no_bbcode();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
  return message_no_bbcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CChatRoom_IncomingChatMessage_Notification::release_message_no_bbcode() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
  if (!has_message_no_bbcode()) {
    return NULL;
  }
  clear_has_message_no_bbcode();
  return message_no_bbcode_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_message_no_bbcode(::std::string* message_no_bbcode) {
  if (message_no_bbcode != NULL) {
    set_has_message_no_bbcode();
  } else {
    clear_has_message_no_bbcode();
  }
  message_no_bbcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_no_bbcode);
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}

// -------------------------------------------------------------------

// CChatRoom_ChatMessageModified_Notification_ChatMessage

// optional uint32 server_timestamp = 1;
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::has_server_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_has_server_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_has_server_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_server_timestamp() {
  server_timestamp_ = 0u;
  clear_has_server_timestamp();
}
inline ::google::protobuf::uint32 CChatRoom_ChatMessageModified_Notification_ChatMessage::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.ChatMessage.server_timestamp)
  return server_timestamp_;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_server_timestamp(::google::protobuf::uint32 value) {
  set_has_server_timestamp();
  server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.ChatMessage.server_timestamp)
}

// optional uint32 ordinal = 2;
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::has_ordinal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_has_ordinal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_has_ordinal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_ordinal() {
  ordinal_ = 0u;
  clear_has_ordinal();
}
inline ::google::protobuf::uint32 CChatRoom_ChatMessageModified_Notification_ChatMessage::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.ChatMessage.ordinal)
  return ordinal_;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_ordinal(::google::protobuf::uint32 value) {
  set_has_ordinal();
  ordinal_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.ChatMessage.ordinal)
}

// optional bool deleted = 3;
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::has_deleted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_has_deleted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::deleted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.ChatMessage.deleted)
  return deleted_;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.ChatMessage.deleted)
}

// -------------------------------------------------------------------

// CChatRoom_ChatMessageModified_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ChatMessageModified_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ChatMessageModified_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ChatMessageModified_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ChatMessageModified_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_ChatMessageModified_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_ChatMessageModified_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_ChatMessageModified_Notification::has_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_ChatMessageModified_Notification::set_has_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_ChatMessageModified_Notification::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_ChatMessageModified_Notification::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_ChatMessageModified_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.chat_id)
  return chat_id_;
}
inline void CChatRoom_ChatMessageModified_Notification::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.chat_id)
}

// repeated .CChatRoom_ChatMessageModified_Notification.ChatMessage messages = 3;
inline int CChatRoom_ChatMessageModified_Notification::messages_size() const {
  return messages_.size();
}
inline void CChatRoom_ChatMessageModified_Notification::clear_messages() {
  messages_.Clear();
}
inline ::CChatRoom_ChatMessageModified_Notification_ChatMessage* CChatRoom_ChatMessageModified_Notification::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_ChatMessageModified_Notification.messages)
  return messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >*
CChatRoom_ChatMessageModified_Notification::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_ChatMessageModified_Notification.messages)
  return &messages_;
}
inline const ::CChatRoom_ChatMessageModified_Notification_ChatMessage& CChatRoom_ChatMessageModified_Notification::messages(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.messages)
  return messages_.Get(index);
}
inline ::CChatRoom_ChatMessageModified_Notification_ChatMessage* CChatRoom_ChatMessageModified_Notification::add_messages() {
  // @@protoc_insertion_point(field_add:CChatRoom_ChatMessageModified_Notification.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >&
CChatRoom_ChatMessageModified_Notification::messages() const {
  // @@protoc_insertion_point(field_list:CChatRoom_ChatMessageModified_Notification.messages)
  return messages_;
}

// -------------------------------------------------------------------

// CChatRoom_MemberStateChange_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_MemberStateChange_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_MemberStateChange_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_MemberStateChange_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_MemberStateChange_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_MemberStateChange_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MemberStateChange_Notification.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_MemberStateChange_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_MemberStateChange_Notification.chat_group_id)
}

// optional .CChatRoomMember member = 2;
inline bool CChatRoom_MemberStateChange_Notification::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_MemberStateChange_Notification::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_MemberStateChange_Notification::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_MemberStateChange_Notification::clear_member() {
  if (member_ != NULL) member_->Clear();
  clear_has_member();
}
inline const ::CChatRoomMember& CChatRoom_MemberStateChange_Notification::_internal_member() const {
  return *member_;
}
inline const ::CChatRoomMember& CChatRoom_MemberStateChange_Notification::member() const {
  const ::CChatRoomMember* p = member_;
  // @@protoc_insertion_point(field_get:CChatRoom_MemberStateChange_Notification.member)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomMember*>(
      &::_CChatRoomMember_default_instance_);
}
inline ::CChatRoomMember* CChatRoom_MemberStateChange_Notification::release_member() {
  // @@protoc_insertion_point(field_release:CChatRoom_MemberStateChange_Notification.member)
  clear_has_member();
  ::CChatRoomMember* temp = member_;
  member_ = NULL;
  return temp;
}
inline ::CChatRoomMember* CChatRoom_MemberStateChange_Notification::mutable_member() {
  set_has_member();
  if (member_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomMember>(GetArenaNoVirtual());
    member_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_MemberStateChange_Notification.member)
  return member_;
}
inline void CChatRoom_MemberStateChange_Notification::set_allocated_member(::CChatRoomMember* member) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete member_;
  }
  if (member) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      member = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, member, submessage_arena);
    }
    set_has_member();
  } else {
    clear_has_member();
  }
  member_ = member;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_MemberStateChange_Notification.member)
}

// optional .EChatRoomMemberStateChange change = 3 [default = k_EChatRoomMemberStateChange_Invalid];
inline bool CChatRoom_MemberStateChange_Notification::has_change() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatRoom_MemberStateChange_Notification::set_has_change() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatRoom_MemberStateChange_Notification::clear_has_change() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatRoom_MemberStateChange_Notification::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::EChatRoomMemberStateChange CChatRoom_MemberStateChange_Notification::change() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MemberStateChange_Notification.change)
  return static_cast< ::EChatRoomMemberStateChange >(change_);
}
inline void CChatRoom_MemberStateChange_Notification::set_change(::EChatRoomMemberStateChange value) {
  assert(::EChatRoomMemberStateChange_IsValid(value));
  set_has_change();
  change_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_MemberStateChange_Notification.change)
}

// -------------------------------------------------------------------

// CChatRoom_ChatRoomHeaderState_Notification

// optional .CChatRoomGroupHeaderState header_state = 1;
inline bool CChatRoom_ChatRoomHeaderState_Notification::has_header_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ChatRoomHeaderState_Notification::set_has_header_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ChatRoomHeaderState_Notification::clear_has_header_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ChatRoomHeaderState_Notification::clear_header_state() {
  if (header_state_ != NULL) header_state_->Clear();
  clear_has_header_state();
}
inline const ::CChatRoomGroupHeaderState& CChatRoom_ChatRoomHeaderState_Notification::_internal_header_state() const {
  return *header_state_;
}
inline const ::CChatRoomGroupHeaderState& CChatRoom_ChatRoomHeaderState_Notification::header_state() const {
  const ::CChatRoomGroupHeaderState* p = header_state_;
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomHeaderState_Notification.header_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoomGroupHeaderState*>(
      &::_CChatRoomGroupHeaderState_default_instance_);
}
inline ::CChatRoomGroupHeaderState* CChatRoom_ChatRoomHeaderState_Notification::release_header_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_ChatRoomHeaderState_Notification.header_state)
  clear_has_header_state();
  ::CChatRoomGroupHeaderState* temp = header_state_;
  header_state_ = NULL;
  return temp;
}
inline ::CChatRoomGroupHeaderState* CChatRoom_ChatRoomHeaderState_Notification::mutable_header_state() {
  set_has_header_state();
  if (header_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupHeaderState>(GetArenaNoVirtual());
    header_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatRoom_ChatRoomHeaderState_Notification.header_state)
  return header_state_;
}
inline void CChatRoom_ChatRoomHeaderState_Notification::set_allocated_header_state(::CChatRoomGroupHeaderState* header_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_state_;
  }
  if (header_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header_state, submessage_arena);
    }
    set_has_header_state();
  } else {
    clear_has_header_state();
  }
  header_state_ = header_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_ChatRoomHeaderState_Notification.header_state)
}

// -------------------------------------------------------------------

// CChatRoom_ChatRoomGroupRoomsChange_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ChatRoomGroupRoomsChange_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_group_id)
}

// optional uint64 default_chat_id = 2;
inline bool CChatRoom_ChatRoomGroupRoomsChange_Notification::has_default_chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::set_has_default_chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_has_default_chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_default_chat_id() {
  default_chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_default_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_ChatRoomGroupRoomsChange_Notification::default_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomGroupRoomsChange_Notification.default_chat_id)
  return default_chat_id_;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::set_default_chat_id(::google::protobuf::uint64 value) {
  set_has_default_chat_id();
  default_chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_ChatRoomGroupRoomsChange_Notification.default_chat_id)
}

// repeated .CChatRoomState chat_rooms = 3;
inline int CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_rooms_size() const {
  return chat_rooms_.size();
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_chat_rooms() {
  chat_rooms_.Clear();
}
inline ::CChatRoomState* CChatRoom_ChatRoomGroupRoomsChange_Notification::mutable_chat_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return chat_rooms_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CChatRoomState >*
CChatRoom_ChatRoomGroupRoomsChange_Notification::mutable_chat_rooms() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return &chat_rooms_;
}
inline const ::CChatRoomState& CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_rooms(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return chat_rooms_.Get(index);
}
inline ::CChatRoomState* CChatRoom_ChatRoomGroupRoomsChange_Notification::add_chat_rooms() {
  // @@protoc_insertion_point(field_add:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return chat_rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CChatRoomState >&
CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_rooms() const {
  // @@protoc_insertion_point(field_list:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return chat_rooms_;
}

// -------------------------------------------------------------------

// CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification

// optional uint64 chat_id = 1;
inline bool CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::has_chat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::set_has_chat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::clear_has_chat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::clear_chat_id() {
  chat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_id();
}
inline ::google::protobuf::uint64 CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_id)
  return chat_id_;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::set_chat_id(::google::protobuf::uint64 value) {
  set_has_chat_id();
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_id)
}

// optional uint64 chat_group_id = 2;
inline bool CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_group_id)
  return chat_group_id_;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_group_id)
}

// -------------------------------------------------------------------

// ChatRoomClient_NotifyChatGroupUserStateChanged_Notification

// optional uint64 chat_group_id = 1;
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_chat_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_has_chat_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_has_chat_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_chat_group_id() {
  chat_group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_chat_group_id();
}
inline ::google::protobuf::uint64 ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.chat_group_id)
  return chat_group_id_;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_chat_group_id(::google::protobuf::uint64 value) {
  set_has_chat_group_id();
  chat_group_id_ = value;
  // @@protoc_insertion_point(field_set:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.chat_group_id)
}

// optional .CUserChatRoomGroupState user_chat_group_state = 2;
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_user_chat_group_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_has_user_chat_group_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_has_user_chat_group_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_user_chat_group_state() {
  if (user_chat_group_state_ != NULL) user_chat_group_state_->Clear();
  clear_has_user_chat_group_state();
}
inline const ::CUserChatRoomGroupState& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_user_chat_group_state() const {
  return *user_chat_group_state_;
}
inline const ::CUserChatRoomGroupState& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::user_chat_group_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_group_state_;
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CUserChatRoomGroupState*>(
      &::_CUserChatRoomGroupState_default_instance_);
}
inline ::CUserChatRoomGroupState* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::release_user_chat_group_state() {
  // @@protoc_insertion_point(field_release:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
  clear_has_user_chat_group_state();
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = NULL;
  return temp;
}
inline ::CUserChatRoomGroupState* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::mutable_user_chat_group_state() {
  set_has_user_chat_group_state();
  if (user_chat_group_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaNoVirtual());
    user_chat_group_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
  return user_chat_group_state_;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_chat_group_state_;
  }
  if (user_chat_group_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_chat_group_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_chat_group_state, submessage_arena);
    }
    set_has_user_chat_group_state();
  } else {
    clear_has_user_chat_group_state();
  }
  user_chat_group_state_ = user_chat_group_state;
  // @@protoc_insertion_point(field_set_allocated:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
}

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 3;
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_group_summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_has_group_summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_has_group_summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_group_summary() {
  if (group_summary_ != NULL) group_summary_->Clear();
  clear_has_group_summary();
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_group_summary() const {
  return *group_summary_;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response*>(
      &::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::release_group_summary() {
  // @@protoc_insertion_point(field_release:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
  clear_has_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = NULL;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::mutable_group_summary() {
  set_has_group_summary();
  if (group_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaNoVirtual());
    group_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
  return group_summary_;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_summary_;
  }
  if (group_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    set_has_group_summary();
  } else {
    clear_has_group_summary();
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
}

// optional .EChatRoomMemberStateChange user_action = 4 [default = k_EChatRoomMemberStateChange_Invalid];
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_user_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_has_user_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_has_user_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_user_action() {
  user_action_ = 0;
  clear_has_user_action();
}
inline ::EChatRoomMemberStateChange ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::user_action() const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_action)
  return static_cast< ::EChatRoomMemberStateChange >(user_action_);
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_user_action(::EChatRoomMemberStateChange value) {
  assert(::EChatRoomMemberStateChange_IsValid(value));
  set_has_user_action();
  user_action_ = value;
  // @@protoc_insertion_point(field_set:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_action)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_Settings

// optional bool notifications_show_ingame = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_ingame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_notifications_show_ingame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_notifications_show_ingame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_ingame() {
  notifications_show_ingame_ = false;
  clear_has_notifications_show_ingame();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_ingame() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_ingame)
  return notifications_show_ingame_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_ingame(bool value) {
  set_has_notifications_show_ingame();
  notifications_show_ingame_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_ingame)
}

// optional bool notifications_show_online = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_notifications_show_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_notifications_show_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_online() {
  notifications_show_online_ = false;
  clear_has_notifications_show_online();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_online() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_online)
  return notifications_show_online_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_online(bool value) {
  set_has_notifications_show_online();
  notifications_show_online_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_online)
}

// optional bool notifications_show_message = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_notifications_show_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_notifications_show_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_message() {
  notifications_show_message_ = false;
  clear_has_notifications_show_message();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_message() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_message)
  return notifications_show_message_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_message(bool value) {
  set_has_notifications_show_message();
  notifications_show_message_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_message)
}

// optional bool notifications_events_and_announcements = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_events_and_announcements() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_notifications_events_and_announcements() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_notifications_events_and_announcements() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_events_and_announcements() {
  notifications_events_and_announcements_ = false;
  clear_has_notifications_events_and_announcements();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_events_and_announcements() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_events_and_announcements)
  return notifications_events_and_announcements_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_events_and_announcements(bool value) {
  set_has_notifications_events_and_announcements();
  notifications_events_and_announcements_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_events_and_announcements)
}

// optional bool sounds_play_ingame = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_ingame() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_sounds_play_ingame() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_sounds_play_ingame() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_ingame() {
  sounds_play_ingame_ = false;
  clear_has_sounds_play_ingame();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_ingame() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_ingame)
  return sounds_play_ingame_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_ingame(bool value) {
  set_has_sounds_play_ingame();
  sounds_play_ingame_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_ingame)
}

// optional bool sounds_play_online = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_online() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_sounds_play_online() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_sounds_play_online() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_online() {
  sounds_play_online_ = false;
  clear_has_sounds_play_online();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_online() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_online)
  return sounds_play_online_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_online(bool value) {
  set_has_sounds_play_online();
  sounds_play_online_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_online)
}

// optional bool sounds_play_message = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_message() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_sounds_play_message() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_sounds_play_message() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_message() {
  sounds_play_message_ = false;
  clear_has_sounds_play_message();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_message() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_message)
  return sounds_play_message_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_message(bool value) {
  set_has_sounds_play_message();
  sounds_play_message_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_message)
}

// optional bool sounds_events_and_announcements = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_events_and_announcements() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_sounds_events_and_announcements() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_sounds_events_and_announcements() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_events_and_announcements() {
  sounds_events_and_announcements_ = false;
  clear_has_sounds_events_and_announcements();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_events_and_announcements() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_events_and_announcements)
  return sounds_events_and_announcements_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_events_and_announcements(bool value) {
  set_has_sounds_events_and_announcements();
  sounds_events_and_announcements_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_events_and_announcements)
}

// optional bool always_new_chat_window = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_always_new_chat_window() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_always_new_chat_window() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_always_new_chat_window() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_always_new_chat_window() {
  always_new_chat_window_ = false;
  clear_has_always_new_chat_window();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::always_new_chat_window() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.always_new_chat_window)
  return always_new_chat_window_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_always_new_chat_window(bool value) {
  set_has_always_new_chat_window();
  always_new_chat_window_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.always_new_chat_window)
}

// optional bool force_alphabetic_friend_sorting = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_force_alphabetic_friend_sorting() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_force_alphabetic_friend_sorting() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_force_alphabetic_friend_sorting() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_force_alphabetic_friend_sorting() {
  force_alphabetic_friend_sorting_ = false;
  clear_has_force_alphabetic_friend_sorting();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::force_alphabetic_friend_sorting() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.force_alphabetic_friend_sorting)
  return force_alphabetic_friend_sorting_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_force_alphabetic_friend_sorting(bool value) {
  set_has_force_alphabetic_friend_sorting();
  force_alphabetic_friend_sorting_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.force_alphabetic_friend_sorting)
}

// optional int32 chat_flash_mode = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_chat_flash_mode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_chat_flash_mode() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_chat_flash_mode() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_chat_flash_mode() {
  chat_flash_mode_ = 0;
  clear_has_chat_flash_mode();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Settings::chat_flash_mode() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_flash_mode)
  return chat_flash_mode_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_chat_flash_mode(::google::protobuf::int32 value) {
  set_has_chat_flash_mode();
  chat_flash_mode_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_flash_mode)
}

// optional bool remember_open_chats = 12;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_remember_open_chats() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_remember_open_chats() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_remember_open_chats() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_remember_open_chats() {
  remember_open_chats_ = false;
  clear_has_remember_open_chats();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::remember_open_chats() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.remember_open_chats)
  return remember_open_chats_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_remember_open_chats(bool value) {
  set_has_remember_open_chats();
  remember_open_chats_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.remember_open_chats)
}

// optional bool compact_quick_access = 13;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_compact_quick_access() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_compact_quick_access() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_compact_quick_access() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_compact_quick_access() {
  compact_quick_access_ = false;
  clear_has_compact_quick_access();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::compact_quick_access() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_quick_access)
  return compact_quick_access_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_compact_quick_access(bool value) {
  set_has_compact_quick_access();
  compact_quick_access_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_quick_access)
}

// optional bool compact_friends_list = 14;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_compact_friends_list() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_compact_friends_list() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_compact_friends_list() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_compact_friends_list() {
  compact_friends_list_ = false;
  clear_has_compact_friends_list();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::compact_friends_list() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_friends_list)
  return compact_friends_list_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_compact_friends_list(bool value) {
  set_has_compact_friends_list();
  compact_friends_list_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_friends_list)
}

// optional bool notifications_show_chat_room_notification = 15;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_chat_room_notification() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_notifications_show_chat_room_notification() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_notifications_show_chat_room_notification() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_chat_room_notification() {
  notifications_show_chat_room_notification_ = false;
  clear_has_notifications_show_chat_room_notification();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_chat_room_notification() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_chat_room_notification)
  return notifications_show_chat_room_notification_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_chat_room_notification(bool value) {
  set_has_notifications_show_chat_room_notification();
  notifications_show_chat_room_notification_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_chat_room_notification)
}

// optional bool sounds_play_chat_room_notification = 16;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_chat_room_notification() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_sounds_play_chat_room_notification() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_sounds_play_chat_room_notification() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_chat_room_notification() {
  sounds_play_chat_room_notification_ = false;
  clear_has_sounds_play_chat_room_notification();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_chat_room_notification() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_chat_room_notification)
  return sounds_play_chat_room_notification_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_chat_room_notification(bool value) {
  set_has_sounds_play_chat_room_notification();
  sounds_play_chat_room_notification_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_chat_room_notification)
}

// optional bool hide_offline_friends_in_tag_groups = 17;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_hide_offline_friends_in_tag_groups() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_hide_offline_friends_in_tag_groups() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_hide_offline_friends_in_tag_groups() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_hide_offline_friends_in_tag_groups() {
  hide_offline_friends_in_tag_groups_ = false;
  clear_has_hide_offline_friends_in_tag_groups();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::hide_offline_friends_in_tag_groups() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_offline_friends_in_tag_groups)
  return hide_offline_friends_in_tag_groups_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_hide_offline_friends_in_tag_groups(bool value) {
  set_has_hide_offline_friends_in_tag_groups();
  hide_offline_friends_in_tag_groups_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_offline_friends_in_tag_groups)
}

// optional bool hide_categorized_friends = 18;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_hide_categorized_friends() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_hide_categorized_friends() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_hide_categorized_friends() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_hide_categorized_friends() {
  hide_categorized_friends_ = false;
  clear_has_hide_categorized_friends();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::hide_categorized_friends() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_categorized_friends)
  return hide_categorized_friends_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_hide_categorized_friends(bool value) {
  set_has_hide_categorized_friends();
  hide_categorized_friends_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_categorized_friends)
}

// optional bool categorize_in_game_friends_by_game = 19;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_categorize_in_game_friends_by_game() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_categorize_in_game_friends_by_game() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_categorize_in_game_friends_by_game() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_categorize_in_game_friends_by_game() {
  categorize_in_game_friends_by_game_ = false;
  clear_has_categorize_in_game_friends_by_game();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::categorize_in_game_friends_by_game() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.categorize_in_game_friends_by_game)
  return categorize_in_game_friends_by_game_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_categorize_in_game_friends_by_game(bool value) {
  set_has_categorize_in_game_friends_by_game();
  categorize_in_game_friends_by_game_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.categorize_in_game_friends_by_game)
}

// optional int32 chat_font_size = 20;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_chat_font_size() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_chat_font_size() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_chat_font_size() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_chat_font_size() {
  chat_font_size_ = 0;
  clear_has_chat_font_size();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Settings::chat_font_size() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_font_size)
  return chat_font_size_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_chat_font_size(::google::protobuf::int32 value) {
  set_has_chat_font_size();
  chat_font_size_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_font_size)
}

// optional bool use24hour_clock = 21;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_use24hour_clock() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_use24hour_clock() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_use24hour_clock() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_use24hour_clock() {
  use24hour_clock_ = false;
  clear_has_use24hour_clock();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::use24hour_clock() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.use24hour_clock)
  return use24hour_clock_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_use24hour_clock(bool value) {
  set_has_use24hour_clock();
  use24hour_clock_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.use24hour_clock)
}

// optional bool do_not_disturb_mode = 22;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_do_not_disturb_mode() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_do_not_disturb_mode() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_do_not_disturb_mode() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_do_not_disturb_mode() {
  do_not_disturb_mode_ = false;
  clear_has_do_not_disturb_mode();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::do_not_disturb_mode() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.do_not_disturb_mode)
  return do_not_disturb_mode_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_do_not_disturb_mode(bool value) {
  set_has_do_not_disturb_mode();
  do_not_disturb_mode_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.do_not_disturb_mode)
}

// optional bool disable_embed_inlining = 23;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_disable_embed_inlining() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_disable_embed_inlining() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_disable_embed_inlining() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_disable_embed_inlining() {
  disable_embed_inlining_ = false;
  clear_has_disable_embed_inlining();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::disable_embed_inlining() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.disable_embed_inlining)
  return disable_embed_inlining_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_disable_embed_inlining(bool value) {
  set_has_disable_embed_inlining();
  disable_embed_inlining_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.disable_embed_inlining)
}

// optional bool sign_into_friends = 24;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sign_into_friends() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_has_sign_into_friends() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_has_sign_into_friends() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sign_into_friends() {
  sign_into_friends_ = false;
  clear_has_sign_into_friends();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sign_into_friends() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sign_into_friends)
  return sign_into_friends_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sign_into_friends(bool value) {
  set_has_sign_into_friends();
  sign_into_friends_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sign_into_friends)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings

// optional float voice_input_gain = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_input_gain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_voice_input_gain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_voice_input_gain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_input_gain() {
  voice_input_gain_ = 0;
  clear_has_voice_input_gain();
}
inline float CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_input_gain() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_input_gain)
  return voice_input_gain_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_input_gain(float value) {
  set_has_voice_input_gain();
  voice_input_gain_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_input_gain)
}

// optional float voice_output_gain = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_output_gain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_voice_output_gain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_voice_output_gain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_output_gain() {
  voice_output_gain_ = 0;
  clear_has_voice_output_gain();
}
inline float CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_output_gain() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_output_gain)
  return voice_output_gain_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_output_gain(float value) {
  set_has_voice_output_gain();
  voice_output_gain_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_output_gain)
}

// optional int32 noise_gate_level = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_noise_gate_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_noise_gate_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_noise_gate_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_noise_gate_level() {
  noise_gate_level_ = 0;
  clear_has_noise_gate_level();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::noise_gate_level() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.noise_gate_level)
  return noise_gate_level_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_noise_gate_level(::google::protobuf::int32 value) {
  set_has_noise_gate_level();
  noise_gate_level_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.noise_gate_level)
}

// optional bool voice_use_echo_cancellation = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_use_echo_cancellation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_voice_use_echo_cancellation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_voice_use_echo_cancellation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_use_echo_cancellation() {
  voice_use_echo_cancellation_ = false;
  clear_has_voice_use_echo_cancellation();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_use_echo_cancellation() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_echo_cancellation)
  return voice_use_echo_cancellation_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_use_echo_cancellation(bool value) {
  set_has_voice_use_echo_cancellation();
  voice_use_echo_cancellation_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_echo_cancellation)
}

// optional bool voice_use_noise_cancellation = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_use_noise_cancellation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_voice_use_noise_cancellation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_voice_use_noise_cancellation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_use_noise_cancellation() {
  voice_use_noise_cancellation_ = false;
  clear_has_voice_use_noise_cancellation();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_use_noise_cancellation() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_noise_cancellation)
  return voice_use_noise_cancellation_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_use_noise_cancellation(bool value) {
  set_has_voice_use_noise_cancellation();
  voice_use_noise_cancellation_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_noise_cancellation)
}

// optional bool voice_use_auto_gain_control = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_use_auto_gain_control() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_voice_use_auto_gain_control() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_voice_use_auto_gain_control() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_use_auto_gain_control() {
  voice_use_auto_gain_control_ = false;
  clear_has_voice_use_auto_gain_control();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_use_auto_gain_control() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_auto_gain_control)
  return voice_use_auto_gain_control_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_use_auto_gain_control(bool value) {
  set_has_voice_use_auto_gain_control();
  voice_use_auto_gain_control_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_auto_gain_control)
}

// optional bool selected_non_default_mic = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_selected_non_default_mic() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_selected_non_default_mic() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_selected_non_default_mic() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_selected_non_default_mic() {
  selected_non_default_mic_ = false;
  clear_has_selected_non_default_mic();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::selected_non_default_mic() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_mic)
  return selected_non_default_mic_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_selected_non_default_mic(bool value) {
  set_has_selected_non_default_mic();
  selected_non_default_mic_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_mic)
}

// optional bool selected_non_default_output = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_selected_non_default_output() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_selected_non_default_output() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_selected_non_default_output() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_selected_non_default_output() {
  selected_non_default_output_ = false;
  clear_has_selected_non_default_output();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::selected_non_default_output() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_output)
  return selected_non_default_output_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_selected_non_default_output(bool value) {
  set_has_selected_non_default_output();
  selected_non_default_output_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_output)
}

// optional bool push_to_talk_enabled = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_push_to_talk_enabled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_push_to_talk_enabled() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_push_to_talk_enabled() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_push_to_talk_enabled() {
  push_to_talk_enabled_ = false;
  clear_has_push_to_talk_enabled();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::push_to_talk_enabled() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_talk_enabled)
  return push_to_talk_enabled_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_push_to_talk_enabled(bool value) {
  set_has_push_to_talk_enabled();
  push_to_talk_enabled_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_talk_enabled)
}

// optional bool push_to_mute_enabled = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_push_to_mute_enabled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_push_to_mute_enabled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_push_to_mute_enabled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_push_to_mute_enabled() {
  push_to_mute_enabled_ = false;
  clear_has_push_to_mute_enabled();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::push_to_mute_enabled() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_mute_enabled)
  return push_to_mute_enabled_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_push_to_mute_enabled(bool value) {
  set_has_push_to_mute_enabled();
  push_to_mute_enabled_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_mute_enabled)
}

// optional bool play_ptt_sounds = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_play_ptt_sounds() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_has_play_ptt_sounds() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_has_play_ptt_sounds() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_play_ptt_sounds() {
  play_ptt_sounds_ = false;
  clear_has_play_ptt_sounds();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::play_ptt_sounds() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.play_ptt_sounds)
  return play_ptt_sounds_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_play_ptt_sounds(bool value) {
  set_has_play_ptt_sounds();
  play_ptt_sounds_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.play_ptt_sounds)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState

// optional bool in_game_collapsed = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_in_game_collapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_has_in_game_collapsed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_has_in_game_collapsed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_in_game_collapsed() {
  in_game_collapsed_ = false;
  clear_has_in_game_collapsed();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::in_game_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.in_game_collapsed)
  return in_game_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_in_game_collapsed(bool value) {
  set_has_in_game_collapsed();
  in_game_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.in_game_collapsed)
}

// optional bool online_collapsed = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_online_collapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_has_online_collapsed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_has_online_collapsed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_online_collapsed() {
  online_collapsed_ = false;
  clear_has_online_collapsed();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::online_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.online_collapsed)
  return online_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_online_collapsed(bool value) {
  set_has_online_collapsed();
  online_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.online_collapsed)
}

// optional bool offline_collapsed = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_offline_collapsed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_has_offline_collapsed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_has_offline_collapsed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_offline_collapsed() {
  offline_collapsed_ = false;
  clear_has_offline_collapsed();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::offline_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.offline_collapsed)
  return offline_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_offline_collapsed(bool value) {
  set_has_offline_collapsed();
  offline_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.offline_collapsed)
}

// optional int32 game_groups_collapsed = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_game_groups_collapsed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_has_game_groups_collapsed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_has_game_groups_collapsed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_game_groups_collapsed() {
  game_groups_collapsed_ = 0;
  clear_has_game_groups_collapsed();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::game_groups_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.game_groups_collapsed)
  return game_groups_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_game_groups_collapsed(::google::protobuf::int32 value) {
  set_has_game_groups_collapsed();
  game_groups_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.game_groups_collapsed)
}

// optional int32 categories_collapsed = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_categories_collapsed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_has_categories_collapsed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_has_categories_collapsed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_categories_collapsed() {
  categories_collapsed_ = 0;
  clear_has_categories_collapsed();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::categories_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.categories_collapsed)
  return categories_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_categories_collapsed(::google::protobuf::int32 value) {
  set_has_categories_collapsed();
  categories_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.categories_collapsed)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_UIState

// optional int32 friends_list_height = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friends_list_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friends_list_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_height() {
  friends_list_height_ = 0;
  clear_has_friends_list_height();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_height() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_height)
  return friends_list_height_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_height(::google::protobuf::int32 value) {
  set_has_friends_list_height();
  friends_list_height_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_height)
}

// optional int32 friends_list_width = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friends_list_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friends_list_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_width() {
  friends_list_width_ = 0;
  clear_has_friends_list_width();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_width() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_width)
  return friends_list_width_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_width(::google::protobuf::int32 value) {
  set_has_friends_list_width();
  friends_list_width_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_width)
}

// optional bool friends_list_docked = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_docked() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friends_list_docked() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friends_list_docked() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_docked() {
  friends_list_docked_ = false;
  clear_has_friends_list_docked();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_docked() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_docked)
  return friends_list_docked_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_docked(bool value) {
  set_has_friends_list_docked();
  friends_list_docked_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_docked)
}

// optional bool friends_list_collapsed = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_collapsed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friends_list_collapsed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friends_list_collapsed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_collapsed() {
  friends_list_collapsed_ = false;
  clear_has_friends_list_collapsed();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_collapsed)
  return friends_list_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_collapsed(bool value) {
  set_has_friends_list_collapsed();
  friends_list_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_collapsed)
}

// optional int32 friends_list_group_chats_height = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_group_chats_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friends_list_group_chats_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friends_list_group_chats_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_group_chats_height() {
  friends_list_group_chats_height_ = 0;
  clear_has_friends_list_group_chats_height();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_group_chats_height() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_group_chats_height)
  return friends_list_group_chats_height_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_group_chats_height(::google::protobuf::int32 value) {
  set_has_friends_list_group_chats_height();
  friends_list_group_chats_height_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_group_chats_height)
}

// optional bool friends_list_visible = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_visible() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friends_list_visible() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friends_list_visible() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_visible() {
  friends_list_visible_ = false;
  clear_has_friends_list_visible();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_visible() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_visible)
  return friends_list_visible_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_visible(bool value) {
  set_has_friends_list_visible();
  friends_list_visible_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_visible)
}

// optional int32 chat_popups_opened = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_chat_popups_opened() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_chat_popups_opened() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_chat_popups_opened() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_chat_popups_opened() {
  chat_popups_opened_ = 0;
  clear_has_chat_popups_opened();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::chat_popups_opened() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_popups_opened)
  return chat_popups_opened_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_chat_popups_opened(::google::protobuf::int32 value) {
  set_has_chat_popups_opened();
  chat_popups_opened_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_popups_opened)
}

// optional int32 group_chat_tabs_opened = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_group_chat_tabs_opened() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_group_chat_tabs_opened() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_group_chat_tabs_opened() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_group_chat_tabs_opened() {
  group_chat_tabs_opened_ = 0;
  clear_has_group_chat_tabs_opened();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::group_chat_tabs_opened() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_tabs_opened)
  return group_chat_tabs_opened_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_group_chat_tabs_opened(::google::protobuf::int32 value) {
  set_has_group_chat_tabs_opened();
  group_chat_tabs_opened_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_tabs_opened)
}

// optional int32 friend_chat_tabs_opened = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friend_chat_tabs_opened() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_friend_chat_tabs_opened() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_friend_chat_tabs_opened() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friend_chat_tabs_opened() {
  friend_chat_tabs_opened_ = 0;
  clear_has_friend_chat_tabs_opened();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::friend_chat_tabs_opened() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friend_chat_tabs_opened)
  return friend_chat_tabs_opened_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friend_chat_tabs_opened(::google::protobuf::int32 value) {
  set_has_friend_chat_tabs_opened();
  friend_chat_tabs_opened_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friend_chat_tabs_opened)
}

// optional int32 chat_window_width = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_chat_window_width() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_chat_window_width() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_chat_window_width() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_chat_window_width() {
  chat_window_width_ = 0;
  clear_has_chat_window_width();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::chat_window_width() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_width)
  return chat_window_width_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_chat_window_width(::google::protobuf::int32 value) {
  set_has_chat_window_width();
  chat_window_width_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_width)
}

// optional int32 chat_window_height = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_chat_window_height() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_chat_window_height() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_chat_window_height() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_chat_window_height() {
  chat_window_height_ = 0;
  clear_has_chat_window_height();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::chat_window_height() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_height)
  return chat_window_height_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_chat_window_height(::google::protobuf::int32 value) {
  set_has_chat_window_height();
  chat_window_height_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_height)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState category_collapse = 12;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_category_collapse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_category_collapse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_category_collapse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_category_collapse() {
  if (category_collapse_ != NULL) category_collapse_->Clear();
  clear_has_category_collapse();
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_category_collapse() const {
  return *category_collapse_;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& CChatUsability_ClientUsabilityMetrics_Notification_UIState::category_collapse() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* p = category_collapse_;
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState*>(
      &::_CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState_default_instance_);
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* CChatUsability_ClientUsabilityMetrics_Notification_UIState::release_category_collapse() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
  clear_has_category_collapse();
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* temp = category_collapse_;
  category_collapse_ = NULL;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* CChatUsability_ClientUsabilityMetrics_Notification_UIState::mutable_category_collapse() {
  set_has_category_collapse();
  if (category_collapse_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(GetArenaNoVirtual());
    category_collapse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
  return category_collapse_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_allocated_category_collapse(::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete category_collapse_;
  }
  if (category_collapse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category_collapse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category_collapse, submessage_arena);
    }
    set_has_category_collapse();
  } else {
    clear_has_category_collapse();
  }
  category_collapse_ = category_collapse;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
}

// optional int32 group_chat_left_col_collapsed = 13;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_group_chat_left_col_collapsed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_group_chat_left_col_collapsed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_group_chat_left_col_collapsed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_group_chat_left_col_collapsed() {
  group_chat_left_col_collapsed_ = 0;
  clear_has_group_chat_left_col_collapsed();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::group_chat_left_col_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_left_col_collapsed)
  return group_chat_left_col_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_group_chat_left_col_collapsed(::google::protobuf::int32 value) {
  set_has_group_chat_left_col_collapsed();
  group_chat_left_col_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_left_col_collapsed)
}

// optional int32 group_chat_right_col_collapsed = 14;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_group_chat_right_col_collapsed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_group_chat_right_col_collapsed() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_group_chat_right_col_collapsed() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_group_chat_right_col_collapsed() {
  group_chat_right_col_collapsed_ = 0;
  clear_has_group_chat_right_col_collapsed();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_UIState::group_chat_right_col_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_right_col_collapsed)
  return group_chat_right_col_collapsed_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_group_chat_right_col_collapsed(::google::protobuf::int32 value) {
  set_has_group_chat_right_col_collapsed();
  group_chat_right_col_collapsed_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_right_col_collapsed)
}

// optional bool in_one_on_one_voice_chat = 15;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_in_one_on_one_voice_chat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_in_one_on_one_voice_chat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_in_one_on_one_voice_chat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_in_one_on_one_voice_chat() {
  in_one_on_one_voice_chat_ = false;
  clear_has_in_one_on_one_voice_chat();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::in_one_on_one_voice_chat() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_one_on_one_voice_chat)
  return in_one_on_one_voice_chat_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_in_one_on_one_voice_chat(bool value) {
  set_has_in_one_on_one_voice_chat();
  in_one_on_one_voice_chat_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_one_on_one_voice_chat)
}

// optional bool in_group_voice_chat = 16;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_in_group_voice_chat() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_has_in_group_voice_chat() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_has_in_group_voice_chat() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_in_group_voice_chat() {
  in_group_voice_chat_ = false;
  clear_has_in_group_voice_chat();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::in_group_voice_chat() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_group_voice_chat)
  return in_group_voice_chat_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_in_group_voice_chat(bool value) {
  set_has_in_group_voice_chat();
  in_group_voice_chat_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_group_voice_chat)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_Metrics

// optional int32 friends_count = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_count() {
  friends_count_ = 0;
  clear_has_friends_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_count)
  return friends_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_count(::google::protobuf::int32 value) {
  set_has_friends_count();
  friends_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_count)
}

// optional int32 friends_category_count = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_category_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_category_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_category_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_category_count() {
  friends_category_count_ = 0;
  clear_has_friends_category_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_category_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_category_count)
  return friends_category_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_category_count(::google::protobuf::int32 value) {
  set_has_friends_category_count();
  friends_category_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_category_count)
}

// optional int32 friends_categorized_count = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_categorized_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_categorized_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_categorized_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_categorized_count() {
  friends_categorized_count_ = 0;
  clear_has_friends_categorized_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_categorized_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_categorized_count)
  return friends_categorized_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_categorized_count(::google::protobuf::int32 value) {
  set_has_friends_categorized_count();
  friends_categorized_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_categorized_count)
}

// optional int32 friends_online_count = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_online_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_online_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_online_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_online_count() {
  friends_online_count_ = 0;
  clear_has_friends_online_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_online_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_online_count)
  return friends_online_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_online_count(::google::protobuf::int32 value) {
  set_has_friends_online_count();
  friends_online_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_online_count)
}

// optional int32 friends_in_game_count = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_in_game_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_in_game_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_in_game_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_in_game_count() {
  friends_in_game_count_ = 0;
  clear_has_friends_in_game_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_in_game_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_count)
  return friends_in_game_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_in_game_count(::google::protobuf::int32 value) {
  set_has_friends_in_game_count();
  friends_in_game_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_count)
}

// optional int32 friends_in_game_singleton_count = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_in_game_singleton_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_in_game_singleton_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_in_game_singleton_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_in_game_singleton_count() {
  friends_in_game_singleton_count_ = 0;
  clear_has_friends_in_game_singleton_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_in_game_singleton_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_singleton_count)
  return friends_in_game_singleton_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_in_game_singleton_count(::google::protobuf::int32 value) {
  set_has_friends_in_game_singleton_count();
  friends_in_game_singleton_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_singleton_count)
}

// optional int32 game_group_count = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_game_group_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_game_group_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_game_group_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_game_group_count() {
  game_group_count_ = 0;
  clear_has_game_group_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::game_group_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.game_group_count)
  return game_group_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_game_group_count(::google::protobuf::int32 value) {
  set_has_game_group_count();
  game_group_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.game_group_count)
}

// optional int32 friends_favorite_count = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_favorite_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_friends_favorite_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_friends_favorite_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_favorite_count() {
  friends_favorite_count_ = 0;
  clear_has_friends_favorite_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_favorite_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_favorite_count)
  return friends_favorite_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_favorite_count(::google::protobuf::int32 value) {
  set_has_friends_favorite_count();
  friends_favorite_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_favorite_count)
}

// optional int32 group_chat_count = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_group_chat_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_group_chat_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_group_chat_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_group_chat_count() {
  group_chat_count_ = 0;
  clear_has_group_chat_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::group_chat_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_count)
  return group_chat_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_group_chat_count(::google::protobuf::int32 value) {
  set_has_group_chat_count();
  group_chat_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_count)
}

// optional int32 group_chat_favorite_count = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_group_chat_favorite_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_has_group_chat_favorite_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_has_group_chat_favorite_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_group_chat_favorite_count() {
  group_chat_favorite_count_ = 0;
  clear_has_group_chat_favorite_count();
}
inline ::google::protobuf::int32 CChatUsability_ClientUsabilityMetrics_Notification_Metrics::group_chat_favorite_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_favorite_count)
  return group_chat_favorite_count_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_group_chat_favorite_count(::google::protobuf::int32 value) {
  set_has_group_chat_favorite_count();
  group_chat_favorite_count_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_favorite_count)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification

// optional uint32 metrics_run_id = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_metrics_run_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_metrics_run_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_metrics_run_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_metrics_run_id() {
  metrics_run_id_ = 0u;
  clear_has_metrics_run_id();
}
inline ::google::protobuf::uint32 CChatUsability_ClientUsabilityMetrics_Notification::metrics_run_id() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.metrics_run_id)
  return metrics_run_id_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_metrics_run_id(::google::protobuf::uint32 value) {
  set_has_metrics_run_id();
  metrics_run_id_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.metrics_run_id)
}

// optional uint32 client_build = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_client_build() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_client_build() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_client_build() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_client_build() {
  client_build_ = 0u;
  clear_has_client_build();
}
inline ::google::protobuf::uint32 CChatUsability_ClientUsabilityMetrics_Notification::client_build() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.client_build)
  return client_build_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_client_build(::google::protobuf::uint32 value) {
  set_has_client_build();
  client_build_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.client_build)
}

// optional uint32 metrics_version = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_metrics_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_metrics_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_metrics_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_metrics_version() {
  metrics_version_ = 0u;
  clear_has_metrics_version();
}
inline ::google::protobuf::uint32 CChatUsability_ClientUsabilityMetrics_Notification::metrics_version() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.metrics_version)
  return metrics_version_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_metrics_version(::google::protobuf::uint32 value) {
  set_has_metrics_version();
  metrics_version_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.metrics_version)
}

// optional bool in_web = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_in_web() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_in_web() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_in_web() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_in_web() {
  in_web_ = false;
  clear_has_in_web();
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::in_web() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.in_web)
  return in_web_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_in_web(bool value) {
  set_has_in_web();
  in_web_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.in_web)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.Settings settings = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_settings() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_settings() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_settings() {
  if (settings_ != NULL) settings_->Clear();
  clear_has_settings();
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& CChatUsability_ClientUsabilityMetrics_Notification::_internal_settings() const {
  return *settings_;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& CChatUsability_ClientUsabilityMetrics_Notification::settings() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* p = settings_;
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.settings)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings*>(
      &::_CChatUsability_ClientUsabilityMetrics_Notification_Settings_default_instance_);
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* CChatUsability_ClientUsabilityMetrics_Notification::release_settings() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.settings)
  clear_has_settings();
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* CChatUsability_ClientUsabilityMetrics_Notification::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Settings>(GetArenaNoVirtual());
    settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.settings)
  return settings_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_settings(::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete settings_;
  }
  if (settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    set_has_settings();
  } else {
    clear_has_settings();
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.settings)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings voice_settings = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_voice_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_voice_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_voice_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_voice_settings() {
  if (voice_settings_ != NULL) voice_settings_->Clear();
  clear_has_voice_settings();
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& CChatUsability_ClientUsabilityMetrics_Notification::_internal_voice_settings() const {
  return *voice_settings_;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& CChatUsability_ClientUsabilityMetrics_Notification::voice_settings() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* p = voice_settings_;
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings*>(
      &::_CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings_default_instance_);
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* CChatUsability_ClientUsabilityMetrics_Notification::release_voice_settings() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
  clear_has_voice_settings();
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* temp = voice_settings_;
  voice_settings_ = NULL;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* CChatUsability_ClientUsabilityMetrics_Notification::mutable_voice_settings() {
  set_has_voice_settings();
  if (voice_settings_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(GetArenaNoVirtual());
    voice_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
  return voice_settings_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_voice_settings(::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete voice_settings_;
  }
  if (voice_settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      voice_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, voice_settings, submessage_arena);
    }
    set_has_voice_settings();
  } else {
    clear_has_voice_settings();
  }
  voice_settings_ = voice_settings;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState ui_state = 12;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_ui_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_ui_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_ui_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_ui_state() {
  if (ui_state_ != NULL) ui_state_->Clear();
  clear_has_ui_state();
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& CChatUsability_ClientUsabilityMetrics_Notification::_internal_ui_state() const {
  return *ui_state_;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& CChatUsability_ClientUsabilityMetrics_Notification::ui_state() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* p = ui_state_;
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState*>(
      &::_CChatUsability_ClientUsabilityMetrics_Notification_UIState_default_instance_);
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* CChatUsability_ClientUsabilityMetrics_Notification::release_ui_state() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
  clear_has_ui_state();
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* temp = ui_state_;
  ui_state_ = NULL;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* CChatUsability_ClientUsabilityMetrics_Notification::mutable_ui_state() {
  set_has_ui_state();
  if (ui_state_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState>(GetArenaNoVirtual());
    ui_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
  return ui_state_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_ui_state(::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ui_state_;
  }
  if (ui_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ui_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ui_state, submessage_arena);
    }
    set_has_ui_state();
  } else {
    clear_has_ui_state();
  }
  ui_state_ = ui_state;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.Metrics metrics = 13;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_metrics() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_has_metrics() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_has_metrics() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_metrics() {
  if (metrics_ != NULL) metrics_->Clear();
  clear_has_metrics();
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& CChatUsability_ClientUsabilityMetrics_Notification::_internal_metrics() const {
  return *metrics_;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& CChatUsability_ClientUsabilityMetrics_Notification::metrics() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* p = metrics_;
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
  return p != NULL ? *p : *reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics*>(
      &::_CChatUsability_ClientUsabilityMetrics_Notification_Metrics_default_instance_);
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* CChatUsability_ClientUsabilityMetrics_Notification::release_metrics() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
  clear_has_metrics();
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* temp = metrics_;
  metrics_ = NULL;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* CChatUsability_ClientUsabilityMetrics_Notification::mutable_metrics() {
  set_has_metrics();
  if (metrics_ == NULL) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(GetArenaNoVirtual());
    metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
  return metrics_;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_metrics(::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete metrics_;
  }
  if (metrics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metrics, submessage_arena);
    }
    set_has_metrics();
  } else {
    clear_has_metrics();
  }
  metrics_ = metrics;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
}

// -------------------------------------------------------------------

// CChatUsability_RequestClientUsabilityMetrics_Notification

// optional uint32 metrics_run_id = 1;
inline bool CChatUsability_RequestClientUsabilityMetrics_Notification::has_metrics_run_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::set_has_metrics_run_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::clear_has_metrics_run_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::clear_metrics_run_id() {
  metrics_run_id_ = 0u;
  clear_has_metrics_run_id();
}
inline ::google::protobuf::uint32 CChatUsability_RequestClientUsabilityMetrics_Notification::metrics_run_id() const {
  // @@protoc_insertion_point(field_get:CChatUsability_RequestClientUsabilityMetrics_Notification.metrics_run_id)
  return metrics_run_id_;
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::set_metrics_run_id(::google::protobuf::uint32 value) {
  set_has_metrics_run_id();
  metrics_run_id_ = value;
  // @@protoc_insertion_point(field_set:CChatUsability_RequestClientUsabilityMetrics_Notification.metrics_run_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::EChatRoomJoinState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomJoinState>() {
  return ::EChatRoomJoinState_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomGroupRank> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomGroupRank>() {
  return ::EChatRoomGroupRank_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomNotificationLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomNotificationLevel>() {
  return ::EChatRoomNotificationLevel_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomServerMessage> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomServerMessage>() {
  return ::EChatRoomServerMessage_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomMemberStateChange> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomMemberStateChange>() {
  return ::EChatRoomMemberStateChange_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_steammessages_5fchat_2esteamclient_2eproto
