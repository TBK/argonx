// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_shader.steamclient.proto

#include "steammessages_shader.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fshader_2esteamclient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fshader_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CShader_RegisterShader_Request_Shader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fshader_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CShader_SendShader_Request_ShaderCode;
}  // namespace protobuf_steammessages_5fshader_2esteamclient_2eproto
class CShader_RegisterShader_Request_ShaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_RegisterShader_Request_Shader>
      _instance;
} _CShader_RegisterShader_Request_Shader_default_instance_;
class CShader_RegisterShader_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_RegisterShader_Request>
      _instance;
} _CShader_RegisterShader_Request_default_instance_;
class CShader_RegisterShader_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_RegisterShader_Response>
      _instance;
} _CShader_RegisterShader_Response_default_instance_;
class CShader_SendShader_Request_ShaderCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_SendShader_Request_ShaderCode>
      _instance;
} _CShader_SendShader_Request_ShaderCode_default_instance_;
class CShader_SendShader_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_SendShader_Request>
      _instance;
} _CShader_SendShader_Request_default_instance_;
class CShader_SendShader_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_SendShader_Response>
      _instance;
} _CShader_SendShader_Response_default_instance_;
class CShader_GetBucketManifest_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_GetBucketManifest_Request>
      _instance;
} _CShader_GetBucketManifest_Request_default_instance_;
class CShader_GetBucketManifest_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShader_GetBucketManifest_Response>
      _instance;
} _CShader_GetBucketManifest_Response_default_instance_;
namespace protobuf_steammessages_5fshader_2esteamclient_2eproto {
static void InitDefaultsCShader_RegisterShader_Request_Shader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_RegisterShader_Request_Shader_default_instance_;
    new (ptr) ::CShader_RegisterShader_Request_Shader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_RegisterShader_Request_Shader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShader_RegisterShader_Request_Shader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShader_RegisterShader_Request_Shader}, {}};

static void InitDefaultsCShader_RegisterShader_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_RegisterShader_Request_default_instance_;
    new (ptr) ::CShader_RegisterShader_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_RegisterShader_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CShader_RegisterShader_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCShader_RegisterShader_Request}, {
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Request_Shader.base,}};

static void InitDefaultsCShader_RegisterShader_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_RegisterShader_Response_default_instance_;
    new (ptr) ::CShader_RegisterShader_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_RegisterShader_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShader_RegisterShader_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShader_RegisterShader_Response}, {}};

static void InitDefaultsCShader_SendShader_Request_ShaderCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_SendShader_Request_ShaderCode_default_instance_;
    new (ptr) ::CShader_SendShader_Request_ShaderCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_SendShader_Request_ShaderCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShader_SendShader_Request_ShaderCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShader_SendShader_Request_ShaderCode}, {}};

static void InitDefaultsCShader_SendShader_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_SendShader_Request_default_instance_;
    new (ptr) ::CShader_SendShader_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_SendShader_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CShader_SendShader_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCShader_SendShader_Request}, {
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Request_ShaderCode.base,}};

static void InitDefaultsCShader_SendShader_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_SendShader_Response_default_instance_;
    new (ptr) ::CShader_SendShader_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_SendShader_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShader_SendShader_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShader_SendShader_Response}, {}};

static void InitDefaultsCShader_GetBucketManifest_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_GetBucketManifest_Request_default_instance_;
    new (ptr) ::CShader_GetBucketManifest_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_GetBucketManifest_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShader_GetBucketManifest_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShader_GetBucketManifest_Request}, {}};

static void InitDefaultsCShader_GetBucketManifest_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShader_GetBucketManifest_Response_default_instance_;
    new (ptr) ::CShader_GetBucketManifest_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShader_GetBucketManifest_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShader_GetBucketManifest_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShader_GetBucketManifest_Response}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_RegisterShader_Request_Shader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_RegisterShader_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_RegisterShader_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_SendShader_Request_ShaderCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_SendShader_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_SendShader_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_GetBucketManifest_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShader_GetBucketManifest_Response.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, cache_key_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, shader_code_sha_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request, gpu_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request, driver_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Request, shaders_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_RegisterShader_Response, requested_codeids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, shader_code_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, shader_code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Request, shaders_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_SendShader_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Request, gpu_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Request, driver_desc_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Response, manifestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShader_GetBucketManifest_Response, depotsize_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CShader_RegisterShader_Request_Shader)},
  { 9, 18, sizeof(::CShader_RegisterShader_Request)},
  { 22, 28, sizeof(::CShader_RegisterShader_Response)},
  { 29, 36, sizeof(::CShader_SendShader_Request_ShaderCode)},
  { 38, 45, sizeof(::CShader_SendShader_Request)},
  { 47, 52, sizeof(::CShader_SendShader_Response)},
  { 52, 60, sizeof(::CShader_GetBucketManifest_Request)},
  { 63, 70, sizeof(::CShader_GetBucketManifest_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_RegisterShader_Request_Shader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_RegisterShader_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_RegisterShader_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_SendShader_Request_ShaderCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_SendShader_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_SendShader_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_GetBucketManifest_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShader_GetBucketManifest_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_shader.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&steammessages_shader.steamclient.proto"
      "\032,steammessages_unified_base.steamclient"
      ".proto\"\311\001\n\036CShader_RegisterShader_Reques"
      "t\022\r\n\005appid\030\001 \001(\r\022\020\n\010gpu_desc\030\002 \001(\t\022\023\n\013dr"
      "iver_desc\030\003 \001(\t\0227\n\007shaders\030\004 \003(\0132&.CShad"
      "er_RegisterShader_Request.Shader\0328\n\006Shad"
      "er\022\025\n\rcache_key_sha\030\001 \001(\014\022\027\n\017shader_code"
      "_sha\030\002 \001(\014\"<\n\037CShader_RegisterShader_Res"
      "ponse\022\031\n\021requested_codeids\030\001 \003(\r\"\240\001\n\032CSh"
      "ader_SendShader_Request\022\r\n\005appid\030\001 \001(\r\0227"
      "\n\007shaders\030\002 \003(\0132&.CShader_SendShader_Req"
      "uest.ShaderCode\032:\n\nShaderCode\022\027\n\017shader_"
      "code_sha\030\001 \001(\014\022\023\n\013shader_code\030\002 \001(\014\"\035\n\033C"
      "Shader_SendShader_Response\"Y\n!CShader_Ge"
      "tBucketManifest_Request\022\r\n\005appid\030\001 \001(\r\022\020"
      "\n\010gpu_desc\030\002 \001(\t\022\023\n\013driver_desc\030\003 \001(\t\"K\n"
      "\"CShader_GetBucketManifest_Response\022\022\n\nm"
      "anifestid\030\001 \001(\004\022\021\n\tdepotsize\030\002 \001(\r2\237\004\n\006S"
      "hader\022\276\001\n\016RegisterShader\022\037.CShader_Regis"
      "terShader_Request\032 .CShader_RegisterShad"
      "er_Response\"i\202\265\030eClient just finished pl"
      "aying a game, detected new shader cache "
      "entries and is notifying us about them\022\217"
      "\001\n\nSendShader\022\033.CShader_SendShader_Reque"
      "st\032\034.CShader_SendShader_Response\"F\202\265\030BCl"
      "ient is sending us actual compiled shade"
      "r code that we requested\022\255\001\n\021GetBucketMa"
      "nifest\022\".CShader_GetBucketManifest_Reque"
      "st\032#.CShader_GetBucketManifest_Response\""
      "O\202\265\030KClient wants to know the manifest I"
      "D to fetch (if any) for a bucket\'s depot"
      "\032\022\202\265\030\016Shader methodsB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_shader.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fshader_2esteamclient_2eproto

// ===================================================================

void CShader_RegisterShader_Request_Shader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_RegisterShader_Request_Shader::kCacheKeyShaFieldNumber;
const int CShader_RegisterShader_Request_Shader::kShaderCodeShaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_RegisterShader_Request_Shader::CShader_RegisterShader_Request_Shader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Request_Shader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_RegisterShader_Request.Shader)
}
CShader_RegisterShader_Request_Shader::CShader_RegisterShader_Request_Shader(const CShader_RegisterShader_Request_Shader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cache_key_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cache_key_sha()) {
    cache_key_sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_key_sha_);
  }
  shader_code_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shader_code_sha()) {
    shader_code_sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shader_code_sha_);
  }
  // @@protoc_insertion_point(copy_constructor:CShader_RegisterShader_Request.Shader)
}

void CShader_RegisterShader_Request_Shader::SharedCtor() {
  cache_key_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shader_code_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CShader_RegisterShader_Request_Shader::~CShader_RegisterShader_Request_Shader() {
  // @@protoc_insertion_point(destructor:CShader_RegisterShader_Request.Shader)
  SharedDtor();
}

void CShader_RegisterShader_Request_Shader::SharedDtor() {
  cache_key_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shader_code_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CShader_RegisterShader_Request_Shader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_RegisterShader_Request_Shader::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_RegisterShader_Request_Shader& CShader_RegisterShader_Request_Shader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Request_Shader.base);
  return *internal_default_instance();
}


void CShader_RegisterShader_Request_Shader::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_RegisterShader_Request.Shader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cache_key_sha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      shader_code_sha_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_RegisterShader_Request_Shader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_RegisterShader_Request.Shader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes cache_key_sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cache_key_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes shader_code_sha = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_shader_code_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_RegisterShader_Request.Shader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_RegisterShader_Request.Shader)
  return false;
#undef DO_
}

void CShader_RegisterShader_Request_Shader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_RegisterShader_Request.Shader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cache_key_sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cache_key_sha(), output);
  }

  // optional bytes shader_code_sha = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->shader_code_sha(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_RegisterShader_Request.Shader)
}

::google::protobuf::uint8* CShader_RegisterShader_Request_Shader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_RegisterShader_Request.Shader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cache_key_sha = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cache_key_sha(), target);
  }

  // optional bytes shader_code_sha = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->shader_code_sha(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_RegisterShader_Request.Shader)
  return target;
}

size_t CShader_RegisterShader_Request_Shader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_RegisterShader_Request.Shader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes cache_key_sha = 1;
    if (has_cache_key_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cache_key_sha());
    }

    // optional bytes shader_code_sha = 2;
    if (has_shader_code_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->shader_code_sha());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_RegisterShader_Request_Shader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_RegisterShader_Request.Shader)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_RegisterShader_Request_Shader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_RegisterShader_Request_Shader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_RegisterShader_Request.Shader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_RegisterShader_Request.Shader)
    MergeFrom(*source);
  }
}

void CShader_RegisterShader_Request_Shader::MergeFrom(const CShader_RegisterShader_Request_Shader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_RegisterShader_Request.Shader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cache_key_sha();
      cache_key_sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_key_sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_shader_code_sha();
      shader_code_sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shader_code_sha_);
    }
  }
}

void CShader_RegisterShader_Request_Shader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_RegisterShader_Request.Shader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_RegisterShader_Request_Shader::CopyFrom(const CShader_RegisterShader_Request_Shader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_RegisterShader_Request.Shader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_RegisterShader_Request_Shader::IsInitialized() const {
  return true;
}

void CShader_RegisterShader_Request_Shader::Swap(CShader_RegisterShader_Request_Shader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_RegisterShader_Request_Shader::InternalSwap(CShader_RegisterShader_Request_Shader* other) {
  using std::swap;
  cache_key_sha_.Swap(&other->cache_key_sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shader_code_sha_.Swap(&other->shader_code_sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_RegisterShader_Request_Shader::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_RegisterShader_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_RegisterShader_Request::kAppidFieldNumber;
const int CShader_RegisterShader_Request::kGpuDescFieldNumber;
const int CShader_RegisterShader_Request::kDriverDescFieldNumber;
const int CShader_RegisterShader_Request::kShadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_RegisterShader_Request::CShader_RegisterShader_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_RegisterShader_Request)
}
CShader_RegisterShader_Request::CShader_RegisterShader_Request(const CShader_RegisterShader_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shaders_(from.shaders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gpu_desc()) {
    gpu_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gpu_desc_);
  }
  driver_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_driver_desc()) {
    driver_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_desc_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CShader_RegisterShader_Request)
}

void CShader_RegisterShader_Request::SharedCtor() {
  gpu_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CShader_RegisterShader_Request::~CShader_RegisterShader_Request() {
  // @@protoc_insertion_point(destructor:CShader_RegisterShader_Request)
  SharedDtor();
}

void CShader_RegisterShader_Request::SharedDtor() {
  gpu_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CShader_RegisterShader_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_RegisterShader_Request::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_RegisterShader_Request& CShader_RegisterShader_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Request.base);
  return *internal_default_instance();
}


void CShader_RegisterShader_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_RegisterShader_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shaders_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmptyNoArena();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_RegisterShader_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_RegisterShader_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gpu_desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gpu_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gpu_desc().data(), static_cast<int>(this->gpu_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CShader_RegisterShader_Request.gpu_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string driver_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_driver_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->driver_desc().data(), static_cast<int>(this->driver_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CShader_RegisterShader_Request.driver_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shaders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_RegisterShader_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_RegisterShader_Request)
  return false;
#undef DO_
}

void CShader_RegisterShader_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_RegisterShader_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gpu_desc().data(), static_cast<int>(this->gpu_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_RegisterShader_Request.gpu_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gpu_desc(), output);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->driver_desc().data(), static_cast<int>(this->driver_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_RegisterShader_Request.driver_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->driver_desc(), output);
  }

  // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shaders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->shaders(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_RegisterShader_Request)
}

::google::protobuf::uint8* CShader_RegisterShader_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_RegisterShader_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gpu_desc().data(), static_cast<int>(this->gpu_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_RegisterShader_Request.gpu_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gpu_desc(), target);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->driver_desc().data(), static_cast<int>(this->driver_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_RegisterShader_Request.driver_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->driver_desc(), target);
  }

  // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shaders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->shaders(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_RegisterShader_Request)
  return target;
}

size_t CShader_RegisterShader_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_RegisterShader_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shaders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shaders(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string gpu_desc = 2;
    if (has_gpu_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gpu_desc());
    }

    // optional string driver_desc = 3;
    if (has_driver_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->driver_desc());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_RegisterShader_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_RegisterShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_RegisterShader_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_RegisterShader_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_RegisterShader_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_RegisterShader_Request)
    MergeFrom(*source);
  }
}

void CShader_RegisterShader_Request::MergeFrom(const CShader_RegisterShader_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_RegisterShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shaders_.MergeFrom(from.shaders_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gpu_desc();
      gpu_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gpu_desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_driver_desc();
      driver_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_RegisterShader_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_RegisterShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_RegisterShader_Request::CopyFrom(const CShader_RegisterShader_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_RegisterShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_RegisterShader_Request::IsInitialized() const {
  return true;
}

void CShader_RegisterShader_Request::Swap(CShader_RegisterShader_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_RegisterShader_Request::InternalSwap(CShader_RegisterShader_Request* other) {
  using std::swap;
  CastToBase(&shaders_)->InternalSwap(CastToBase(&other->shaders_));
  gpu_desc_.Swap(&other->gpu_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  driver_desc_.Swap(&other->driver_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_RegisterShader_Request::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_RegisterShader_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_RegisterShader_Response::kRequestedCodeidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_RegisterShader_Response::CShader_RegisterShader_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_RegisterShader_Response)
}
CShader_RegisterShader_Response::CShader_RegisterShader_Response(const CShader_RegisterShader_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      requested_codeids_(from.requested_codeids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CShader_RegisterShader_Response)
}

void CShader_RegisterShader_Response::SharedCtor() {
}

CShader_RegisterShader_Response::~CShader_RegisterShader_Response() {
  // @@protoc_insertion_point(destructor:CShader_RegisterShader_Response)
  SharedDtor();
}

void CShader_RegisterShader_Response::SharedDtor() {
}

void CShader_RegisterShader_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_RegisterShader_Response::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_RegisterShader_Response& CShader_RegisterShader_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_RegisterShader_Response.base);
  return *internal_default_instance();
}


void CShader_RegisterShader_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_RegisterShader_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_codeids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_RegisterShader_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_RegisterShader_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 requested_codeids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_requested_codeids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_requested_codeids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_RegisterShader_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_RegisterShader_Response)
  return false;
#undef DO_
}

void CShader_RegisterShader_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_RegisterShader_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 requested_codeids = 1;
  for (int i = 0, n = this->requested_codeids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->requested_codeids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_RegisterShader_Response)
}

::google::protobuf::uint8* CShader_RegisterShader_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_RegisterShader_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 requested_codeids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->requested_codeids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_RegisterShader_Response)
  return target;
}

size_t CShader_RegisterShader_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_RegisterShader_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 requested_codeids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->requested_codeids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->requested_codeids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_RegisterShader_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_RegisterShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_RegisterShader_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_RegisterShader_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_RegisterShader_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_RegisterShader_Response)
    MergeFrom(*source);
  }
}

void CShader_RegisterShader_Response::MergeFrom(const CShader_RegisterShader_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_RegisterShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requested_codeids_.MergeFrom(from.requested_codeids_);
}

void CShader_RegisterShader_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_RegisterShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_RegisterShader_Response::CopyFrom(const CShader_RegisterShader_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_RegisterShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_RegisterShader_Response::IsInitialized() const {
  return true;
}

void CShader_RegisterShader_Response::Swap(CShader_RegisterShader_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_RegisterShader_Response::InternalSwap(CShader_RegisterShader_Response* other) {
  using std::swap;
  requested_codeids_.InternalSwap(&other->requested_codeids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_RegisterShader_Response::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_SendShader_Request_ShaderCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_SendShader_Request_ShaderCode::kShaderCodeShaFieldNumber;
const int CShader_SendShader_Request_ShaderCode::kShaderCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_SendShader_Request_ShaderCode::CShader_SendShader_Request_ShaderCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Request_ShaderCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_SendShader_Request.ShaderCode)
}
CShader_SendShader_Request_ShaderCode::CShader_SendShader_Request_ShaderCode(const CShader_SendShader_Request_ShaderCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shader_code_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shader_code_sha()) {
    shader_code_sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shader_code_sha_);
  }
  shader_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shader_code()) {
    shader_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shader_code_);
  }
  // @@protoc_insertion_point(copy_constructor:CShader_SendShader_Request.ShaderCode)
}

void CShader_SendShader_Request_ShaderCode::SharedCtor() {
  shader_code_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shader_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CShader_SendShader_Request_ShaderCode::~CShader_SendShader_Request_ShaderCode() {
  // @@protoc_insertion_point(destructor:CShader_SendShader_Request.ShaderCode)
  SharedDtor();
}

void CShader_SendShader_Request_ShaderCode::SharedDtor() {
  shader_code_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shader_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CShader_SendShader_Request_ShaderCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_SendShader_Request_ShaderCode::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_SendShader_Request_ShaderCode& CShader_SendShader_Request_ShaderCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Request_ShaderCode.base);
  return *internal_default_instance();
}


void CShader_SendShader_Request_ShaderCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_SendShader_Request.ShaderCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      shader_code_sha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      shader_code_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_SendShader_Request_ShaderCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_SendShader_Request.ShaderCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes shader_code_sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_shader_code_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes shader_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_shader_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_SendShader_Request.ShaderCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_SendShader_Request.ShaderCode)
  return false;
#undef DO_
}

void CShader_SendShader_Request_ShaderCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_SendShader_Request.ShaderCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes shader_code_sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->shader_code_sha(), output);
  }

  // optional bytes shader_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->shader_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_SendShader_Request.ShaderCode)
}

::google::protobuf::uint8* CShader_SendShader_Request_ShaderCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_SendShader_Request.ShaderCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes shader_code_sha = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->shader_code_sha(), target);
  }

  // optional bytes shader_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->shader_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_SendShader_Request.ShaderCode)
  return target;
}

size_t CShader_SendShader_Request_ShaderCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_SendShader_Request.ShaderCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes shader_code_sha = 1;
    if (has_shader_code_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->shader_code_sha());
    }

    // optional bytes shader_code = 2;
    if (has_shader_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->shader_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_SendShader_Request_ShaderCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_SendShader_Request.ShaderCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_SendShader_Request_ShaderCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_SendShader_Request_ShaderCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_SendShader_Request.ShaderCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_SendShader_Request.ShaderCode)
    MergeFrom(*source);
  }
}

void CShader_SendShader_Request_ShaderCode::MergeFrom(const CShader_SendShader_Request_ShaderCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_SendShader_Request.ShaderCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_shader_code_sha();
      shader_code_sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shader_code_sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_shader_code();
      shader_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shader_code_);
    }
  }
}

void CShader_SendShader_Request_ShaderCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_SendShader_Request.ShaderCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_SendShader_Request_ShaderCode::CopyFrom(const CShader_SendShader_Request_ShaderCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_SendShader_Request.ShaderCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_SendShader_Request_ShaderCode::IsInitialized() const {
  return true;
}

void CShader_SendShader_Request_ShaderCode::Swap(CShader_SendShader_Request_ShaderCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_SendShader_Request_ShaderCode::InternalSwap(CShader_SendShader_Request_ShaderCode* other) {
  using std::swap;
  shader_code_sha_.Swap(&other->shader_code_sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shader_code_.Swap(&other->shader_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_SendShader_Request_ShaderCode::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_SendShader_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_SendShader_Request::kAppidFieldNumber;
const int CShader_SendShader_Request::kShadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_SendShader_Request::CShader_SendShader_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_SendShader_Request)
}
CShader_SendShader_Request::CShader_SendShader_Request(const CShader_SendShader_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shaders_(from.shaders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CShader_SendShader_Request)
}

void CShader_SendShader_Request::SharedCtor() {
  appid_ = 0u;
}

CShader_SendShader_Request::~CShader_SendShader_Request() {
  // @@protoc_insertion_point(destructor:CShader_SendShader_Request)
  SharedDtor();
}

void CShader_SendShader_Request::SharedDtor() {
}

void CShader_SendShader_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_SendShader_Request::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_SendShader_Request& CShader_SendShader_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Request.base);
  return *internal_default_instance();
}


void CShader_SendShader_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_SendShader_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shaders_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_SendShader_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_SendShader_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shaders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_SendShader_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_SendShader_Request)
  return false;
#undef DO_
}

void CShader_SendShader_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_SendShader_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shaders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->shaders(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_SendShader_Request)
}

::google::protobuf::uint8* CShader_SendShader_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_SendShader_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shaders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->shaders(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_SendShader_Request)
  return target;
}

size_t CShader_SendShader_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_SendShader_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->shaders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shaders(static_cast<int>(i)));
    }
  }

  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_SendShader_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_SendShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_SendShader_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_SendShader_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_SendShader_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_SendShader_Request)
    MergeFrom(*source);
  }
}

void CShader_SendShader_Request::MergeFrom(const CShader_SendShader_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_SendShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shaders_.MergeFrom(from.shaders_);
  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CShader_SendShader_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_SendShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_SendShader_Request::CopyFrom(const CShader_SendShader_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_SendShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_SendShader_Request::IsInitialized() const {
  return true;
}

void CShader_SendShader_Request::Swap(CShader_SendShader_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_SendShader_Request::InternalSwap(CShader_SendShader_Request* other) {
  using std::swap;
  CastToBase(&shaders_)->InternalSwap(CastToBase(&other->shaders_));
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_SendShader_Request::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_SendShader_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_SendShader_Response::CShader_SendShader_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_SendShader_Response)
}
CShader_SendShader_Response::CShader_SendShader_Response(const CShader_SendShader_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CShader_SendShader_Response)
}

void CShader_SendShader_Response::SharedCtor() {
}

CShader_SendShader_Response::~CShader_SendShader_Response() {
  // @@protoc_insertion_point(destructor:CShader_SendShader_Response)
  SharedDtor();
}

void CShader_SendShader_Response::SharedDtor() {
}

void CShader_SendShader_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_SendShader_Response::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_SendShader_Response& CShader_SendShader_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_SendShader_Response.base);
  return *internal_default_instance();
}


void CShader_SendShader_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_SendShader_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_SendShader_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_SendShader_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_SendShader_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_SendShader_Response)
  return false;
#undef DO_
}

void CShader_SendShader_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_SendShader_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_SendShader_Response)
}

::google::protobuf::uint8* CShader_SendShader_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_SendShader_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_SendShader_Response)
  return target;
}

size_t CShader_SendShader_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_SendShader_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_SendShader_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_SendShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_SendShader_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_SendShader_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_SendShader_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_SendShader_Response)
    MergeFrom(*source);
  }
}

void CShader_SendShader_Response::MergeFrom(const CShader_SendShader_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_SendShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CShader_SendShader_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_SendShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_SendShader_Response::CopyFrom(const CShader_SendShader_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_SendShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_SendShader_Response::IsInitialized() const {
  return true;
}

void CShader_SendShader_Response::Swap(CShader_SendShader_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_SendShader_Response::InternalSwap(CShader_SendShader_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_SendShader_Response::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_GetBucketManifest_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_GetBucketManifest_Request::kAppidFieldNumber;
const int CShader_GetBucketManifest_Request::kGpuDescFieldNumber;
const int CShader_GetBucketManifest_Request::kDriverDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_GetBucketManifest_Request::CShader_GetBucketManifest_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_GetBucketManifest_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_GetBucketManifest_Request)
}
CShader_GetBucketManifest_Request::CShader_GetBucketManifest_Request(const CShader_GetBucketManifest_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gpu_desc()) {
    gpu_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gpu_desc_);
  }
  driver_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_driver_desc()) {
    driver_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_desc_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CShader_GetBucketManifest_Request)
}

void CShader_GetBucketManifest_Request::SharedCtor() {
  gpu_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CShader_GetBucketManifest_Request::~CShader_GetBucketManifest_Request() {
  // @@protoc_insertion_point(destructor:CShader_GetBucketManifest_Request)
  SharedDtor();
}

void CShader_GetBucketManifest_Request::SharedDtor() {
  gpu_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CShader_GetBucketManifest_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_GetBucketManifest_Request::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_GetBucketManifest_Request& CShader_GetBucketManifest_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_GetBucketManifest_Request.base);
  return *internal_default_instance();
}


void CShader_GetBucketManifest_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetBucketManifest_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmptyNoArena();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_GetBucketManifest_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_GetBucketManifest_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gpu_desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gpu_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gpu_desc().data(), static_cast<int>(this->gpu_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CShader_GetBucketManifest_Request.gpu_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string driver_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_driver_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->driver_desc().data(), static_cast<int>(this->driver_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CShader_GetBucketManifest_Request.driver_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_GetBucketManifest_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_GetBucketManifest_Request)
  return false;
#undef DO_
}

void CShader_GetBucketManifest_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_GetBucketManifest_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gpu_desc().data(), static_cast<int>(this->gpu_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_GetBucketManifest_Request.gpu_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gpu_desc(), output);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->driver_desc().data(), static_cast<int>(this->driver_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_GetBucketManifest_Request.driver_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->driver_desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_GetBucketManifest_Request)
}

::google::protobuf::uint8* CShader_GetBucketManifest_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetBucketManifest_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gpu_desc().data(), static_cast<int>(this->gpu_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_GetBucketManifest_Request.gpu_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gpu_desc(), target);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->driver_desc().data(), static_cast<int>(this->driver_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CShader_GetBucketManifest_Request.driver_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->driver_desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetBucketManifest_Request)
  return target;
}

size_t CShader_GetBucketManifest_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetBucketManifest_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string gpu_desc = 2;
    if (has_gpu_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gpu_desc());
    }

    // optional string driver_desc = 3;
    if (has_driver_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->driver_desc());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetBucketManifest_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetBucketManifest_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetBucketManifest_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_GetBucketManifest_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetBucketManifest_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetBucketManifest_Request)
    MergeFrom(*source);
  }
}

void CShader_GetBucketManifest_Request::MergeFrom(const CShader_GetBucketManifest_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetBucketManifest_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gpu_desc();
      gpu_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gpu_desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_driver_desc();
      driver_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_GetBucketManifest_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetBucketManifest_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetBucketManifest_Request::CopyFrom(const CShader_GetBucketManifest_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetBucketManifest_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetBucketManifest_Request::IsInitialized() const {
  return true;
}

void CShader_GetBucketManifest_Request::Swap(CShader_GetBucketManifest_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_GetBucketManifest_Request::InternalSwap(CShader_GetBucketManifest_Request* other) {
  using std::swap;
  gpu_desc_.Swap(&other->gpu_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  driver_desc_.Swap(&other->driver_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_GetBucketManifest_Request::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShader_GetBucketManifest_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShader_GetBucketManifest_Response::kManifestidFieldNumber;
const int CShader_GetBucketManifest_Response::kDepotsizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShader_GetBucketManifest_Response::CShader_GetBucketManifest_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_GetBucketManifest_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShader_GetBucketManifest_Response)
}
CShader_GetBucketManifest_Response::CShader_GetBucketManifest_Response(const CShader_GetBucketManifest_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&manifestid_, &from.manifestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&depotsize_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(depotsize_));
  // @@protoc_insertion_point(copy_constructor:CShader_GetBucketManifest_Response)
}

void CShader_GetBucketManifest_Response::SharedCtor() {
  ::memset(&manifestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&depotsize_) -
      reinterpret_cast<char*>(&manifestid_)) + sizeof(depotsize_));
}

CShader_GetBucketManifest_Response::~CShader_GetBucketManifest_Response() {
  // @@protoc_insertion_point(destructor:CShader_GetBucketManifest_Response)
  SharedDtor();
}

void CShader_GetBucketManifest_Response::SharedDtor() {
}

void CShader_GetBucketManifest_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShader_GetBucketManifest_Response::descriptor() {
  ::protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShader_GetBucketManifest_Response& CShader_GetBucketManifest_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fshader_2esteamclient_2eproto::scc_info_CShader_GetBucketManifest_Response.base);
  return *internal_default_instance();
}


void CShader_GetBucketManifest_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetBucketManifest_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&manifestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&depotsize_) -
        reinterpret_cast<char*>(&manifestid_)) + sizeof(depotsize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CShader_GetBucketManifest_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShader_GetBucketManifest_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 manifestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_manifestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &manifestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depotsize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depotsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depotsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShader_GetBucketManifest_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShader_GetBucketManifest_Response)
  return false;
#undef DO_
}

void CShader_GetBucketManifest_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShader_GetBucketManifest_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifestid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->manifestid(), output);
  }

  // optional uint32 depotsize = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depotsize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CShader_GetBucketManifest_Response)
}

::google::protobuf::uint8* CShader_GetBucketManifest_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetBucketManifest_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifestid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->manifestid(), target);
  }

  // optional uint32 depotsize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depotsize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetBucketManifest_Response)
  return target;
}

size_t CShader_GetBucketManifest_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetBucketManifest_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 manifestid = 1;
    if (has_manifestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->manifestid());
    }

    // optional uint32 depotsize = 2;
    if (has_depotsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depotsize());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetBucketManifest_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetBucketManifest_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetBucketManifest_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShader_GetBucketManifest_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetBucketManifest_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetBucketManifest_Response)
    MergeFrom(*source);
  }
}

void CShader_GetBucketManifest_Response::MergeFrom(const CShader_GetBucketManifest_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetBucketManifest_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      manifestid_ = from.manifestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      depotsize_ = from.depotsize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_GetBucketManifest_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetBucketManifest_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetBucketManifest_Response::CopyFrom(const CShader_GetBucketManifest_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetBucketManifest_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetBucketManifest_Response::IsInitialized() const {
  return true;
}

void CShader_GetBucketManifest_Response::Swap(CShader_GetBucketManifest_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShader_GetBucketManifest_Response::InternalSwap(CShader_GetBucketManifest_Response* other) {
  using std::swap;
  swap(manifestid_, other->manifestid_);
  swap(depotsize_, other->depotsize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShader_GetBucketManifest_Response::GetMetadata() const {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Shader::~Shader() {}

const ::google::protobuf::ServiceDescriptor* Shader::descriptor() {
  protobuf_steammessages_5fshader_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Shader::GetDescriptor() {
  return descriptor();
}

void Shader::RegisterShader(::google::protobuf::RpcController* controller,
                         const ::CShader_RegisterShader_Request*,
                         ::CShader_RegisterShader_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterShader() not implemented.");
  done->Run();
}

void Shader::SendShader(::google::protobuf::RpcController* controller,
                         const ::CShader_SendShader_Request*,
                         ::CShader_SendShader_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendShader() not implemented.");
  done->Run();
}

void Shader::GetBucketManifest(::google::protobuf::RpcController* controller,
                         const ::CShader_GetBucketManifest_Request*,
                         ::CShader_GetBucketManifest_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetBucketManifest() not implemented.");
  done->Run();
}

void Shader::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fshader_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      RegisterShader(controller,
             ::google::protobuf::down_cast<const ::CShader_RegisterShader_Request*>(request),
             ::google::protobuf::down_cast< ::CShader_RegisterShader_Response*>(response),
             done);
      break;
    case 1:
      SendShader(controller,
             ::google::protobuf::down_cast<const ::CShader_SendShader_Request*>(request),
             ::google::protobuf::down_cast< ::CShader_SendShader_Response*>(response),
             done);
      break;
    case 2:
      GetBucketManifest(controller,
             ::google::protobuf::down_cast<const ::CShader_GetBucketManifest_Request*>(request),
             ::google::protobuf::down_cast< ::CShader_GetBucketManifest_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Shader::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CShader_RegisterShader_Request::default_instance();
    case 1:
      return ::CShader_SendShader_Request::default_instance();
    case 2:
      return ::CShader_GetBucketManifest_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Shader::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CShader_RegisterShader_Response::default_instance();
    case 1:
      return ::CShader_SendShader_Response::default_instance();
    case 2:
      return ::CShader_GetBucketManifest_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Shader_Stub::Shader_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Shader_Stub::Shader_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Shader_Stub::~Shader_Stub() {
  if (owns_channel_) delete channel_;
}

void Shader_Stub::RegisterShader(::google::protobuf::RpcController* controller,
                              const ::CShader_RegisterShader_Request* request,
                              ::CShader_RegisterShader_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Shader_Stub::SendShader(::google::protobuf::RpcController* controller,
                              const ::CShader_SendShader_Request* request,
                              ::CShader_SendShader_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Shader_Stub::GetBucketManifest(::google::protobuf::RpcController* controller,
                              const ::CShader_GetBucketManifest_Request* request,
                              ::CShader_GetBucketManifest_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_RegisterShader_Request_Shader* Arena::CreateMaybeMessage< ::CShader_RegisterShader_Request_Shader >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_RegisterShader_Request_Shader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_RegisterShader_Request* Arena::CreateMaybeMessage< ::CShader_RegisterShader_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_RegisterShader_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_RegisterShader_Response* Arena::CreateMaybeMessage< ::CShader_RegisterShader_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_RegisterShader_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_SendShader_Request_ShaderCode* Arena::CreateMaybeMessage< ::CShader_SendShader_Request_ShaderCode >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_SendShader_Request_ShaderCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_SendShader_Request* Arena::CreateMaybeMessage< ::CShader_SendShader_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_SendShader_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_SendShader_Response* Arena::CreateMaybeMessage< ::CShader_SendShader_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_SendShader_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_GetBucketManifest_Request* Arena::CreateMaybeMessage< ::CShader_GetBucketManifest_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_GetBucketManifest_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShader_GetBucketManifest_Response* Arena::CreateMaybeMessage< ::CShader_GetBucketManifest_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CShader_GetBucketManifest_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
