// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_store.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fstore_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fstore_2esteamclient_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fstore_2esteamclient_2eproto 

namespace protobuf_steammessages_5fstore_2esteamclient_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_steammessages_5fstore_2esteamclient_2eproto
class CStore_GetLocalizedNameForTags_Request;
class CStore_GetLocalizedNameForTags_RequestDefaultTypeInternal;
extern CStore_GetLocalizedNameForTags_RequestDefaultTypeInternal _CStore_GetLocalizedNameForTags_Request_default_instance_;
class CStore_GetLocalizedNameForTags_Response;
class CStore_GetLocalizedNameForTags_ResponseDefaultTypeInternal;
extern CStore_GetLocalizedNameForTags_ResponseDefaultTypeInternal _CStore_GetLocalizedNameForTags_Response_default_instance_;
class CStore_GetLocalizedNameForTags_Response_Tag;
class CStore_GetLocalizedNameForTags_Response_TagDefaultTypeInternal;
extern CStore_GetLocalizedNameForTags_Response_TagDefaultTypeInternal _CStore_GetLocalizedNameForTags_Response_Tag_default_instance_;
namespace google {
namespace protobuf {
template<> ::CStore_GetLocalizedNameForTags_Request* Arena::CreateMaybeMessage<::CStore_GetLocalizedNameForTags_Request>(Arena*);
template<> ::CStore_GetLocalizedNameForTags_Response* Arena::CreateMaybeMessage<::CStore_GetLocalizedNameForTags_Response>(Arena*);
template<> ::CStore_GetLocalizedNameForTags_Response_Tag* Arena::CreateMaybeMessage<::CStore_GetLocalizedNameForTags_Response_Tag>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class CStore_GetLocalizedNameForTags_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CStore_GetLocalizedNameForTags_Request) */ {
 public:
  CStore_GetLocalizedNameForTags_Request();
  virtual ~CStore_GetLocalizedNameForTags_Request();

  CStore_GetLocalizedNameForTags_Request(const CStore_GetLocalizedNameForTags_Request& from);

  inline CStore_GetLocalizedNameForTags_Request& operator=(const CStore_GetLocalizedNameForTags_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetLocalizedNameForTags_Request(CStore_GetLocalizedNameForTags_Request&& from) noexcept
    : CStore_GetLocalizedNameForTags_Request() {
    *this = ::std::move(from);
  }

  inline CStore_GetLocalizedNameForTags_Request& operator=(CStore_GetLocalizedNameForTags_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CStore_GetLocalizedNameForTags_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetLocalizedNameForTags_Request* internal_default_instance() {
    return reinterpret_cast<const CStore_GetLocalizedNameForTags_Request*>(
               &_CStore_GetLocalizedNameForTags_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CStore_GetLocalizedNameForTags_Request* other);
  friend void swap(CStore_GetLocalizedNameForTags_Request& a, CStore_GetLocalizedNameForTags_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetLocalizedNameForTags_Request* New() const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Request>(NULL);
  }

  CStore_GetLocalizedNameForTags_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetLocalizedNameForTags_Request& from);
  void MergeFrom(const CStore_GetLocalizedNameForTags_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetLocalizedNameForTags_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tagids = 2;
  int tagids_size() const;
  void clear_tagids();
  static const int kTagidsFieldNumber = 2;
  ::google::protobuf::uint32 tagids(int index) const;
  void set_tagids(int index, ::google::protobuf::uint32 value);
  void add_tagids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tagids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tagids();

  // optional string language = 1;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // @@protoc_insertion_point(class_scope:CStore_GetLocalizedNameForTags_Request)
 private:
  void set_has_language();
  void clear_has_language();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tagids_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  friend struct ::protobuf_steammessages_5fstore_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CStore_GetLocalizedNameForTags_Response_Tag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CStore_GetLocalizedNameForTags_Response.Tag) */ {
 public:
  CStore_GetLocalizedNameForTags_Response_Tag();
  virtual ~CStore_GetLocalizedNameForTags_Response_Tag();

  CStore_GetLocalizedNameForTags_Response_Tag(const CStore_GetLocalizedNameForTags_Response_Tag& from);

  inline CStore_GetLocalizedNameForTags_Response_Tag& operator=(const CStore_GetLocalizedNameForTags_Response_Tag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetLocalizedNameForTags_Response_Tag(CStore_GetLocalizedNameForTags_Response_Tag&& from) noexcept
    : CStore_GetLocalizedNameForTags_Response_Tag() {
    *this = ::std::move(from);
  }

  inline CStore_GetLocalizedNameForTags_Response_Tag& operator=(CStore_GetLocalizedNameForTags_Response_Tag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CStore_GetLocalizedNameForTags_Response_Tag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetLocalizedNameForTags_Response_Tag* internal_default_instance() {
    return reinterpret_cast<const CStore_GetLocalizedNameForTags_Response_Tag*>(
               &_CStore_GetLocalizedNameForTags_Response_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CStore_GetLocalizedNameForTags_Response_Tag* other);
  friend void swap(CStore_GetLocalizedNameForTags_Response_Tag& a, CStore_GetLocalizedNameForTags_Response_Tag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetLocalizedNameForTags_Response_Tag* New() const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response_Tag>(NULL);
  }

  CStore_GetLocalizedNameForTags_Response_Tag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response_Tag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetLocalizedNameForTags_Response_Tag& from);
  void MergeFrom(const CStore_GetLocalizedNameForTags_Response_Tag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetLocalizedNameForTags_Response_Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string english_name = 2;
  bool has_english_name() const;
  void clear_english_name();
  static const int kEnglishNameFieldNumber = 2;
  const ::std::string& english_name() const;
  void set_english_name(const ::std::string& value);
  #if LANG_CXX11
  void set_english_name(::std::string&& value);
  #endif
  void set_english_name(const char* value);
  void set_english_name(const char* value, size_t size);
  ::std::string* mutable_english_name();
  ::std::string* release_english_name();
  void set_allocated_english_name(::std::string* english_name);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 tagid = 1;
  bool has_tagid() const;
  void clear_tagid();
  static const int kTagidFieldNumber = 1;
  ::google::protobuf::uint32 tagid() const;
  void set_tagid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CStore_GetLocalizedNameForTags_Response.Tag)
 private:
  void set_has_tagid();
  void clear_has_tagid();
  void set_has_english_name();
  void clear_has_english_name();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr english_name_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 tagid_;
  friend struct ::protobuf_steammessages_5fstore_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CStore_GetLocalizedNameForTags_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CStore_GetLocalizedNameForTags_Response) */ {
 public:
  CStore_GetLocalizedNameForTags_Response();
  virtual ~CStore_GetLocalizedNameForTags_Response();

  CStore_GetLocalizedNameForTags_Response(const CStore_GetLocalizedNameForTags_Response& from);

  inline CStore_GetLocalizedNameForTags_Response& operator=(const CStore_GetLocalizedNameForTags_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetLocalizedNameForTags_Response(CStore_GetLocalizedNameForTags_Response&& from) noexcept
    : CStore_GetLocalizedNameForTags_Response() {
    *this = ::std::move(from);
  }

  inline CStore_GetLocalizedNameForTags_Response& operator=(CStore_GetLocalizedNameForTags_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CStore_GetLocalizedNameForTags_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetLocalizedNameForTags_Response* internal_default_instance() {
    return reinterpret_cast<const CStore_GetLocalizedNameForTags_Response*>(
               &_CStore_GetLocalizedNameForTags_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CStore_GetLocalizedNameForTags_Response* other);
  friend void swap(CStore_GetLocalizedNameForTags_Response& a, CStore_GetLocalizedNameForTags_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetLocalizedNameForTags_Response* New() const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response>(NULL);
  }

  CStore_GetLocalizedNameForTags_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetLocalizedNameForTags_Response& from);
  void MergeFrom(const CStore_GetLocalizedNameForTags_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetLocalizedNameForTags_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CStore_GetLocalizedNameForTags_Response_Tag Tag;

  // accessors -------------------------------------------------------

  // repeated .CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 1;
  ::CStore_GetLocalizedNameForTags_Response_Tag* mutable_tags(int index);
  ::google::protobuf::RepeatedPtrField< ::CStore_GetLocalizedNameForTags_Response_Tag >*
      mutable_tags();
  const ::CStore_GetLocalizedNameForTags_Response_Tag& tags(int index) const;
  ::CStore_GetLocalizedNameForTags_Response_Tag* add_tags();
  const ::google::protobuf::RepeatedPtrField< ::CStore_GetLocalizedNameForTags_Response_Tag >&
      tags() const;

  // @@protoc_insertion_point(class_scope:CStore_GetLocalizedNameForTags_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CStore_GetLocalizedNameForTags_Response_Tag > tags_;
  friend struct ::protobuf_steammessages_5fstore_2esteamclient_2eproto::TableStruct;
};
// ===================================================================

class Store_Stub;

class Store : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Store() {};
 public:
  virtual ~Store();

  typedef Store_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetLocalizedNameForTags(::google::protobuf::RpcController* controller,
                       const ::CStore_GetLocalizedNameForTags_Request* request,
                       ::CStore_GetLocalizedNameForTags_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Store);
};

class Store_Stub : public Store {
 public:
  Store_Stub(::google::protobuf::RpcChannel* channel);
  Store_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Store_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Store ------------------------------------------

  void GetLocalizedNameForTags(::google::protobuf::RpcController* controller,
                       const ::CStore_GetLocalizedNameForTags_Request* request,
                       ::CStore_GetLocalizedNameForTags_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Store_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CStore_GetLocalizedNameForTags_Request

// optional string language = 1;
inline bool CStore_GetLocalizedNameForTags_Request::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Request::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CStore_GetLocalizedNameForTags_Request::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CStore_GetLocalizedNameForTags_Request::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& CStore_GetLocalizedNameForTags_Request::language() const {
  // @@protoc_insertion_point(field_get:CStore_GetLocalizedNameForTags_Request.language)
  return language_.GetNoArena();
}
inline void CStore_GetLocalizedNameForTags_Request::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CStore_GetLocalizedNameForTags_Request.language)
}
#if LANG_CXX11
inline void CStore_GetLocalizedNameForTags_Request::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CStore_GetLocalizedNameForTags_Request.language)
}
#endif
inline void CStore_GetLocalizedNameForTags_Request::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CStore_GetLocalizedNameForTags_Request.language)
}
inline void CStore_GetLocalizedNameForTags_Request::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CStore_GetLocalizedNameForTags_Request.language)
}
inline ::std::string* CStore_GetLocalizedNameForTags_Request::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:CStore_GetLocalizedNameForTags_Request.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_GetLocalizedNameForTags_Request::release_language() {
  // @@protoc_insertion_point(field_release:CStore_GetLocalizedNameForTags_Request.language)
  if (!has_language()) {
    return NULL;
  }
  clear_has_language();
  return language_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_GetLocalizedNameForTags_Request::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:CStore_GetLocalizedNameForTags_Request.language)
}

// repeated uint32 tagids = 2;
inline int CStore_GetLocalizedNameForTags_Request::tagids_size() const {
  return tagids_.size();
}
inline void CStore_GetLocalizedNameForTags_Request::clear_tagids() {
  tagids_.Clear();
}
inline ::google::protobuf::uint32 CStore_GetLocalizedNameForTags_Request::tagids(int index) const {
  // @@protoc_insertion_point(field_get:CStore_GetLocalizedNameForTags_Request.tagids)
  return tagids_.Get(index);
}
inline void CStore_GetLocalizedNameForTags_Request::set_tagids(int index, ::google::protobuf::uint32 value) {
  tagids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CStore_GetLocalizedNameForTags_Request.tagids)
}
inline void CStore_GetLocalizedNameForTags_Request::add_tagids(::google::protobuf::uint32 value) {
  tagids_.Add(value);
  // @@protoc_insertion_point(field_add:CStore_GetLocalizedNameForTags_Request.tagids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CStore_GetLocalizedNameForTags_Request::tagids() const {
  // @@protoc_insertion_point(field_list:CStore_GetLocalizedNameForTags_Request.tagids)
  return tagids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CStore_GetLocalizedNameForTags_Request::mutable_tagids() {
  // @@protoc_insertion_point(field_mutable_list:CStore_GetLocalizedNameForTags_Request.tagids)
  return &tagids_;
}

// -------------------------------------------------------------------

// CStore_GetLocalizedNameForTags_Response_Tag

// optional uint32 tagid = 1;
inline bool CStore_GetLocalizedNameForTags_Response_Tag::has_tagid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_has_tagid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_has_tagid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_tagid() {
  tagid_ = 0u;
  clear_has_tagid();
}
inline ::google::protobuf::uint32 CStore_GetLocalizedNameForTags_Response_Tag::tagid() const {
  // @@protoc_insertion_point(field_get:CStore_GetLocalizedNameForTags_Response.Tag.tagid)
  return tagid_;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_tagid(::google::protobuf::uint32 value) {
  set_has_tagid();
  tagid_ = value;
  // @@protoc_insertion_point(field_set:CStore_GetLocalizedNameForTags_Response.Tag.tagid)
}

// optional string english_name = 2;
inline bool CStore_GetLocalizedNameForTags_Response_Tag::has_english_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_has_english_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_has_english_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_english_name() {
  english_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_english_name();
}
inline const ::std::string& CStore_GetLocalizedNameForTags_Response_Tag::english_name() const {
  // @@protoc_insertion_point(field_get:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
  return english_name_.GetNoArena();
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(const ::std::string& value) {
  set_has_english_name();
  english_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
#if LANG_CXX11
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(::std::string&& value) {
  set_has_english_name();
  english_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
#endif
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_english_name();
  english_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(const char* value, size_t size) {
  set_has_english_name();
  english_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::mutable_english_name() {
  set_has_english_name();
  // @@protoc_insertion_point(field_mutable:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
  return english_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::release_english_name() {
  // @@protoc_insertion_point(field_release:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
  if (!has_english_name()) {
    return NULL;
  }
  clear_has_english_name();
  return english_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_allocated_english_name(::std::string* english_name) {
  if (english_name != NULL) {
    set_has_english_name();
  } else {
    clear_has_english_name();
  }
  english_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), english_name);
  // @@protoc_insertion_point(field_set_allocated:CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}

// optional string name = 3;
inline bool CStore_GetLocalizedNameForTags_Response_Tag::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CStore_GetLocalizedNameForTags_Response_Tag::name() const {
  // @@protoc_insertion_point(field_get:CStore_GetLocalizedNameForTags_Response.Tag.name)
  return name_.GetNoArena();
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CStore_GetLocalizedNameForTags_Response.Tag.name)
}
#if LANG_CXX11
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CStore_GetLocalizedNameForTags_Response.Tag.name)
}
#endif
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CStore_GetLocalizedNameForTags_Response.Tag.name)
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CStore_GetLocalizedNameForTags_Response.Tag.name)
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CStore_GetLocalizedNameForTags_Response.Tag.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::release_name() {
  // @@protoc_insertion_point(field_release:CStore_GetLocalizedNameForTags_Response.Tag.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CStore_GetLocalizedNameForTags_Response.Tag.name)
}

// -------------------------------------------------------------------

// CStore_GetLocalizedNameForTags_Response

// repeated .CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
inline int CStore_GetLocalizedNameForTags_Response::tags_size() const {
  return tags_.size();
}
inline void CStore_GetLocalizedNameForTags_Response::clear_tags() {
  tags_.Clear();
}
inline ::CStore_GetLocalizedNameForTags_Response_Tag* CStore_GetLocalizedNameForTags_Response::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:CStore_GetLocalizedNameForTags_Response.tags)
  return tags_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CStore_GetLocalizedNameForTags_Response_Tag >*
CStore_GetLocalizedNameForTags_Response::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:CStore_GetLocalizedNameForTags_Response.tags)
  return &tags_;
}
inline const ::CStore_GetLocalizedNameForTags_Response_Tag& CStore_GetLocalizedNameForTags_Response::tags(int index) const {
  // @@protoc_insertion_point(field_get:CStore_GetLocalizedNameForTags_Response.tags)
  return tags_.Get(index);
}
inline ::CStore_GetLocalizedNameForTags_Response_Tag* CStore_GetLocalizedNameForTags_Response::add_tags() {
  // @@protoc_insertion_point(field_add:CStore_GetLocalizedNameForTags_Response.tags)
  return tags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CStore_GetLocalizedNameForTags_Response_Tag >&
CStore_GetLocalizedNameForTags_Response::tags() const {
  // @@protoc_insertion_point(field_list:CStore_GetLocalizedNameForTags_Response.tags)
  return tags_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_steammessages_5fstore_2esteamclient_2eproto
