// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_partnerapps.steamclient.proto

#include "steammessages_partnerapps.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_ExistingDRMUpload;
}  // namespace protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto
class CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_RequestUploadToken_Request>
      _instance;
} _CPartnerApps_RequestUploadToken_Request_default_instance_;
class CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_RequestUploadToken_Response>
      _instance;
} _CPartnerApps_RequestUploadToken_Response_default_instance_;
class CPartnerApps_FinishUpload_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUpload_Request>
      _instance;
} _CPartnerApps_FinishUpload_Request_default_instance_;
class CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUploadKVSign_Response>
      _instance;
} _CPartnerApps_FinishUploadKVSign_Response_default_instance_;
class CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUploadLegacyDRM_Request>
      _instance;
} _CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_;
class CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUploadLegacyDRM_Response>
      _instance;
} _CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_;
class CPartnerApps_FinishUpload_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUpload_Response>
      _instance;
} _CPartnerApps_FinishUpload_Response_default_instance_;
class CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUploadDepot_Request>
      _instance;
} _CPartnerApps_FinishUploadDepot_Request_default_instance_;
class CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FinishUploadDepot_Response>
      _instance;
} _CPartnerApps_FinishUploadDepot_Response_default_instance_;
class CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_GetDepotBuildResult_Request>
      _instance;
} _CPartnerApps_GetDepotBuildResult_Request_default_instance_;
class CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_GetDepotBuildResult_Response>
      _instance;
} _CPartnerApps_GetDepotBuildResult_Response_default_instance_;
class CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FindDRMUploads_Request>
      _instance;
} _CPartnerApps_FindDRMUploads_Request_default_instance_;
class CPartnerApps_ExistingDRMUploadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_ExistingDRMUpload>
      _instance;
} _CPartnerApps_ExistingDRMUpload_default_instance_;
class CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_FindDRMUploads_Response>
      _instance;
} _CPartnerApps_FindDRMUploads_Response_default_instance_;
class CPartnerApps_Download_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_Download_Request>
      _instance;
} _CPartnerApps_Download_Request_default_instance_;
class CPartnerApps_Download_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CPartnerApps_Download_Response>
      _instance;
} _CPartnerApps_Download_Response_default_instance_;
namespace protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto {
static void InitDefaultsCPartnerApps_RequestUploadToken_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_RequestUploadToken_Request_default_instance_;
    new (ptr) ::CPartnerApps_RequestUploadToken_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_RequestUploadToken_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_RequestUploadToken_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_RequestUploadToken_Request}, {}};

static void InitDefaultsCPartnerApps_RequestUploadToken_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_RequestUploadToken_Response_default_instance_;
    new (ptr) ::CPartnerApps_RequestUploadToken_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_RequestUploadToken_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_RequestUploadToken_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_RequestUploadToken_Response}, {}};

static void InitDefaultsCPartnerApps_FinishUpload_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUpload_Request_default_instance_;
    new (ptr) ::CPartnerApps_FinishUpload_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUpload_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUpload_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUpload_Request}, {}};

static void InitDefaultsCPartnerApps_FinishUploadKVSign_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUploadKVSign_Response_default_instance_;
    new (ptr) ::CPartnerApps_FinishUploadKVSign_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUploadKVSign_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUploadKVSign_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUploadKVSign_Response}, {}};

static void InitDefaultsCPartnerApps_FinishUploadLegacyDRM_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_;
    new (ptr) ::CPartnerApps_FinishUploadLegacyDRM_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUploadLegacyDRM_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUploadLegacyDRM_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUploadLegacyDRM_Request}, {}};

static void InitDefaultsCPartnerApps_FinishUploadLegacyDRM_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_;
    new (ptr) ::CPartnerApps_FinishUploadLegacyDRM_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUploadLegacyDRM_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUploadLegacyDRM_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUploadLegacyDRM_Response}, {}};

static void InitDefaultsCPartnerApps_FinishUpload_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUpload_Response_default_instance_;
    new (ptr) ::CPartnerApps_FinishUpload_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUpload_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUpload_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUpload_Response}, {}};

static void InitDefaultsCPartnerApps_FinishUploadDepot_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUploadDepot_Request_default_instance_;
    new (ptr) ::CPartnerApps_FinishUploadDepot_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUploadDepot_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUploadDepot_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUploadDepot_Request}, {}};

static void InitDefaultsCPartnerApps_FinishUploadDepot_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FinishUploadDepot_Response_default_instance_;
    new (ptr) ::CPartnerApps_FinishUploadDepot_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FinishUploadDepot_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FinishUploadDepot_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FinishUploadDepot_Response}, {}};

static void InitDefaultsCPartnerApps_GetDepotBuildResult_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_GetDepotBuildResult_Request_default_instance_;
    new (ptr) ::CPartnerApps_GetDepotBuildResult_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_GetDepotBuildResult_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_GetDepotBuildResult_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_GetDepotBuildResult_Request}, {}};

static void InitDefaultsCPartnerApps_GetDepotBuildResult_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_GetDepotBuildResult_Response_default_instance_;
    new (ptr) ::CPartnerApps_GetDepotBuildResult_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_GetDepotBuildResult_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_GetDepotBuildResult_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_GetDepotBuildResult_Response}, {}};

static void InitDefaultsCPartnerApps_FindDRMUploads_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FindDRMUploads_Request_default_instance_;
    new (ptr) ::CPartnerApps_FindDRMUploads_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FindDRMUploads_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_FindDRMUploads_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_FindDRMUploads_Request}, {}};

static void InitDefaultsCPartnerApps_ExistingDRMUpload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_ExistingDRMUpload_default_instance_;
    new (ptr) ::CPartnerApps_ExistingDRMUpload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_ExistingDRMUpload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_ExistingDRMUpload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_ExistingDRMUpload}, {}};

static void InitDefaultsCPartnerApps_FindDRMUploads_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_FindDRMUploads_Response_default_instance_;
    new (ptr) ::CPartnerApps_FindDRMUploads_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_FindDRMUploads_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CPartnerApps_FindDRMUploads_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCPartnerApps_FindDRMUploads_Response}, {
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_ExistingDRMUpload.base,}};

static void InitDefaultsCPartnerApps_Download_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_Download_Request_default_instance_;
    new (ptr) ::CPartnerApps_Download_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_Download_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_Download_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_Download_Request}, {}};

static void InitDefaultsCPartnerApps_Download_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CPartnerApps_Download_Response_default_instance_;
    new (ptr) ::CPartnerApps_Download_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPartnerApps_Download_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CPartnerApps_Download_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCPartnerApps_Download_Response}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_RequestUploadToken_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_RequestUploadToken_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUpload_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUploadKVSign_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUploadLegacyDRM_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUploadLegacyDRM_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUpload_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUploadDepot_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FinishUploadDepot_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_GetDepotBuildResult_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_GetDepotBuildResult_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FindDRMUploads_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_ExistingDRMUpload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_FindDRMUploads_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_Download_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CPartnerApps_Download_Response.base);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, appid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, upload_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, routing_id_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, upload_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, routing_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, app_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadKVSign_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadKVSign_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadKVSign_Response, signed_installscript_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, upload_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, routing_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, tool_name_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Response, file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUpload_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, upload_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, routing_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, build_flags_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, upload_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, routing_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, manifest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, error_msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Request, app_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, actor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, supplied_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, mod_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, orig_file_id_),
  0,
  4,
  5,
  1,
  6,
  2,
  7,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Response, uploads_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Request, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Request, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Response, download_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPartnerApps_Download_Response, app_id_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CPartnerApps_RequestUploadToken_Request)},
  { 9, 17, sizeof(::CPartnerApps_RequestUploadToken_Response)},
  { 20, 28, sizeof(::CPartnerApps_FinishUpload_Request)},
  { 31, 37, sizeof(::CPartnerApps_FinishUploadKVSign_Response)},
  { 38, 48, sizeof(::CPartnerApps_FinishUploadLegacyDRM_Request)},
  { 53, 59, sizeof(::CPartnerApps_FinishUploadLegacyDRM_Response)},
  { 60, 65, sizeof(::CPartnerApps_FinishUpload_Response)},
  { 65, 75, sizeof(::CPartnerApps_FinishUploadDepot_Request)},
  { 80, 85, sizeof(::CPartnerApps_FinishUploadDepot_Response)},
  { 85, 92, sizeof(::CPartnerApps_GetDepotBuildResult_Request)},
  { 94, 101, sizeof(::CPartnerApps_GetDepotBuildResult_Response)},
  { 103, 109, sizeof(::CPartnerApps_FindDRMUploads_Request)},
  { 110, 123, sizeof(::CPartnerApps_ExistingDRMUpload)},
  { 131, 137, sizeof(::CPartnerApps_FindDRMUploads_Response)},
  { 138, 145, sizeof(::CPartnerApps_Download_Request)},
  { 147, 154, sizeof(::CPartnerApps_Download_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_RequestUploadToken_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_RequestUploadToken_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUpload_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUploadKVSign_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUpload_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUploadDepot_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FinishUploadDepot_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_GetDepotBuildResult_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_GetDepotBuildResult_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FindDRMUploads_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_ExistingDRMUpload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_FindDRMUploads_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_Download_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CPartnerApps_Download_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_partnerapps.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+steammessages_partnerapps.steamclient."
      "proto\032,steammessages_unified_base.steamc"
      "lient.proto\"J\n\'CPartnerApps_RequestUploa"
      "dToken_Request\022\020\n\010filename\030\001 \001(\t\022\r\n\005appi"
      "d\030\002 \001(\r\"f\n(CPartnerApps_RequestUploadTok"
      "en_Response\022\024\n\014upload_token\030\001 \001(\004\022\020\n\010loc"
      "ation\030\002 \001(\t\022\022\n\nrouting_id\030\003 \001(\004\"]\n!CPart"
      "nerApps_FinishUpload_Request\022\024\n\014upload_t"
      "oken\030\001 \001(\004\022\022\n\nrouting_id\030\002 \001(\004\022\016\n\006app_id"
      "\030\003 \001(\r\"H\n(CPartnerApps_FinishUploadKVSig"
      "n_Response\022\034\n\024signed_installscript\030\001 \001(\t"
      "\"\210\001\n*CPartnerApps_FinishUploadLegacyDRM_"
      "Request\022\024\n\014upload_token\030\001 \001(\004\022\022\n\nrouting"
      "_id\030\002 \001(\004\022\016\n\006app_id\030\003 \001(\r\022\r\n\005flags\030\004 \001(\r"
      "\022\021\n\ttool_name\030\005 \001(\t\">\n+CPartnerApps_Fini"
      "shUploadLegacyDRM_Response\022\017\n\007file_id\030\001 "
      "\001(\t\"$\n\"CPartnerApps_FinishUpload_Respons"
      "e\"\211\001\n&CPartnerApps_FinishUploadDepot_Req"
      "uest\022\024\n\014upload_token\030\001 \001(\004\022\022\n\nrouting_id"
      "\030\002 \001(\004\022\016\n\006app_id\030\003 \001(\r\022\020\n\010depot_id\030\004 \001(\r"
      "\022\023\n\013build_flags\030\005 \001(\r\")\n\'CPartnerApps_Fi"
      "nishUploadDepot_Response\"T\n(CPartnerApps"
      "_GetDepotBuildResult_Request\022\024\n\014upload_t"
      "oken\030\001 \001(\004\022\022\n\nrouting_id\030\002 \001(\004\"S\n)CPartn"
      "erApps_GetDepotBuildResult_Response\022\023\n\013m"
      "anifest_id\030\001 \001(\004\022\021\n\terror_msg\030\002 \001(\t\"5\n#C"
      "PartnerApps_FindDRMUploads_Request\022\016\n\006ap"
      "p_id\030\001 \001(\005\"\264\001\n\036CPartnerApps_ExistingDRMU"
      "pload\022\017\n\007file_id\030\001 \001(\t\022\016\n\006app_id\030\002 \001(\r\022\020"
      "\n\010actor_id\030\003 \001(\005\022\025\n\rsupplied_name\030\005 \001(\t\022"
      "\r\n\005flags\030\006 \001(\r\022\020\n\010mod_type\030\007 \001(\t\022\021\n\ttime"
      "stamp\030\010 \001(\007\022\024\n\014orig_file_id\030\t \001(\t\"X\n$CPa"
      "rtnerApps_FindDRMUploads_Response\0220\n\007upl"
      "oads\030\001 \003(\0132\037.CPartnerApps_ExistingDRMUpl"
      "oad\"@\n\035CPartnerApps_Download_Request\022\017\n\007"
      "file_id\030\001 \001(\t\022\016\n\006app_id\030\002 \001(\005\"F\n\036CPartne"
      "rApps_Download_Response\022\024\n\014download_url\030"
      "\001 \001(\t\022\016\n\006app_id\030\002 \001(\0052\241\016\n\013PartnerApps\022\261\001"
      "\n\030RequestKVSignUploadToken\022(.CPartnerApp"
      "s_RequestUploadToken_Request\032).CPartnerA"
      "pps_RequestUploadToken_Response\"@\202\265\030<Req"
      "uest upload token for installscript file"
      " upload / signing\022\256\001\n\025RequestDRMUploadTo"
      "ken\022(.CPartnerApps_RequestUploadToken_Re"
      "quest\032).CPartnerApps_RequestUploadToken_"
      "Response\"@\202\265\030<Request upload token for e"
      "xecutable file upload / processing\022\265\001\n\025R"
      "equestCEGUploadToken\022(.CPartnerApps_Requ"
      "estUploadToken_Request\032).CPartnerApps_Re"
      "questUploadToken_Response\"G\202\265\030CRequest u"
      "pload token for custom executable file u"
      "pload / processing\022\243\001\n\027RequestDepotUploa"
      "dToken\022(.CPartnerApps_RequestUploadToken"
      "_Request\032).CPartnerApps_RequestUploadTok"
      "en_Response\"3\202\265\030/Request upload token fo"
      "r steampipe depot upload\022\253\001\n\022FinishUploa"
      "dKVSign\022\".CPartnerApps_FinishUpload_Requ"
      "est\032).CPartnerApps_FinishUploadKVSign_Re"
      "sponse\"F\202\265\030BCommit method to sign an ins"
      "tallscript after an upload is complete\022\244"
      "\001\n\025FinishUploadDRMUpload\022+.CPartnerApps_"
      "FinishUploadLegacyDRM_Request\032,.CPartner"
      "Apps_FinishUploadLegacyDRM_Response\"0\202\265\030"
      ",Commit method for executable file proce"
      "ssing\022\231\001\n\025FinishUploadCEGUpload\022\".CPartn"
      "erApps_FinishUpload_Request\032#.CPartnerAp"
      "ps_FinishUpload_Response\"7\202\265\0303Commit met"
      "hod for custom executable file processin"
      "g\022\245\001\n\027FinishUploadDepotUpload\022\'.CPartner"
      "Apps_FinishUploadDepot_Request\032(.CPartne"
      "rApps_FinishUploadDepot_Response\"7\202\265\0303Co"
      "mmit method for custom executable file p"
      "rocessing\022\244\001\n\023GetDepotBuildResult\022).CPar"
      "tnerApps_GetDepotBuildResult_Request\032*.C"
      "PartnerApps_GetDepotBuildResult_Response"
      "\"6\202\265\0302Get build status for previously up"
      "loaded depot ZIP\022\215\001\n\016FindDRMUploads\022$.CP"
      "artnerApps_FindDRMUploads_Request\032%.CPar"
      "tnerApps_FindDRMUploads_Response\".\202\265\030*Fi"
      "nds N most recent prior uploads by appid"
      "\022K\n\010Download\022\036.CPartnerApps_Download_Req"
      "uest\032\037.CPartnerApps_Download_Response\0322\202"
      "\265\030.Service methods for app management by"
      " partnersB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_partnerapps.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto

// ===================================================================

void CPartnerApps_RequestUploadToken_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_RequestUploadToken_Request::kFilenameFieldNumber;
const int CPartnerApps_RequestUploadToken_Request::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_RequestUploadToken_Request::CPartnerApps_RequestUploadToken_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_RequestUploadToken_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_RequestUploadToken_Request)
}
CPartnerApps_RequestUploadToken_Request::CPartnerApps_RequestUploadToken_Request(const CPartnerApps_RequestUploadToken_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_RequestUploadToken_Request)
}

void CPartnerApps_RequestUploadToken_Request::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CPartnerApps_RequestUploadToken_Request::~CPartnerApps_RequestUploadToken_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_RequestUploadToken_Request)
  SharedDtor();
}

void CPartnerApps_RequestUploadToken_Request::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_RequestUploadToken_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_RequestUploadToken_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_RequestUploadToken_Request& CPartnerApps_RequestUploadToken_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_RequestUploadToken_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_RequestUploadToken_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_RequestUploadToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmptyNoArena();
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_RequestUploadToken_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_RequestUploadToken_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_RequestUploadToken_Request.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_RequestUploadToken_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_RequestUploadToken_Request)
  return false;
#undef DO_
}

void CPartnerApps_RequestUploadToken_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_RequestUploadToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_RequestUploadToken_Request.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_RequestUploadToken_Request)
}

::google::protobuf::uint8* CPartnerApps_RequestUploadToken_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_RequestUploadToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_RequestUploadToken_Request.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_RequestUploadToken_Request)
  return target;
}

size_t CPartnerApps_RequestUploadToken_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_RequestUploadToken_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_RequestUploadToken_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_RequestUploadToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_RequestUploadToken_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_RequestUploadToken_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_RequestUploadToken_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_RequestUploadToken_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_RequestUploadToken_Request::MergeFrom(const CPartnerApps_RequestUploadToken_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_RequestUploadToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_RequestUploadToken_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_RequestUploadToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_RequestUploadToken_Request::CopyFrom(const CPartnerApps_RequestUploadToken_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_RequestUploadToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_RequestUploadToken_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_RequestUploadToken_Request::Swap(CPartnerApps_RequestUploadToken_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_RequestUploadToken_Request::InternalSwap(CPartnerApps_RequestUploadToken_Request* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_RequestUploadToken_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_RequestUploadToken_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_RequestUploadToken_Response::kUploadTokenFieldNumber;
const int CPartnerApps_RequestUploadToken_Response::kLocationFieldNumber;
const int CPartnerApps_RequestUploadToken_Response::kRoutingIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_RequestUploadToken_Response::CPartnerApps_RequestUploadToken_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_RequestUploadToken_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_RequestUploadToken_Response)
}
CPartnerApps_RequestUploadToken_Response::CPartnerApps_RequestUploadToken_Response(const CPartnerApps_RequestUploadToken_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&routing_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_RequestUploadToken_Response)
}

void CPartnerApps_RequestUploadToken_Response::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&upload_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&routing_id_) -
      reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
}

CPartnerApps_RequestUploadToken_Response::~CPartnerApps_RequestUploadToken_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_RequestUploadToken_Response)
  SharedDtor();
}

void CPartnerApps_RequestUploadToken_Response::SharedDtor() {
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_RequestUploadToken_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_RequestUploadToken_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_RequestUploadToken_Response& CPartnerApps_RequestUploadToken_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_RequestUploadToken_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_RequestUploadToken_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_RequestUploadToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    location_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&routing_id_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_RequestUploadToken_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_RequestUploadToken_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 upload_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_upload_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upload_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_RequestUploadToken_Response.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 routing_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_routing_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &routing_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_RequestUploadToken_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_RequestUploadToken_Response)
  return false;
#undef DO_
}

void CPartnerApps_RequestUploadToken_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_RequestUploadToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->upload_token(), output);
  }

  // optional string location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_RequestUploadToken_Response.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location(), output);
  }

  // optional uint64 routing_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->routing_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_RequestUploadToken_Response)
}

::google::protobuf::uint8* CPartnerApps_RequestUploadToken_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_RequestUploadToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->upload_token(), target);
  }

  // optional string location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_RequestUploadToken_Response.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location(), target);
  }

  // optional uint64 routing_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->routing_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_RequestUploadToken_Response)
  return target;
}

size_t CPartnerApps_RequestUploadToken_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_RequestUploadToken_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional uint64 upload_token = 1;
    if (has_upload_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upload_token());
    }

    // optional uint64 routing_id = 3;
    if (has_routing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->routing_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_RequestUploadToken_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_RequestUploadToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_RequestUploadToken_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_RequestUploadToken_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_RequestUploadToken_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_RequestUploadToken_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_RequestUploadToken_Response::MergeFrom(const CPartnerApps_RequestUploadToken_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_RequestUploadToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00000002u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      routing_id_ = from.routing_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_RequestUploadToken_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_RequestUploadToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_RequestUploadToken_Response::CopyFrom(const CPartnerApps_RequestUploadToken_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_RequestUploadToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_RequestUploadToken_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_RequestUploadToken_Response::Swap(CPartnerApps_RequestUploadToken_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_RequestUploadToken_Response::InternalSwap(CPartnerApps_RequestUploadToken_Response* other) {
  using std::swap;
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(upload_token_, other->upload_token_);
  swap(routing_id_, other->routing_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_RequestUploadToken_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUpload_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FinishUpload_Request::kUploadTokenFieldNumber;
const int CPartnerApps_FinishUpload_Request::kRoutingIdFieldNumber;
const int CPartnerApps_FinishUpload_Request::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUpload_Request::CPartnerApps_FinishUpload_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUpload_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUpload_Request)
}
CPartnerApps_FinishUpload_Request::CPartnerApps_FinishUpload_Request(const CPartnerApps_FinishUpload_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUpload_Request)
}

void CPartnerApps_FinishUpload_Request::SharedCtor() {
  ::memset(&upload_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&upload_token_)) + sizeof(app_id_));
}

CPartnerApps_FinishUpload_Request::~CPartnerApps_FinishUpload_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUpload_Request)
  SharedDtor();
}

void CPartnerApps_FinishUpload_Request::SharedDtor() {
}

void CPartnerApps_FinishUpload_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUpload_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUpload_Request& CPartnerApps_FinishUpload_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUpload_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUpload_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUpload_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUpload_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 upload_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_upload_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upload_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 routing_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_routing_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &routing_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUpload_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUpload_Request)
  return false;
#undef DO_
}

void CPartnerApps_FinishUpload_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->upload_token(), output);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->routing_id(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUpload_Request)
}

::google::protobuf::uint8* CPartnerApps_FinishUpload_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->routing_id(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUpload_Request)
  return target;
}

size_t CPartnerApps_FinishUpload_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUpload_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 upload_token = 1;
    if (has_upload_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upload_token());
    }

    // optional uint64 routing_id = 2;
    if (has_routing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->routing_id());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUpload_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUpload_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUpload_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUpload_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUpload_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUpload_Request::MergeFrom(const CPartnerApps_FinishUpload_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      routing_id_ = from.routing_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_FinishUpload_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUpload_Request::CopyFrom(const CPartnerApps_FinishUpload_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUpload_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUpload_Request::Swap(CPartnerApps_FinishUpload_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUpload_Request::InternalSwap(CPartnerApps_FinishUpload_Request* other) {
  using std::swap;
  swap(upload_token_, other->upload_token_);
  swap(routing_id_, other->routing_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUpload_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUploadKVSign_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FinishUploadKVSign_Response::kSignedInstallscriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUploadKVSign_Response::CPartnerApps_FinishUploadKVSign_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadKVSign_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUploadKVSign_Response)
}
CPartnerApps_FinishUploadKVSign_Response::CPartnerApps_FinishUploadKVSign_Response(const CPartnerApps_FinishUploadKVSign_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signed_installscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signed_installscript()) {
    signed_installscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_installscript_);
  }
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadKVSign_Response)
}

void CPartnerApps_FinishUploadKVSign_Response::SharedCtor() {
  signed_installscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CPartnerApps_FinishUploadKVSign_Response::~CPartnerApps_FinishUploadKVSign_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadKVSign_Response)
  SharedDtor();
}

void CPartnerApps_FinishUploadKVSign_Response::SharedDtor() {
  signed_installscript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_FinishUploadKVSign_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUploadKVSign_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUploadKVSign_Response& CPartnerApps_FinishUploadKVSign_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadKVSign_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUploadKVSign_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadKVSign_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    signed_installscript_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUploadKVSign_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUploadKVSign_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signed_installscript = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_installscript()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signed_installscript().data(), static_cast<int>(this->signed_installscript().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_FinishUploadKVSign_Response.signed_installscript");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUploadKVSign_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUploadKVSign_Response)
  return false;
#undef DO_
}

void CPartnerApps_FinishUploadKVSign_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUploadKVSign_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signed_installscript = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signed_installscript().data(), static_cast<int>(this->signed_installscript().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadKVSign_Response.signed_installscript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signed_installscript(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUploadKVSign_Response)
}

::google::protobuf::uint8* CPartnerApps_FinishUploadKVSign_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadKVSign_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signed_installscript = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signed_installscript().data(), static_cast<int>(this->signed_installscript().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadKVSign_Response.signed_installscript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signed_installscript(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadKVSign_Response)
  return target;
}

size_t CPartnerApps_FinishUploadKVSign_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadKVSign_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string signed_installscript = 1;
  if (has_signed_installscript()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_installscript());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadKVSign_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadKVSign_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadKVSign_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUploadKVSign_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadKVSign_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadKVSign_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadKVSign_Response::MergeFrom(const CPartnerApps_FinishUploadKVSign_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadKVSign_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_signed_installscript()) {
    set_has_signed_installscript();
    signed_installscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_installscript_);
  }
}

void CPartnerApps_FinishUploadKVSign_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadKVSign_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadKVSign_Response::CopyFrom(const CPartnerApps_FinishUploadKVSign_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadKVSign_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadKVSign_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadKVSign_Response::Swap(CPartnerApps_FinishUploadKVSign_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUploadKVSign_Response::InternalSwap(CPartnerApps_FinishUploadKVSign_Response* other) {
  using std::swap;
  signed_installscript_.Swap(&other->signed_installscript_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUploadKVSign_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUploadLegacyDRM_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FinishUploadLegacyDRM_Request::kUploadTokenFieldNumber;
const int CPartnerApps_FinishUploadLegacyDRM_Request::kRoutingIdFieldNumber;
const int CPartnerApps_FinishUploadLegacyDRM_Request::kAppIdFieldNumber;
const int CPartnerApps_FinishUploadLegacyDRM_Request::kFlagsFieldNumber;
const int CPartnerApps_FinishUploadLegacyDRM_Request::kToolNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUploadLegacyDRM_Request::CPartnerApps_FinishUploadLegacyDRM_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadLegacyDRM_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUploadLegacyDRM_Request)
}
CPartnerApps_FinishUploadLegacyDRM_Request::CPartnerApps_FinishUploadLegacyDRM_Request(const CPartnerApps_FinishUploadLegacyDRM_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tool_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tool_name()) {
    tool_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tool_name_);
  }
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadLegacyDRM_Request)
}

void CPartnerApps_FinishUploadLegacyDRM_Request::SharedCtor() {
  tool_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&upload_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&upload_token_)) + sizeof(flags_));
}

CPartnerApps_FinishUploadLegacyDRM_Request::~CPartnerApps_FinishUploadLegacyDRM_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadLegacyDRM_Request)
  SharedDtor();
}

void CPartnerApps_FinishUploadLegacyDRM_Request::SharedDtor() {
  tool_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_FinishUploadLegacyDRM_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUploadLegacyDRM_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUploadLegacyDRM_Request& CPartnerApps_FinishUploadLegacyDRM_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadLegacyDRM_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUploadLegacyDRM_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tool_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUploadLegacyDRM_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 upload_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_upload_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upload_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 routing_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_routing_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &routing_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tool_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tool_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tool_name().data(), static_cast<int>(this->tool_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_FinishUploadLegacyDRM_Request.tool_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUploadLegacyDRM_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUploadLegacyDRM_Request)
  return false;
#undef DO_
}

void CPartnerApps_FinishUploadLegacyDRM_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->upload_token(), output);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->routing_id(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  // optional uint32 flags = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flags(), output);
  }

  // optional string tool_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tool_name().data(), static_cast<int>(this->tool_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadLegacyDRM_Request.tool_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tool_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUploadLegacyDRM_Request)
}

::google::protobuf::uint8* CPartnerApps_FinishUploadLegacyDRM_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->routing_id(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  // optional uint32 flags = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flags(), target);
  }

  // optional string tool_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tool_name().data(), static_cast<int>(this->tool_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadLegacyDRM_Request.tool_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tool_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadLegacyDRM_Request)
  return target;
}

size_t CPartnerApps_FinishUploadLegacyDRM_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string tool_name = 5;
    if (has_tool_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tool_name());
    }

    // optional uint64 upload_token = 1;
    if (has_upload_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upload_token());
    }

    // optional uint64 routing_id = 2;
    if (has_routing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->routing_id());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 flags = 4;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadLegacyDRM_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadLegacyDRM_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUploadLegacyDRM_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadLegacyDRM_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadLegacyDRM_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Request::MergeFrom(const CPartnerApps_FinishUploadLegacyDRM_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tool_name();
      tool_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tool_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      routing_id_ = from.routing_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadLegacyDRM_Request::CopyFrom(const CPartnerApps_FinishUploadLegacyDRM_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadLegacyDRM_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadLegacyDRM_Request::Swap(CPartnerApps_FinishUploadLegacyDRM_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUploadLegacyDRM_Request::InternalSwap(CPartnerApps_FinishUploadLegacyDRM_Request* other) {
  using std::swap;
  tool_name_.Swap(&other->tool_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(upload_token_, other->upload_token_);
  swap(routing_id_, other->routing_id_);
  swap(app_id_, other->app_id_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUploadLegacyDRM_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUploadLegacyDRM_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FinishUploadLegacyDRM_Response::kFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUploadLegacyDRM_Response::CPartnerApps_FinishUploadLegacyDRM_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadLegacyDRM_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUploadLegacyDRM_Response)
}
CPartnerApps_FinishUploadLegacyDRM_Response::CPartnerApps_FinishUploadLegacyDRM_Response(const CPartnerApps_FinishUploadLegacyDRM_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_id()) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadLegacyDRM_Response)
}

void CPartnerApps_FinishUploadLegacyDRM_Response::SharedCtor() {
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CPartnerApps_FinishUploadLegacyDRM_Response::~CPartnerApps_FinishUploadLegacyDRM_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadLegacyDRM_Response)
  SharedDtor();
}

void CPartnerApps_FinishUploadLegacyDRM_Response::SharedDtor() {
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_FinishUploadLegacyDRM_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUploadLegacyDRM_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUploadLegacyDRM_Response& CPartnerApps_FinishUploadLegacyDRM_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadLegacyDRM_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUploadLegacyDRM_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUploadLegacyDRM_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_id().data(), static_cast<int>(this->file_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_FinishUploadLegacyDRM_Response.file_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUploadLegacyDRM_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUploadLegacyDRM_Response)
  return false;
#undef DO_
}

void CPartnerApps_FinishUploadLegacyDRM_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadLegacyDRM_Response.file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUploadLegacyDRM_Response)
}

::google::protobuf::uint8* CPartnerApps_FinishUploadLegacyDRM_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadLegacyDRM_Response.file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadLegacyDRM_Response)
  return target;
}

size_t CPartnerApps_FinishUploadLegacyDRM_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string file_id = 1;
  if (has_file_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadLegacyDRM_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadLegacyDRM_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUploadLegacyDRM_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadLegacyDRM_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadLegacyDRM_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Response::MergeFrom(const CPartnerApps_FinishUploadLegacyDRM_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_file_id()) {
    set_has_file_id();
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadLegacyDRM_Response::CopyFrom(const CPartnerApps_FinishUploadLegacyDRM_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadLegacyDRM_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadLegacyDRM_Response::Swap(CPartnerApps_FinishUploadLegacyDRM_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUploadLegacyDRM_Response::InternalSwap(CPartnerApps_FinishUploadLegacyDRM_Response* other) {
  using std::swap;
  file_id_.Swap(&other->file_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUploadLegacyDRM_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUpload_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUpload_Response::CPartnerApps_FinishUpload_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUpload_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUpload_Response)
}
CPartnerApps_FinishUpload_Response::CPartnerApps_FinishUpload_Response(const CPartnerApps_FinishUpload_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUpload_Response)
}

void CPartnerApps_FinishUpload_Response::SharedCtor() {
}

CPartnerApps_FinishUpload_Response::~CPartnerApps_FinishUpload_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUpload_Response)
  SharedDtor();
}

void CPartnerApps_FinishUpload_Response::SharedDtor() {
}

void CPartnerApps_FinishUpload_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUpload_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUpload_Response& CPartnerApps_FinishUpload_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUpload_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUpload_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUpload_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUpload_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUpload_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUpload_Response)
  return false;
#undef DO_
}

void CPartnerApps_FinishUpload_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUpload_Response)
}

::google::protobuf::uint8* CPartnerApps_FinishUpload_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUpload_Response)
  return target;
}

size_t CPartnerApps_FinishUpload_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUpload_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUpload_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUpload_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUpload_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUpload_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUpload_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUpload_Response::MergeFrom(const CPartnerApps_FinishUpload_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPartnerApps_FinishUpload_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUpload_Response::CopyFrom(const CPartnerApps_FinishUpload_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUpload_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUpload_Response::Swap(CPartnerApps_FinishUpload_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUpload_Response::InternalSwap(CPartnerApps_FinishUpload_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUpload_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUploadDepot_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FinishUploadDepot_Request::kUploadTokenFieldNumber;
const int CPartnerApps_FinishUploadDepot_Request::kRoutingIdFieldNumber;
const int CPartnerApps_FinishUploadDepot_Request::kAppIdFieldNumber;
const int CPartnerApps_FinishUploadDepot_Request::kDepotIdFieldNumber;
const int CPartnerApps_FinishUploadDepot_Request::kBuildFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUploadDepot_Request::CPartnerApps_FinishUploadDepot_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadDepot_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUploadDepot_Request)
}
CPartnerApps_FinishUploadDepot_Request::CPartnerApps_FinishUploadDepot_Request(const CPartnerApps_FinishUploadDepot_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&build_flags_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(build_flags_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadDepot_Request)
}

void CPartnerApps_FinishUploadDepot_Request::SharedCtor() {
  ::memset(&upload_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&build_flags_) -
      reinterpret_cast<char*>(&upload_token_)) + sizeof(build_flags_));
}

CPartnerApps_FinishUploadDepot_Request::~CPartnerApps_FinishUploadDepot_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadDepot_Request)
  SharedDtor();
}

void CPartnerApps_FinishUploadDepot_Request::SharedDtor() {
}

void CPartnerApps_FinishUploadDepot_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUploadDepot_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUploadDepot_Request& CPartnerApps_FinishUploadDepot_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadDepot_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUploadDepot_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadDepot_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&build_flags_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(build_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUploadDepot_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUploadDepot_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 upload_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_upload_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upload_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 routing_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_routing_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &routing_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depot_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 build_flags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_build_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &build_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUploadDepot_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUploadDepot_Request)
  return false;
#undef DO_
}

void CPartnerApps_FinishUploadDepot_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUploadDepot_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->upload_token(), output);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->routing_id(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  // optional uint32 depot_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->depot_id(), output);
  }

  // optional uint32 build_flags = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->build_flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUploadDepot_Request)
}

::google::protobuf::uint8* CPartnerApps_FinishUploadDepot_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadDepot_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->routing_id(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  // optional uint32 depot_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->depot_id(), target);
  }

  // optional uint32 build_flags = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->build_flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadDepot_Request)
  return target;
}

size_t CPartnerApps_FinishUploadDepot_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadDepot_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 upload_token = 1;
    if (has_upload_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upload_token());
    }

    // optional uint64 routing_id = 2;
    if (has_routing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->routing_id());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 depot_id = 4;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 build_flags = 5;
    if (has_build_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->build_flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadDepot_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadDepot_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadDepot_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUploadDepot_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadDepot_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadDepot_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadDepot_Request::MergeFrom(const CPartnerApps_FinishUploadDepot_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadDepot_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      routing_id_ = from.routing_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      build_flags_ = from.build_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_FinishUploadDepot_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadDepot_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadDepot_Request::CopyFrom(const CPartnerApps_FinishUploadDepot_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadDepot_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadDepot_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadDepot_Request::Swap(CPartnerApps_FinishUploadDepot_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUploadDepot_Request::InternalSwap(CPartnerApps_FinishUploadDepot_Request* other) {
  using std::swap;
  swap(upload_token_, other->upload_token_);
  swap(routing_id_, other->routing_id_);
  swap(app_id_, other->app_id_);
  swap(depot_id_, other->depot_id_);
  swap(build_flags_, other->build_flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUploadDepot_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FinishUploadDepot_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FinishUploadDepot_Response::CPartnerApps_FinishUploadDepot_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadDepot_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FinishUploadDepot_Response)
}
CPartnerApps_FinishUploadDepot_Response::CPartnerApps_FinishUploadDepot_Response(const CPartnerApps_FinishUploadDepot_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadDepot_Response)
}

void CPartnerApps_FinishUploadDepot_Response::SharedCtor() {
}

CPartnerApps_FinishUploadDepot_Response::~CPartnerApps_FinishUploadDepot_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadDepot_Response)
  SharedDtor();
}

void CPartnerApps_FinishUploadDepot_Response::SharedDtor() {
}

void CPartnerApps_FinishUploadDepot_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FinishUploadDepot_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FinishUploadDepot_Response& CPartnerApps_FinishUploadDepot_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FinishUploadDepot_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_FinishUploadDepot_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadDepot_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FinishUploadDepot_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FinishUploadDepot_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FinishUploadDepot_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FinishUploadDepot_Response)
  return false;
#undef DO_
}

void CPartnerApps_FinishUploadDepot_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FinishUploadDepot_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FinishUploadDepot_Response)
}

::google::protobuf::uint8* CPartnerApps_FinishUploadDepot_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadDepot_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadDepot_Response)
  return target;
}

size_t CPartnerApps_FinishUploadDepot_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadDepot_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadDepot_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadDepot_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadDepot_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FinishUploadDepot_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadDepot_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadDepot_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadDepot_Response::MergeFrom(const CPartnerApps_FinishUploadDepot_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadDepot_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPartnerApps_FinishUploadDepot_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadDepot_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadDepot_Response::CopyFrom(const CPartnerApps_FinishUploadDepot_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadDepot_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadDepot_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadDepot_Response::Swap(CPartnerApps_FinishUploadDepot_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FinishUploadDepot_Response::InternalSwap(CPartnerApps_FinishUploadDepot_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FinishUploadDepot_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_GetDepotBuildResult_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_GetDepotBuildResult_Request::kUploadTokenFieldNumber;
const int CPartnerApps_GetDepotBuildResult_Request::kRoutingIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_GetDepotBuildResult_Request::CPartnerApps_GetDepotBuildResult_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_GetDepotBuildResult_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_GetDepotBuildResult_Request)
}
CPartnerApps_GetDepotBuildResult_Request::CPartnerApps_GetDepotBuildResult_Request(const CPartnerApps_GetDepotBuildResult_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&routing_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_GetDepotBuildResult_Request)
}

void CPartnerApps_GetDepotBuildResult_Request::SharedCtor() {
  ::memset(&upload_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&routing_id_) -
      reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
}

CPartnerApps_GetDepotBuildResult_Request::~CPartnerApps_GetDepotBuildResult_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_GetDepotBuildResult_Request)
  SharedDtor();
}

void CPartnerApps_GetDepotBuildResult_Request::SharedDtor() {
}

void CPartnerApps_GetDepotBuildResult_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_GetDepotBuildResult_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_GetDepotBuildResult_Request& CPartnerApps_GetDepotBuildResult_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_GetDepotBuildResult_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_GetDepotBuildResult_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_GetDepotBuildResult_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&routing_id_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_GetDepotBuildResult_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_GetDepotBuildResult_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 upload_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_upload_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upload_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 routing_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_routing_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &routing_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_GetDepotBuildResult_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_GetDepotBuildResult_Request)
  return false;
#undef DO_
}

void CPartnerApps_GetDepotBuildResult_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_GetDepotBuildResult_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->upload_token(), output);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->routing_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_GetDepotBuildResult_Request)
}

::google::protobuf::uint8* CPartnerApps_GetDepotBuildResult_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_GetDepotBuildResult_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->routing_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_GetDepotBuildResult_Request)
  return target;
}

size_t CPartnerApps_GetDepotBuildResult_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_GetDepotBuildResult_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 upload_token = 1;
    if (has_upload_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upload_token());
    }

    // optional uint64 routing_id = 2;
    if (has_routing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->routing_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_GetDepotBuildResult_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_GetDepotBuildResult_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_GetDepotBuildResult_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_GetDepotBuildResult_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_GetDepotBuildResult_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_GetDepotBuildResult_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_GetDepotBuildResult_Request::MergeFrom(const CPartnerApps_GetDepotBuildResult_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_GetDepotBuildResult_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      routing_id_ = from.routing_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_GetDepotBuildResult_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_GetDepotBuildResult_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_GetDepotBuildResult_Request::CopyFrom(const CPartnerApps_GetDepotBuildResult_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_GetDepotBuildResult_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_GetDepotBuildResult_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_GetDepotBuildResult_Request::Swap(CPartnerApps_GetDepotBuildResult_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_GetDepotBuildResult_Request::InternalSwap(CPartnerApps_GetDepotBuildResult_Request* other) {
  using std::swap;
  swap(upload_token_, other->upload_token_);
  swap(routing_id_, other->routing_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_GetDepotBuildResult_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_GetDepotBuildResult_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_GetDepotBuildResult_Response::kManifestIdFieldNumber;
const int CPartnerApps_GetDepotBuildResult_Response::kErrorMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_GetDepotBuildResult_Response::CPartnerApps_GetDepotBuildResult_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_GetDepotBuildResult_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_GetDepotBuildResult_Response)
}
CPartnerApps_GetDepotBuildResult_Response::CPartnerApps_GetDepotBuildResult_Response(const CPartnerApps_GetDepotBuildResult_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_msg()) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  manifest_id_ = from.manifest_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_GetDepotBuildResult_Response)
}

void CPartnerApps_GetDepotBuildResult_Response::SharedCtor() {
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifest_id_ = GOOGLE_ULONGLONG(0);
}

CPartnerApps_GetDepotBuildResult_Response::~CPartnerApps_GetDepotBuildResult_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_GetDepotBuildResult_Response)
  SharedDtor();
}

void CPartnerApps_GetDepotBuildResult_Response::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_GetDepotBuildResult_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_GetDepotBuildResult_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_GetDepotBuildResult_Response& CPartnerApps_GetDepotBuildResult_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_GetDepotBuildResult_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_GetDepotBuildResult_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_GetDepotBuildResult_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_msg_.ClearNonDefaultToEmptyNoArena();
  }
  manifest_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_GetDepotBuildResult_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_GetDepotBuildResult_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 manifest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_manifest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_GetDepotBuildResult_Response.error_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_GetDepotBuildResult_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_GetDepotBuildResult_Response)
  return false;
#undef DO_
}

void CPartnerApps_GetDepotBuildResult_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_GetDepotBuildResult_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifest_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->manifest_id(), output);
  }

  // optional string error_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_GetDepotBuildResult_Response.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_GetDepotBuildResult_Response)
}

::google::protobuf::uint8* CPartnerApps_GetDepotBuildResult_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_GetDepotBuildResult_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifest_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->manifest_id(), target);
  }

  // optional string error_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_GetDepotBuildResult_Response.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_GetDepotBuildResult_Response)
  return target;
}

size_t CPartnerApps_GetDepotBuildResult_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_GetDepotBuildResult_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string error_msg = 2;
    if (has_error_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_msg());
    }

    // optional uint64 manifest_id = 1;
    if (has_manifest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->manifest_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_GetDepotBuildResult_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_GetDepotBuildResult_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_GetDepotBuildResult_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_GetDepotBuildResult_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_GetDepotBuildResult_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_GetDepotBuildResult_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_GetDepotBuildResult_Response::MergeFrom(const CPartnerApps_GetDepotBuildResult_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_GetDepotBuildResult_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_msg();
      error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_GetDepotBuildResult_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_GetDepotBuildResult_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_GetDepotBuildResult_Response::CopyFrom(const CPartnerApps_GetDepotBuildResult_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_GetDepotBuildResult_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_GetDepotBuildResult_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_GetDepotBuildResult_Response::Swap(CPartnerApps_GetDepotBuildResult_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_GetDepotBuildResult_Response::InternalSwap(CPartnerApps_GetDepotBuildResult_Response* other) {
  using std::swap;
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(manifest_id_, other->manifest_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_GetDepotBuildResult_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FindDRMUploads_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FindDRMUploads_Request::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FindDRMUploads_Request::CPartnerApps_FindDRMUploads_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FindDRMUploads_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FindDRMUploads_Request)
}
CPartnerApps_FindDRMUploads_Request::CPartnerApps_FindDRMUploads_Request(const CPartnerApps_FindDRMUploads_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FindDRMUploads_Request)
}

void CPartnerApps_FindDRMUploads_Request::SharedCtor() {
  app_id_ = 0;
}

CPartnerApps_FindDRMUploads_Request::~CPartnerApps_FindDRMUploads_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FindDRMUploads_Request)
  SharedDtor();
}

void CPartnerApps_FindDRMUploads_Request::SharedDtor() {
}

void CPartnerApps_FindDRMUploads_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FindDRMUploads_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FindDRMUploads_Request& CPartnerApps_FindDRMUploads_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FindDRMUploads_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_FindDRMUploads_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FindDRMUploads_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FindDRMUploads_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FindDRMUploads_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FindDRMUploads_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FindDRMUploads_Request)
  return false;
#undef DO_
}

void CPartnerApps_FindDRMUploads_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FindDRMUploads_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FindDRMUploads_Request)
}

::google::protobuf::uint8* CPartnerApps_FindDRMUploads_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FindDRMUploads_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FindDRMUploads_Request)
  return target;
}

size_t CPartnerApps_FindDRMUploads_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FindDRMUploads_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 app_id = 1;
  if (has_app_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FindDRMUploads_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FindDRMUploads_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FindDRMUploads_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FindDRMUploads_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FindDRMUploads_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FindDRMUploads_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FindDRMUploads_Request::MergeFrom(const CPartnerApps_FindDRMUploads_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FindDRMUploads_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app_id()) {
    set_app_id(from.app_id());
  }
}

void CPartnerApps_FindDRMUploads_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FindDRMUploads_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FindDRMUploads_Request::CopyFrom(const CPartnerApps_FindDRMUploads_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FindDRMUploads_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FindDRMUploads_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FindDRMUploads_Request::Swap(CPartnerApps_FindDRMUploads_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FindDRMUploads_Request::InternalSwap(CPartnerApps_FindDRMUploads_Request* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FindDRMUploads_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_ExistingDRMUpload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_ExistingDRMUpload::kFileIdFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kAppIdFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kActorIdFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kSuppliedNameFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kFlagsFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kModTypeFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kTimestampFieldNumber;
const int CPartnerApps_ExistingDRMUpload::kOrigFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_ExistingDRMUpload::CPartnerApps_ExistingDRMUpload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_ExistingDRMUpload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_ExistingDRMUpload)
}
CPartnerApps_ExistingDRMUpload::CPartnerApps_ExistingDRMUpload(const CPartnerApps_ExistingDRMUpload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_id()) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  supplied_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_supplied_name()) {
    supplied_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.supplied_name_);
  }
  mod_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mod_type()) {
    mod_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mod_type_);
  }
  orig_file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_orig_file_id()) {
    orig_file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orig_file_id_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_ExistingDRMUpload)
}

void CPartnerApps_ExistingDRMUpload::SharedCtor() {
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  supplied_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mod_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orig_file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(timestamp_));
}

CPartnerApps_ExistingDRMUpload::~CPartnerApps_ExistingDRMUpload() {
  // @@protoc_insertion_point(destructor:CPartnerApps_ExistingDRMUpload)
  SharedDtor();
}

void CPartnerApps_ExistingDRMUpload::SharedDtor() {
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  supplied_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mod_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orig_file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_ExistingDRMUpload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_ExistingDRMUpload::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_ExistingDRMUpload& CPartnerApps_ExistingDRMUpload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_ExistingDRMUpload.base);
  return *internal_default_instance();
}


void CPartnerApps_ExistingDRMUpload::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_ExistingDRMUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      file_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      supplied_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      mod_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      orig_file_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_ExistingDRMUpload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_ExistingDRMUpload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_id().data(), static_cast<int>(this->file_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_ExistingDRMUpload.file_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 actor_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_actor_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string supplied_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_supplied_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->supplied_name().data(), static_cast<int>(this->supplied_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_ExistingDRMUpload.supplied_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mod_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mod_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mod_type().data(), static_cast<int>(this->mod_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_ExistingDRMUpload.mod_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 timestamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string orig_file_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orig_file_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orig_file_id().data(), static_cast<int>(this->orig_file_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_ExistingDRMUpload.orig_file_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_ExistingDRMUpload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_ExistingDRMUpload)
  return false;
#undef DO_
}

void CPartnerApps_ExistingDRMUpload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_ExistingDRMUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional int32 actor_id = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actor_id(), output);
  }

  // optional string supplied_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->supplied_name().data(), static_cast<int>(this->supplied_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.supplied_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->supplied_name(), output);
  }

  // optional uint32 flags = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->flags(), output);
  }

  // optional string mod_type = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mod_type().data(), static_cast<int>(this->mod_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.mod_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->mod_type(), output);
  }

  // optional fixed32 timestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->timestamp(), output);
  }

  // optional string orig_file_id = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_file_id().data(), static_cast<int>(this->orig_file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.orig_file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->orig_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_ExistingDRMUpload)
}

::google::protobuf::uint8* CPartnerApps_ExistingDRMUpload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_ExistingDRMUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional int32 actor_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actor_id(), target);
  }

  // optional string supplied_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->supplied_name().data(), static_cast<int>(this->supplied_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.supplied_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->supplied_name(), target);
  }

  // optional uint32 flags = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->flags(), target);
  }

  // optional string mod_type = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mod_type().data(), static_cast<int>(this->mod_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.mod_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->mod_type(), target);
  }

  // optional fixed32 timestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->timestamp(), target);
  }

  // optional string orig_file_id = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_file_id().data(), static_cast<int>(this->orig_file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.orig_file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->orig_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_ExistingDRMUpload)
  return target;
}

size_t CPartnerApps_ExistingDRMUpload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_ExistingDRMUpload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string file_id = 1;
    if (has_file_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_id());
    }

    // optional string supplied_name = 5;
    if (has_supplied_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->supplied_name());
    }

    // optional string mod_type = 7;
    if (has_mod_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mod_type());
    }

    // optional string orig_file_id = 9;
    if (has_orig_file_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orig_file_id());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 actor_id = 3;
    if (has_actor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actor_id());
    }

    // optional uint32 flags = 6;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional fixed32 timestamp = 8;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_ExistingDRMUpload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_ExistingDRMUpload)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_ExistingDRMUpload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_ExistingDRMUpload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_ExistingDRMUpload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_ExistingDRMUpload)
    MergeFrom(*source);
  }
}

void CPartnerApps_ExistingDRMUpload::MergeFrom(const CPartnerApps_ExistingDRMUpload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_ExistingDRMUpload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_id();
      file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_supplied_name();
      supplied_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.supplied_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_mod_type();
      mod_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mod_type_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_orig_file_id();
      orig_file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orig_file_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      actor_id_ = from.actor_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_ExistingDRMUpload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_ExistingDRMUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_ExistingDRMUpload::CopyFrom(const CPartnerApps_ExistingDRMUpload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_ExistingDRMUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_ExistingDRMUpload::IsInitialized() const {
  return true;
}

void CPartnerApps_ExistingDRMUpload::Swap(CPartnerApps_ExistingDRMUpload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_ExistingDRMUpload::InternalSwap(CPartnerApps_ExistingDRMUpload* other) {
  using std::swap;
  file_id_.Swap(&other->file_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  supplied_name_.Swap(&other->supplied_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mod_type_.Swap(&other->mod_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  orig_file_id_.Swap(&other->orig_file_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(actor_id_, other->actor_id_);
  swap(flags_, other->flags_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_ExistingDRMUpload::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_FindDRMUploads_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_FindDRMUploads_Response::kUploadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_FindDRMUploads_Response::CPartnerApps_FindDRMUploads_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FindDRMUploads_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_FindDRMUploads_Response)
}
CPartnerApps_FindDRMUploads_Response::CPartnerApps_FindDRMUploads_Response(const CPartnerApps_FindDRMUploads_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      uploads_(from.uploads_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FindDRMUploads_Response)
}

void CPartnerApps_FindDRMUploads_Response::SharedCtor() {
}

CPartnerApps_FindDRMUploads_Response::~CPartnerApps_FindDRMUploads_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FindDRMUploads_Response)
  SharedDtor();
}

void CPartnerApps_FindDRMUploads_Response::SharedDtor() {
}

void CPartnerApps_FindDRMUploads_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_FindDRMUploads_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_FindDRMUploads_Response& CPartnerApps_FindDRMUploads_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_FindDRMUploads_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_FindDRMUploads_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FindDRMUploads_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uploads_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_FindDRMUploads_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_FindDRMUploads_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_uploads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_FindDRMUploads_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_FindDRMUploads_Response)
  return false;
#undef DO_
}

void CPartnerApps_FindDRMUploads_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_FindDRMUploads_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uploads_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->uploads(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_FindDRMUploads_Response)
}

::google::protobuf::uint8* CPartnerApps_FindDRMUploads_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FindDRMUploads_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uploads_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->uploads(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FindDRMUploads_Response)
  return target;
}

size_t CPartnerApps_FindDRMUploads_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FindDRMUploads_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->uploads_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uploads(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FindDRMUploads_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FindDRMUploads_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FindDRMUploads_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_FindDRMUploads_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FindDRMUploads_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FindDRMUploads_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FindDRMUploads_Response::MergeFrom(const CPartnerApps_FindDRMUploads_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FindDRMUploads_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uploads_.MergeFrom(from.uploads_);
}

void CPartnerApps_FindDRMUploads_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FindDRMUploads_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FindDRMUploads_Response::CopyFrom(const CPartnerApps_FindDRMUploads_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FindDRMUploads_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FindDRMUploads_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FindDRMUploads_Response::Swap(CPartnerApps_FindDRMUploads_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_FindDRMUploads_Response::InternalSwap(CPartnerApps_FindDRMUploads_Response* other) {
  using std::swap;
  CastToBase(&uploads_)->InternalSwap(CastToBase(&other->uploads_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_FindDRMUploads_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_Download_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_Download_Request::kFileIdFieldNumber;
const int CPartnerApps_Download_Request::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_Download_Request::CPartnerApps_Download_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_Download_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_Download_Request)
}
CPartnerApps_Download_Request::CPartnerApps_Download_Request(const CPartnerApps_Download_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_id()) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_Download_Request)
}

void CPartnerApps_Download_Request::SharedCtor() {
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0;
}

CPartnerApps_Download_Request::~CPartnerApps_Download_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_Download_Request)
  SharedDtor();
}

void CPartnerApps_Download_Request::SharedDtor() {
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_Download_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_Download_Request::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_Download_Request& CPartnerApps_Download_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_Download_Request.base);
  return *internal_default_instance();
}


void CPartnerApps_Download_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_Download_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_id_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_Download_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_Download_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_id().data(), static_cast<int>(this->file_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_Download_Request.file_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_Download_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_Download_Request)
  return false;
#undef DO_
}

void CPartnerApps_Download_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_Download_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_Download_Request.file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_id(), output);
  }

  // optional int32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_Download_Request)
}

::google::protobuf::uint8* CPartnerApps_Download_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_Download_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_id().data(), static_cast<int>(this->file_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_Download_Request.file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_id(), target);
  }

  // optional int32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_Download_Request)
  return target;
}

size_t CPartnerApps_Download_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_Download_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string file_id = 1;
    if (has_file_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_id());
    }

    // optional int32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_Download_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_Download_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_Download_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_Download_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_Download_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_Download_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_Download_Request::MergeFrom(const CPartnerApps_Download_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_Download_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_id();
      file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_Download_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_Download_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_Download_Request::CopyFrom(const CPartnerApps_Download_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_Download_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_Download_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_Download_Request::Swap(CPartnerApps_Download_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_Download_Request::InternalSwap(CPartnerApps_Download_Request* other) {
  using std::swap;
  file_id_.Swap(&other->file_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_Download_Request::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CPartnerApps_Download_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPartnerApps_Download_Response::kDownloadUrlFieldNumber;
const int CPartnerApps_Download_Response::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPartnerApps_Download_Response::CPartnerApps_Download_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_Download_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPartnerApps_Download_Response)
}
CPartnerApps_Download_Response::CPartnerApps_Download_Response(const CPartnerApps_Download_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  download_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_url()) {
    download_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_url_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_Download_Response)
}

void CPartnerApps_Download_Response::SharedCtor() {
  download_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0;
}

CPartnerApps_Download_Response::~CPartnerApps_Download_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_Download_Response)
  SharedDtor();
}

void CPartnerApps_Download_Response::SharedDtor() {
  download_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_Download_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CPartnerApps_Download_Response::descriptor() {
  ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CPartnerApps_Download_Response& CPartnerApps_Download_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::scc_info_CPartnerApps_Download_Response.base);
  return *internal_default_instance();
}


void CPartnerApps_Download_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_Download_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    download_url_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CPartnerApps_Download_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPartnerApps_Download_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string download_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_url().data(), static_cast<int>(this->download_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CPartnerApps_Download_Response.download_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPartnerApps_Download_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPartnerApps_Download_Response)
  return false;
#undef DO_
}

void CPartnerApps_Download_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPartnerApps_Download_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string download_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_url().data(), static_cast<int>(this->download_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_Download_Response.download_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->download_url(), output);
  }

  // optional int32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPartnerApps_Download_Response)
}

::google::protobuf::uint8* CPartnerApps_Download_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_Download_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string download_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_url().data(), static_cast<int>(this->download_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CPartnerApps_Download_Response.download_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->download_url(), target);
  }

  // optional int32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_Download_Response)
  return target;
}

size_t CPartnerApps_Download_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_Download_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string download_url = 1;
    if (has_download_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_url());
    }

    // optional int32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_Download_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_Download_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_Download_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPartnerApps_Download_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_Download_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_Download_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_Download_Response::MergeFrom(const CPartnerApps_Download_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_Download_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_download_url();
      download_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_Download_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_Download_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_Download_Response::CopyFrom(const CPartnerApps_Download_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_Download_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_Download_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_Download_Response::Swap(CPartnerApps_Download_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPartnerApps_Download_Response::InternalSwap(CPartnerApps_Download_Response* other) {
  using std::swap;
  download_url_.Swap(&other->download_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CPartnerApps_Download_Response::GetMetadata() const {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PartnerApps::~PartnerApps() {}

const ::google::protobuf::ServiceDescriptor* PartnerApps::descriptor() {
  protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* PartnerApps::GetDescriptor() {
  return descriptor();
}

void PartnerApps::RequestKVSignUploadToken(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestKVSignUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::RequestDRMUploadToken(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestDRMUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::RequestCEGUploadToken(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestCEGUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::RequestDepotUploadToken(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestDepotUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadKVSign(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_FinishUpload_Request*,
                         ::CPartnerApps_FinishUploadKVSign_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadKVSign() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadDRMUpload(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_FinishUploadLegacyDRM_Request*,
                         ::CPartnerApps_FinishUploadLegacyDRM_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadDRMUpload() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadCEGUpload(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_FinishUpload_Request*,
                         ::CPartnerApps_FinishUpload_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadCEGUpload() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadDepotUpload(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_FinishUploadDepot_Request*,
                         ::CPartnerApps_FinishUploadDepot_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadDepotUpload() not implemented.");
  done->Run();
}

void PartnerApps::GetDepotBuildResult(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_GetDepotBuildResult_Request*,
                         ::CPartnerApps_GetDepotBuildResult_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetDepotBuildResult() not implemented.");
  done->Run();
}

void PartnerApps::FindDRMUploads(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_FindDRMUploads_Request*,
                         ::CPartnerApps_FindDRMUploads_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FindDRMUploads() not implemented.");
  done->Run();
}

void PartnerApps::Download(::google::protobuf::RpcController* controller,
                         const ::CPartnerApps_Download_Request*,
                         ::CPartnerApps_Download_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Download() not implemented.");
  done->Run();
}

void PartnerApps::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fpartnerapps_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      RequestKVSignUploadToken(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_RequestUploadToken_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_RequestUploadToken_Response*>(response),
             done);
      break;
    case 1:
      RequestDRMUploadToken(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_RequestUploadToken_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_RequestUploadToken_Response*>(response),
             done);
      break;
    case 2:
      RequestCEGUploadToken(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_RequestUploadToken_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_RequestUploadToken_Response*>(response),
             done);
      break;
    case 3:
      RequestDepotUploadToken(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_RequestUploadToken_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_RequestUploadToken_Response*>(response),
             done);
      break;
    case 4:
      FinishUploadKVSign(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_FinishUpload_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_FinishUploadKVSign_Response*>(response),
             done);
      break;
    case 5:
      FinishUploadDRMUpload(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_FinishUploadLegacyDRM_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_FinishUploadLegacyDRM_Response*>(response),
             done);
      break;
    case 6:
      FinishUploadCEGUpload(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_FinishUpload_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_FinishUpload_Response*>(response),
             done);
      break;
    case 7:
      FinishUploadDepotUpload(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_FinishUploadDepot_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_FinishUploadDepot_Response*>(response),
             done);
      break;
    case 8:
      GetDepotBuildResult(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_GetDepotBuildResult_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_GetDepotBuildResult_Response*>(response),
             done);
      break;
    case 9:
      FindDRMUploads(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_FindDRMUploads_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_FindDRMUploads_Response*>(response),
             done);
      break;
    case 10:
      Download(controller,
             ::google::protobuf::down_cast<const ::CPartnerApps_Download_Request*>(request),
             ::google::protobuf::down_cast< ::CPartnerApps_Download_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& PartnerApps::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 1:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 2:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 3:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 4:
      return ::CPartnerApps_FinishUpload_Request::default_instance();
    case 5:
      return ::CPartnerApps_FinishUploadLegacyDRM_Request::default_instance();
    case 6:
      return ::CPartnerApps_FinishUpload_Request::default_instance();
    case 7:
      return ::CPartnerApps_FinishUploadDepot_Request::default_instance();
    case 8:
      return ::CPartnerApps_GetDepotBuildResult_Request::default_instance();
    case 9:
      return ::CPartnerApps_FindDRMUploads_Request::default_instance();
    case 10:
      return ::CPartnerApps_Download_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& PartnerApps::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 1:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 2:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 3:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 4:
      return ::CPartnerApps_FinishUploadKVSign_Response::default_instance();
    case 5:
      return ::CPartnerApps_FinishUploadLegacyDRM_Response::default_instance();
    case 6:
      return ::CPartnerApps_FinishUpload_Response::default_instance();
    case 7:
      return ::CPartnerApps_FinishUploadDepot_Response::default_instance();
    case 8:
      return ::CPartnerApps_GetDepotBuildResult_Response::default_instance();
    case 9:
      return ::CPartnerApps_FindDRMUploads_Response::default_instance();
    case 10:
      return ::CPartnerApps_Download_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

PartnerApps_Stub::PartnerApps_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
PartnerApps_Stub::PartnerApps_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
PartnerApps_Stub::~PartnerApps_Stub() {
  if (owns_channel_) delete channel_;
}

void PartnerApps_Stub::RequestKVSignUploadToken(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void PartnerApps_Stub::RequestDRMUploadToken(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void PartnerApps_Stub::RequestCEGUploadToken(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void PartnerApps_Stub::RequestDepotUploadToken(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadKVSign(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_FinishUpload_Request* request,
                              ::CPartnerApps_FinishUploadKVSign_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadDRMUpload(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_FinishUploadLegacyDRM_Request* request,
                              ::CPartnerApps_FinishUploadLegacyDRM_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadCEGUpload(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_FinishUpload_Request* request,
                              ::CPartnerApps_FinishUpload_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadDepotUpload(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_FinishUploadDepot_Request* request,
                              ::CPartnerApps_FinishUploadDepot_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void PartnerApps_Stub::GetDepotBuildResult(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_GetDepotBuildResult_Request* request,
                              ::CPartnerApps_GetDepotBuildResult_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void PartnerApps_Stub::FindDRMUploads(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_FindDRMUploads_Request* request,
                              ::CPartnerApps_FindDRMUploads_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void PartnerApps_Stub::Download(::google::protobuf::RpcController* controller,
                              const ::CPartnerApps_Download_Request* request,
                              ::CPartnerApps_Download_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_RequestUploadToken_Request* Arena::CreateMaybeMessage< ::CPartnerApps_RequestUploadToken_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_RequestUploadToken_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_RequestUploadToken_Response* Arena::CreateMaybeMessage< ::CPartnerApps_RequestUploadToken_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_RequestUploadToken_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUpload_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUpload_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUpload_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUploadKVSign_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadKVSign_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUploadKVSign_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUploadLegacyDRM_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadLegacyDRM_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUploadLegacyDRM_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUploadLegacyDRM_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadLegacyDRM_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUploadLegacyDRM_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUpload_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUpload_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUpload_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUploadDepot_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadDepot_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUploadDepot_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FinishUploadDepot_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadDepot_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FinishUploadDepot_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_GetDepotBuildResult_Request* Arena::CreateMaybeMessage< ::CPartnerApps_GetDepotBuildResult_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_GetDepotBuildResult_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_GetDepotBuildResult_Response* Arena::CreateMaybeMessage< ::CPartnerApps_GetDepotBuildResult_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_GetDepotBuildResult_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FindDRMUploads_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FindDRMUploads_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FindDRMUploads_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_ExistingDRMUpload* Arena::CreateMaybeMessage< ::CPartnerApps_ExistingDRMUpload >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_ExistingDRMUpload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_FindDRMUploads_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FindDRMUploads_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_FindDRMUploads_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_Download_Request* Arena::CreateMaybeMessage< ::CPartnerApps_Download_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_Download_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPartnerApps_Download_Response* Arena::CreateMaybeMessage< ::CPartnerApps_Download_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CPartnerApps_Download_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
