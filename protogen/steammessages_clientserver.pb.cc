// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver.proto

#include "steammessages_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_encrypted_5fapp_5fticket_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_encrypted_5fapp_5fticket_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EncryptedAppTicket;
}  // namespace protobuf_encrypted_5fapp_5fticket_2eproto
namespace protobuf_steammessages_5fbase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAuthTicket;
}  // namespace protobuf_steammessages_5fbase_2eproto
namespace protobuf_steammessages_5fclientserver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAMGetPersonaNameHistory_IdInstance;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppInfoRequest_App;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppInfoResponse_App_Section;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientClanState_Event;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientClanState_NameInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientClanState_UserCounts;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientConnectionStats_Stats_Logon;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientConnectionStats_Stats_UDP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGamesPlayed_GamePlayed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClientAppListResponse_App_DLC;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClientDetailsResponse_Game;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetUserStatsResponse_Achievement_Blocks;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetUserStatsResponse_Stats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSGetLBEntriesResponse_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLicenseList_License;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSGetLobbyListResponse_Lobby;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSGetLobbyList_Filter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSJoinLobbyResponse_Member;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSLobbyData_Member;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSAccessTokenResponse_AppToken;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSAccessTokenResponse_PackageToken;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSChangesSinceResponse_AppChange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSChangesSinceResponse_PackageChange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoRequest_AppInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoRequest_PackageInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoResponse_AppInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoResponse_PackageInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPackageInfoResponse_Package;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestedClientStats_StatsToSend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServerList_Server;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServersAvailable_Server_Types_Available;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStat2_StatDetail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStatsUpdated_Updated_Stats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStoreUserStats2_Stats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStoreUserStats_Stats_To_Store;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetFileListForAppResponse_File;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadCommitResponse_File;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadCommit_File;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSPlayerList_Player;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAppInfoResponse_App;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientConnectionStats_Stats_VConn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGetClientAppListResponse_App;
}  // namespace protobuf_steammessages_5fclientserver_2eproto
class CMsgClientUDSP2PSessionStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUDSP2PSessionStarted>
      _instance;
} _CMsgClientUDSP2PSessionStarted_default_instance_;
class CMsgClientUDSP2PSessionEndedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUDSP2PSessionEnded>
      _instance;
} _CMsgClientUDSP2PSessionEnded_default_instance_;
class CMsgClientRegisterAuthTicketWithCMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterAuthTicketWithCM>
      _instance;
} _CMsgClientRegisterAuthTicketWithCM_default_instance_;
class CMsgClientTicketAuthCompleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientTicketAuthComplete>
      _instance;
} _CMsgClientTicketAuthComplete_default_instance_;
class CMsgClientCMListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCMList>
      _instance;
} _CMsgClientCMList_default_instance_;
class CMsgClientP2PConnectionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientP2PConnectionInfo>
      _instance;
} _CMsgClientP2PConnectionInfo_default_instance_;
class CMsgClientP2PConnectionFailInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientP2PConnectionFailInfo>
      _instance;
} _CMsgClientP2PConnectionFailInfo_default_instance_;
class CMsgClientNetworkingCertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientNetworkingCertRequest>
      _instance;
} _CMsgClientNetworkingCertRequest_default_instance_;
class CMsgClientNetworkingCertReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientNetworkingCertReply>
      _instance;
} _CMsgClientNetworkingCertReply_default_instance_;
class CMsgClientGetAppOwnershipTicketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAppOwnershipTicket>
      _instance;
} _CMsgClientGetAppOwnershipTicket_default_instance_;
class CMsgClientGetAppOwnershipTicketResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAppOwnershipTicketResponse>
      _instance;
} _CMsgClientGetAppOwnershipTicketResponse_default_instance_;
class CMsgClientSessionTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSessionToken>
      _instance;
} _CMsgClientSessionToken_default_instance_;
class CMsgClientGameConnectTokensDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGameConnectTokens>
      _instance;
} _CMsgClientGameConnectTokens_default_instance_;
class CMsgGSServerTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSServerType>
      _instance;
} _CMsgGSServerType_default_instance_;
class CMsgGSStatusReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSStatusReply>
      _instance;
} _CMsgGSStatusReply_default_instance_;
class CMsgGSPlayerList_PlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSPlayerList_Player>
      _instance;
} _CMsgGSPlayerList_Player_default_instance_;
class CMsgGSPlayerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSPlayerList>
      _instance;
} _CMsgGSPlayerList_default_instance_;
class CMsgGSUserPlayingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSUserPlaying>
      _instance;
} _CMsgGSUserPlaying_default_instance_;
class CMsgGSDisconnectNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSDisconnectNotice>
      _instance;
} _CMsgGSDisconnectNotice_default_instance_;
class CMsgClientGamesPlayed_GamePlayedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGamesPlayed_GamePlayed>
      _instance;
} _CMsgClientGamesPlayed_GamePlayed_default_instance_;
class CMsgClientGamesPlayedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGamesPlayed>
      _instance;
} _CMsgClientGamesPlayed_default_instance_;
class CMsgGSApproveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSApprove>
      _instance;
} _CMsgGSApprove_default_instance_;
class CMsgGSDenyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSDeny>
      _instance;
} _CMsgGSDeny_default_instance_;
class CMsgGSKickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSKick>
      _instance;
} _CMsgGSKick_default_instance_;
class CMsgClientAuthListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthList>
      _instance;
} _CMsgClientAuthList_default_instance_;
class CMsgClientAuthListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthListAck>
      _instance;
} _CMsgClientAuthListAck_default_instance_;
class CMsgClientLicenseList_LicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLicenseList_License>
      _instance;
} _CMsgClientLicenseList_License_default_instance_;
class CMsgClientLicenseListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLicenseList>
      _instance;
} _CMsgClientLicenseList_default_instance_;
class CMsgClientLBSSetScoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSSetScore>
      _instance;
} _CMsgClientLBSSetScore_default_instance_;
class CMsgClientLBSSetScoreResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSSetScoreResponse>
      _instance;
} _CMsgClientLBSSetScoreResponse_default_instance_;
class CMsgClientLBSSetUGCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSSetUGC>
      _instance;
} _CMsgClientLBSSetUGC_default_instance_;
class CMsgClientLBSSetUGCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSSetUGCResponse>
      _instance;
} _CMsgClientLBSSetUGCResponse_default_instance_;
class CMsgClientLBSFindOrCreateLBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSFindOrCreateLB>
      _instance;
} _CMsgClientLBSFindOrCreateLB_default_instance_;
class CMsgClientLBSFindOrCreateLBResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSFindOrCreateLBResponse>
      _instance;
} _CMsgClientLBSFindOrCreateLBResponse_default_instance_;
class CMsgClientLBSGetLBEntriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSGetLBEntries>
      _instance;
} _CMsgClientLBSGetLBEntries_default_instance_;
class CMsgClientLBSGetLBEntriesResponse_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSGetLBEntriesResponse_Entry>
      _instance;
} _CMsgClientLBSGetLBEntriesResponse_Entry_default_instance_;
class CMsgClientLBSGetLBEntriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientLBSGetLBEntriesResponse>
      _instance;
} _CMsgClientLBSGetLBEntriesResponse_default_instance_;
class CMsgClientAppMinutesPlayedData_AppMinutesPlayedDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppMinutesPlayedData_AppMinutesPlayedData>
      _instance;
} _CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_default_instance_;
class CMsgClientAppMinutesPlayedDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppMinutesPlayedData>
      _instance;
} _CMsgClientAppMinutesPlayedData_default_instance_;
class CMsgClientIsLimitedAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientIsLimitedAccount>
      _instance;
} _CMsgClientIsLimitedAccount_default_instance_;
class CMsgClientServerList_ServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServerList_Server>
      _instance;
} _CMsgClientServerList_Server_default_instance_;
class CMsgClientServerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServerList>
      _instance;
} _CMsgClientServerList_default_instance_;
class CMsgClientRequestedClientStats_StatsToSendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestedClientStats_StatsToSend>
      _instance;
} _CMsgClientRequestedClientStats_StatsToSend_default_instance_;
class CMsgClientRequestedClientStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestedClientStats>
      _instance;
} _CMsgClientRequestedClientStats_default_instance_;
class CMsgClientStat2_StatDetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStat2_StatDetail>
      _instance;
} _CMsgClientStat2_StatDetail_default_instance_;
class CMsgClientStat2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStat2>
      _instance;
} _CMsgClientStat2_default_instance_;
class CMsgClientMMSCreateLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSCreateLobby>
      _instance;
} _CMsgClientMMSCreateLobby_default_instance_;
class CMsgClientMMSCreateLobbyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSCreateLobbyResponse>
      _instance;
} _CMsgClientMMSCreateLobbyResponse_default_instance_;
class CMsgClientMMSJoinLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSJoinLobby>
      _instance;
} _CMsgClientMMSJoinLobby_default_instance_;
class CMsgClientMMSJoinLobbyResponse_MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSJoinLobbyResponse_Member>
      _instance;
} _CMsgClientMMSJoinLobbyResponse_Member_default_instance_;
class CMsgClientMMSJoinLobbyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSJoinLobbyResponse>
      _instance;
} _CMsgClientMMSJoinLobbyResponse_default_instance_;
class CMsgClientMMSLeaveLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSLeaveLobby>
      _instance;
} _CMsgClientMMSLeaveLobby_default_instance_;
class CMsgClientMMSLeaveLobbyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSLeaveLobbyResponse>
      _instance;
} _CMsgClientMMSLeaveLobbyResponse_default_instance_;
class CMsgClientMMSGetLobbyList_FilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSGetLobbyList_Filter>
      _instance;
} _CMsgClientMMSGetLobbyList_Filter_default_instance_;
class CMsgClientMMSGetLobbyListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSGetLobbyList>
      _instance;
} _CMsgClientMMSGetLobbyList_default_instance_;
class CMsgClientMMSGetLobbyListResponse_LobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSGetLobbyListResponse_Lobby>
      _instance;
} _CMsgClientMMSGetLobbyListResponse_Lobby_default_instance_;
class CMsgClientMMSGetLobbyListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSGetLobbyListResponse>
      _instance;
} _CMsgClientMMSGetLobbyListResponse_default_instance_;
class CMsgClientMMSSetLobbyDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSetLobbyData>
      _instance;
} _CMsgClientMMSSetLobbyData_default_instance_;
class CMsgClientMMSSetLobbyDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSetLobbyDataResponse>
      _instance;
} _CMsgClientMMSSetLobbyDataResponse_default_instance_;
class CMsgClientMMSGetLobbyDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSGetLobbyData>
      _instance;
} _CMsgClientMMSGetLobbyData_default_instance_;
class CMsgClientMMSLobbyData_MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSLobbyData_Member>
      _instance;
} _CMsgClientMMSLobbyData_Member_default_instance_;
class CMsgClientMMSLobbyDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSLobbyData>
      _instance;
} _CMsgClientMMSLobbyData_default_instance_;
class CMsgClientMMSSendLobbyChatMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSendLobbyChatMsg>
      _instance;
} _CMsgClientMMSSendLobbyChatMsg_default_instance_;
class CMsgClientMMSLobbyChatMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSLobbyChatMsg>
      _instance;
} _CMsgClientMMSLobbyChatMsg_default_instance_;
class CMsgClientMMSSetLobbyOwnerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSetLobbyOwner>
      _instance;
} _CMsgClientMMSSetLobbyOwner_default_instance_;
class CMsgClientMMSSetLobbyOwnerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSetLobbyOwnerResponse>
      _instance;
} _CMsgClientMMSSetLobbyOwnerResponse_default_instance_;
class CMsgClientMMSSetLobbyLinkedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSetLobbyLinked>
      _instance;
} _CMsgClientMMSSetLobbyLinked_default_instance_;
class CMsgClientMMSSetLobbyGameServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSSetLobbyGameServer>
      _instance;
} _CMsgClientMMSSetLobbyGameServer_default_instance_;
class CMsgClientMMSLobbyGameServerSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSLobbyGameServerSet>
      _instance;
} _CMsgClientMMSLobbyGameServerSet_default_instance_;
class CMsgClientMMSUserJoinedLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSUserJoinedLobby>
      _instance;
} _CMsgClientMMSUserJoinedLobby_default_instance_;
class CMsgClientMMSUserLeftLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSUserLeftLobby>
      _instance;
} _CMsgClientMMSUserLeftLobby_default_instance_;
class CMsgClientMMSInviteToLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientMMSInviteToLobby>
      _instance;
} _CMsgClientMMSInviteToLobby_default_instance_;
class CMsgClientInviteToGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientInviteToGame>
      _instance;
} _CMsgClientInviteToGame_default_instance_;
class CMsgClientChatInviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatInvite>
      _instance;
} _CMsgClientChatInvite_default_instance_;
class CMsgClientConnectionStats_Stats_LogonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientConnectionStats_Stats_Logon>
      _instance;
} _CMsgClientConnectionStats_Stats_Logon_default_instance_;
class CMsgClientConnectionStats_Stats_UDPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientConnectionStats_Stats_UDP>
      _instance;
} _CMsgClientConnectionStats_Stats_UDP_default_instance_;
class CMsgClientConnectionStats_Stats_VConnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientConnectionStats_Stats_VConn>
      _instance;
} _CMsgClientConnectionStats_Stats_VConn_default_instance_;
class CMsgClientConnectionStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientConnectionStats>
      _instance;
} _CMsgClientConnectionStats_default_instance_;
class CMsgClientServersAvailable_Server_Types_AvailableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServersAvailable_Server_Types_Available>
      _instance;
} _CMsgClientServersAvailable_Server_Types_Available_default_instance_;
class CMsgClientServersAvailableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServersAvailable>
      _instance;
} _CMsgClientServersAvailable_default_instance_;
class CMsgClientGetUserStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetUserStats>
      _instance;
} _CMsgClientGetUserStats_default_instance_;
class CMsgClientGetUserStatsResponse_StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetUserStatsResponse_Stats>
      _instance;
} _CMsgClientGetUserStatsResponse_Stats_default_instance_;
class CMsgClientGetUserStatsResponse_Achievement_BlocksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetUserStatsResponse_Achievement_Blocks>
      _instance;
} _CMsgClientGetUserStatsResponse_Achievement_Blocks_default_instance_;
class CMsgClientGetUserStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetUserStatsResponse>
      _instance;
} _CMsgClientGetUserStatsResponse_default_instance_;
class CMsgClientStoreUserStatsResponse_Stats_Failed_ValidationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStoreUserStatsResponse_Stats_Failed_Validation>
      _instance;
} _CMsgClientStoreUserStatsResponse_Stats_Failed_Validation_default_instance_;
class CMsgClientStoreUserStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStoreUserStatsResponse>
      _instance;
} _CMsgClientStoreUserStatsResponse_default_instance_;
class CMsgClientStoreUserStats2_StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStoreUserStats2_Stats>
      _instance;
} _CMsgClientStoreUserStats2_Stats_default_instance_;
class CMsgClientStoreUserStats2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStoreUserStats2>
      _instance;
} _CMsgClientStoreUserStats2_default_instance_;
class CMsgClientStatsUpdated_Updated_StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStatsUpdated_Updated_Stats>
      _instance;
} _CMsgClientStatsUpdated_Updated_Stats_default_instance_;
class CMsgClientStatsUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStatsUpdated>
      _instance;
} _CMsgClientStatsUpdated_default_instance_;
class CMsgClientStoreUserStats_Stats_To_StoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStoreUserStats_Stats_To_Store>
      _instance;
} _CMsgClientStoreUserStats_Stats_To_Store_default_instance_;
class CMsgClientStoreUserStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientStoreUserStats>
      _instance;
} _CMsgClientStoreUserStats_default_instance_;
class CMsgClientGetClientDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientDetails>
      _instance;
} _CMsgClientGetClientDetails_default_instance_;
class CMsgClientReportOverlayDetourFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReportOverlayDetourFailure>
      _instance;
} _CMsgClientReportOverlayDetourFailure_default_instance_;
class CMsgClientGetClientDetailsResponse_GameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientDetailsResponse_Game>
      _instance;
} _CMsgClientGetClientDetailsResponse_Game_default_instance_;
class CMsgClientGetClientDetailsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientDetailsResponse>
      _instance;
} _CMsgClientGetClientDetailsResponse_default_instance_;
class CMsgClientGetClientAppListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientAppList>
      _instance;
} _CMsgClientGetClientAppList_default_instance_;
class CMsgClientGetClientAppListResponse_App_DLCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientAppListResponse_App_DLC>
      _instance;
} _CMsgClientGetClientAppListResponse_App_DLC_default_instance_;
class CMsgClientGetClientAppListResponse_AppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientAppListResponse_App>
      _instance;
} _CMsgClientGetClientAppListResponse_App_default_instance_;
class CMsgClientGetClientAppListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClientAppListResponse>
      _instance;
} _CMsgClientGetClientAppListResponse_default_instance_;
class CMsgClientInstallClientAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientInstallClientApp>
      _instance;
} _CMsgClientInstallClientApp_default_instance_;
class CMsgClientInstallClientAppResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientInstallClientAppResponse>
      _instance;
} _CMsgClientInstallClientAppResponse_default_instance_;
class CMsgClientUninstallClientAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUninstallClientApp>
      _instance;
} _CMsgClientUninstallClientApp_default_instance_;
class CMsgClientUninstallClientAppResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUninstallClientAppResponse>
      _instance;
} _CMsgClientUninstallClientAppResponse_default_instance_;
class CMsgClientSetClientAppUpdateStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSetClientAppUpdateState>
      _instance;
} _CMsgClientSetClientAppUpdateState_default_instance_;
class CMsgClientSetClientAppUpdateStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSetClientAppUpdateStateResponse>
      _instance;
} _CMsgClientSetClientAppUpdateStateResponse_default_instance_;
class CMsgClientUFSUploadFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadFileRequest>
      _instance;
} _CMsgClientUFSUploadFileRequest_default_instance_;
class CMsgClientUFSUploadFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadFileResponse>
      _instance;
} _CMsgClientUFSUploadFileResponse_default_instance_;
class CMsgClientUFSUploadCommit_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadCommit_File>
      _instance;
} _CMsgClientUFSUploadCommit_File_default_instance_;
class CMsgClientUFSUploadCommitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadCommit>
      _instance;
} _CMsgClientUFSUploadCommit_default_instance_;
class CMsgClientUFSUploadCommitResponse_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadCommitResponse_File>
      _instance;
} _CMsgClientUFSUploadCommitResponse_File_default_instance_;
class CMsgClientUFSUploadCommitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadCommitResponse>
      _instance;
} _CMsgClientUFSUploadCommitResponse_default_instance_;
class CMsgClientUFSFileChunkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSFileChunk>
      _instance;
} _CMsgClientUFSFileChunk_default_instance_;
class CMsgClientUFSTransferHeartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSTransferHeartbeat>
      _instance;
} _CMsgClientUFSTransferHeartbeat_default_instance_;
class CMsgClientUFSUploadFileFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSUploadFileFinished>
      _instance;
} _CMsgClientUFSUploadFileFinished_default_instance_;
class CMsgClientUFSDeleteFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSDeleteFileRequest>
      _instance;
} _CMsgClientUFSDeleteFileRequest_default_instance_;
class CMsgClientUFSDeleteFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSDeleteFileResponse>
      _instance;
} _CMsgClientUFSDeleteFileResponse_default_instance_;
class CMsgClientUFSGetFileListForAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetFileListForApp>
      _instance;
} _CMsgClientUFSGetFileListForApp_default_instance_;
class CMsgClientUFSGetFileListForAppResponse_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetFileListForAppResponse_File>
      _instance;
} _CMsgClientUFSGetFileListForAppResponse_File_default_instance_;
class CMsgClientUFSGetFileListForAppResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetFileListForAppResponse>
      _instance;
} _CMsgClientUFSGetFileListForAppResponse_default_instance_;
class CMsgClientUFSDownloadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSDownloadRequest>
      _instance;
} _CMsgClientUFSDownloadRequest_default_instance_;
class CMsgClientUFSDownloadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSDownloadResponse>
      _instance;
} _CMsgClientUFSDownloadResponse_default_instance_;
class CMsgClientUFSLoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSLoginRequest>
      _instance;
} _CMsgClientUFSLoginRequest_default_instance_;
class CMsgClientUFSLoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSLoginResponse>
      _instance;
} _CMsgClientUFSLoginResponse_default_instance_;
class CMsgClientRequestEncryptedAppTicketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestEncryptedAppTicket>
      _instance;
} _CMsgClientRequestEncryptedAppTicket_default_instance_;
class CMsgClientRequestEncryptedAppTicketResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestEncryptedAppTicketResponse>
      _instance;
} _CMsgClientRequestEncryptedAppTicketResponse_default_instance_;
class CMsgClientWalletInfoUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWalletInfoUpdate>
      _instance;
} _CMsgClientWalletInfoUpdate_default_instance_;
class CMsgClientAppInfoUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoUpdate>
      _instance;
} _CMsgClientAppInfoUpdate_default_instance_;
class CMsgClientAppInfoChangesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoChanges>
      _instance;
} _CMsgClientAppInfoChanges_default_instance_;
class CMsgClientAppInfoRequest_AppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoRequest_App>
      _instance;
} _CMsgClientAppInfoRequest_App_default_instance_;
class CMsgClientAppInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoRequest>
      _instance;
} _CMsgClientAppInfoRequest_default_instance_;
class CMsgClientAppInfoResponse_App_SectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoResponse_App_Section>
      _instance;
} _CMsgClientAppInfoResponse_App_Section_default_instance_;
class CMsgClientAppInfoResponse_AppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoResponse_App>
      _instance;
} _CMsgClientAppInfoResponse_App_default_instance_;
class CMsgClientAppInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAppInfoResponse>
      _instance;
} _CMsgClientAppInfoResponse_default_instance_;
class CMsgClientPackageInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPackageInfoRequest>
      _instance;
} _CMsgClientPackageInfoRequest_default_instance_;
class CMsgClientPackageInfoResponse_PackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPackageInfoResponse_Package>
      _instance;
} _CMsgClientPackageInfoResponse_Package_default_instance_;
class CMsgClientPackageInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPackageInfoResponse>
      _instance;
} _CMsgClientPackageInfoResponse_default_instance_;
class CMsgClientPICSChangesSinceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSChangesSinceRequest>
      _instance;
} _CMsgClientPICSChangesSinceRequest_default_instance_;
class CMsgClientPICSChangesSinceResponse_PackageChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSChangesSinceResponse_PackageChange>
      _instance;
} _CMsgClientPICSChangesSinceResponse_PackageChange_default_instance_;
class CMsgClientPICSChangesSinceResponse_AppChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSChangesSinceResponse_AppChange>
      _instance;
} _CMsgClientPICSChangesSinceResponse_AppChange_default_instance_;
class CMsgClientPICSChangesSinceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSChangesSinceResponse>
      _instance;
} _CMsgClientPICSChangesSinceResponse_default_instance_;
class CMsgClientPICSProductInfoRequest_AppInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSProductInfoRequest_AppInfo>
      _instance;
} _CMsgClientPICSProductInfoRequest_AppInfo_default_instance_;
class CMsgClientPICSProductInfoRequest_PackageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSProductInfoRequest_PackageInfo>
      _instance;
} _CMsgClientPICSProductInfoRequest_PackageInfo_default_instance_;
class CMsgClientPICSProductInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSProductInfoRequest>
      _instance;
} _CMsgClientPICSProductInfoRequest_default_instance_;
class CMsgClientPICSProductInfoResponse_AppInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSProductInfoResponse_AppInfo>
      _instance;
} _CMsgClientPICSProductInfoResponse_AppInfo_default_instance_;
class CMsgClientPICSProductInfoResponse_PackageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSProductInfoResponse_PackageInfo>
      _instance;
} _CMsgClientPICSProductInfoResponse_PackageInfo_default_instance_;
class CMsgClientPICSProductInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSProductInfoResponse>
      _instance;
} _CMsgClientPICSProductInfoResponse_default_instance_;
class CMsgClientPICSAccessTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSAccessTokenRequest>
      _instance;
} _CMsgClientPICSAccessTokenRequest_default_instance_;
class CMsgClientPICSAccessTokenResponse_PackageTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSAccessTokenResponse_PackageToken>
      _instance;
} _CMsgClientPICSAccessTokenResponse_PackageToken_default_instance_;
class CMsgClientPICSAccessTokenResponse_AppTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSAccessTokenResponse_AppToken>
      _instance;
} _CMsgClientPICSAccessTokenResponse_AppToken_default_instance_;
class CMsgClientPICSAccessTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPICSAccessTokenResponse>
      _instance;
} _CMsgClientPICSAccessTokenResponse_default_instance_;
class CMsgClientUFSGetUGCDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetUGCDetails>
      _instance;
} _CMsgClientUFSGetUGCDetails_default_instance_;
class CMsgClientUFSGetUGCDetailsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetUGCDetailsResponse>
      _instance;
} _CMsgClientUFSGetUGCDetailsResponse_default_instance_;
class CMsgClientUFSGetSingleFileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetSingleFileInfo>
      _instance;
} _CMsgClientUFSGetSingleFileInfo_default_instance_;
class CMsgClientUFSGetSingleFileInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSGetSingleFileInfoResponse>
      _instance;
} _CMsgClientUFSGetSingleFileInfoResponse_default_instance_;
class CMsgClientUFSShareFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSShareFile>
      _instance;
} _CMsgClientUFSShareFile_default_instance_;
class CMsgClientUFSShareFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUFSShareFileResponse>
      _instance;
} _CMsgClientUFSShareFileResponse_default_instance_;
class CMsgClientAMGetClanOfficersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetClanOfficers>
      _instance;
} _CMsgClientAMGetClanOfficers_default_instance_;
class CMsgClientAMGetClanOfficersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetClanOfficersResponse>
      _instance;
} _CMsgClientAMGetClanOfficersResponse_default_instance_;
class CMsgClientAMGetPersonaNameHistory_IdInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetPersonaNameHistory_IdInstance>
      _instance;
} _CMsgClientAMGetPersonaNameHistory_IdInstance_default_instance_;
class CMsgClientAMGetPersonaNameHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetPersonaNameHistory>
      _instance;
} _CMsgClientAMGetPersonaNameHistory_default_instance_;
class CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance>
      _instance;
} _CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance_default_instance_;
class CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance>
      _instance;
} _CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_default_instance_;
class CMsgClientAMGetPersonaNameHistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAMGetPersonaNameHistoryResponse>
      _instance;
} _CMsgClientAMGetPersonaNameHistoryResponse_default_instance_;
class CMsgClientDeregisterWithServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeregisterWithServer>
      _instance;
} _CMsgClientDeregisterWithServer_default_instance_;
class CMsgClientClanState_NameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientClanState_NameInfo>
      _instance;
} _CMsgClientClanState_NameInfo_default_instance_;
class CMsgClientClanState_UserCountsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientClanState_UserCounts>
      _instance;
} _CMsgClientClanState_UserCounts_default_instance_;
class CMsgClientClanState_EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientClanState_Event>
      _instance;
} _CMsgClientClanState_Event_default_instance_;
class CMsgClientClanStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientClanState>
      _instance;
} _CMsgClientClanState_default_instance_;
namespace protobuf_steammessages_5fclientserver_2eproto {
static void InitDefaultsCMsgClientUDSP2PSessionStarted() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUDSP2PSessionStarted_default_instance_;
    new (ptr) ::CMsgClientUDSP2PSessionStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUDSP2PSessionStarted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUDSP2PSessionStarted =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUDSP2PSessionStarted}, {}};

static void InitDefaultsCMsgClientUDSP2PSessionEnded() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUDSP2PSessionEnded_default_instance_;
    new (ptr) ::CMsgClientUDSP2PSessionEnded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUDSP2PSessionEnded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUDSP2PSessionEnded =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUDSP2PSessionEnded}, {}};

static void InitDefaultsCMsgClientRegisterAuthTicketWithCM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRegisterAuthTicketWithCM_default_instance_;
    new (ptr) ::CMsgClientRegisterAuthTicketWithCM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRegisterAuthTicketWithCM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterAuthTicketWithCM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterAuthTicketWithCM}, {}};

static void InitDefaultsCMsgClientTicketAuthComplete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientTicketAuthComplete_default_instance_;
    new (ptr) ::CMsgClientTicketAuthComplete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientTicketAuthComplete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientTicketAuthComplete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientTicketAuthComplete}, {}};

static void InitDefaultsCMsgClientCMList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCMList_default_instance_;
    new (ptr) ::CMsgClientCMList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCMList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCMList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCMList}, {}};

static void InitDefaultsCMsgClientP2PConnectionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientP2PConnectionInfo_default_instance_;
    new (ptr) ::CMsgClientP2PConnectionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientP2PConnectionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientP2PConnectionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientP2PConnectionInfo}, {}};

static void InitDefaultsCMsgClientP2PConnectionFailInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientP2PConnectionFailInfo_default_instance_;
    new (ptr) ::CMsgClientP2PConnectionFailInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientP2PConnectionFailInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientP2PConnectionFailInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientP2PConnectionFailInfo}, {}};

static void InitDefaultsCMsgClientNetworkingCertRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientNetworkingCertRequest_default_instance_;
    new (ptr) ::CMsgClientNetworkingCertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientNetworkingCertRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientNetworkingCertRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientNetworkingCertRequest}, {}};

static void InitDefaultsCMsgClientNetworkingCertReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientNetworkingCertReply_default_instance_;
    new (ptr) ::CMsgClientNetworkingCertReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientNetworkingCertReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientNetworkingCertReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientNetworkingCertReply}, {}};

static void InitDefaultsCMsgClientGetAppOwnershipTicket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetAppOwnershipTicket_default_instance_;
    new (ptr) ::CMsgClientGetAppOwnershipTicket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetAppOwnershipTicket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAppOwnershipTicket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetAppOwnershipTicket}, {}};

static void InitDefaultsCMsgClientGetAppOwnershipTicketResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetAppOwnershipTicketResponse_default_instance_;
    new (ptr) ::CMsgClientGetAppOwnershipTicketResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetAppOwnershipTicketResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAppOwnershipTicketResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetAppOwnershipTicketResponse}, {}};

static void InitDefaultsCMsgClientSessionToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSessionToken_default_instance_;
    new (ptr) ::CMsgClientSessionToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSessionToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSessionToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSessionToken}, {}};

static void InitDefaultsCMsgClientGameConnectTokens() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGameConnectTokens_default_instance_;
    new (ptr) ::CMsgClientGameConnectTokens();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGameConnectTokens::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGameConnectTokens =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGameConnectTokens}, {}};

static void InitDefaultsCMsgGSServerType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSServerType_default_instance_;
    new (ptr) ::CMsgGSServerType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSServerType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSServerType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSServerType}, {}};

static void InitDefaultsCMsgGSStatusReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSStatusReply_default_instance_;
    new (ptr) ::CMsgGSStatusReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSStatusReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSStatusReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSStatusReply}, {}};

static void InitDefaultsCMsgGSPlayerList_Player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSPlayerList_Player_default_instance_;
    new (ptr) ::CMsgGSPlayerList_Player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSPlayerList_Player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSPlayerList_Player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSPlayerList_Player}, {}};

static void InitDefaultsCMsgGSPlayerList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSPlayerList_default_instance_;
    new (ptr) ::CMsgGSPlayerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSPlayerList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGSPlayerList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGSPlayerList}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSPlayerList_Player.base,}};

static void InitDefaultsCMsgGSUserPlaying() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSUserPlaying_default_instance_;
    new (ptr) ::CMsgGSUserPlaying();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSUserPlaying::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSUserPlaying =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSUserPlaying}, {}};

static void InitDefaultsCMsgGSDisconnectNotice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSDisconnectNotice_default_instance_;
    new (ptr) ::CMsgGSDisconnectNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSDisconnectNotice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSDisconnectNotice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSDisconnectNotice}, {}};

static void InitDefaultsCMsgClientGamesPlayed_GamePlayed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGamesPlayed_GamePlayed_default_instance_;
    new (ptr) ::CMsgClientGamesPlayed_GamePlayed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGamesPlayed_GamePlayed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGamesPlayed_GamePlayed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGamesPlayed_GamePlayed}, {}};

static void InitDefaultsCMsgClientGamesPlayed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGamesPlayed_default_instance_;
    new (ptr) ::CMsgClientGamesPlayed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGamesPlayed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGamesPlayed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientGamesPlayed}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGamesPlayed_GamePlayed.base,}};

static void InitDefaultsCMsgGSApprove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSApprove_default_instance_;
    new (ptr) ::CMsgGSApprove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSApprove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSApprove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSApprove}, {}};

static void InitDefaultsCMsgGSDeny() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSDeny_default_instance_;
    new (ptr) ::CMsgGSDeny();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSDeny::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSDeny =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSDeny}, {}};

static void InitDefaultsCMsgGSKick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGSKick_default_instance_;
    new (ptr) ::CMsgGSKick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGSKick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSKick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSKick}, {}};

static void InitDefaultsCMsgClientAuthList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAuthList_default_instance_;
    new (ptr) ::CMsgClientAuthList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAuthList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAuthList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAuthList}, {
      &protobuf_steammessages_5fbase_2eproto::scc_info_CMsgAuthTicket.base,}};

static void InitDefaultsCMsgClientAuthListAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAuthListAck_default_instance_;
    new (ptr) ::CMsgClientAuthListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAuthListAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthListAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthListAck}, {}};

static void InitDefaultsCMsgClientLicenseList_License() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLicenseList_License_default_instance_;
    new (ptr) ::CMsgClientLicenseList_License();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLicenseList_License::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLicenseList_License =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLicenseList_License}, {}};

static void InitDefaultsCMsgClientLicenseList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLicenseList_default_instance_;
    new (ptr) ::CMsgClientLicenseList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLicenseList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientLicenseList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientLicenseList}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLicenseList_License.base,}};

static void InitDefaultsCMsgClientLBSSetScore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSSetScore_default_instance_;
    new (ptr) ::CMsgClientLBSSetScore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSSetScore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSSetScore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSSetScore}, {}};

static void InitDefaultsCMsgClientLBSSetScoreResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSSetScoreResponse_default_instance_;
    new (ptr) ::CMsgClientLBSSetScoreResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSSetScoreResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSSetScoreResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSSetScoreResponse}, {}};

static void InitDefaultsCMsgClientLBSSetUGC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSSetUGC_default_instance_;
    new (ptr) ::CMsgClientLBSSetUGC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSSetUGC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSSetUGC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSSetUGC}, {}};

static void InitDefaultsCMsgClientLBSSetUGCResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSSetUGCResponse_default_instance_;
    new (ptr) ::CMsgClientLBSSetUGCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSSetUGCResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSSetUGCResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSSetUGCResponse}, {}};

static void InitDefaultsCMsgClientLBSFindOrCreateLB() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSFindOrCreateLB_default_instance_;
    new (ptr) ::CMsgClientLBSFindOrCreateLB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSFindOrCreateLB::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSFindOrCreateLB =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSFindOrCreateLB}, {}};

static void InitDefaultsCMsgClientLBSFindOrCreateLBResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSFindOrCreateLBResponse_default_instance_;
    new (ptr) ::CMsgClientLBSFindOrCreateLBResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSFindOrCreateLBResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSFindOrCreateLBResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSFindOrCreateLBResponse}, {}};

static void InitDefaultsCMsgClientLBSGetLBEntries() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSGetLBEntries_default_instance_;
    new (ptr) ::CMsgClientLBSGetLBEntries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSGetLBEntries::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSGetLBEntries =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSGetLBEntries}, {}};

static void InitDefaultsCMsgClientLBSGetLBEntriesResponse_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSGetLBEntriesResponse_Entry_default_instance_;
    new (ptr) ::CMsgClientLBSGetLBEntriesResponse_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSGetLBEntriesResponse_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientLBSGetLBEntriesResponse_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientLBSGetLBEntriesResponse_Entry}, {}};

static void InitDefaultsCMsgClientLBSGetLBEntriesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientLBSGetLBEntriesResponse_default_instance_;
    new (ptr) ::CMsgClientLBSGetLBEntriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientLBSGetLBEntriesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientLBSGetLBEntriesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientLBSGetLBEntriesResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntriesResponse_Entry.base,}};

static void InitDefaultsCMsgClientAppMinutesPlayedData_AppMinutesPlayedData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_default_instance_;
    new (ptr) ::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAppMinutesPlayedData_AppMinutesPlayedData}, {}};

static void InitDefaultsCMsgClientAppMinutesPlayedData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppMinutesPlayedData_default_instance_;
    new (ptr) ::CMsgClientAppMinutesPlayedData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppMinutesPlayedData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAppMinutesPlayedData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAppMinutesPlayedData}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData.base,}};

static void InitDefaultsCMsgClientIsLimitedAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientIsLimitedAccount_default_instance_;
    new (ptr) ::CMsgClientIsLimitedAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientIsLimitedAccount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientIsLimitedAccount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientIsLimitedAccount}, {}};

static void InitDefaultsCMsgClientServerList_Server() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServerList_Server_default_instance_;
    new (ptr) ::CMsgClientServerList_Server();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServerList_Server::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServerList_Server =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServerList_Server}, {}};

static void InitDefaultsCMsgClientServerList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServerList_default_instance_;
    new (ptr) ::CMsgClientServerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServerList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientServerList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientServerList}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServerList_Server.base,}};

static void InitDefaultsCMsgClientRequestedClientStats_StatsToSend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestedClientStats_StatsToSend_default_instance_;
    new (ptr) ::CMsgClientRequestedClientStats_StatsToSend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestedClientStats_StatsToSend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestedClientStats_StatsToSend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestedClientStats_StatsToSend}, {}};

static void InitDefaultsCMsgClientRequestedClientStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestedClientStats_default_instance_;
    new (ptr) ::CMsgClientRequestedClientStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestedClientStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientRequestedClientStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientRequestedClientStats}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestedClientStats_StatsToSend.base,}};

static void InitDefaultsCMsgClientStat2_StatDetail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStat2_StatDetail_default_instance_;
    new (ptr) ::CMsgClientStat2_StatDetail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStat2_StatDetail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStat2_StatDetail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientStat2_StatDetail}, {}};

static void InitDefaultsCMsgClientStat2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStat2_default_instance_;
    new (ptr) ::CMsgClientStat2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStat2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientStat2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientStat2}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStat2_StatDetail.base,}};

static void InitDefaultsCMsgClientMMSCreateLobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSCreateLobby_default_instance_;
    new (ptr) ::CMsgClientMMSCreateLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSCreateLobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSCreateLobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSCreateLobby}, {}};

static void InitDefaultsCMsgClientMMSCreateLobbyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSCreateLobbyResponse_default_instance_;
    new (ptr) ::CMsgClientMMSCreateLobbyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSCreateLobbyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSCreateLobbyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSCreateLobbyResponse}, {}};

static void InitDefaultsCMsgClientMMSJoinLobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSJoinLobby_default_instance_;
    new (ptr) ::CMsgClientMMSJoinLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSJoinLobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSJoinLobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSJoinLobby}, {}};

static void InitDefaultsCMsgClientMMSJoinLobbyResponse_Member() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSJoinLobbyResponse_Member_default_instance_;
    new (ptr) ::CMsgClientMMSJoinLobbyResponse_Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSJoinLobbyResponse_Member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSJoinLobbyResponse_Member =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSJoinLobbyResponse_Member}, {}};

static void InitDefaultsCMsgClientMMSJoinLobbyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSJoinLobbyResponse_default_instance_;
    new (ptr) ::CMsgClientMMSJoinLobbyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSJoinLobbyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientMMSJoinLobbyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientMMSJoinLobbyResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobbyResponse_Member.base,}};

static void InitDefaultsCMsgClientMMSLeaveLobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSLeaveLobby_default_instance_;
    new (ptr) ::CMsgClientMMSLeaveLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSLeaveLobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSLeaveLobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSLeaveLobby}, {}};

static void InitDefaultsCMsgClientMMSLeaveLobbyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSLeaveLobbyResponse_default_instance_;
    new (ptr) ::CMsgClientMMSLeaveLobbyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSLeaveLobbyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSLeaveLobbyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSLeaveLobbyResponse}, {}};

static void InitDefaultsCMsgClientMMSGetLobbyList_Filter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSGetLobbyList_Filter_default_instance_;
    new (ptr) ::CMsgClientMMSGetLobbyList_Filter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSGetLobbyList_Filter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSGetLobbyList_Filter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSGetLobbyList_Filter}, {}};

static void InitDefaultsCMsgClientMMSGetLobbyList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSGetLobbyList_default_instance_;
    new (ptr) ::CMsgClientMMSGetLobbyList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSGetLobbyList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientMMSGetLobbyList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientMMSGetLobbyList}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyList_Filter.base,}};

static void InitDefaultsCMsgClientMMSGetLobbyListResponse_Lobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSGetLobbyListResponse_Lobby_default_instance_;
    new (ptr) ::CMsgClientMMSGetLobbyListResponse_Lobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSGetLobbyListResponse_Lobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSGetLobbyListResponse_Lobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSGetLobbyListResponse_Lobby}, {}};

static void InitDefaultsCMsgClientMMSGetLobbyListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSGetLobbyListResponse_default_instance_;
    new (ptr) ::CMsgClientMMSGetLobbyListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSGetLobbyListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientMMSGetLobbyListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientMMSGetLobbyListResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyListResponse_Lobby.base,}};

static void InitDefaultsCMsgClientMMSSetLobbyData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSetLobbyData_default_instance_;
    new (ptr) ::CMsgClientMMSSetLobbyData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSetLobbyData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSetLobbyData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSetLobbyData}, {}};

static void InitDefaultsCMsgClientMMSSetLobbyDataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSetLobbyDataResponse_default_instance_;
    new (ptr) ::CMsgClientMMSSetLobbyDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSetLobbyDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSetLobbyDataResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSetLobbyDataResponse}, {}};

static void InitDefaultsCMsgClientMMSGetLobbyData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSGetLobbyData_default_instance_;
    new (ptr) ::CMsgClientMMSGetLobbyData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSGetLobbyData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSGetLobbyData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSGetLobbyData}, {}};

static void InitDefaultsCMsgClientMMSLobbyData_Member() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSLobbyData_Member_default_instance_;
    new (ptr) ::CMsgClientMMSLobbyData_Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSLobbyData_Member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSLobbyData_Member =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSLobbyData_Member}, {}};

static void InitDefaultsCMsgClientMMSLobbyData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSLobbyData_default_instance_;
    new (ptr) ::CMsgClientMMSLobbyData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSLobbyData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientMMSLobbyData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientMMSLobbyData}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyData_Member.base,}};

static void InitDefaultsCMsgClientMMSSendLobbyChatMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSendLobbyChatMsg_default_instance_;
    new (ptr) ::CMsgClientMMSSendLobbyChatMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSendLobbyChatMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSendLobbyChatMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSendLobbyChatMsg}, {}};

static void InitDefaultsCMsgClientMMSLobbyChatMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSLobbyChatMsg_default_instance_;
    new (ptr) ::CMsgClientMMSLobbyChatMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSLobbyChatMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSLobbyChatMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSLobbyChatMsg}, {}};

static void InitDefaultsCMsgClientMMSSetLobbyOwner() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSetLobbyOwner_default_instance_;
    new (ptr) ::CMsgClientMMSSetLobbyOwner();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSetLobbyOwner::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSetLobbyOwner =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSetLobbyOwner}, {}};

static void InitDefaultsCMsgClientMMSSetLobbyOwnerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSetLobbyOwnerResponse_default_instance_;
    new (ptr) ::CMsgClientMMSSetLobbyOwnerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSetLobbyOwnerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSetLobbyOwnerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSetLobbyOwnerResponse}, {}};

static void InitDefaultsCMsgClientMMSSetLobbyLinked() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSetLobbyLinked_default_instance_;
    new (ptr) ::CMsgClientMMSSetLobbyLinked();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSetLobbyLinked::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSetLobbyLinked =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSetLobbyLinked}, {}};

static void InitDefaultsCMsgClientMMSSetLobbyGameServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSSetLobbyGameServer_default_instance_;
    new (ptr) ::CMsgClientMMSSetLobbyGameServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSSetLobbyGameServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSSetLobbyGameServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSSetLobbyGameServer}, {}};

static void InitDefaultsCMsgClientMMSLobbyGameServerSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSLobbyGameServerSet_default_instance_;
    new (ptr) ::CMsgClientMMSLobbyGameServerSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSLobbyGameServerSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSLobbyGameServerSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSLobbyGameServerSet}, {}};

static void InitDefaultsCMsgClientMMSUserJoinedLobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSUserJoinedLobby_default_instance_;
    new (ptr) ::CMsgClientMMSUserJoinedLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSUserJoinedLobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSUserJoinedLobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSUserJoinedLobby}, {}};

static void InitDefaultsCMsgClientMMSUserLeftLobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSUserLeftLobby_default_instance_;
    new (ptr) ::CMsgClientMMSUserLeftLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSUserLeftLobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSUserLeftLobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSUserLeftLobby}, {}};

static void InitDefaultsCMsgClientMMSInviteToLobby() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientMMSInviteToLobby_default_instance_;
    new (ptr) ::CMsgClientMMSInviteToLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientMMSInviteToLobby::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientMMSInviteToLobby =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientMMSInviteToLobby}, {}};

static void InitDefaultsCMsgClientInviteToGame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientInviteToGame_default_instance_;
    new (ptr) ::CMsgClientInviteToGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientInviteToGame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientInviteToGame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientInviteToGame}, {}};

static void InitDefaultsCMsgClientChatInvite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientChatInvite_default_instance_;
    new (ptr) ::CMsgClientChatInvite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientChatInvite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatInvite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatInvite}, {}};

static void InitDefaultsCMsgClientConnectionStats_Stats_Logon() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientConnectionStats_Stats_Logon_default_instance_;
    new (ptr) ::CMsgClientConnectionStats_Stats_Logon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientConnectionStats_Stats_Logon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientConnectionStats_Stats_Logon =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientConnectionStats_Stats_Logon}, {}};

static void InitDefaultsCMsgClientConnectionStats_Stats_UDP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientConnectionStats_Stats_UDP_default_instance_;
    new (ptr) ::CMsgClientConnectionStats_Stats_UDP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientConnectionStats_Stats_UDP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientConnectionStats_Stats_UDP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientConnectionStats_Stats_UDP}, {}};

static void InitDefaultsCMsgClientConnectionStats_Stats_VConn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientConnectionStats_Stats_VConn_default_instance_;
    new (ptr) ::CMsgClientConnectionStats_Stats_VConn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientConnectionStats_Stats_VConn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientConnectionStats_Stats_VConn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientConnectionStats_Stats_VConn}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_UDP.base,}};

static void InitDefaultsCMsgClientConnectionStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientConnectionStats_default_instance_;
    new (ptr) ::CMsgClientConnectionStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientConnectionStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientConnectionStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientConnectionStats}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_Logon.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_VConn.base,}};

static void InitDefaultsCMsgClientServersAvailable_Server_Types_Available() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServersAvailable_Server_Types_Available_default_instance_;
    new (ptr) ::CMsgClientServersAvailable_Server_Types_Available();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServersAvailable_Server_Types_Available::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServersAvailable_Server_Types_Available =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServersAvailable_Server_Types_Available}, {}};

static void InitDefaultsCMsgClientServersAvailable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientServersAvailable_default_instance_;
    new (ptr) ::CMsgClientServersAvailable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientServersAvailable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientServersAvailable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientServersAvailable}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServersAvailable_Server_Types_Available.base,}};

static void InitDefaultsCMsgClientGetUserStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetUserStats_default_instance_;
    new (ptr) ::CMsgClientGetUserStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetUserStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetUserStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetUserStats}, {}};

static void InitDefaultsCMsgClientGetUserStatsResponse_Stats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetUserStatsResponse_Stats_default_instance_;
    new (ptr) ::CMsgClientGetUserStatsResponse_Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetUserStatsResponse_Stats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetUserStatsResponse_Stats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetUserStatsResponse_Stats}, {}};

static void InitDefaultsCMsgClientGetUserStatsResponse_Achievement_Blocks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetUserStatsResponse_Achievement_Blocks_default_instance_;
    new (ptr) ::CMsgClientGetUserStatsResponse_Achievement_Blocks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetUserStatsResponse_Achievement_Blocks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetUserStatsResponse_Achievement_Blocks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetUserStatsResponse_Achievement_Blocks}, {}};

static void InitDefaultsCMsgClientGetUserStatsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetUserStatsResponse_default_instance_;
    new (ptr) ::CMsgClientGetUserStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetUserStatsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientGetUserStatsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientGetUserStatsResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse_Stats.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse_Achievement_Blocks.base,}};

static void InitDefaultsCMsgClientStoreUserStatsResponse_Stats_Failed_Validation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation_default_instance_;
    new (ptr) ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientStoreUserStatsResponse_Stats_Failed_Validation}, {}};

static void InitDefaultsCMsgClientStoreUserStatsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStoreUserStatsResponse_default_instance_;
    new (ptr) ::CMsgClientStoreUserStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStoreUserStatsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientStoreUserStatsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientStoreUserStatsResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation.base,}};

static void InitDefaultsCMsgClientStoreUserStats2_Stats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStoreUserStats2_Stats_default_instance_;
    new (ptr) ::CMsgClientStoreUserStats2_Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStoreUserStats2_Stats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStoreUserStats2_Stats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientStoreUserStats2_Stats}, {}};

static void InitDefaultsCMsgClientStoreUserStats2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStoreUserStats2_default_instance_;
    new (ptr) ::CMsgClientStoreUserStats2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStoreUserStats2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientStoreUserStats2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientStoreUserStats2}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats2_Stats.base,}};

static void InitDefaultsCMsgClientStatsUpdated_Updated_Stats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStatsUpdated_Updated_Stats_default_instance_;
    new (ptr) ::CMsgClientStatsUpdated_Updated_Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStatsUpdated_Updated_Stats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStatsUpdated_Updated_Stats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientStatsUpdated_Updated_Stats}, {}};

static void InitDefaultsCMsgClientStatsUpdated() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStatsUpdated_default_instance_;
    new (ptr) ::CMsgClientStatsUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStatsUpdated::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientStatsUpdated =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientStatsUpdated}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStatsUpdated_Updated_Stats.base,}};

static void InitDefaultsCMsgClientStoreUserStats_Stats_To_Store() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStoreUserStats_Stats_To_Store_default_instance_;
    new (ptr) ::CMsgClientStoreUserStats_Stats_To_Store();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStoreUserStats_Stats_To_Store::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientStoreUserStats_Stats_To_Store =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientStoreUserStats_Stats_To_Store}, {}};

static void InitDefaultsCMsgClientStoreUserStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientStoreUserStats_default_instance_;
    new (ptr) ::CMsgClientStoreUserStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientStoreUserStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientStoreUserStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientStoreUserStats}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats_Stats_To_Store.base,}};

static void InitDefaultsCMsgClientGetClientDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientDetails_default_instance_;
    new (ptr) ::CMsgClientGetClientDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClientDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClientDetails}, {}};

static void InitDefaultsCMsgClientReportOverlayDetourFailure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientReportOverlayDetourFailure_default_instance_;
    new (ptr) ::CMsgClientReportOverlayDetourFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientReportOverlayDetourFailure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientReportOverlayDetourFailure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientReportOverlayDetourFailure}, {}};

static void InitDefaultsCMsgClientGetClientDetailsResponse_Game() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientDetailsResponse_Game_default_instance_;
    new (ptr) ::CMsgClientGetClientDetailsResponse_Game();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientDetailsResponse_Game::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClientDetailsResponse_Game =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClientDetailsResponse_Game}, {}};

static void InitDefaultsCMsgClientGetClientDetailsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientDetailsResponse_default_instance_;
    new (ptr) ::CMsgClientGetClientDetailsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientDetailsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGetClientDetailsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientGetClientDetailsResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetailsResponse_Game.base,}};

static void InitDefaultsCMsgClientGetClientAppList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientAppList_default_instance_;
    new (ptr) ::CMsgClientGetClientAppList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientAppList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClientAppList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClientAppList}, {}};

static void InitDefaultsCMsgClientGetClientAppListResponse_App_DLC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientAppListResponse_App_DLC_default_instance_;
    new (ptr) ::CMsgClientGetClientAppListResponse_App_DLC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientAppListResponse_App_DLC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClientAppListResponse_App_DLC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClientAppListResponse_App_DLC}, {}};

static void InitDefaultsCMsgClientGetClientAppListResponse_App() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientAppListResponse_App_default_instance_;
    new (ptr) ::CMsgClientGetClientAppListResponse_App();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientAppListResponse_App::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGetClientAppListResponse_App =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientGetClientAppListResponse_App}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse_App_DLC.base,}};

static void InitDefaultsCMsgClientGetClientAppListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetClientAppListResponse_default_instance_;
    new (ptr) ::CMsgClientGetClientAppListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetClientAppListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGetClientAppListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientGetClientAppListResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse_App.base,}};

static void InitDefaultsCMsgClientInstallClientApp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientInstallClientApp_default_instance_;
    new (ptr) ::CMsgClientInstallClientApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientInstallClientApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientInstallClientApp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientInstallClientApp}, {}};

static void InitDefaultsCMsgClientInstallClientAppResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientInstallClientAppResponse_default_instance_;
    new (ptr) ::CMsgClientInstallClientAppResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientInstallClientAppResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientInstallClientAppResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientInstallClientAppResponse}, {}};

static void InitDefaultsCMsgClientUninstallClientApp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUninstallClientApp_default_instance_;
    new (ptr) ::CMsgClientUninstallClientApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUninstallClientApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUninstallClientApp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUninstallClientApp}, {}};

static void InitDefaultsCMsgClientUninstallClientAppResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUninstallClientAppResponse_default_instance_;
    new (ptr) ::CMsgClientUninstallClientAppResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUninstallClientAppResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUninstallClientAppResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUninstallClientAppResponse}, {}};

static void InitDefaultsCMsgClientSetClientAppUpdateState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSetClientAppUpdateState_default_instance_;
    new (ptr) ::CMsgClientSetClientAppUpdateState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSetClientAppUpdateState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSetClientAppUpdateState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSetClientAppUpdateState}, {}};

static void InitDefaultsCMsgClientSetClientAppUpdateStateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSetClientAppUpdateStateResponse_default_instance_;
    new (ptr) ::CMsgClientSetClientAppUpdateStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSetClientAppUpdateStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSetClientAppUpdateStateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSetClientAppUpdateStateResponse}, {}};

static void InitDefaultsCMsgClientUFSUploadFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadFileRequest_default_instance_;
    new (ptr) ::CMsgClientUFSUploadFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSUploadFileRequest}, {}};

static void InitDefaultsCMsgClientUFSUploadFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadFileResponse_default_instance_;
    new (ptr) ::CMsgClientUFSUploadFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSUploadFileResponse}, {}};

static void InitDefaultsCMsgClientUFSUploadCommit_File() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadCommit_File_default_instance_;
    new (ptr) ::CMsgClientUFSUploadCommit_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadCommit_File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadCommit_File =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSUploadCommit_File}, {}};

static void InitDefaultsCMsgClientUFSUploadCommit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadCommit_default_instance_;
    new (ptr) ::CMsgClientUFSUploadCommit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadCommit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUFSUploadCommit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUFSUploadCommit}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommit_File.base,}};

static void InitDefaultsCMsgClientUFSUploadCommitResponse_File() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadCommitResponse_File_default_instance_;
    new (ptr) ::CMsgClientUFSUploadCommitResponse_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadCommitResponse_File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadCommitResponse_File =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSUploadCommitResponse_File}, {}};

static void InitDefaultsCMsgClientUFSUploadCommitResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadCommitResponse_default_instance_;
    new (ptr) ::CMsgClientUFSUploadCommitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadCommitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUFSUploadCommitResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUFSUploadCommitResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommitResponse_File.base,}};

static void InitDefaultsCMsgClientUFSFileChunk() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSFileChunk_default_instance_;
    new (ptr) ::CMsgClientUFSFileChunk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSFileChunk::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSFileChunk =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSFileChunk}, {}};

static void InitDefaultsCMsgClientUFSTransferHeartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSTransferHeartbeat_default_instance_;
    new (ptr) ::CMsgClientUFSTransferHeartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSTransferHeartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSTransferHeartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSTransferHeartbeat}, {}};

static void InitDefaultsCMsgClientUFSUploadFileFinished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSUploadFileFinished_default_instance_;
    new (ptr) ::CMsgClientUFSUploadFileFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSUploadFileFinished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSUploadFileFinished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSUploadFileFinished}, {}};

static void InitDefaultsCMsgClientUFSDeleteFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSDeleteFileRequest_default_instance_;
    new (ptr) ::CMsgClientUFSDeleteFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSDeleteFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSDeleteFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSDeleteFileRequest}, {}};

static void InitDefaultsCMsgClientUFSDeleteFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSDeleteFileResponse_default_instance_;
    new (ptr) ::CMsgClientUFSDeleteFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSDeleteFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSDeleteFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSDeleteFileResponse}, {}};

static void InitDefaultsCMsgClientUFSGetFileListForApp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetFileListForApp_default_instance_;
    new (ptr) ::CMsgClientUFSGetFileListForApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetFileListForApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetFileListForApp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSGetFileListForApp}, {}};

static void InitDefaultsCMsgClientUFSGetFileListForAppResponse_File() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetFileListForAppResponse_File_default_instance_;
    new (ptr) ::CMsgClientUFSGetFileListForAppResponse_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetFileListForAppResponse_File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetFileListForAppResponse_File =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSGetFileListForAppResponse_File}, {}};

static void InitDefaultsCMsgClientUFSGetFileListForAppResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetFileListForAppResponse_default_instance_;
    new (ptr) ::CMsgClientUFSGetFileListForAppResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetFileListForAppResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUFSGetFileListForAppResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUFSGetFileListForAppResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForAppResponse_File.base,}};

static void InitDefaultsCMsgClientUFSDownloadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSDownloadRequest_default_instance_;
    new (ptr) ::CMsgClientUFSDownloadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSDownloadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSDownloadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSDownloadRequest}, {}};

static void InitDefaultsCMsgClientUFSDownloadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSDownloadResponse_default_instance_;
    new (ptr) ::CMsgClientUFSDownloadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSDownloadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSDownloadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSDownloadResponse}, {}};

static void InitDefaultsCMsgClientUFSLoginRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSLoginRequest_default_instance_;
    new (ptr) ::CMsgClientUFSLoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSLoginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSLoginRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSLoginRequest}, {}};

static void InitDefaultsCMsgClientUFSLoginResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSLoginResponse_default_instance_;
    new (ptr) ::CMsgClientUFSLoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSLoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSLoginResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSLoginResponse}, {}};

static void InitDefaultsCMsgClientRequestEncryptedAppTicket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestEncryptedAppTicket_default_instance_;
    new (ptr) ::CMsgClientRequestEncryptedAppTicket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestEncryptedAppTicket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestEncryptedAppTicket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestEncryptedAppTicket}, {}};

static void InitDefaultsCMsgClientRequestEncryptedAppTicketResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestEncryptedAppTicketResponse_default_instance_;
    new (ptr) ::CMsgClientRequestEncryptedAppTicketResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestEncryptedAppTicketResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientRequestEncryptedAppTicketResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientRequestEncryptedAppTicketResponse}, {
      &protobuf_encrypted_5fapp_5fticket_2eproto::scc_info_EncryptedAppTicket.base,}};

static void InitDefaultsCMsgClientWalletInfoUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientWalletInfoUpdate_default_instance_;
    new (ptr) ::CMsgClientWalletInfoUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWalletInfoUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWalletInfoUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWalletInfoUpdate}, {}};

static void InitDefaultsCMsgClientAppInfoUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoUpdate_default_instance_;
    new (ptr) ::CMsgClientAppInfoUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppInfoUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAppInfoUpdate}, {}};

static void InitDefaultsCMsgClientAppInfoChanges() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoChanges_default_instance_;
    new (ptr) ::CMsgClientAppInfoChanges();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoChanges::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppInfoChanges =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAppInfoChanges}, {}};

static void InitDefaultsCMsgClientAppInfoRequest_App() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoRequest_App_default_instance_;
    new (ptr) ::CMsgClientAppInfoRequest_App();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoRequest_App::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppInfoRequest_App =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAppInfoRequest_App}, {}};

static void InitDefaultsCMsgClientAppInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoRequest_default_instance_;
    new (ptr) ::CMsgClientAppInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAppInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAppInfoRequest}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoRequest_App.base,}};

static void InitDefaultsCMsgClientAppInfoResponse_App_Section() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoResponse_App_Section_default_instance_;
    new (ptr) ::CMsgClientAppInfoResponse_App_Section();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoResponse_App_Section::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAppInfoResponse_App_Section =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAppInfoResponse_App_Section}, {}};

static void InitDefaultsCMsgClientAppInfoResponse_App() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoResponse_App_default_instance_;
    new (ptr) ::CMsgClientAppInfoResponse_App();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoResponse_App::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAppInfoResponse_App =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAppInfoResponse_App}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse_App_Section.base,}};

static void InitDefaultsCMsgClientAppInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAppInfoResponse_default_instance_;
    new (ptr) ::CMsgClientAppInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAppInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAppInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAppInfoResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse_App.base,}};

static void InitDefaultsCMsgClientPackageInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPackageInfoRequest_default_instance_;
    new (ptr) ::CMsgClientPackageInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPackageInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPackageInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPackageInfoRequest}, {}};

static void InitDefaultsCMsgClientPackageInfoResponse_Package() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPackageInfoResponse_Package_default_instance_;
    new (ptr) ::CMsgClientPackageInfoResponse_Package();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPackageInfoResponse_Package::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPackageInfoResponse_Package =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPackageInfoResponse_Package}, {}};

static void InitDefaultsCMsgClientPackageInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPackageInfoResponse_default_instance_;
    new (ptr) ::CMsgClientPackageInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPackageInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientPackageInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientPackageInfoResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoResponse_Package.base,}};

static void InitDefaultsCMsgClientPICSChangesSinceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSChangesSinceRequest_default_instance_;
    new (ptr) ::CMsgClientPICSChangesSinceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSChangesSinceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSChangesSinceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSChangesSinceRequest}, {}};

static void InitDefaultsCMsgClientPICSChangesSinceResponse_PackageChange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSChangesSinceResponse_PackageChange_default_instance_;
    new (ptr) ::CMsgClientPICSChangesSinceResponse_PackageChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSChangesSinceResponse_PackageChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSChangesSinceResponse_PackageChange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSChangesSinceResponse_PackageChange}, {}};

static void InitDefaultsCMsgClientPICSChangesSinceResponse_AppChange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSChangesSinceResponse_AppChange_default_instance_;
    new (ptr) ::CMsgClientPICSChangesSinceResponse_AppChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSChangesSinceResponse_AppChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSChangesSinceResponse_AppChange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSChangesSinceResponse_AppChange}, {}};

static void InitDefaultsCMsgClientPICSChangesSinceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSChangesSinceResponse_default_instance_;
    new (ptr) ::CMsgClientPICSChangesSinceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSChangesSinceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientPICSChangesSinceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientPICSChangesSinceResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse_PackageChange.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse_AppChange.base,}};

static void InitDefaultsCMsgClientPICSProductInfoRequest_AppInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSProductInfoRequest_AppInfo_default_instance_;
    new (ptr) ::CMsgClientPICSProductInfoRequest_AppInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSProductInfoRequest_AppInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoRequest_AppInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSProductInfoRequest_AppInfo}, {}};

static void InitDefaultsCMsgClientPICSProductInfoRequest_PackageInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSProductInfoRequest_PackageInfo_default_instance_;
    new (ptr) ::CMsgClientPICSProductInfoRequest_PackageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSProductInfoRequest_PackageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoRequest_PackageInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSProductInfoRequest_PackageInfo}, {}};

static void InitDefaultsCMsgClientPICSProductInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSProductInfoRequest_default_instance_;
    new (ptr) ::CMsgClientPICSProductInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSProductInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientPICSProductInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientPICSProductInfoRequest}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest_PackageInfo.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest_AppInfo.base,}};

static void InitDefaultsCMsgClientPICSProductInfoResponse_AppInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSProductInfoResponse_AppInfo_default_instance_;
    new (ptr) ::CMsgClientPICSProductInfoResponse_AppInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSProductInfoResponse_AppInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoResponse_AppInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSProductInfoResponse_AppInfo}, {}};

static void InitDefaultsCMsgClientPICSProductInfoResponse_PackageInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSProductInfoResponse_PackageInfo_default_instance_;
    new (ptr) ::CMsgClientPICSProductInfoResponse_PackageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSProductInfoResponse_PackageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSProductInfoResponse_PackageInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSProductInfoResponse_PackageInfo}, {}};

static void InitDefaultsCMsgClientPICSProductInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSProductInfoResponse_default_instance_;
    new (ptr) ::CMsgClientPICSProductInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSProductInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientPICSProductInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientPICSProductInfoResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse_AppInfo.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse_PackageInfo.base,}};

static void InitDefaultsCMsgClientPICSAccessTokenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSAccessTokenRequest_default_instance_;
    new (ptr) ::CMsgClientPICSAccessTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSAccessTokenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSAccessTokenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSAccessTokenRequest}, {}};

static void InitDefaultsCMsgClientPICSAccessTokenResponse_PackageToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSAccessTokenResponse_PackageToken_default_instance_;
    new (ptr) ::CMsgClientPICSAccessTokenResponse_PackageToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSAccessTokenResponse_PackageToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSAccessTokenResponse_PackageToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSAccessTokenResponse_PackageToken}, {}};

static void InitDefaultsCMsgClientPICSAccessTokenResponse_AppToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSAccessTokenResponse_AppToken_default_instance_;
    new (ptr) ::CMsgClientPICSAccessTokenResponse_AppToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSAccessTokenResponse_AppToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPICSAccessTokenResponse_AppToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPICSAccessTokenResponse_AppToken}, {}};

static void InitDefaultsCMsgClientPICSAccessTokenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPICSAccessTokenResponse_default_instance_;
    new (ptr) ::CMsgClientPICSAccessTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPICSAccessTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientPICSAccessTokenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientPICSAccessTokenResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse_PackageToken.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse_AppToken.base,}};

static void InitDefaultsCMsgClientUFSGetUGCDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetUGCDetails_default_instance_;
    new (ptr) ::CMsgClientUFSGetUGCDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetUGCDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetUGCDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSGetUGCDetails}, {}};

static void InitDefaultsCMsgClientUFSGetUGCDetailsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetUGCDetailsResponse_default_instance_;
    new (ptr) ::CMsgClientUFSGetUGCDetailsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetUGCDetailsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetUGCDetailsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSGetUGCDetailsResponse}, {}};

static void InitDefaultsCMsgClientUFSGetSingleFileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetSingleFileInfo_default_instance_;
    new (ptr) ::CMsgClientUFSGetSingleFileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetSingleFileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetSingleFileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSGetSingleFileInfo}, {}};

static void InitDefaultsCMsgClientUFSGetSingleFileInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSGetSingleFileInfoResponse_default_instance_;
    new (ptr) ::CMsgClientUFSGetSingleFileInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSGetSingleFileInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSGetSingleFileInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSGetSingleFileInfoResponse}, {}};

static void InitDefaultsCMsgClientUFSShareFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSShareFile_default_instance_;
    new (ptr) ::CMsgClientUFSShareFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSShareFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSShareFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSShareFile}, {}};

static void InitDefaultsCMsgClientUFSShareFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientUFSShareFileResponse_default_instance_;
    new (ptr) ::CMsgClientUFSShareFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientUFSShareFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUFSShareFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUFSShareFileResponse}, {}};

static void InitDefaultsCMsgClientAMGetClanOfficers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetClanOfficers_default_instance_;
    new (ptr) ::CMsgClientAMGetClanOfficers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetClanOfficers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAMGetClanOfficers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAMGetClanOfficers}, {}};

static void InitDefaultsCMsgClientAMGetClanOfficersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetClanOfficersResponse_default_instance_;
    new (ptr) ::CMsgClientAMGetClanOfficersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetClanOfficersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAMGetClanOfficersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAMGetClanOfficersResponse}, {}};

static void InitDefaultsCMsgClientAMGetPersonaNameHistory_IdInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetPersonaNameHistory_IdInstance_default_instance_;
    new (ptr) ::CMsgClientAMGetPersonaNameHistory_IdInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetPersonaNameHistory_IdInstance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAMGetPersonaNameHistory_IdInstance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAMGetPersonaNameHistory_IdInstance}, {}};

static void InitDefaultsCMsgClientAMGetPersonaNameHistory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetPersonaNameHistory_default_instance_;
    new (ptr) ::CMsgClientAMGetPersonaNameHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetPersonaNameHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAMGetPersonaNameHistory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAMGetPersonaNameHistory}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistory_IdInstance.base,}};

static void InitDefaultsCMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance_default_instance_;
    new (ptr) ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance}, {}};

static void InitDefaultsCMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_default_instance_;
    new (ptr) ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.base,}};

static void InitDefaultsCMsgClientAMGetPersonaNameHistoryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAMGetPersonaNameHistoryResponse_default_instance_;
    new (ptr) ::CMsgClientAMGetPersonaNameHistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAMGetPersonaNameHistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientAMGetPersonaNameHistoryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientAMGetPersonaNameHistoryResponse}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.base,}};

static void InitDefaultsCMsgClientDeregisterWithServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDeregisterWithServer_default_instance_;
    new (ptr) ::CMsgClientDeregisterWithServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDeregisterWithServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeregisterWithServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeregisterWithServer}, {}};

static void InitDefaultsCMsgClientClanState_NameInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientClanState_NameInfo_default_instance_;
    new (ptr) ::CMsgClientClanState_NameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientClanState_NameInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientClanState_NameInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientClanState_NameInfo}, {}};

static void InitDefaultsCMsgClientClanState_UserCounts() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientClanState_UserCounts_default_instance_;
    new (ptr) ::CMsgClientClanState_UserCounts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientClanState_UserCounts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientClanState_UserCounts =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientClanState_UserCounts}, {}};

static void InitDefaultsCMsgClientClanState_Event() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientClanState_Event_default_instance_;
    new (ptr) ::CMsgClientClanState_Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientClanState_Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientClanState_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientClanState_Event}, {}};

static void InitDefaultsCMsgClientClanState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientClanState_default_instance_;
    new (ptr) ::CMsgClientClanState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientClanState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CMsgClientClanState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCMsgClientClanState}, {
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_NameInfo.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_UserCounts.base,
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_Event.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUDSP2PSessionStarted.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUDSP2PSessionEnded.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterAuthTicketWithCM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientTicketAuthComplete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCMList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientP2PConnectionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientP2PConnectionFailInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientNetworkingCertRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientNetworkingCertReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAppOwnershipTicket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAppOwnershipTicketResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSessionToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGameConnectTokens.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSServerType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSStatusReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSPlayerList_Player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSPlayerList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSUserPlaying.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSDisconnectNotice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGamesPlayed_GamePlayed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGamesPlayed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSApprove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSDeny.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSKick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthListAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLicenseList_License.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLicenseList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSSetScore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSSetScoreResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSSetUGC.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSSetUGCResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSFindOrCreateLB.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSFindOrCreateLBResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSGetLBEntries.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSGetLBEntriesResponse_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientLBSGetLBEntriesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppMinutesPlayedData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientIsLimitedAccount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServerList_Server.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServerList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestedClientStats_StatsToSend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestedClientStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStat2_StatDetail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStat2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSCreateLobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSCreateLobbyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSJoinLobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSJoinLobbyResponse_Member.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSJoinLobbyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSLeaveLobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSLeaveLobbyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSGetLobbyList_Filter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSGetLobbyList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSGetLobbyListResponse_Lobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSGetLobbyListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSetLobbyData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSetLobbyDataResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSGetLobbyData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSLobbyData_Member.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSLobbyData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSendLobbyChatMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSLobbyChatMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSetLobbyOwner.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSetLobbyOwnerResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSetLobbyLinked.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSSetLobbyGameServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSLobbyGameServerSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSUserJoinedLobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSUserLeftLobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientMMSInviteToLobby.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientInviteToGame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatInvite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientConnectionStats_Stats_Logon.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientConnectionStats_Stats_UDP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientConnectionStats_Stats_VConn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientConnectionStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServersAvailable_Server_Types_Available.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServersAvailable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetUserStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetUserStatsResponse_Stats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetUserStatsResponse_Achievement_Blocks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetUserStatsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStoreUserStatsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStoreUserStats2_Stats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStoreUserStats2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStatsUpdated_Updated_Stats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStatsUpdated.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStoreUserStats_Stats_To_Store.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientStoreUserStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientReportOverlayDetourFailure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientDetailsResponse_Game.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientDetailsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientAppList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientAppListResponse_App_DLC.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientAppListResponse_App.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClientAppListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientInstallClientApp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientInstallClientAppResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUninstallClientApp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUninstallClientAppResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSetClientAppUpdateState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSetClientAppUpdateStateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadCommit_File.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadCommit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadCommitResponse_File.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadCommitResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSFileChunk.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSTransferHeartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSUploadFileFinished.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSDeleteFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSDeleteFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetFileListForApp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetFileListForAppResponse_File.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetFileListForAppResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSDownloadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSDownloadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSLoginRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSLoginResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestEncryptedAppTicket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestEncryptedAppTicketResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWalletInfoUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoChanges.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoRequest_App.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoResponse_App_Section.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoResponse_App.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAppInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPackageInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPackageInfoResponse_Package.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPackageInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSChangesSinceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSChangesSinceResponse_PackageChange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSChangesSinceResponse_AppChange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSChangesSinceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSProductInfoRequest_AppInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSProductInfoRequest_PackageInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSProductInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSProductInfoResponse_AppInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSProductInfoResponse_PackageInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSProductInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSAccessTokenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSAccessTokenResponse_PackageToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSAccessTokenResponse_AppToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPICSAccessTokenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetUGCDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetUGCDetailsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetSingleFileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSGetSingleFileInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSShareFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUFSShareFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetClanOfficers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetClanOfficersResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetPersonaNameHistory_IdInstance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetPersonaNameHistory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAMGetPersonaNameHistoryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeregisterWithServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientClanState_NameInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientClanState_UserCounts.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientClanState_Event.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientClanState.base);
}

::google::protobuf::Metadata file_level_metadata[169];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionStarted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionStarted, steamid_remote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionStarted, appid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, steamid_remote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, session_length_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, session_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, nattype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, bytes_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, bytes_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, bytes_sent_relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, bytes_recv_relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUDSP2PSessionEnded, time_to_connect_ms_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterAuthTicketWithCM, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterAuthTicketWithCM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterAuthTicketWithCM, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterAuthTicketWithCM, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRegisterAuthTicketWithCM, client_instance_id_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, estate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, eauth_session_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, deprecated_ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, ticket_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, ticket_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientTicketAuthComplete, owner_steam_id_),
  1,
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCMList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCMList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCMList, cm_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCMList, cm_ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCMList, cm_websocket_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCMList, percent_default_to_websocket_),
  ~0u,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, steam_id_dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, steam_id_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, connection_id_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionInfo, rendezvous_),
  2,
  3,
  5,
  0,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, steam_id_dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, steam_id_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, ep2p_session_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, connection_id_dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, close_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientP2PConnectionFailInfo, close_message_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertRequest, key_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertRequest, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertReply, cert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertReply, ca_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientNetworkingCertReply, ca_signature_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicket, app_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicketResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicketResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicketResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicketResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetAppOwnershipTicketResponse, ticket_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSessionToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSessionToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSessionToken, token_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGameConnectTokens, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGameConnectTokens, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGameConnectTokens, max_tokens_to_keep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGameConnectTokens, tokens_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, app_id_served_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, game_ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, game_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, game_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, game_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSServerType, game_query_port_),
  2,
  3,
  4,
  5,
  0,
  1,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSStatusReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSStatusReply, is_secure_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList_Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList_Player, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList_Player, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList_Player, token_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSPlayerList, players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSUserPlaying, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSUserPlaying, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSUserPlaying, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSUserPlaying, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSUserPlaying, token_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDisconnectNotice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDisconnectNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDisconnectNotice, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, steam_id_gs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, game_ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, game_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, is_secure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, game_extra_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, game_data_blob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, process_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, streaming_provider_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, game_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, vr_hmd_vendor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, vr_hmd_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, launch_option_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, primary_controller_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, primary_steam_controller_serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, total_steam_controller_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, total_non_steam_controller_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, controller_workshop_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed_GamePlayed, launch_source_),
  6,
  7,
  8,
  9,
  10,
  0,
  1,
  2,
  11,
  12,
  13,
  14,
  3,
  4,
  15,
  20,
  5,
  16,
  17,
  18,
  19,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed, games_played_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGamesPlayed, client_os_type_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSApprove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSApprove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSApprove, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSApprove, owner_steam_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDeny, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDeny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDeny, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDeny, edeny_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSDeny, deny_string_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSKick, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSKick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSKick, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGSKick, edeny_reason_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, tokens_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, last_request_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, last_request_seq_from_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, tickets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, app_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthList, message_sequence_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthListAck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthListAck, ticket_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthListAck, app_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAuthListAck, message_sequence_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, time_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, time_next_process_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, minute_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, minutes_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, payment_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, purchase_country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, license_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, territory_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, initial_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, initial_time_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, renewal_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList_License, renewal_time_unit_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  0,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLicenseList, licenses_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, leaderboard_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScore, upload_score_method_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, leaderboard_entry_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, score_changed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, global_rank_previous_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetScoreResponse, global_rank_new_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGC, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGC, leaderboard_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGC, ugc_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGCResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSSetUGCResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, leaderboard_sort_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, leaderboard_display_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, create_if_not_found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLB, leaderboard_name_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, leaderboard_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, leaderboard_entry_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, leaderboard_sort_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, leaderboard_display_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSFindOrCreateLBResponse, leaderboard_name_),
  5,
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, leaderboard_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, range_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, range_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, leaderboard_data_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntries, steamids_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, steam_id_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, global_rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse_Entry, ugc_id_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse, leaderboard_entry_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientLBSGetLBEntriesResponse, entries_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData, forever_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData, last_two_weeks_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppMinutesPlayedData, minutes_played_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientIsLimitedAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientIsLimitedAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientIsLimitedAccount, bis_limited_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientIsLimitedAccount, bis_community_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientIsLimitedAccount, bis_locked_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientIsLimitedAccount, bis_limited_account_allowed_to_invite_friends_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList_Server, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList_Server, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList_Server, server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList_Server, server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList_Server, server_port_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServerList, servers_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats_StatsToSend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats_StatsToSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats_StatsToSend, client_stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats_StatsToSend, stat_aggregate_method_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestedClientStats, stats_to_send_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, client_stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, ll_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, time_of_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2_StatDetail, app_id_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStat2, stat_detail_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, max_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, lobby_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, lobby_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobby, persona_name_owner_),
  2,
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobbyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobbyResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobbyResponse, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSCreateLobbyResponse, eresult_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobby, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobby, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobby, persona_name_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse_Member, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse_Member, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse_Member, persona_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse_Member, metadata_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, chat_room_enter_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, max_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, lobby_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, lobby_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, steam_id_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSJoinLobbyResponse, members_),
  2,
  1,
  3,
  4,
  5,
  7,
  6,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobby, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobby, steam_id_lobby_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobbyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobbyResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobbyResponse, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLeaveLobbyResponse, eresult_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList_Filter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList_Filter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList_Filter, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList_Filter, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList_Filter, comparision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList_Filter, filter_type_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, num_lobbies_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyList, filters_),
  0,
  1,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, max_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, lobby_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, lobby_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, num_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse_Lobby, weight_),
  1,
  2,
  3,
  4,
  0,
  5,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyListResponse, lobbies_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, steam_id_member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, max_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, lobby_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, lobby_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyData, metadata_),
  2,
  1,
  4,
  3,
  5,
  6,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyDataResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyDataResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyDataResponse, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyDataResponse, eresult_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSGetLobbyData, steam_id_lobby_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData_Member, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData_Member, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData_Member, persona_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData_Member, metadata_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, num_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, max_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, lobby_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, lobby_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, steam_id_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyData, lobby_cellid_),
  2,
  1,
  3,
  4,
  5,
  7,
  6,
  0,
  ~0u,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSendLobbyChatMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSendLobbyChatMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSendLobbyChatMsg, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSendLobbyChatMsg, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSendLobbyChatMsg, steam_id_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSendLobbyChatMsg, lobby_message_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyChatMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyChatMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyChatMsg, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyChatMsg, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyChatMsg, steam_id_sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyChatMsg, lobby_message_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwner, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwner, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwner, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwner, steam_id_new_owner_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwnerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwnerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwnerResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwnerResponse, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyOwnerResponse, eresult_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyLinked, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyLinked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyLinked, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyLinked, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyLinked, steam_id_lobby2_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, game_server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, game_server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSSetLobbyGameServer, game_server_steam_id_),
  1,
  0,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, game_server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, game_server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSLobbyGameServerSet, game_server_steam_id_),
  1,
  0,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserJoinedLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserJoinedLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserJoinedLobby, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserJoinedLobby, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserJoinedLobby, steam_id_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserJoinedLobby, persona_name_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserLeftLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserLeftLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserLeftLobby, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserLeftLobby, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserLeftLobby, steam_id_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSUserLeftLobby, persona_name_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSInviteToLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSInviteToLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSInviteToLobby, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSInviteToLobby, steam_id_lobby_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientMMSInviteToLobby, steam_id_user_invited_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInviteToGame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInviteToGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInviteToGame, steam_id_dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInviteToGame, steam_id_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInviteToGame, connect_string_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, steam_id_invited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, steam_id_chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, steam_id_patron_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, chatroom_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, steam_id_friend_chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, chat_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChatInvite, game_id_),
  1,
  2,
  3,
  6,
  4,
  0,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, connect_attempts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, connect_successes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, connect_failures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, connections_dropped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, seconds_running_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, msec_tologonthistime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_Logon, count_bad_cms_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, pkts_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, bytes_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, pkts_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, pkts_processed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_UDP, bytes_recv_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, connections_udp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, connections_tcp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, stats_udp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, pkts_abandoned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, conn_req_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, pkts_resent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, msgs_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, msgs_sent_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, msgs_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, datagrams_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, datagrams_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, bad_pkts_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, unknown_conn_pkts_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, missed_pkts_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, dup_pkts_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, failed_connect_challenges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, micro_sec_avg_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, micro_sec_min_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, micro_sec_max_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats_Stats_VConn, mem_pool_msg_in_use_),
  1,
  2,
  0,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats, stats_logon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientConnectionStats, stats_vconn_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable_Server_Types_Available, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable_Server_Types_Available, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable_Server_Types_Available, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable_Server_Types_Available, changed_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable, server_types_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientServersAvailable, server_type_for_auth_services_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStats, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStats, crc_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStats, schema_local_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStats, steam_id_for_user_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Stats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Stats, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Stats, stat_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Achievement_Blocks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Achievement_Blocks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Achievement_Blocks, achievement_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse_Achievement_Blocks, unlock_time_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, crc_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetUserStatsResponse, achievement_blocks_),
  1,
  3,
  2,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation, reverted_stat_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, crc_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, stats_failed_validation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStatsResponse, stats_out_of_date_),
  0,
  3,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2_Stats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2_Stats, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2_Stats, stat_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, settor_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, settee_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, crc_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, explicit_reset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats2, stats_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated_Updated_Stats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated_Updated_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated_Updated_Stats, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated_Updated_Stats, stat_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated, crc_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStatsUpdated, updated_stats_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats_Stats_To_Store, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats_Stats_To_Store, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats_Stats_To_Store, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats_Stats_To_Store, stat_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats, explicit_reset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientStoreUserStats, stats_to_store_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReportOverlayDetourFailure, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReportOverlayDetourFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientReportOverlayDetourFailure, failure_strings_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse_Game, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse_Game, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse_Game, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse_Game, extra_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse_Game, time_running_sec_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, package_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, machine_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, ip_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, ip_private_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, bytes_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientDetailsResponse, games_running_),
  4,
  5,
  0,
  1,
  2,
  3,
  6,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, media_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, tools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, games_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, only_installed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, only_changing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppList, comics_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App_DLC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App_DLC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App_DLC, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App_DLC, installed_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, app_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, favorite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, installed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, auto_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, bytes_downloaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, bytes_needed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, bytes_download_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, download_paused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, num_downloading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, num_paused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, changing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, available_on_platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse_App, dlcs_),
  2,
  0,
  1,
  3,
  4,
  5,
  7,
  8,
  9,
  6,
  10,
  11,
  12,
  13,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetClientAppListResponse, bytes_available_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInstallClientApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInstallClientApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInstallClientApp, appid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInstallClientAppResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInstallClientAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientInstallClientAppResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUninstallClientApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUninstallClientApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUninstallClientApp, appid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUninstallClientAppResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUninstallClientAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUninstallClientAppResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateState, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateState, update_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateStateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetClientAppUpdateStateResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, raw_file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, platforms_to_sync_deprecated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, platforms_to_sync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileRequest, can_encrypt_),
  2,
  3,
  5,
  0,
  4,
  1,
  6,
  9,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, use_http_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, http_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, http_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, kv_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, use_https_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileResponse, encrypt_file_),
  7,
  0,
  4,
  1,
  2,
  3,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, cub_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit_File, file_name_),
  4,
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommit, files_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse_File, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse_File, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse_File, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse_File, sha_file_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadCommitResponse, files_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSFileChunk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSFileChunk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSFileChunk, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSFileChunk, file_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSFileChunk, data_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSTransferHeartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSTransferHeartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileFinished, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileFinished, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSUploadFileFinished, sha_file_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileRequest, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileRequest, is_explicit_delete_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDeleteFileResponse, file_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForApp, apps_to_query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForApp, send_path_prefixes_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, raw_file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, is_explicit_delete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, platforms_to_sync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse_File, path_prefix_index_),
  2,
  0,
  1,
  4,
  3,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse, files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetFileListForAppResponse, path_prefixes_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadRequest, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadRequest, can_handle_http_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, raw_file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, is_explicit_delete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, use_http_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, http_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, http_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, kv_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, use_https_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSDownloadResponse, encrypted_),
  12,
  4,
  5,
  7,
  0,
  6,
  8,
  9,
  1,
  2,
  3,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginRequest, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginRequest, am_session_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginRequest, apps_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSLoginResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicket, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicket, userdata_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicketResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicketResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicketResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicketResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestEncryptedAppTicketResponse, encrypted_app_ticket_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, has_wallet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, balance_delayed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, balance64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWalletInfoUpdate, balance64_delayed_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoUpdate, last_changenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoUpdate, send_changelist_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoChanges, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoChanges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoChanges, current_change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoChanges, force_full_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoChanges, appids_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest_App, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest_App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest_App, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest_App, section_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest_App, section_crc_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoRequest, supports_batches_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App_Section, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App_Section, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App_Section, section_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App_Section, section_kv_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse_App, sections_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse, apps_unknown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAppInfoResponse, apps_pending_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoRequest, package_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoRequest, meta_data_only_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse_Package, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse_Package, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse_Package, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse_Package, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse_Package, sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse_Package, buffer_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse, packages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse, packages_unknown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPackageInfoResponse, packages_pending_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, since_change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, send_app_info_changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, send_package_info_changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, num_app_info_cached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceRequest, num_package_info_cached_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_PackageChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_PackageChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_PackageChange, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_PackageChange, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_PackageChange, needs_token_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_AppChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_AppChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_AppChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_AppChange, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse_AppChange, needs_token_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, current_change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, since_change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, force_full_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, package_changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, app_changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, force_full_app_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSChangesSinceResponse, force_full_package_update_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_AppInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_AppInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_AppInfo, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_AppInfo, access_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_AppInfo, only_public_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_PackageInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_PackageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_PackageInfo, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest_PackageInfo, access_token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest, packages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest, meta_data_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoRequest, num_prev_failed_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, missing_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, only_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_AppInfo, size_),
  2,
  3,
  4,
  0,
  1,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, change_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, missing_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse_PackageInfo, size_),
  2,
  3,
  4,
  0,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, unknown_appids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, packages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, unknown_packageids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, meta_data_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, response_pending_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, http_min_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSProductInfoResponse, http_host_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenRequest, packageids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenRequest, appids_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_PackageToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_PackageToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_PackageToken, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_PackageToken, access_token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_AppToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_AppToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_AppToken, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse_AppToken, access_token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse, package_access_tokens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse, package_denied_tokens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse, app_access_tokens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPICSAccessTokenResponse, app_denied_tokens_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetails, hcontent_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, steamid_creator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, compressed_file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, rangecheck_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, file_encoded_sha1_),
  8,
  0,
  4,
  1,
  6,
  5,
  7,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, file_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, raw_file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, is_explicit_delete_),
  6,
  2,
  0,
  1,
  4,
  3,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFile, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFile, file_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, hcontent_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficers, steamid_clan_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficersResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficersResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficersResponse, steamid_clan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetClanOfficersResponse, officer_count_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory_IdInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory_IdInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory_IdInstance, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory, id_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistory, ids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance, name_since_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance, names_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAMGetPersonaNameHistoryResponse, responses_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeregisterWithServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeregisterWithServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeregisterWithServer, eservertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeregisterWithServer, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_NameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_NameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_NameInfo, clan_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_NameInfo, sha_avatar_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, chatting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, in_game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_UserCounts, chat_room_members_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, headline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState_Event, just_posted_),
  1,
  2,
  0,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, steamid_clan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, clan_account_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, name_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, user_counts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, announcements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientClanState, chat_room_private_),
  2,
  3,
  0,
  1,
  ~0u,
  ~0u,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CMsgClientUDSP2PSessionStarted)},
  { 9, 24, sizeof(::CMsgClientUDSP2PSessionEnded)},
  { 34, 42, sizeof(::CMsgClientRegisterAuthTicketWithCM)},
  { 45, 58, sizeof(::CMsgClientTicketAuthComplete)},
  { 66, 75, sizeof(::CMsgClientCMList)},
  { 79, 90, sizeof(::CMsgClientP2PConnectionInfo)},
  { 96, 108, sizeof(::CMsgClientP2PConnectionFailInfo)},
  { 115, 122, sizeof(::CMsgClientNetworkingCertRequest)},
  { 124, 132, sizeof(::CMsgClientNetworkingCertReply)},
  { 135, 141, sizeof(::CMsgClientGetAppOwnershipTicket)},
  { 142, 150, sizeof(::CMsgClientGetAppOwnershipTicketResponse)},
  { 153, 159, sizeof(::CMsgClientSessionToken)},
  { 160, 167, sizeof(::CMsgClientGameConnectTokens)},
  { 169, 181, sizeof(::CMsgGSServerType)},
  { 188, 194, sizeof(::CMsgGSStatusReply)},
  { 195, 203, sizeof(::CMsgGSPlayerList_Player)},
  { 206, 212, sizeof(::CMsgGSPlayerList)},
  { 213, 221, sizeof(::CMsgGSUserPlaying)},
  { 224, 230, sizeof(::CMsgGSDisconnectNotice)},
  { 231, 257, sizeof(::CMsgClientGamesPlayed_GamePlayed)},
  { 278, 285, sizeof(::CMsgClientGamesPlayed)},
  { 287, 294, sizeof(::CMsgGSApprove)},
  { 296, 304, sizeof(::CMsgGSDeny)},
  { 307, 314, sizeof(::CMsgGSKick)},
  { 316, 327, sizeof(::CMsgClientAuthList)},
  { 333, 341, sizeof(::CMsgClientAuthListAck)},
  { 344, 365, sizeof(::CMsgClientLicenseList_License)},
  { 381, 388, sizeof(::CMsgClientLicenseList)},
  { 390, 400, sizeof(::CMsgClientLBSSetScore)},
  { 405, 415, sizeof(::CMsgClientLBSSetScoreResponse)},
  { 420, 428, sizeof(::CMsgClientLBSSetUGC)},
  { 431, 437, sizeof(::CMsgClientLBSSetUGCResponse)},
  { 438, 448, sizeof(::CMsgClientLBSFindOrCreateLB)},
  { 453, 464, sizeof(::CMsgClientLBSFindOrCreateLBResponse)},
  { 470, 481, sizeof(::CMsgClientLBSGetLBEntries)},
  { 487, 497, sizeof(::CMsgClientLBSGetLBEntriesResponse_Entry)},
  { 502, 510, sizeof(::CMsgClientLBSGetLBEntriesResponse)},
  { 513, 521, sizeof(::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData)},
  { 524, 530, sizeof(::CMsgClientAppMinutesPlayedData)},
  { 531, 540, sizeof(::CMsgClientIsLimitedAccount)},
  { 544, 552, sizeof(::CMsgClientServerList_Server)},
  { 555, 561, sizeof(::CMsgClientServerList)},
  { 562, 569, sizeof(::CMsgClientRequestedClientStats_StatsToSend)},
  { 571, 577, sizeof(::CMsgClientRequestedClientStats)},
  { 578, 589, sizeof(::CMsgClientStat2_StatDetail)},
  { 595, 601, sizeof(::CMsgClientStat2)},
  { 602, 615, sizeof(::CMsgClientMMSCreateLobby)},
  { 623, 631, sizeof(::CMsgClientMMSCreateLobbyResponse)},
  { 634, 642, sizeof(::CMsgClientMMSJoinLobby)},
  { 645, 653, sizeof(::CMsgClientMMSJoinLobbyResponse_Member)},
  { 656, 670, sizeof(::CMsgClientMMSJoinLobbyResponse)},
  { 679, 686, sizeof(::CMsgClientMMSLeaveLobby)},
  { 688, 696, sizeof(::CMsgClientMMSLeaveLobbyResponse)},
  { 699, 708, sizeof(::CMsgClientMMSGetLobbyList_Filter)},
  { 712, 722, sizeof(::CMsgClientMMSGetLobbyList)},
  { 727, 740, sizeof(::CMsgClientMMSGetLobbyListResponse_Lobby)},
  { 748, 756, sizeof(::CMsgClientMMSGetLobbyListResponse)},
  { 759, 771, sizeof(::CMsgClientMMSSetLobbyData)},
  { 778, 786, sizeof(::CMsgClientMMSSetLobbyDataResponse)},
  { 789, 796, sizeof(::CMsgClientMMSGetLobbyData)},
  { 798, 806, sizeof(::CMsgClientMMSLobbyData_Member)},
  { 809, 824, sizeof(::CMsgClientMMSLobbyData)},
  { 834, 843, sizeof(::CMsgClientMMSSendLobbyChatMsg)},
  { 847, 856, sizeof(::CMsgClientMMSLobbyChatMsg)},
  { 860, 868, sizeof(::CMsgClientMMSSetLobbyOwner)},
  { 871, 879, sizeof(::CMsgClientMMSSetLobbyOwnerResponse)},
  { 882, 890, sizeof(::CMsgClientMMSSetLobbyLinked)},
  { 893, 903, sizeof(::CMsgClientMMSSetLobbyGameServer)},
  { 908, 918, sizeof(::CMsgClientMMSLobbyGameServerSet)},
  { 923, 932, sizeof(::CMsgClientMMSUserJoinedLobby)},
  { 936, 945, sizeof(::CMsgClientMMSUserLeftLobby)},
  { 949, 957, sizeof(::CMsgClientMMSInviteToLobby)},
  { 960, 968, sizeof(::CMsgClientInviteToGame)},
  { 971, 983, sizeof(::CMsgClientChatInvite)},
  { 990, 1002, sizeof(::CMsgClientConnectionStats_Stats_Logon)},
  { 1009, 1019, sizeof(::CMsgClientConnectionStats_Stats_UDP)},
  { 1024, 1049, sizeof(::CMsgClientConnectionStats_Stats_VConn)},
  { 1069, 1076, sizeof(::CMsgClientConnectionStats)},
  { 1078, 1085, sizeof(::CMsgClientServersAvailable_Server_Types_Available)},
  { 1087, 1094, sizeof(::CMsgClientServersAvailable)},
  { 1096, 1105, sizeof(::CMsgClientGetUserStats)},
  { 1109, 1116, sizeof(::CMsgClientGetUserStatsResponse_Stats)},
  { 1118, 1125, sizeof(::CMsgClientGetUserStatsResponse_Achievement_Blocks)},
  { 1127, 1138, sizeof(::CMsgClientGetUserStatsResponse)},
  { 1144, 1151, sizeof(::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation)},
  { 1153, 1163, sizeof(::CMsgClientStoreUserStatsResponse)},
  { 1168, 1175, sizeof(::CMsgClientStoreUserStats2_Stats)},
  { 1177, 1188, sizeof(::CMsgClientStoreUserStats2)},
  { 1194, 1201, sizeof(::CMsgClientStatsUpdated_Updated_Stats)},
  { 1203, 1212, sizeof(::CMsgClientStatsUpdated)},
  { 1216, 1223, sizeof(::CMsgClientStoreUserStats_Stats_To_Store)},
  { 1225, 1233, sizeof(::CMsgClientStoreUserStats)},
  { 1236, 1241, sizeof(::CMsgClientGetClientDetails)},
  { 1241, 1247, sizeof(::CMsgClientReportOverlayDetourFailure)},
  { 1248, 1256, sizeof(::CMsgClientGetClientDetailsResponse_Game)},
  { 1259, 1272, sizeof(::CMsgClientGetClientDetailsResponse)},
  { 1280, 1291, sizeof(::CMsgClientGetClientAppList)},
  { 1297, 1304, sizeof(::CMsgClientGetClientAppListResponse_App_DLC)},
  { 1306, 1326, sizeof(::CMsgClientGetClientAppListResponse_App)},
  { 1341, 1348, sizeof(::CMsgClientGetClientAppListResponse)},
  { 1350, 1356, sizeof(::CMsgClientInstallClientApp)},
  { 1357, 1363, sizeof(::CMsgClientInstallClientAppResponse)},
  { 1364, 1370, sizeof(::CMsgClientUninstallClientApp)},
  { 1371, 1377, sizeof(::CMsgClientUninstallClientAppResponse)},
  { 1378, 1385, sizeof(::CMsgClientSetClientAppUpdateState)},
  { 1387, 1393, sizeof(::CMsgClientSetClientAppUpdateStateResponse)},
  { 1394, 1409, sizeof(::CMsgClientUFSUploadFileRequest)},
  { 1419, 1432, sizeof(::CMsgClientUFSUploadFileResponse)},
  { 1440, 1450, sizeof(::CMsgClientUFSUploadCommit_File)},
  { 1455, 1461, sizeof(::CMsgClientUFSUploadCommit)},
  { 1462, 1470, sizeof(::CMsgClientUFSUploadCommitResponse_File)},
  { 1473, 1479, sizeof(::CMsgClientUFSUploadCommitResponse)},
  { 1480, 1488, sizeof(::CMsgClientUFSFileChunk)},
  { 1491, 1496, sizeof(::CMsgClientUFSTransferHeartbeat)},
  { 1496, 1503, sizeof(::CMsgClientUFSUploadFileFinished)},
  { 1505, 1513, sizeof(::CMsgClientUFSDeleteFileRequest)},
  { 1516, 1523, sizeof(::CMsgClientUFSDeleteFileResponse)},
  { 1525, 1532, sizeof(::CMsgClientUFSGetFileListForApp)},
  { 1534, 1547, sizeof(::CMsgClientUFSGetFileListForAppResponse_File)},
  { 1555, 1562, sizeof(::CMsgClientUFSGetFileListForAppResponse)},
  { 1564, 1572, sizeof(::CMsgClientUFSDownloadRequest)},
  { 1575, 1593, sizeof(::CMsgClientUFSDownloadResponse)},
  { 1606, 1614, sizeof(::CMsgClientUFSLoginRequest)},
  { 1617, 1623, sizeof(::CMsgClientUFSLoginResponse)},
  { 1624, 1631, sizeof(::CMsgClientRequestEncryptedAppTicket)},
  { 1633, 1641, sizeof(::CMsgClientRequestEncryptedAppTicketResponse)},
  { 1644, 1655, sizeof(::CMsgClientWalletInfoUpdate)},
  { 1661, 1668, sizeof(::CMsgClientAppInfoUpdate)},
  { 1670, 1678, sizeof(::CMsgClientAppInfoChanges)},
  { 1681, 1689, sizeof(::CMsgClientAppInfoRequest_App)},
  { 1692, 1699, sizeof(::CMsgClientAppInfoRequest)},
  { 1701, 1708, sizeof(::CMsgClientAppInfoResponse_App_Section)},
  { 1710, 1718, sizeof(::CMsgClientAppInfoResponse_App)},
  { 1721, 1729, sizeof(::CMsgClientAppInfoResponse)},
  { 1732, 1739, sizeof(::CMsgClientPackageInfoRequest)},
  { 1741, 1750, sizeof(::CMsgClientPackageInfoResponse_Package)},
  { 1754, 1762, sizeof(::CMsgClientPackageInfoResponse)},
  { 1765, 1775, sizeof(::CMsgClientPICSChangesSinceRequest)},
  { 1780, 1788, sizeof(::CMsgClientPICSChangesSinceResponse_PackageChange)},
  { 1791, 1799, sizeof(::CMsgClientPICSChangesSinceResponse_AppChange)},
  { 1802, 1814, sizeof(::CMsgClientPICSChangesSinceResponse)},
  { 1821, 1829, sizeof(::CMsgClientPICSProductInfoRequest_AppInfo)},
  { 1832, 1839, sizeof(::CMsgClientPICSProductInfoRequest_PackageInfo)},
  { 1841, 1850, sizeof(::CMsgClientPICSProductInfoRequest)},
  { 1854, 1866, sizeof(::CMsgClientPICSProductInfoResponse_AppInfo)},
  { 1873, 1884, sizeof(::CMsgClientPICSProductInfoResponse_PackageInfo)},
  { 1890, 1903, sizeof(::CMsgClientPICSProductInfoResponse)},
  { 1911, 1918, sizeof(::CMsgClientPICSAccessTokenRequest)},
  { 1920, 1927, sizeof(::CMsgClientPICSAccessTokenResponse_PackageToken)},
  { 1929, 1936, sizeof(::CMsgClientPICSAccessTokenResponse_AppToken)},
  { 1938, 1947, sizeof(::CMsgClientPICSAccessTokenResponse)},
  { 1951, 1957, sizeof(::CMsgClientUFSGetUGCDetails)},
  { 1958, 1972, sizeof(::CMsgClientUFSGetUGCDetailsResponse)},
  { 1981, 1988, sizeof(::CMsgClientUFSGetSingleFileInfo)},
  { 1990, 2002, sizeof(::CMsgClientUFSGetSingleFileInfoResponse)},
  { 2009, 2016, sizeof(::CMsgClientUFSShareFile)},
  { 2018, 2025, sizeof(::CMsgClientUFSShareFileResponse)},
  { 2027, 2033, sizeof(::CMsgClientAMGetClanOfficers)},
  { 2034, 2042, sizeof(::CMsgClientAMGetClanOfficersResponse)},
  { 2045, 2051, sizeof(::CMsgClientAMGetPersonaNameHistory_IdInstance)},
  { 2052, 2059, sizeof(::CMsgClientAMGetPersonaNameHistory)},
  { 2061, 2068, sizeof(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance)},
  { 2070, 2078, sizeof(::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance)},
  { 2081, 2087, sizeof(::CMsgClientAMGetPersonaNameHistoryResponse)},
  { 2088, 2095, sizeof(::CMsgClientDeregisterWithServer)},
  { 2097, 2104, sizeof(::CMsgClientClanState_NameInfo)},
  { 2106, 2116, sizeof(::CMsgClientClanState_UserCounts)},
  { 2121, 2131, sizeof(::CMsgClientClanState_Event)},
  { 2136, 2148, sizeof(::CMsgClientClanState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUDSP2PSessionStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUDSP2PSessionEnded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRegisterAuthTicketWithCM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientTicketAuthComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCMList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientP2PConnectionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientP2PConnectionFailInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientNetworkingCertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientNetworkingCertReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetAppOwnershipTicket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetAppOwnershipTicketResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSessionToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGameConnectTokens_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSServerType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSStatusReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSPlayerList_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSPlayerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSUserPlaying_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSDisconnectNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGamesPlayed_GamePlayed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGamesPlayed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSApprove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSDeny_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGSKick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAuthList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAuthListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLicenseList_License_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLicenseList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSSetScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSSetScoreResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSSetUGC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSSetUGCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSFindOrCreateLB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSFindOrCreateLBResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSGetLBEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSGetLBEntriesResponse_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientLBSGetLBEntriesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppMinutesPlayedData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientIsLimitedAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServerList_Server_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestedClientStats_StatsToSend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestedClientStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStat2_StatDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStat2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSCreateLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSCreateLobbyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSJoinLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSJoinLobbyResponse_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSJoinLobbyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSLeaveLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSLeaveLobbyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSGetLobbyList_Filter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSGetLobbyList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSGetLobbyListResponse_Lobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSGetLobbyListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSetLobbyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSetLobbyDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSGetLobbyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSLobbyData_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSLobbyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSendLobbyChatMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSLobbyChatMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSetLobbyOwner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSetLobbyOwnerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSetLobbyLinked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSSetLobbyGameServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSLobbyGameServerSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSUserJoinedLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSUserLeftLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientMMSInviteToLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientInviteToGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientChatInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientConnectionStats_Stats_Logon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientConnectionStats_Stats_UDP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientConnectionStats_Stats_VConn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientConnectionStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServersAvailable_Server_Types_Available_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientServersAvailable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetUserStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetUserStatsResponse_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetUserStatsResponse_Achievement_Blocks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetUserStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStoreUserStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStoreUserStats2_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStoreUserStats2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStatsUpdated_Updated_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStatsUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStoreUserStats_Stats_To_Store_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientStoreUserStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientReportOverlayDetourFailure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientDetailsResponse_Game_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientDetailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientAppList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientAppListResponse_App_DLC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientAppListResponse_App_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetClientAppListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientInstallClientApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientInstallClientAppResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUninstallClientApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUninstallClientAppResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSetClientAppUpdateState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSetClientAppUpdateStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadCommit_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadCommit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadCommitResponse_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadCommitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSFileChunk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSTransferHeartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSUploadFileFinished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSDeleteFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSDeleteFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetFileListForApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetFileListForAppResponse_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetFileListForAppResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSDownloadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSDownloadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSLoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSLoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestEncryptedAppTicket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestEncryptedAppTicketResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWalletInfoUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoChanges_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoRequest_App_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoResponse_App_Section_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoResponse_App_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAppInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPackageInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPackageInfoResponse_Package_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPackageInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSChangesSinceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSChangesSinceResponse_PackageChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSChangesSinceResponse_AppChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSChangesSinceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSProductInfoRequest_AppInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSProductInfoRequest_PackageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSProductInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSProductInfoResponse_AppInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSProductInfoResponse_PackageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSProductInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSAccessTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSAccessTokenResponse_PackageToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSAccessTokenResponse_AppToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPICSAccessTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetUGCDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetUGCDetailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetSingleFileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSGetSingleFileInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSShareFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientUFSShareFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetClanOfficers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetClanOfficersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetPersonaNameHistory_IdInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetPersonaNameHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAMGetPersonaNameHistoryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDeregisterWithServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientClanState_NameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientClanState_UserCounts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientClanState_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientClanState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_clientserver.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 169);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n steammessages_clientserver.proto\032\030stea"
      "mmessages_base.proto\032\032encrypted_app_tick"
      "et.proto\"G\n\036CMsgClientUDSP2PSessionStart"
      "ed\022\026\n\016steamid_remote\030\001 \001(\006\022\r\n\005appid\030\002 \001("
      "\005\"\201\002\n\034CMsgClientUDSP2PSessionEnded\022\026\n\016st"
      "eamid_remote\030\001 \001(\006\022\r\n\005appid\030\002 \001(\005\022\032\n\022ses"
      "sion_length_sec\030\003 \001(\005\022\025\n\rsession_error\030\004"
      " \001(\005\022\017\n\007nattype\030\005 \001(\005\022\022\n\nbytes_recv\030\006 \001("
      "\005\022\022\n\nbytes_sent\030\007 \001(\005\022\030\n\020bytes_sent_rela"
      "y\030\010 \001(\005\022\030\n\020bytes_recv_relay\030\t \001(\005\022\032\n\022tim"
      "e_to_connect_ms\030\n \001(\005\"j\n\"CMsgClientRegis"
      "terAuthTicketWithCM\022\030\n\020protocol_version\030"
      "\001 \001(\r\022\016\n\006ticket\030\003 \001(\014\022\032\n\022client_instance"
      "_id\030\004 \001(\004\"\321\001\n\034CMsgClientTicketAuthComple"
      "te\022\020\n\010steam_id\030\001 \001(\006\022\017\n\007game_id\030\002 \001(\006\022\016\n"
      "\006estate\030\003 \001(\r\022\036\n\026eauth_session_response\030"
      "\004 \001(\r\022\031\n\021DEPRECATED_ticket\030\005 \001(\014\022\022\n\ntick"
      "et_crc\030\006 \001(\r\022\027\n\017ticket_sequence\030\007 \001(\r\022\026\n"
      "\016owner_steam_id\030\010 \001(\006\"\200\001\n\020CMsgClientCMLi"
      "st\022\024\n\014cm_addresses\030\001 \003(\r\022\020\n\010cm_ports\030\002 \003"
      "(\r\022\036\n\026cm_websocket_addresses\030\003 \003(\t\022$\n\034pe"
      "rcent_default_to_websocket\030\004 \001(\r\"\234\001\n\033CMs"
      "gClientP2PConnectionInfo\022\025\n\rsteam_id_des"
      "t\030\001 \001(\006\022\024\n\014steam_id_src\030\002 \001(\006\022\016\n\006app_id\030"
      "\003 \001(\r\022\021\n\tcandidate\030\004 \001(\014\022\031\n\021connection_i"
      "d_src\030\005 \001(\006\022\022\n\nrendezvous\030\006 \001(\014\"\303\001\n\037CMsg"
      "ClientP2PConnectionFailInfo\022\025\n\rsteam_id_"
      "dest\030\001 \001(\006\022\024\n\014steam_id_src\030\002 \001(\006\022\016\n\006app_"
      "id\030\003 \001(\r\022\032\n\022ep2p_session_error\030\004 \001(\r\022\032\n\022"
      "connection_id_dest\030\005 \001(\006\022\024\n\014close_reason"
      "\030\007 \001(\r\022\025\n\rclose_message\030\010 \001(\t\"C\n\037CMsgCli"
      "entNetworkingCertRequest\022\020\n\010key_data\030\002 \001"
      "(\014\022\016\n\006app_id\030\003 \001(\r\"V\n\035CMsgClientNetworki"
      "ngCertReply\022\014\n\004cert\030\004 \001(\014\022\021\n\tca_key_id\030\005"
      " \001(\006\022\024\n\014ca_signature\030\006 \001(\014\"1\n\037CMsgClient"
      "GetAppOwnershipTicket\022\016\n\006app_id\030\001 \001(\r\"]\n"
      "\'CMsgClientGetAppOwnershipTicketResponse"
      "\022\022\n\007eresult\030\001 \001(\r:\0012\022\016\n\006app_id\030\002 \001(\r\022\016\n\006"
      "ticket\030\003 \001(\014\"\'\n\026CMsgClientSessionToken\022\r"
      "\n\005token\030\001 \001(\004\"M\n\033CMsgClientGameConnectTo"
      "kens\022\036\n\022max_tokens_to_keep\030\001 \001(\r:\00210\022\016\n\006"
      "tokens\030\002 \003(\014\"\245\001\n\020CMsgGSServerType\022\025\n\rapp"
      "_id_served\030\001 \001(\r\022\r\n\005flags\030\002 \001(\r\022\027\n\017game_"
      "ip_address\030\003 \001(\r\022\021\n\tgame_port\030\004 \001(\r\022\020\n\010g"
      "ame_dir\030\005 \001(\t\022\024\n\014game_version\030\006 \001(\t\022\027\n\017g"
      "ame_query_port\030\007 \001(\r\"&\n\021CMsgGSStatusRepl"
      "y\022\021\n\tis_secure\030\001 \001(\010\"{\n\020CMsgGSPlayerList"
      "\022)\n\007players\030\001 \003(\0132\030.CMsgGSPlayerList.Pla"
      "yer\032<\n\006Player\022\020\n\010steam_id\030\001 \001(\004\022\021\n\tpubli"
      "c_ip\030\002 \001(\r\022\r\n\005token\030\003 \001(\014\"G\n\021CMsgGSUserP"
      "laying\022\020\n\010steam_id\030\001 \001(\006\022\021\n\tpublic_ip\030\002 "
      "\001(\r\022\r\n\005token\030\003 \001(\014\"*\n\026CMsgGSDisconnectNo"
      "tice\022\020\n\010steam_id\030\001 \001(\006\"\247\005\n\025CMsgClientGam"
      "esPlayed\0227\n\014games_played\030\001 \003(\0132!.CMsgCli"
      "entGamesPlayed.GamePlayed\022\026\n\016client_os_t"
      "ype\030\002 \001(\r\032\274\004\n\nGamePlayed\022\023\n\013steam_id_gs\030"
      "\001 \001(\004\022\017\n\007game_id\030\002 \001(\006\022\027\n\017game_ip_addres"
      "s\030\003 \001(\r\022\021\n\tgame_port\030\004 \001(\r\022\021\n\tis_secure\030"
      "\005 \001(\010\022\r\n\005token\030\006 \001(\014\022\027\n\017game_extra_info\030"
      "\007 \001(\t\022\026\n\016game_data_blob\030\010 \001(\014\022\022\n\nprocess"
      "_id\030\t \001(\r\022\035\n\025streaming_provider_id\030\n \001(\r"
      "\022\022\n\ngame_flags\030\013 \001(\r\022\020\n\010owner_id\030\014 \001(\r\022\025"
      "\n\rvr_hmd_vendor\030\r \001(\t\022\024\n\014vr_hmd_model\030\016 "
      "\001(\t\022\035\n\022launch_option_type\030\017 \001(\r:\0010\022#\n\027pr"
      "imary_controller_type\030\020 \001(\005:\002-1\022\'\n\037prima"
      "ry_steam_controller_serial\030\021 \001(\t\022\'\n\034tota"
      "l_steam_controller_count\030\022 \001(\r:\0010\022+\n tot"
      "al_non_steam_controller_count\030\023 \001(\r:\0010\022&"
      "\n\033controller_workshop_file_id\030\024 \001(\004:\0010\022\030"
      "\n\rlaunch_source\030\025 \001(\r:\0010\"9\n\rCMsgGSApprov"
      "e\022\020\n\010steam_id\030\001 \001(\006\022\026\n\016owner_steam_id\030\002 "
      "\001(\006\"I\n\nCMsgGSDeny\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014e"
      "deny_reason\030\002 \001(\005\022\023\n\013deny_string\030\003 \001(\t\"4"
      "\n\nCMsgGSKick\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014edeny_"
      "reason\030\002 \001(\005\"\266\001\n\022CMsgClientAuthList\022\023\n\013t"
      "okens_left\030\001 \001(\r\022\030\n\020last_request_seq\030\002 \001"
      "(\r\022$\n\034last_request_seq_from_server\030\003 \001(\r"
      "\022 \n\007tickets\030\004 \003(\0132\017.CMsgAuthTicket\022\017\n\007ap"
      "p_ids\030\005 \003(\r\022\030\n\020message_sequence\030\006 \001(\r\"V\n"
      "\025CMsgClientAuthListAck\022\022\n\nticket_crc\030\001 \003"
      "(\r\022\017\n\007app_ids\030\002 \003(\r\022\030\n\020message_sequence\030"
      "\003 \001(\r\"\335\003\n\025CMsgClientLicenseList\022\022\n\007eresu"
      "lt\030\001 \001(\005:\0012\0220\n\010licenses\030\002 \003(\0132\036.CMsgClie"
      "ntLicenseList.License\032\375\002\n\007License\022\022\n\npac"
      "kage_id\030\001 \001(\r\022\024\n\014time_created\030\002 \001(\007\022\031\n\021t"
      "ime_next_process\030\003 \001(\007\022\024\n\014minute_limit\030\004"
      " \001(\005\022\024\n\014minutes_used\030\005 \001(\005\022\026\n\016payment_me"
      "thod\030\006 \001(\r\022\r\n\005flags\030\007 \001(\r\022\035\n\025purchase_co"
      "untry_code\030\010 \001(\t\022\024\n\014license_type\030\t \001(\r\022\026"
      "\n\016territory_code\030\n \001(\005\022\025\n\rchange_number\030"
      "\013 \001(\005\022\020\n\010owner_id\030\014 \001(\r\022\026\n\016initial_perio"
      "d\030\r \001(\r\022\031\n\021initial_time_unit\030\016 \001(\r\022\026\n\016re"
      "newal_period\030\017 \001(\r\022\031\n\021renewal_time_unit\030"
      "\020 \001(\r\"|\n\025CMsgClientLBSSetScore\022\016\n\006app_id"
      "\030\001 \001(\r\022\026\n\016leaderboard_id\030\002 \001(\005\022\r\n\005score\030"
      "\003 \001(\005\022\017\n\007details\030\004 \001(\014\022\033\n\023upload_score_m"
      "ethod\030\005 \001(\005\"\242\001\n\035CMsgClientLBSSetScoreRes"
      "ponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\037\n\027leaderboard"
      "_entry_count\030\002 \001(\005\022\025\n\rscore_changed\030\003 \001("
      "\010\022\034\n\024global_rank_previous\030\004 \001(\005\022\027\n\017globa"
      "l_rank_new\030\005 \001(\005\"M\n\023CMsgClientLBSSetUGC\022"
      "\016\n\006app_id\030\001 \001(\r\022\026\n\016leaderboard_id\030\002 \001(\005\022"
      "\016\n\006ugc_id\030\003 \001(\006\"1\n\033CMsgClientLBSSetUGCRe"
      "sponse\022\022\n\007eresult\030\001 \001(\005:\0012\"\247\001\n\033CMsgClien"
      "tLBSFindOrCreateLB\022\016\n\006app_id\030\001 \001(\r\022\037\n\027le"
      "aderboard_sort_method\030\002 \001(\005\022 \n\030leaderboa"
      "rd_display_type\030\003 \001(\005\022\033\n\023create_if_not_f"
      "ound\030\004 \001(\010\022\030\n\020leaderboard_name\030\005 \001(\t\"\325\001\n"
      "#CMsgClientLBSFindOrCreateLBResponse\022\022\n\007"
      "eresult\030\001 \001(\005:\0012\022\026\n\016leaderboard_id\030\002 \001(\005"
      "\022\037\n\027leaderboard_entry_count\030\003 \001(\005\022\"\n\027lea"
      "derboard_sort_method\030\004 \001(\005:\0010\022#\n\030leaderb"
      "oard_display_type\030\005 \001(\005:\0010\022\030\n\020leaderboar"
      "d_name\030\006 \001(\t\"\237\001\n\031CMsgClientLBSGetLBEntri"
      "es\022\016\n\006app_id\030\001 \001(\005\022\026\n\016leaderboard_id\030\002 \001"
      "(\005\022\023\n\013range_start\030\003 \001(\005\022\021\n\trange_end\030\004 \001"
      "(\005\022 \n\030leaderboard_data_request\030\005 \001(\005\022\020\n\010"
      "steamids\030\006 \003(\006\"\370\001\n!CMsgClientLBSGetLBEnt"
      "riesResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\037\n\027lead"
      "erboard_entry_count\030\002 \001(\005\0229\n\007entries\030\003 \003"
      "(\0132(.CMsgClientLBSGetLBEntriesResponse.E"
      "ntry\032c\n\005Entry\022\025\n\rsteam_id_user\030\001 \001(\006\022\023\n\013"
      "global_rank\030\002 \001(\005\022\r\n\005score\030\003 \001(\005\022\017\n\007deta"
      "ils\030\004 \001(\014\022\016\n\006ugc_id\030\005 \001(\006\"\277\001\n\036CMsgClient"
      "AppMinutesPlayedData\022L\n\016minutes_played\030\001"
      " \003(\01324.CMsgClientAppMinutesPlayedData.Ap"
      "pMinutesPlayedData\032O\n\024AppMinutesPlayedDa"
      "ta\022\016\n\006app_id\030\001 \001(\r\022\017\n\007forever\030\002 \001(\005\022\026\n\016l"
      "ast_two_weeks\030\003 \001(\005\"\252\001\n\032CMsgClientIsLimi"
      "tedAccount\022\033\n\023bis_limited_account\030\001 \001(\010\022"
      "\034\n\024bis_community_banned\030\002 \001(\010\022\032\n\022bis_loc"
      "ked_account\030\003 \001(\010\0225\n-bis_limited_account"
      "_allowed_to_invite_friends\030\004 \001(\010\"\214\001\n\024CMs"
      "gClientServerList\022-\n\007servers\030\001 \003(\0132\034.CMs"
      "gClientServerList.Server\032E\n\006Server\022\023\n\013se"
      "rver_type\030\001 \001(\r\022\021\n\tserver_ip\030\002 \001(\r\022\023\n\013se"
      "rver_port\030\003 \001(\r\"\247\001\n\036CMsgClientRequestedC"
      "lientStats\022B\n\rstats_to_send\030\001 \003(\0132+.CMsg"
      "ClientRequestedClientStats.StatsToSend\032A"
      "\n\013StatsToSend\022\023\n\013client_stat\030\001 \001(\r\022\035\n\025st"
      "at_aggregate_method\030\002 \001(\r\"\300\001\n\017CMsgClient"
      "Stat2\0220\n\013stat_detail\030\001 \003(\0132\033.CMsgClientS"
      "tat2.StatDetail\032{\n\nStatDetail\022\023\n\013client_"
      "stat\030\001 \001(\r\022\020\n\010ll_value\030\002 \001(\003\022\023\n\013time_of_"
      "day\030\003 \001(\r\022\017\n\007cell_id\030\004 \001(\r\022\020\n\010depot_id\030\005"
      " \001(\r\022\016\n\006app_id\030\006 \001(\r\"\272\001\n\030CMsgClientMMSCr"
      "eateLobby\022\016\n\006app_id\030\001 \001(\r\022\023\n\013max_members"
      "\030\002 \001(\005\022\022\n\nlobby_type\030\003 \001(\005\022\023\n\013lobby_flag"
      "s\030\004 \001(\005\022\017\n\007cell_id\030\005 \001(\r\022\021\n\tpublic_ip\030\006 "
      "\001(\r\022\020\n\010metadata\030\007 \001(\014\022\032\n\022persona_name_ow"
      "ner\030\010 \001(\t\"^\n CMsgClientMMSCreateLobbyRes"
      "ponse\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030"
      "\002 \001(\006\022\022\n\007eresult\030\003 \001(\005:\0012\"V\n\026CMsgClientM"
      "MSJoinLobby\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_"
      "lobby\030\002 \001(\006\022\024\n\014persona_name\030\003 \001(\t\"\317\002\n\036CM"
      "sgClientMMSJoinLobbyResponse\022\016\n\006app_id\030\001"
      " \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022 \n\030chat_roo"
      "m_enter_response\030\003 \001(\005\022\023\n\013max_members\030\004 "
      "\001(\005\022\022\n\nlobby_type\030\005 \001(\005\022\023\n\013lobby_flags\030\006"
      " \001(\005\022\026\n\016steam_id_owner\030\007 \001(\006\022\020\n\010metadata"
      "\030\010 \001(\014\0227\n\007members\030\t \003(\0132&.CMsgClientMMSJ"
      "oinLobbyResponse.Member\032B\n\006Member\022\020\n\010ste"
      "am_id\030\001 \001(\006\022\024\n\014persona_name\030\002 \001(\t\022\020\n\010met"
      "adata\030\003 \001(\014\"A\n\027CMsgClientMMSLeaveLobby\022\016"
      "\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\"]"
      "\n\037CMsgClientMMSLeaveLobbyResponse\022\016\n\006app"
      "_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\022\n\007ere"
      "sult\030\003 \001(\005:\0012\"\362\001\n\031CMsgClientMMSGetLobbyL"
      "ist\022\016\n\006app_id\030\001 \001(\r\022\035\n\025num_lobbies_reque"
      "sted\030\003 \001(\005\022\017\n\007cell_id\030\004 \001(\r\022\021\n\tpublic_ip"
      "\030\005 \001(\r\0222\n\007filters\030\006 \003(\0132!.CMsgClientMMSG"
      "etLobbyList.Filter\032N\n\006Filter\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\t\022\023\n\013comparision\030\003 \001(\005\022\023\n"
      "\013filter_type\030\004 \001(\005\"\245\002\n!CMsgClientMMSGetL"
      "obbyListResponse\022\016\n\006app_id\030\001 \001(\r\022\022\n\007eres"
      "ult\030\003 \001(\005:\0012\0229\n\007lobbies\030\004 \003(\0132(.CMsgClie"
      "ntMMSGetLobbyListResponse.Lobby\032\240\001\n\005Lobb"
      "y\022\020\n\010steam_id\030\001 \001(\006\022\023\n\013max_members\030\002 \001(\005"
      "\022\022\n\nlobby_type\030\003 \001(\005\022\023\n\013lobby_flags\030\004 \001("
      "\005\022\020\n\010metadata\030\005 \001(\014\022\023\n\013num_members\030\006 \001(\005"
      "\022\020\n\010distance\030\007 \001(\002\022\016\n\006weight\030\010 \001(\003\"\254\001\n\031C"
      "MsgClientMMSSetLobbyData\022\016\n\006app_id\030\001 \001(\r"
      "\022\026\n\016steam_id_lobby\030\002 \001(\006\022\027\n\017steam_id_mem"
      "ber\030\003 \001(\006\022\023\n\013max_members\030\004 \001(\005\022\022\n\nlobby_"
      "type\030\005 \001(\005\022\023\n\013lobby_flags\030\006 \001(\005\022\020\n\010metad"
      "ata\030\007 \001(\014\"_\n!CMsgClientMMSSetLobbyDataRe"
      "sponse\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby"
      "\030\002 \001(\006\022\022\n\007eresult\030\003 \001(\005:\0012\"C\n\031CMsgClient"
      "MMSGetLobbyData\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam"
      "_id_lobby\030\002 \001(\006\"\310\002\n\026CMsgClientMMSLobbyDa"
      "ta\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001"
      "(\006\022\023\n\013num_members\030\003 \001(\005\022\023\n\013max_members\030\004"
      " \001(\005\022\022\n\nlobby_type\030\005 \001(\005\022\023\n\013lobby_flags\030"
      "\006 \001(\005\022\026\n\016steam_id_owner\030\007 \001(\006\022\020\n\010metadat"
      "a\030\010 \001(\014\022/\n\007members\030\t \003(\0132\036.CMsgClientMMS"
      "LobbyData.Member\022\024\n\014lobby_cellid\030\n \001(\r\032B"
      "\n\006Member\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014persona_na"
      "me\030\002 \001(\t\022\020\n\010metadata\030\003 \001(\014\"w\n\035CMsgClient"
      "MMSSendLobbyChatMsg\022\016\n\006app_id\030\001 \001(\r\022\026\n\016s"
      "team_id_lobby\030\002 \001(\006\022\027\n\017steam_id_target\030\003"
      " \001(\006\022\025\n\rlobby_message\030\004 \001(\014\"s\n\031CMsgClien"
      "tMMSLobbyChatMsg\022\016\n\006app_id\030\001 \001(\r\022\026\n\016stea"
      "m_id_lobby\030\002 \001(\006\022\027\n\017steam_id_sender\030\003 \001("
      "\006\022\025\n\rlobby_message\030\004 \001(\014\"`\n\032CMsgClientMM"
      "SSetLobbyOwner\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_"
      "id_lobby\030\002 \001(\006\022\032\n\022steam_id_new_owner\030\003 \001"
      "(\006\"`\n\"CMsgClientMMSSetLobbyOwnerResponse"
      "\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006"
      "\022\022\n\007eresult\030\003 \001(\005:\0012\"^\n\033CMsgClientMMSSet"
      "LobbyLinked\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_"
      "lobby\030\002 \001(\006\022\027\n\017steam_id_lobby2\030\003 \001(\006\"\231\001\n"
      "\037CMsgClientMMSSetLobbyGameServer\022\016\n\006app_"
      "id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\026\n\016game"
      "_server_ip\030\003 \001(\r\022\030\n\020game_server_port\030\004 \001"
      "(\r\022\034\n\024game_server_steam_id\030\005 \001(\006\"\231\001\n\037CMs"
      "gClientMMSLobbyGameServerSet\022\016\n\006app_id\030\001"
      " \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\026\n\016game_ser"
      "ver_ip\030\003 \001(\r\022\030\n\020game_server_port\030\004 \001(\r\022\034"
      "\n\024game_server_steam_id\030\005 \001(\006\"s\n\034CMsgClie"
      "ntMMSUserJoinedLobby\022\016\n\006app_id\030\001 \001(\r\022\026\n\016"
      "steam_id_lobby\030\002 \001(\006\022\025\n\rsteam_id_user\030\003 "
      "\001(\006\022\024\n\014persona_name\030\004 \001(\t\"q\n\032CMsgClientM"
      "MSUserLeftLobby\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam"
      "_id_lobby\030\002 \001(\006\022\025\n\rsteam_id_user\030\003 \001(\006\022\024"
      "\n\014persona_name\030\004 \001(\t\"c\n\032CMsgClientMMSInv"
      "iteToLobby\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_l"
      "obby\030\002 \001(\006\022\035\n\025steam_id_user_invited\030\003 \001("
      "\006\"]\n\026CMsgClientInviteToGame\022\025\n\rsteam_id_"
      "dest\030\001 \001(\006\022\024\n\014steam_id_src\030\002 \001(\006\022\026\n\016conn"
      "ect_string\030\003 \001(\t\"\271\001\n\024CMsgClientChatInvit"
      "e\022\030\n\020steam_id_invited\030\001 \001(\006\022\025\n\rsteam_id_"
      "chat\030\002 \001(\006\022\027\n\017steam_id_patron\030\003 \001(\006\022\025\n\rc"
      "hatroom_type\030\004 \001(\005\022\034\n\024steam_id_friend_ch"
      "at\030\005 \001(\006\022\021\n\tchat_name\030\006 \001(\t\022\017\n\007game_id\030\007"
      " \001(\006\"\212\010\n\031CMsgClientConnectionStats\022;\n\013st"
      "ats_logon\030\001 \001(\0132&.CMsgClientConnectionSt"
      "ats.Stats_Logon\022;\n\013stats_vconn\030\002 \001(\0132&.C"
      "MsgClientConnectionStats.Stats_VConn\032\307\001\n"
      "\013Stats_Logon\022\030\n\020connect_attempts\030\001 \001(\005\022\031"
      "\n\021connect_successes\030\002 \001(\005\022\030\n\020connect_fai"
      "lures\030\003 \001(\005\022\033\n\023connections_dropped\030\004 \001(\005"
      "\022\027\n\017seconds_running\030\005 \001(\r\022\034\n\024msec_tologo"
      "nthistime\030\006 \001(\r\022\025\n\rcount_bad_cms\030\007 \001(\r\032q"
      "\n\tStats_UDP\022\021\n\tpkts_sent\030\001 \001(\004\022\022\n\nbytes_"
      "sent\030\002 \001(\004\022\021\n\tpkts_recv\030\003 \001(\004\022\026\n\016pkts_pr"
      "ocessed\030\004 \001(\004\022\022\n\nbytes_recv\030\005 \001(\004\032\265\004\n\013St"
      "ats_VConn\022\027\n\017connections_udp\030\001 \001(\r\022\027\n\017co"
      "nnections_tcp\030\002 \001(\r\0227\n\tstats_udp\030\003 \001(\0132$"
      ".CMsgClientConnectionStats.Stats_UDP\022\026\n\016"
      "pkts_abandoned\030\004 \001(\004\022\031\n\021conn_req_receive"
      "d\030\005 \001(\004\022\023\n\013pkts_resent\030\006 \001(\004\022\021\n\tmsgs_sen"
      "t\030\007 \001(\004\022\030\n\020msgs_sent_failed\030\010 \001(\004\022\021\n\tmsg"
      "s_recv\030\t \001(\004\022\026\n\016datagrams_sent\030\n \001(\004\022\026\n\016"
      "datagrams_recv\030\013 \001(\004\022\025\n\rbad_pkts_recv\030\014 "
      "\001(\004\022\036\n\026unknown_conn_pkts_recv\030\r \001(\004\022\030\n\020m"
      "issed_pkts_recv\030\016 \001(\004\022\025\n\rdup_pkts_recv\030\017"
      " \001(\004\022!\n\031failed_connect_challenges\030\020 \001(\004\022"
      "\035\n\025micro_sec_avg_latency\030\021 \001(\r\022\035\n\025micro_"
      "sec_min_latency\030\022 \001(\r\022\035\n\025micro_sec_max_l"
      "atency\030\023 \001(\r\022\033\n\023mem_pool_msg_in_use\030\024 \001("
      "\r\"\322\001\n\032CMsgClientServersAvailable\022R\n\026serv"
      "er_types_available\030\001 \003(\01322.CMsgClientSer"
      "versAvailable.Server_Types_Available\022%\n\035"
      "server_type_for_auth_services\030\002 \001(\r\0329\n\026S"
      "erver_Types_Available\022\016\n\006server\030\001 \001(\r\022\017\n"
      "\007changed\030\002 \001(\010\"u\n\026CMsgClientGetUserStats"
      "\022\017\n\007game_id\030\001 \001(\006\022\021\n\tcrc_stats\030\002 \001(\r\022\034\n\024"
      "schema_local_version\030\003 \001(\005\022\031\n\021steam_id_f"
      "or_user\030\004 \001(\006\"\337\002\n\036CMsgClientGetUserStats"
      "Response\022\017\n\007game_id\030\001 \001(\006\022\022\n\007eresult\030\002 \001"
      "(\005:\0012\022\021\n\tcrc_stats\030\003 \001(\r\022\016\n\006schema\030\004 \001(\014"
      "\0224\n\005stats\030\005 \003(\0132%.CMsgClientGetUserStats"
      "Response.Stats\022N\n\022achievement_blocks\030\006 \003"
      "(\01322.CMsgClientGetUserStatsResponse.Achi"
      "evement_Blocks\032,\n\005Stats\022\017\n\007stat_id\030\001 \001(\r"
      "\022\022\n\nstat_value\030\002 \001(\r\032A\n\022Achievement_Bloc"
      "ks\022\026\n\016achievement_id\030\001 \001(\r\022\023\n\013unlock_tim"
      "e\030\002 \003(\007\"\232\002\n CMsgClientStoreUserStatsResp"
      "onse\022\017\n\007game_id\030\001 \001(\006\022\022\n\007eresult\030\002 \001(\005:\001"
      "2\022\021\n\tcrc_stats\030\003 \001(\r\022Z\n\027stats_failed_val"
      "idation\030\004 \003(\01329.CMsgClientStoreUserStats"
      "Response.Stats_Failed_Validation\022\031\n\021stat"
      "s_out_of_date\030\005 \001(\010\032G\n\027Stats_Failed_Vali"
      "dation\022\017\n\007stat_id\030\001 \001(\r\022\033\n\023reverted_stat"
      "_value\030\002 \001(\r\"\350\001\n\031CMsgClientStoreUserStat"
      "s2\022\017\n\007game_id\030\001 \001(\006\022\027\n\017settor_steam_id\030\002"
      " \001(\006\022\027\n\017settee_steam_id\030\003 \001(\006\022\021\n\tcrc_sta"
      "ts\030\004 \001(\r\022\026\n\016explicit_reset\030\005 \001(\010\022/\n\005stat"
      "s\030\006 \003(\0132 .CMsgClientStoreUserStats2.Stat"
      "s\032,\n\005Stats\022\017\n\007stat_id\030\001 \001(\r\022\022\n\nstat_valu"
      "e\030\002 \001(\r\"\302\001\n\026CMsgClientStatsUpdated\022\020\n\010st"
      "eam_id\030\001 \001(\006\022\017\n\007game_id\030\002 \001(\006\022\021\n\tcrc_sta"
      "ts\030\003 \001(\r\022<\n\rupdated_stats\030\004 \003(\0132%.CMsgCl"
      "ientStatsUpdated.Updated_Stats\0324\n\rUpdate"
      "d_Stats\022\017\n\007stat_id\030\001 \001(\r\022\022\n\nstat_value\030\002"
      " \001(\r\"\274\001\n\030CMsgClientStoreUserStats\022\017\n\007gam"
      "e_id\030\001 \001(\006\022\026\n\016explicit_reset\030\002 \001(\010\022@\n\016st"
      "ats_to_store\030\003 \003(\0132(.CMsgClientStoreUser"
      "Stats.Stats_To_Store\0325\n\016Stats_To_Store\022\017"
      "\n\007stat_id\030\001 \001(\r\022\022\n\nstat_value\030\002 \001(\r\"\034\n\032C"
      "MsgClientGetClientDetails\"\?\n$CMsgClientR"
      "eportOverlayDetourFailure\022\027\n\017failure_str"
      "ings\030\001 \003(\t\"\277\002\n\"CMsgClientGetClientDetail"
      "sResponse\022\027\n\017package_version\030\001 \001(\r\022\030\n\020pr"
      "otocol_version\030\010 \001(\r\022\n\n\002os\030\002 \001(\t\022\024\n\014mach"
      "ine_name\030\003 \001(\t\022\021\n\tip_public\030\004 \001(\t\022\022\n\nip_"
      "private\030\005 \001(\t\022\027\n\017bytes_available\030\007 \001(\004\022\?"
      "\n\rgames_running\030\006 \003(\0132(.CMsgClientGetCli"
      "entDetailsResponse.Game\032C\n\004Game\022\r\n\005appid"
      "\030\001 \001(\r\022\022\n\nextra_info\030\002 \001(\t\022\030\n\020time_runni"
      "ng_sec\030\003 \001(\r\"\210\001\n\032CMsgClientGetClientAppL"
      "ist\022\r\n\005media\030\001 \001(\010\022\r\n\005tools\030\002 \001(\010\022\r\n\005gam"
      "es\030\003 \001(\010\022\026\n\016only_installed\030\004 \001(\010\022\025\n\ronly"
      "_changing\030\005 \001(\010\022\016\n\006comics\030\006 \001(\010\"\221\004\n\"CMsg"
      "ClientGetClientAppListResponse\0225\n\004apps\030\001"
      " \003(\0132\'.CMsgClientGetClientAppListRespons"
      "e.App\022\027\n\017bytes_available\030\002 \001(\004\032\232\003\n\003App\022\r"
      "\n\005appid\030\001 \001(\r\022\020\n\010category\030\002 \001(\t\022\020\n\010app_t"
      "ype\030\n \001(\t\022\020\n\010favorite\030\003 \001(\010\022\021\n\tinstalled"
      "\030\004 \001(\010\022\023\n\013auto_update\030\005 \001(\010\022\030\n\020bytes_dow"
      "nloaded\030\006 \001(\004\022\024\n\014bytes_needed\030\007 \001(\004\022\033\n\023b"
      "ytes_download_rate\030\010 \001(\r\022\027\n\017download_pau"
      "sed\030\013 \001(\010\022\027\n\017num_downloading\030\014 \001(\r\022\022\n\nnu"
      "m_paused\030\r \001(\r\022\020\n\010changing\030\016 \001(\010\022\035\n\025avai"
      "lable_on_platform\030\017 \001(\010\0229\n\004dlcs\030\t \003(\0132+."
      "CMsgClientGetClientAppListResponse.App.D"
      "LC\032\'\n\003DLC\022\r\n\005appid\030\001 \001(\r\022\021\n\tinstalled\030\002 "
      "\001(\010\"+\n\032CMsgClientInstallClientApp\022\r\n\005app"
      "id\030\001 \001(\r\"4\n\"CMsgClientInstallClientAppRe"
      "sponse\022\016\n\006result\030\001 \001(\r\"-\n\034CMsgClientUnin"
      "stallClientApp\022\r\n\005appid\030\001 \001(\r\"6\n$CMsgCli"
      "entUninstallClientAppResponse\022\016\n\006result\030"
      "\001 \001(\r\"B\n!CMsgClientSetClientAppUpdateSta"
      "te\022\r\n\005appid\030\001 \001(\r\022\016\n\006update\030\002 \001(\010\";\n)CMs"
      "gClientSetClientAppUpdateStateResponse\022\016"
      "\n\006result\030\001 \001(\r\"\206\002\n\036CMsgClientUFSUploadFi"
      "leRequest\022\016\n\006app_id\030\001 \001(\r\022\021\n\tfile_size\030\002"
      " \001(\r\022\025\n\rraw_file_size\030\003 \001(\r\022\020\n\010sha_file\030"
      "\004 \001(\014\022\022\n\ntime_stamp\030\005 \001(\004\022\021\n\tfile_name\030\006"
      " \001(\t\022$\n\034platforms_to_sync_deprecated\030\007 \001"
      "(\r\022%\n\021platforms_to_sync\030\010 \001(\r:\n429496729"
      "5\022\017\n\007cell_id\030\t \001(\r\022\023\n\013can_encrypt\030\n \001(\010\""
      "\273\001\n\037CMsgClientUFSUploadFileResponse\022\022\n\007e"
      "result\030\001 \001(\005:\0012\022\020\n\010sha_file\030\002 \001(\014\022\020\n\010use"
      "_http\030\003 \001(\010\022\021\n\thttp_host\030\004 \001(\t\022\020\n\010http_u"
      "rl\030\005 \001(\t\022\022\n\nkv_headers\030\006 \001(\014\022\021\n\tuse_http"
      "s\030\007 \001(\010\022\024\n\014encrypt_file\030\010 \001(\010\"\256\001\n\031CMsgCl"
      "ientUFSUploadCommit\022.\n\005files\030\001 \003(\0132\037.CMs"
      "gClientUFSUploadCommit.File\032a\n\004File\022\022\n\007e"
      "result\030\001 \001(\005:\0012\022\016\n\006app_id\030\002 \001(\r\022\020\n\010sha_f"
      "ile\030\003 \001(\014\022\020\n\010cub_file\030\004 \001(\r\022\021\n\tfile_name"
      "\030\005 \001(\t\"\231\001\n!CMsgClientUFSUploadCommitResp"
      "onse\0226\n\005files\030\001 \003(\0132\'.CMsgClientUFSUploa"
      "dCommitResponse.File\032<\n\004File\022\022\n\007eresult\030"
      "\001 \001(\005:\0012\022\016\n\006app_id\030\002 \001(\r\022\020\n\010sha_file\030\003 \001"
      "(\014\"L\n\026CMsgClientUFSFileChunk\022\020\n\010sha_file"
      "\030\001 \001(\014\022\022\n\nfile_start\030\002 \001(\r\022\014\n\004data\030\003 \001(\014"
      "\" \n\036CMsgClientUFSTransferHeartbeat\"G\n\037CM"
      "sgClientUFSUploadFileFinished\022\022\n\007eresult"
      "\030\001 \001(\005:\0012\022\020\n\010sha_file\030\002 \001(\014\"_\n\036CMsgClien"
      "tUFSDeleteFileRequest\022\016\n\006app_id\030\001 \001(\r\022\021\n"
      "\tfile_name\030\002 \001(\t\022\032\n\022is_explicit_delete\030\003"
      " \001(\010\"H\n\037CMsgClientUFSDeleteFileResponse\022"
      "\022\n\007eresult\030\001 \001(\005:\0012\022\021\n\tfile_name\030\002 \001(\t\"S"
      "\n\036CMsgClientUFSGetFileListForApp\022\025\n\rapps"
      "_to_query\030\001 \003(\r\022\032\n\022send_path_prefixes\030\002 "
      "\001(\010\"\301\002\n&CMsgClientUFSGetFileListForAppRe"
      "sponse\022;\n\005files\030\001 \003(\0132,.CMsgClientUFSGet"
      "FileListForAppResponse.File\022\025\n\rpath_pref"
      "ixes\030\002 \003(\t\032\270\001\n\004File\022\016\n\006app_id\030\001 \001(\r\022\021\n\tf"
      "ile_name\030\002 \001(\t\022\020\n\010sha_file\030\003 \001(\014\022\022\n\ntime"
      "_stamp\030\004 \001(\004\022\025\n\rraw_file_size\030\005 \001(\r\022\032\n\022i"
      "s_explicit_delete\030\006 \001(\010\022\031\n\021platforms_to_"
      "sync\030\007 \001(\r\022\031\n\021path_prefix_index\030\010 \001(\r:\010\200"
      "\265\030\010\210\265\030\020\"Z\n\034CMsgClientUFSDownloadRequest\022"
      "\016\n\006app_id\030\001 \001(\r\022\021\n\tfile_name\030\002 \001(\t\022\027\n\017ca"
      "n_handle_http\030\003 \001(\010\"\240\002\n\035CMsgClientUFSDow"
      "nloadResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\016\n\006app"
      "_id\030\002 \001(\r\022\021\n\tfile_size\030\003 \001(\r\022\025\n\rraw_file"
      "_size\030\004 \001(\r\022\020\n\010sha_file\030\005 \001(\014\022\022\n\ntime_st"
      "amp\030\006 \001(\004\022\032\n\022is_explicit_delete\030\007 \001(\010\022\020\n"
      "\010use_http\030\010 \001(\010\022\021\n\thttp_host\030\t \001(\t\022\020\n\010ht"
      "tp_url\030\n \001(\t\022\022\n\nkv_headers\030\013 \001(\014\022\021\n\tuse_"
      "https\030\014 \001(\010\022\021\n\tencrypted\030\r \001(\010\"]\n\031CMsgCl"
      "ientUFSLoginRequest\022\030\n\020protocol_version\030"
      "\001 \001(\r\022\030\n\020am_session_token\030\002 \001(\004\022\014\n\004apps\030"
      "\003 \003(\r\"0\n\032CMsgClientUFSLoginResponse\022\022\n\007e"
      "result\030\001 \001(\005:\0012\"G\n#CMsgClientRequestEncr"
      "yptedAppTicket\022\016\n\006app_id\030\001 \001(\r\022\020\n\010userda"
      "ta\030\002 \001(\014\"\204\001\n+CMsgClientRequestEncryptedA"
      "ppTicketResponse\022\016\n\006app_id\030\001 \001(\r\022\022\n\007eres"
      "ult\030\002 \001(\005:\0012\0221\n\024encrypted_app_ticket\030\003 \001"
      "(\0132\023.EncryptedAppTicket\"\246\001\n\032CMsgClientWa"
      "lletInfoUpdate\022\022\n\nhas_wallet\030\001 \001(\010\022\017\n\007ba"
      "lance\030\002 \001(\005\022\020\n\010currency\030\003 \001(\005\022\027\n\017balance"
      "_delayed\030\004 \001(\005\022\027\n\tbalance64\030\005 \001(\003B\004\240\266\030\001\022"
      "\037\n\021balance64_delayed\030\006 \001(\003B\004\240\266\030\001\"M\n\027CMsg"
      "ClientAppInfoUpdate\022\031\n\021last_changenumber"
      "\030\001 \001(\r\022\027\n\017send_changelist\030\002 \001(\010\"d\n\030CMsgC"
      "lientAppInfoChanges\022\035\n\025current_change_nu"
      "mber\030\001 \001(\r\022\031\n\021force_full_update\030\002 \001(\010\022\016\n"
      "\006appIDs\030\003 \003(\r\"\253\001\n\030CMsgClientAppInfoReque"
      "st\022+\n\004apps\030\001 \003(\0132\035.CMsgClientAppInfoRequ"
      "est.App\022\037\n\020supports_batches\030\002 \001(\010:\005false"
      "\032A\n\003App\022\016\n\006app_id\030\001 \001(\r\022\025\n\rsection_flags"
      "\030\002 \001(\r\022\023\n\013section_CRC\030\003 \003(\r\"\233\002\n\031CMsgClie"
      "ntAppInfoResponse\022,\n\004apps\030\001 \003(\0132\036.CMsgCl"
      "ientAppInfoResponse.App\022\024\n\014apps_unknown\030"
      "\002 \003(\r\022\024\n\014apps_pending\030\003 \001(\r\032\231\001\n\003App\022\016\n\006a"
      "pp_id\030\001 \001(\r\022\025\n\rchange_number\030\002 \001(\r\0228\n\010se"
      "ctions\030\003 \003(\0132&.CMsgClientAppInfoResponse"
      ".App.Section\0321\n\007Section\022\022\n\nsection_id\030\001 "
      "\001(\r\022\022\n\nsection_kv\030\002 \001(\014:\010\200\265\030\000\210\265\030\000\"K\n\034CMs"
      "gClientPackageInfoRequest\022\023\n\013package_ids"
      "\030\001 \003(\r\022\026\n\016meta_data_only\030\002 \001(\010\"\340\001\n\035CMsgC"
      "lientPackageInfoResponse\0228\n\010packages\030\001 \003"
      "(\0132&.CMsgClientPackageInfoResponse.Packa"
      "ge\022\030\n\020packages_unknown\030\002 \003(\r\022\030\n\020packages"
      "_pending\030\003 \001(\r\032Q\n\007Package\022\022\n\npackage_id\030"
      "\001 \001(\r\022\025\n\rchange_number\030\002 \001(\r\022\013\n\003sha\030\003 \001("
      "\014\022\016\n\006buffer\030\004 \001(\014\"\300\001\n!CMsgClientPICSChan"
      "gesSinceRequest\022\033\n\023since_change_number\030\001"
      " \001(\r\022\035\n\025send_app_info_changes\030\002 \001(\010\022!\n\031s"
      "end_package_info_changes\030\003 \001(\010\022\033\n\023num_ap"
      "p_info_cached\030\004 \001(\r\022\037\n\027num_package_info_"
      "cached\030\005 \001(\r\"\345\003\n\"CMsgClientPICSChangesSi"
      "nceResponse\022\035\n\025current_change_number\030\001 \001"
      "(\r\022\033\n\023since_change_number\030\002 \001(\r\022\031\n\021force"
      "_full_update\030\003 \001(\010\022J\n\017package_changes\030\004 "
      "\003(\01321.CMsgClientPICSChangesSinceResponse"
      ".PackageChange\022B\n\013app_changes\030\005 \003(\0132-.CM"
      "sgClientPICSChangesSinceResponse.AppChan"
      "ge\022\035\n\025force_full_app_update\030\006 \001(\010\022!\n\031for"
      "ce_full_package_update\030\007 \001(\010\032N\n\rPackageC"
      "hange\022\021\n\tpackageid\030\001 \001(\r\022\025\n\rchange_numbe"
      "r\030\002 \001(\r\022\023\n\013needs_token\030\003 \001(\010\032F\n\tAppChang"
      "e\022\r\n\005appid\030\001 \001(\r\022\025\n\rchange_number\030\002 \001(\r\022"
      "\023\n\013needs_token\030\003 \001(\010\"\312\002\n CMsgClientPICSP"
      "roductInfoRequest\022\?\n\010packages\030\001 \003(\0132-.CM"
      "sgClientPICSProductInfoRequest.PackageIn"
      "fo\0227\n\004apps\030\002 \003(\0132).CMsgClientPICSProduct"
      "InfoRequest.AppInfo\022\026\n\016meta_data_only\030\003 "
      "\001(\010\022\027\n\017num_prev_failed\030\004 \001(\r\032C\n\007AppInfo\022"
      "\r\n\005appid\030\001 \001(\r\022\024\n\014access_token\030\002 \001(\004\022\023\n\013"
      "only_public\030\003 \001(\010\0326\n\013PackageInfo\022\021\n\tpack"
      "ageid\030\001 \001(\r\022\024\n\014access_token\030\002 \001(\004\"\275\004\n!CM"
      "sgClientPICSProductInfoResponse\0228\n\004apps\030"
      "\001 \003(\0132*.CMsgClientPICSProductInfoRespons"
      "e.AppInfo\022\026\n\016unknown_appids\030\002 \003(\r\022@\n\010pac"
      "kages\030\003 \003(\0132..CMsgClientPICSProductInfoR"
      "esponse.PackageInfo\022\032\n\022unknown_packageid"
      "s\030\004 \003(\r\022\026\n\016meta_data_only\030\005 \001(\010\022\030\n\020respo"
      "nse_pending\030\006 \001(\010\022\025\n\rhttp_min_size\030\007 \001(\r"
      "\022\021\n\thttp_host\030\010 \001(\t\032\206\001\n\007AppInfo\022\r\n\005appid"
      "\030\001 \001(\r\022\025\n\rchange_number\030\002 \001(\r\022\025\n\rmissing"
      "_token\030\003 \001(\010\022\013\n\003sha\030\004 \001(\014\022\016\n\006buffer\030\005 \001("
      "\014\022\023\n\013only_public\030\006 \001(\010\022\014\n\004size\030\007 \001(\r\032y\n\013"
      "PackageInfo\022\021\n\tpackageid\030\001 \001(\r\022\025\n\rchange"
      "_number\030\002 \001(\r\022\025\n\rmissing_token\030\003 \001(\010\022\013\n\003"
      "sha\030\004 \001(\014\022\016\n\006buffer\030\005 \001(\014\022\014\n\004size\030\006 \001(\r:"
      "\010\200\265\030\000\210\265\030\000\"F\n CMsgClientPICSAccessTokenRe"
      "quest\022\022\n\npackageids\030\001 \003(\r\022\016\n\006appids\030\002 \003("
      "\r\"\337\002\n!CMsgClientPICSAccessTokenResponse\022"
      "N\n\025package_access_tokens\030\001 \003(\0132/.CMsgCli"
      "entPICSAccessTokenResponse.PackageToken\022"
      "\035\n\025package_denied_tokens\030\002 \003(\r\022F\n\021app_ac"
      "cess_tokens\030\003 \003(\0132+.CMsgClientPICSAccess"
      "TokenResponse.AppToken\022\031\n\021app_denied_tok"
      "ens\030\004 \003(\r\0327\n\014PackageToken\022\021\n\tpackageid\030\001"
      " \001(\r\022\024\n\014access_token\030\002 \001(\004\032/\n\010AppToken\022\r"
      "\n\005appid\030\001 \001(\r\022\024\n\014access_token\030\002 \001(\004\"D\n\032C"
      "MsgClientUFSGetUGCDetails\022&\n\010hcontent\030\001 "
      "\001(\006:\02418446744073709551615\"\345\001\n\"CMsgClient"
      "UFSGetUGCDetailsResponse\022\022\n\007eresult\030\001 \001("
      "\005:\0012\022\013\n\003url\030\002 \001(\t\022\016\n\006app_id\030\003 \001(\r\022\020\n\010fil"
      "ename\030\004 \001(\t\022\027\n\017steamid_creator\030\005 \001(\006\022\021\n\t"
      "file_size\030\006 \001(\r\022\034\n\024compressed_file_size\030"
      "\007 \001(\r\022\027\n\017rangecheck_host\030\010 \001(\t\022\031\n\021file_e"
      "ncoded_sha1\030\t \001(\t\"C\n\036CMsgClientUFSGetSin"
      "gleFileInfo\022\016\n\006app_id\030\001 \001(\r\022\021\n\tfile_name"
      "\030\002 \001(\t\"\270\001\n&CMsgClientUFSGetSingleFileInf"
      "oResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\016\n\006app_id\030"
      "\002 \001(\r\022\021\n\tfile_name\030\003 \001(\t\022\020\n\010sha_file\030\004 \001"
      "(\014\022\022\n\ntime_stamp\030\005 \001(\004\022\025\n\rraw_file_size\030"
      "\006 \001(\r\022\032\n\022is_explicit_delete\030\007 \001(\010\";\n\026CMs"
      "gClientUFSShareFile\022\016\n\006app_id\030\001 \001(\r\022\021\n\tf"
      "ile_name\030\002 \001(\t\"\\\n\036CMsgClientUFSShareFile"
      "Response\022\022\n\007eresult\030\001 \001(\005:\0012\022&\n\010hcontent"
      "\030\002 \001(\006:\02418446744073709551615\"3\n\033CMsgClie"
      "ntAMGetClanOfficers\022\024\n\014steamid_clan\030\001 \001("
      "\006\"f\n#CMsgClientAMGetClanOfficersResponse"
      "\022\022\n\007eresult\030\001 \001(\005:\0012\022\024\n\014steamid_clan\030\002 \001"
      "(\006\022\025\n\rofficer_count\030\003 \001(\005\"\220\001\n!CMsgClient"
      "AMGetPersonaNameHistory\022\020\n\010id_count\030\001 \001("
      "\005\022:\n\003Ids\030\002 \003(\0132-.CMsgClientAMGetPersonaN"
      "ameHistory.IdInstance\032\035\n\nIdInstance\022\017\n\007s"
      "teamid\030\001 \001(\006\"\303\002\n)CMsgClientAMGetPersonaN"
      "ameHistoryResponse\022O\n\tresponses\030\002 \003(\0132<."
      "CMsgClientAMGetPersonaNameHistoryRespons"
      "e.NameTableInstance\032\304\001\n\021NameTableInstanc"
      "e\022\022\n\007eresult\030\001 \001(\005:\0012\022\017\n\007steamid\030\002 \001(\006\022X"
      "\n\005names\030\003 \003(\0132I.CMsgClientAMGetPersonaNa"
      "meHistoryResponse.NameTableInstance.Name"
      "Instance\0320\n\014NameInstance\022\022\n\nname_since\030\001"
      " \001(\007\022\014\n\004name\030\002 \001(\t\"E\n\036CMsgClientDeregist"
      "erWithServer\022\023\n\013eservertype\030\001 \001(\r\022\016\n\006app"
      "_id\030\002 \001(\r\"\253\004\n\023CMsgClientClanState\022\024\n\014ste"
      "amid_clan\030\001 \001(\006\022\032\n\022clan_account_flags\030\003 "
      "\001(\r\0220\n\tname_info\030\004 \001(\0132\035.CMsgClientClanS"
      "tate.NameInfo\0224\n\013user_counts\030\005 \001(\0132\037.CMs"
      "gClientClanState.UserCounts\022*\n\006events\030\006 "
      "\003(\0132\032.CMsgClientClanState.Event\0221\n\rannou"
      "ncements\030\007 \003(\0132\032.CMsgClientClanState.Eve"
      "nt\022\031\n\021chat_room_private\030\010 \001(\010\0321\n\010NameInf"
      "o\022\021\n\tclan_name\030\001 \001(\t\022\022\n\nsha_avatar\030\002 \001(\014"
      "\032k\n\nUserCounts\022\017\n\007members\030\001 \001(\r\022\016\n\006onlin"
      "e\030\002 \001(\r\022\020\n\010chatting\030\003 \001(\r\022\017\n\007in_game\030\004 \001"
      "(\r\022\031\n\021chat_room_members\030\005 \001(\r\032`\n\005Event\022\013"
      "\n\003gid\030\001 \001(\006\022\022\n\nevent_time\030\002 \001(\r\022\020\n\010headl"
      "ine\030\003 \001(\t\022\017\n\007game_id\030\004 \001(\006\022\023\n\013just_poste"
      "d\030\005 \001(\010B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 20814);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_clientserver.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5fbase_2eproto::AddDescriptors();
  ::protobuf_encrypted_5fapp_5fticket_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fclientserver_2eproto

// ===================================================================

void CMsgClientUDSP2PSessionStarted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUDSP2PSessionStarted::kSteamidRemoteFieldNumber;
const int CMsgClientUDSP2PSessionStarted::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUDSP2PSessionStarted::CMsgClientUDSP2PSessionStarted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUDSP2PSessionStarted.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUDSP2PSessionStarted)
}
CMsgClientUDSP2PSessionStarted::CMsgClientUDSP2PSessionStarted(const CMsgClientUDSP2PSessionStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_remote_, &from.steamid_remote_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_remote_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUDSP2PSessionStarted)
}

void CMsgClientUDSP2PSessionStarted::SharedCtor() {
  ::memset(&steamid_remote_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&steamid_remote_)) + sizeof(appid_));
}

CMsgClientUDSP2PSessionStarted::~CMsgClientUDSP2PSessionStarted() {
  // @@protoc_insertion_point(destructor:CMsgClientUDSP2PSessionStarted)
  SharedDtor();
}

void CMsgClientUDSP2PSessionStarted::SharedDtor() {
}

void CMsgClientUDSP2PSessionStarted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUDSP2PSessionStarted::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUDSP2PSessionStarted& CMsgClientUDSP2PSessionStarted::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUDSP2PSessionStarted.base);
  return *internal_default_instance();
}


void CMsgClientUDSP2PSessionStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUDSP2PSessionStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_remote_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&steamid_remote_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUDSP2PSessionStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUDSP2PSessionStarted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_remote = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_remote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_remote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUDSP2PSessionStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUDSP2PSessionStarted)
  return false;
#undef DO_
}

void CMsgClientUDSP2PSessionStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUDSP2PSessionStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_remote = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_remote(), output);
  }

  // optional int32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUDSP2PSessionStarted)
}

::google::protobuf::uint8* CMsgClientUDSP2PSessionStarted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUDSP2PSessionStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_remote = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_remote(), target);
  }

  // optional int32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUDSP2PSessionStarted)
  return target;
}

size_t CMsgClientUDSP2PSessionStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUDSP2PSessionStarted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid_remote = 1;
    if (has_steamid_remote()) {
      total_size += 1 + 8;
    }

    // optional int32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUDSP2PSessionStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUDSP2PSessionStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUDSP2PSessionStarted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUDSP2PSessionStarted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUDSP2PSessionStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUDSP2PSessionStarted)
    MergeFrom(*source);
  }
}

void CMsgClientUDSP2PSessionStarted::MergeFrom(const CMsgClientUDSP2PSessionStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUDSP2PSessionStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_remote_ = from.steamid_remote_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUDSP2PSessionStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUDSP2PSessionStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUDSP2PSessionStarted::CopyFrom(const CMsgClientUDSP2PSessionStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUDSP2PSessionStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUDSP2PSessionStarted::IsInitialized() const {
  return true;
}

void CMsgClientUDSP2PSessionStarted::Swap(CMsgClientUDSP2PSessionStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUDSP2PSessionStarted::InternalSwap(CMsgClientUDSP2PSessionStarted* other) {
  using std::swap;
  swap(steamid_remote_, other->steamid_remote_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUDSP2PSessionStarted::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUDSP2PSessionEnded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUDSP2PSessionEnded::kSteamidRemoteFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kAppidFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kSessionLengthSecFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kSessionErrorFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kNattypeFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kBytesRecvFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kBytesSentFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kBytesSentRelayFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kBytesRecvRelayFieldNumber;
const int CMsgClientUDSP2PSessionEnded::kTimeToConnectMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUDSP2PSessionEnded::CMsgClientUDSP2PSessionEnded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUDSP2PSessionEnded.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUDSP2PSessionEnded)
}
CMsgClientUDSP2PSessionEnded::CMsgClientUDSP2PSessionEnded(const CMsgClientUDSP2PSessionEnded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_remote_, &from.steamid_remote_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_to_connect_ms_) -
    reinterpret_cast<char*>(&steamid_remote_)) + sizeof(time_to_connect_ms_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUDSP2PSessionEnded)
}

void CMsgClientUDSP2PSessionEnded::SharedCtor() {
  ::memset(&steamid_remote_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_to_connect_ms_) -
      reinterpret_cast<char*>(&steamid_remote_)) + sizeof(time_to_connect_ms_));
}

CMsgClientUDSP2PSessionEnded::~CMsgClientUDSP2PSessionEnded() {
  // @@protoc_insertion_point(destructor:CMsgClientUDSP2PSessionEnded)
  SharedDtor();
}

void CMsgClientUDSP2PSessionEnded::SharedDtor() {
}

void CMsgClientUDSP2PSessionEnded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUDSP2PSessionEnded::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUDSP2PSessionEnded& CMsgClientUDSP2PSessionEnded::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUDSP2PSessionEnded.base);
  return *internal_default_instance();
}


void CMsgClientUDSP2PSessionEnded::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUDSP2PSessionEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&steamid_remote_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bytes_sent_relay_) -
        reinterpret_cast<char*>(&steamid_remote_)) + sizeof(bytes_sent_relay_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&bytes_recv_relay_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_to_connect_ms_) -
        reinterpret_cast<char*>(&bytes_recv_relay_)) + sizeof(time_to_connect_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUDSP2PSessionEnded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUDSP2PSessionEnded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_remote = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_remote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_remote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 session_length_sec = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_session_length_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_length_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 session_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_session_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nattype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_nattype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nattype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bytes_recv = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_bytes_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytes_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bytes_sent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bytes_sent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytes_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bytes_sent_relay = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_bytes_sent_relay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytes_sent_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bytes_recv_relay = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_bytes_recv_relay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytes_recv_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 time_to_connect_ms = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_time_to_connect_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_to_connect_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUDSP2PSessionEnded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUDSP2PSessionEnded)
  return false;
#undef DO_
}

void CMsgClientUDSP2PSessionEnded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUDSP2PSessionEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_remote = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_remote(), output);
  }

  // optional int32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->appid(), output);
  }

  // optional int32 session_length_sec = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->session_length_sec(), output);
  }

  // optional int32 session_error = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->session_error(), output);
  }

  // optional int32 nattype = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nattype(), output);
  }

  // optional int32 bytes_recv = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->bytes_recv(), output);
  }

  // optional int32 bytes_sent = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bytes_sent(), output);
  }

  // optional int32 bytes_sent_relay = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->bytes_sent_relay(), output);
  }

  // optional int32 bytes_recv_relay = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->bytes_recv_relay(), output);
  }

  // optional int32 time_to_connect_ms = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->time_to_connect_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUDSP2PSessionEnded)
}

::google::protobuf::uint8* CMsgClientUDSP2PSessionEnded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUDSP2PSessionEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_remote = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_remote(), target);
  }

  // optional int32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->appid(), target);
  }

  // optional int32 session_length_sec = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->session_length_sec(), target);
  }

  // optional int32 session_error = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->session_error(), target);
  }

  // optional int32 nattype = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nattype(), target);
  }

  // optional int32 bytes_recv = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->bytes_recv(), target);
  }

  // optional int32 bytes_sent = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bytes_sent(), target);
  }

  // optional int32 bytes_sent_relay = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->bytes_sent_relay(), target);
  }

  // optional int32 bytes_recv_relay = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->bytes_recv_relay(), target);
  }

  // optional int32 time_to_connect_ms = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->time_to_connect_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUDSP2PSessionEnded)
  return target;
}

size_t CMsgClientUDSP2PSessionEnded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUDSP2PSessionEnded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional fixed64 steamid_remote = 1;
    if (has_steamid_remote()) {
      total_size += 1 + 8;
    }

    // optional int32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

    // optional int32 session_length_sec = 3;
    if (has_session_length_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->session_length_sec());
    }

    // optional int32 session_error = 4;
    if (has_session_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->session_error());
    }

    // optional int32 nattype = 5;
    if (has_nattype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nattype());
    }

    // optional int32 bytes_recv = 6;
    if (has_bytes_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bytes_recv());
    }

    // optional int32 bytes_sent = 7;
    if (has_bytes_sent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bytes_sent());
    }

    // optional int32 bytes_sent_relay = 8;
    if (has_bytes_sent_relay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bytes_sent_relay());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 bytes_recv_relay = 9;
    if (has_bytes_recv_relay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bytes_recv_relay());
    }

    // optional int32 time_to_connect_ms = 10;
    if (has_time_to_connect_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_to_connect_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUDSP2PSessionEnded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUDSP2PSessionEnded)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUDSP2PSessionEnded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUDSP2PSessionEnded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUDSP2PSessionEnded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUDSP2PSessionEnded)
    MergeFrom(*source);
  }
}

void CMsgClientUDSP2PSessionEnded::MergeFrom(const CMsgClientUDSP2PSessionEnded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUDSP2PSessionEnded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_remote_ = from.steamid_remote_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      session_length_sec_ = from.session_length_sec_;
    }
    if (cached_has_bits & 0x00000008u) {
      session_error_ = from.session_error_;
    }
    if (cached_has_bits & 0x00000010u) {
      nattype_ = from.nattype_;
    }
    if (cached_has_bits & 0x00000020u) {
      bytes_recv_ = from.bytes_recv_;
    }
    if (cached_has_bits & 0x00000040u) {
      bytes_sent_ = from.bytes_sent_;
    }
    if (cached_has_bits & 0x00000080u) {
      bytes_sent_relay_ = from.bytes_sent_relay_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      bytes_recv_relay_ = from.bytes_recv_relay_;
    }
    if (cached_has_bits & 0x00000200u) {
      time_to_connect_ms_ = from.time_to_connect_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUDSP2PSessionEnded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUDSP2PSessionEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUDSP2PSessionEnded::CopyFrom(const CMsgClientUDSP2PSessionEnded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUDSP2PSessionEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUDSP2PSessionEnded::IsInitialized() const {
  return true;
}

void CMsgClientUDSP2PSessionEnded::Swap(CMsgClientUDSP2PSessionEnded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUDSP2PSessionEnded::InternalSwap(CMsgClientUDSP2PSessionEnded* other) {
  using std::swap;
  swap(steamid_remote_, other->steamid_remote_);
  swap(appid_, other->appid_);
  swap(session_length_sec_, other->session_length_sec_);
  swap(session_error_, other->session_error_);
  swap(nattype_, other->nattype_);
  swap(bytes_recv_, other->bytes_recv_);
  swap(bytes_sent_, other->bytes_sent_);
  swap(bytes_sent_relay_, other->bytes_sent_relay_);
  swap(bytes_recv_relay_, other->bytes_recv_relay_);
  swap(time_to_connect_ms_, other->time_to_connect_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUDSP2PSessionEnded::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterAuthTicketWithCM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterAuthTicketWithCM::kProtocolVersionFieldNumber;
const int CMsgClientRegisterAuthTicketWithCM::kTicketFieldNumber;
const int CMsgClientRegisterAuthTicketWithCM::kClientInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterAuthTicketWithCM::CMsgClientRegisterAuthTicketWithCM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRegisterAuthTicketWithCM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRegisterAuthTicketWithCM)
}
CMsgClientRegisterAuthTicketWithCM::CMsgClientRegisterAuthTicketWithCM(const CMsgClientRegisterAuthTicketWithCM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ticket()) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  ::memcpy(&client_instance_id_, &from.client_instance_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&protocol_version_) -
    reinterpret_cast<char*>(&client_instance_id_)) + sizeof(protocol_version_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRegisterAuthTicketWithCM)
}

void CMsgClientRegisterAuthTicketWithCM::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_instance_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_version_) -
      reinterpret_cast<char*>(&client_instance_id_)) + sizeof(protocol_version_));
}

CMsgClientRegisterAuthTicketWithCM::~CMsgClientRegisterAuthTicketWithCM() {
  // @@protoc_insertion_point(destructor:CMsgClientRegisterAuthTicketWithCM)
  SharedDtor();
}

void CMsgClientRegisterAuthTicketWithCM::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterAuthTicketWithCM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRegisterAuthTicketWithCM::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterAuthTicketWithCM& CMsgClientRegisterAuthTicketWithCM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRegisterAuthTicketWithCM.base);
  return *internal_default_instance();
}


void CMsgClientRegisterAuthTicketWithCM::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRegisterAuthTicketWithCM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ticket_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&client_instance_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&protocol_version_) -
        reinterpret_cast<char*>(&client_instance_id_)) + sizeof(protocol_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterAuthTicketWithCM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRegisterAuthTicketWithCM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_protocol_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ticket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ticket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 client_instance_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_client_instance_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRegisterAuthTicketWithCM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRegisterAuthTicketWithCM)
  return false;
#undef DO_
}

void CMsgClientRegisterAuthTicketWithCM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRegisterAuthTicketWithCM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 protocol_version = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  // optional bytes ticket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ticket(), output);
  }

  // optional uint64 client_instance_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->client_instance_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRegisterAuthTicketWithCM)
}

::google::protobuf::uint8* CMsgClientRegisterAuthTicketWithCM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRegisterAuthTicketWithCM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 protocol_version = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->protocol_version(), target);
  }

  // optional bytes ticket = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ticket(), target);
  }

  // optional uint64 client_instance_id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->client_instance_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRegisterAuthTicketWithCM)
  return target;
}

size_t CMsgClientRegisterAuthTicketWithCM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRegisterAuthTicketWithCM)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes ticket = 3;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ticket());
    }

    // optional uint64 client_instance_id = 4;
    if (has_client_instance_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->client_instance_id());
    }

    // optional uint32 protocol_version = 1;
    if (has_protocol_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protocol_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterAuthTicketWithCM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRegisterAuthTicketWithCM)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterAuthTicketWithCM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterAuthTicketWithCM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRegisterAuthTicketWithCM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRegisterAuthTicketWithCM)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterAuthTicketWithCM::MergeFrom(const CMsgClientRegisterAuthTicketWithCM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRegisterAuthTicketWithCM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ticket();
      ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      client_instance_id_ = from.client_instance_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      protocol_version_ = from.protocol_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRegisterAuthTicketWithCM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRegisterAuthTicketWithCM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterAuthTicketWithCM::CopyFrom(const CMsgClientRegisterAuthTicketWithCM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRegisterAuthTicketWithCM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterAuthTicketWithCM::IsInitialized() const {
  return true;
}

void CMsgClientRegisterAuthTicketWithCM::Swap(CMsgClientRegisterAuthTicketWithCM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterAuthTicketWithCM::InternalSwap(CMsgClientRegisterAuthTicketWithCM* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_instance_id_, other->client_instance_id_);
  swap(protocol_version_, other->protocol_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRegisterAuthTicketWithCM::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientTicketAuthComplete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientTicketAuthComplete::kSteamIdFieldNumber;
const int CMsgClientTicketAuthComplete::kGameIdFieldNumber;
const int CMsgClientTicketAuthComplete::kEstateFieldNumber;
const int CMsgClientTicketAuthComplete::kEauthSessionResponseFieldNumber;
const int CMsgClientTicketAuthComplete::kDEPRECATEDTicketFieldNumber;
const int CMsgClientTicketAuthComplete::kTicketCrcFieldNumber;
const int CMsgClientTicketAuthComplete::kTicketSequenceFieldNumber;
const int CMsgClientTicketAuthComplete::kOwnerSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientTicketAuthComplete::CMsgClientTicketAuthComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientTicketAuthComplete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientTicketAuthComplete)
}
CMsgClientTicketAuthComplete::CMsgClientTicketAuthComplete(const CMsgClientTicketAuthComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deprecated_ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deprecated_ticket()) {
    deprecated_ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deprecated_ticket_);
  }
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_steam_id_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(owner_steam_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientTicketAuthComplete)
}

void CMsgClientTicketAuthComplete::SharedCtor() {
  deprecated_ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_steam_id_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(owner_steam_id_));
}

CMsgClientTicketAuthComplete::~CMsgClientTicketAuthComplete() {
  // @@protoc_insertion_point(destructor:CMsgClientTicketAuthComplete)
  SharedDtor();
}

void CMsgClientTicketAuthComplete::SharedDtor() {
  deprecated_ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientTicketAuthComplete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientTicketAuthComplete::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientTicketAuthComplete& CMsgClientTicketAuthComplete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientTicketAuthComplete.base);
  return *internal_default_instance();
}


void CMsgClientTicketAuthComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientTicketAuthComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    deprecated_ticket_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_steam_id_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(owner_steam_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientTicketAuthComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientTicketAuthComplete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 estate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_estate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &estate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eauth_session_response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_eauth_session_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eauth_session_response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes DEPRECATED_ticket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deprecated_ticket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ticket_crc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ticket_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ticket_sequence = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_ticket_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 owner_steam_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_owner_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &owner_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientTicketAuthComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientTicketAuthComplete)
  return false;
#undef DO_
}

void CMsgClientTicketAuthComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientTicketAuthComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // optional uint32 estate = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->estate(), output);
  }

  // optional uint32 eauth_session_response = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->eauth_session_response(), output);
  }

  // optional bytes DEPRECATED_ticket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->deprecated_ticket(), output);
  }

  // optional uint32 ticket_crc = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ticket_crc(), output);
  }

  // optional uint32 ticket_sequence = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ticket_sequence(), output);
  }

  // optional fixed64 owner_steam_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->owner_steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientTicketAuthComplete)
}

::google::protobuf::uint8* CMsgClientTicketAuthComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientTicketAuthComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // optional uint32 estate = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->estate(), target);
  }

  // optional uint32 eauth_session_response = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->eauth_session_response(), target);
  }

  // optional bytes DEPRECATED_ticket = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->deprecated_ticket(), target);
  }

  // optional uint32 ticket_crc = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ticket_crc(), target);
  }

  // optional uint32 ticket_sequence = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ticket_sequence(), target);
  }

  // optional fixed64 owner_steam_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->owner_steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientTicketAuthComplete)
  return target;
}

size_t CMsgClientTicketAuthComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientTicketAuthComplete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes DEPRECATED_ticket = 5;
    if (has_deprecated_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->deprecated_ticket());
    }

    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 estate = 3;
    if (has_estate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->estate());
    }

    // optional uint32 eauth_session_response = 4;
    if (has_eauth_session_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eauth_session_response());
    }

    // optional uint32 ticket_crc = 6;
    if (has_ticket_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket_crc());
    }

    // optional uint32 ticket_sequence = 7;
    if (has_ticket_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket_sequence());
    }

    // optional fixed64 owner_steam_id = 8;
    if (has_owner_steam_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientTicketAuthComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientTicketAuthComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientTicketAuthComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientTicketAuthComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientTicketAuthComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientTicketAuthComplete)
    MergeFrom(*source);
  }
}

void CMsgClientTicketAuthComplete::MergeFrom(const CMsgClientTicketAuthComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientTicketAuthComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_deprecated_ticket();
      deprecated_ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deprecated_ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      estate_ = from.estate_;
    }
    if (cached_has_bits & 0x00000010u) {
      eauth_session_response_ = from.eauth_session_response_;
    }
    if (cached_has_bits & 0x00000020u) {
      ticket_crc_ = from.ticket_crc_;
    }
    if (cached_has_bits & 0x00000040u) {
      ticket_sequence_ = from.ticket_sequence_;
    }
    if (cached_has_bits & 0x00000080u) {
      owner_steam_id_ = from.owner_steam_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientTicketAuthComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientTicketAuthComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientTicketAuthComplete::CopyFrom(const CMsgClientTicketAuthComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientTicketAuthComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientTicketAuthComplete::IsInitialized() const {
  return true;
}

void CMsgClientTicketAuthComplete::Swap(CMsgClientTicketAuthComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientTicketAuthComplete::InternalSwap(CMsgClientTicketAuthComplete* other) {
  using std::swap;
  deprecated_ticket_.Swap(&other->deprecated_ticket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(game_id_, other->game_id_);
  swap(estate_, other->estate_);
  swap(eauth_session_response_, other->eauth_session_response_);
  swap(ticket_crc_, other->ticket_crc_);
  swap(ticket_sequence_, other->ticket_sequence_);
  swap(owner_steam_id_, other->owner_steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientTicketAuthComplete::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCMList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCMList::kCmAddressesFieldNumber;
const int CMsgClientCMList::kCmPortsFieldNumber;
const int CMsgClientCMList::kCmWebsocketAddressesFieldNumber;
const int CMsgClientCMList::kPercentDefaultToWebsocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCMList::CMsgClientCMList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientCMList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCMList)
}
CMsgClientCMList::CMsgClientCMList(const CMsgClientCMList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cm_addresses_(from.cm_addresses_),
      cm_ports_(from.cm_ports_),
      cm_websocket_addresses_(from.cm_websocket_addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  percent_default_to_websocket_ = from.percent_default_to_websocket_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientCMList)
}

void CMsgClientCMList::SharedCtor() {
  percent_default_to_websocket_ = 0u;
}

CMsgClientCMList::~CMsgClientCMList() {
  // @@protoc_insertion_point(destructor:CMsgClientCMList)
  SharedDtor();
}

void CMsgClientCMList::SharedDtor() {
}

void CMsgClientCMList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCMList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCMList& CMsgClientCMList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientCMList.base);
  return *internal_default_instance();
}


void CMsgClientCMList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCMList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cm_addresses_.Clear();
  cm_ports_.Clear();
  cm_websocket_addresses_.Clear();
  percent_default_to_websocket_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCMList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCMList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 cm_addresses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_cm_addresses())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cm_addresses())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 cm_ports = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_cm_ports())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cm_ports())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cm_websocket_addresses = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cm_websocket_addresses()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cm_websocket_addresses(this->cm_websocket_addresses_size() - 1).data(),
            static_cast<int>(this->cm_websocket_addresses(this->cm_websocket_addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientCMList.cm_websocket_addresses");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 percent_default_to_websocket = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_percent_default_to_websocket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &percent_default_to_websocket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCMList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCMList)
  return false;
#undef DO_
}

void CMsgClientCMList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCMList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 cm_addresses = 1;
  for (int i = 0, n = this->cm_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->cm_addresses(i), output);
  }

  // repeated uint32 cm_ports = 2;
  for (int i = 0, n = this->cm_ports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->cm_ports(i), output);
  }

  // repeated string cm_websocket_addresses = 3;
  for (int i = 0, n = this->cm_websocket_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cm_websocket_addresses(i).data(), static_cast<int>(this->cm_websocket_addresses(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCMList.cm_websocket_addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->cm_websocket_addresses(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 percent_default_to_websocket = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->percent_default_to_websocket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCMList)
}

::google::protobuf::uint8* CMsgClientCMList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCMList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 cm_addresses = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->cm_addresses_, target);

  // repeated uint32 cm_ports = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->cm_ports_, target);

  // repeated string cm_websocket_addresses = 3;
  for (int i = 0, n = this->cm_websocket_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cm_websocket_addresses(i).data(), static_cast<int>(this->cm_websocket_addresses(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCMList.cm_websocket_addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->cm_websocket_addresses(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 percent_default_to_websocket = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->percent_default_to_websocket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCMList)
  return target;
}

size_t CMsgClientCMList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCMList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 cm_addresses = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cm_addresses_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cm_addresses_size());
    total_size += data_size;
  }

  // repeated uint32 cm_ports = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cm_ports_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cm_ports_size());
    total_size += data_size;
  }

  // repeated string cm_websocket_addresses = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cm_websocket_addresses_size());
  for (int i = 0, n = this->cm_websocket_addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cm_websocket_addresses(i));
  }

  // optional uint32 percent_default_to_websocket = 4;
  if (has_percent_default_to_websocket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->percent_default_to_websocket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCMList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCMList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCMList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCMList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCMList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCMList)
    MergeFrom(*source);
  }
}

void CMsgClientCMList::MergeFrom(const CMsgClientCMList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCMList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cm_addresses_.MergeFrom(from.cm_addresses_);
  cm_ports_.MergeFrom(from.cm_ports_);
  cm_websocket_addresses_.MergeFrom(from.cm_websocket_addresses_);
  if (from.has_percent_default_to_websocket()) {
    set_percent_default_to_websocket(from.percent_default_to_websocket());
  }
}

void CMsgClientCMList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCMList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCMList::CopyFrom(const CMsgClientCMList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCMList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCMList::IsInitialized() const {
  return true;
}

void CMsgClientCMList::Swap(CMsgClientCMList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCMList::InternalSwap(CMsgClientCMList* other) {
  using std::swap;
  cm_addresses_.InternalSwap(&other->cm_addresses_);
  cm_ports_.InternalSwap(&other->cm_ports_);
  cm_websocket_addresses_.InternalSwap(CastToBase(&other->cm_websocket_addresses_));
  swap(percent_default_to_websocket_, other->percent_default_to_websocket_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCMList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientP2PConnectionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientP2PConnectionInfo::kSteamIdDestFieldNumber;
const int CMsgClientP2PConnectionInfo::kSteamIdSrcFieldNumber;
const int CMsgClientP2PConnectionInfo::kAppIdFieldNumber;
const int CMsgClientP2PConnectionInfo::kCandidateFieldNumber;
const int CMsgClientP2PConnectionInfo::kConnectionIdSrcFieldNumber;
const int CMsgClientP2PConnectionInfo::kRendezvousFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientP2PConnectionInfo::CMsgClientP2PConnectionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientP2PConnectionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientP2PConnectionInfo)
}
CMsgClientP2PConnectionInfo::CMsgClientP2PConnectionInfo(const CMsgClientP2PConnectionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  candidate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_candidate()) {
    candidate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_);
  }
  rendezvous_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rendezvous()) {
    rendezvous_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rendezvous_);
  }
  ::memcpy(&steam_id_dest_, &from.steam_id_dest_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientP2PConnectionInfo)
}

void CMsgClientP2PConnectionInfo::SharedCtor() {
  candidate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rendezvous_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_dest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(app_id_));
}

CMsgClientP2PConnectionInfo::~CMsgClientP2PConnectionInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientP2PConnectionInfo)
  SharedDtor();
}

void CMsgClientP2PConnectionInfo::SharedDtor() {
  candidate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rendezvous_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientP2PConnectionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientP2PConnectionInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientP2PConnectionInfo& CMsgClientP2PConnectionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientP2PConnectionInfo.base);
  return *internal_default_instance();
}


void CMsgClientP2PConnectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientP2PConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      candidate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      rendezvous_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&steam_id_dest_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientP2PConnectionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientP2PConnectionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_dest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_dest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_src();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes candidate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 connection_id_src = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_connection_id_src();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &connection_id_src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rendezvous = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rendezvous()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientP2PConnectionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientP2PConnectionInfo)
  return false;
#undef DO_
}

void CMsgClientP2PConnectionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientP2PConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_dest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_dest(), output);
  }

  // optional fixed64 steam_id_src = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_src(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  // optional bytes candidate = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->candidate(), output);
  }

  // optional fixed64 connection_id_src = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->connection_id_src(), output);
  }

  // optional bytes rendezvous = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->rendezvous(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientP2PConnectionInfo)
}

::google::protobuf::uint8* CMsgClientP2PConnectionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientP2PConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_dest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_dest(), target);
  }

  // optional fixed64 steam_id_src = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_src(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  // optional bytes candidate = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->candidate(), target);
  }

  // optional fixed64 connection_id_src = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->connection_id_src(), target);
  }

  // optional bytes rendezvous = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->rendezvous(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientP2PConnectionInfo)
  return target;
}

size_t CMsgClientP2PConnectionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientP2PConnectionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes candidate = 4;
    if (has_candidate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->candidate());
    }

    // optional bytes rendezvous = 6;
    if (has_rendezvous()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rendezvous());
    }

    // optional fixed64 steam_id_dest = 1;
    if (has_steam_id_dest()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_src = 2;
    if (has_steam_id_src()) {
      total_size += 1 + 8;
    }

    // optional fixed64 connection_id_src = 5;
    if (has_connection_id_src()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientP2PConnectionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientP2PConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientP2PConnectionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientP2PConnectionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientP2PConnectionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientP2PConnectionInfo)
    MergeFrom(*source);
  }
}

void CMsgClientP2PConnectionInfo::MergeFrom(const CMsgClientP2PConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientP2PConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_candidate();
      candidate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rendezvous();
      rendezvous_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rendezvous_);
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_dest_ = from.steam_id_dest_;
    }
    if (cached_has_bits & 0x00000008u) {
      steam_id_src_ = from.steam_id_src_;
    }
    if (cached_has_bits & 0x00000010u) {
      connection_id_src_ = from.connection_id_src_;
    }
    if (cached_has_bits & 0x00000020u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientP2PConnectionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientP2PConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientP2PConnectionInfo::CopyFrom(const CMsgClientP2PConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientP2PConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientP2PConnectionInfo::IsInitialized() const {
  return true;
}

void CMsgClientP2PConnectionInfo::Swap(CMsgClientP2PConnectionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientP2PConnectionInfo::InternalSwap(CMsgClientP2PConnectionInfo* other) {
  using std::swap;
  candidate_.Swap(&other->candidate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rendezvous_.Swap(&other->rendezvous_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_dest_, other->steam_id_dest_);
  swap(steam_id_src_, other->steam_id_src_);
  swap(connection_id_src_, other->connection_id_src_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientP2PConnectionInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientP2PConnectionFailInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientP2PConnectionFailInfo::kSteamIdDestFieldNumber;
const int CMsgClientP2PConnectionFailInfo::kSteamIdSrcFieldNumber;
const int CMsgClientP2PConnectionFailInfo::kAppIdFieldNumber;
const int CMsgClientP2PConnectionFailInfo::kEp2PSessionErrorFieldNumber;
const int CMsgClientP2PConnectionFailInfo::kConnectionIdDestFieldNumber;
const int CMsgClientP2PConnectionFailInfo::kCloseReasonFieldNumber;
const int CMsgClientP2PConnectionFailInfo::kCloseMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientP2PConnectionFailInfo::CMsgClientP2PConnectionFailInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientP2PConnectionFailInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientP2PConnectionFailInfo)
}
CMsgClientP2PConnectionFailInfo::CMsgClientP2PConnectionFailInfo(const CMsgClientP2PConnectionFailInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  close_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_close_message()) {
    close_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_message_);
  }
  ::memcpy(&steam_id_dest_, &from.steam_id_dest_,
    static_cast<size_t>(reinterpret_cast<char*>(&close_reason_) -
    reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(close_reason_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientP2PConnectionFailInfo)
}

void CMsgClientP2PConnectionFailInfo::SharedCtor() {
  close_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_dest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&close_reason_) -
      reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(close_reason_));
}

CMsgClientP2PConnectionFailInfo::~CMsgClientP2PConnectionFailInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientP2PConnectionFailInfo)
  SharedDtor();
}

void CMsgClientP2PConnectionFailInfo::SharedDtor() {
  close_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientP2PConnectionFailInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientP2PConnectionFailInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientP2PConnectionFailInfo& CMsgClientP2PConnectionFailInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientP2PConnectionFailInfo.base);
  return *internal_default_instance();
}


void CMsgClientP2PConnectionFailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientP2PConnectionFailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    close_message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&steam_id_dest_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&close_reason_) -
        reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(close_reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientP2PConnectionFailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientP2PConnectionFailInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_dest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_dest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_src();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ep2p_session_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ep2p_session_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ep2p_session_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 connection_id_dest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_connection_id_dest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &connection_id_dest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 close_reason = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_close_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &close_reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string close_message = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_close_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->close_message().data(), static_cast<int>(this->close_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientP2PConnectionFailInfo.close_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientP2PConnectionFailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientP2PConnectionFailInfo)
  return false;
#undef DO_
}

void CMsgClientP2PConnectionFailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientP2PConnectionFailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_dest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_dest(), output);
  }

  // optional fixed64 steam_id_src = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_src(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  // optional uint32 ep2p_session_error = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ep2p_session_error(), output);
  }

  // optional fixed64 connection_id_dest = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->connection_id_dest(), output);
  }

  // optional uint32 close_reason = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->close_reason(), output);
  }

  // optional string close_message = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->close_message().data(), static_cast<int>(this->close_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientP2PConnectionFailInfo.close_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->close_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientP2PConnectionFailInfo)
}

::google::protobuf::uint8* CMsgClientP2PConnectionFailInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientP2PConnectionFailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_dest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_dest(), target);
  }

  // optional fixed64 steam_id_src = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_src(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  // optional uint32 ep2p_session_error = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ep2p_session_error(), target);
  }

  // optional fixed64 connection_id_dest = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->connection_id_dest(), target);
  }

  // optional uint32 close_reason = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->close_reason(), target);
  }

  // optional string close_message = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->close_message().data(), static_cast<int>(this->close_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientP2PConnectionFailInfo.close_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->close_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientP2PConnectionFailInfo)
  return target;
}

size_t CMsgClientP2PConnectionFailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientP2PConnectionFailInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string close_message = 8;
    if (has_close_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->close_message());
    }

    // optional fixed64 steam_id_dest = 1;
    if (has_steam_id_dest()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_src = 2;
    if (has_steam_id_src()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 ep2p_session_error = 4;
    if (has_ep2p_session_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ep2p_session_error());
    }

    // optional fixed64 connection_id_dest = 5;
    if (has_connection_id_dest()) {
      total_size += 1 + 8;
    }

    // optional uint32 close_reason = 7;
    if (has_close_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->close_reason());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientP2PConnectionFailInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientP2PConnectionFailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientP2PConnectionFailInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientP2PConnectionFailInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientP2PConnectionFailInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientP2PConnectionFailInfo)
    MergeFrom(*source);
  }
}

void CMsgClientP2PConnectionFailInfo::MergeFrom(const CMsgClientP2PConnectionFailInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientP2PConnectionFailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_close_message();
      close_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_dest_ = from.steam_id_dest_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_src_ = from.steam_id_src_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      ep2p_session_error_ = from.ep2p_session_error_;
    }
    if (cached_has_bits & 0x00000020u) {
      connection_id_dest_ = from.connection_id_dest_;
    }
    if (cached_has_bits & 0x00000040u) {
      close_reason_ = from.close_reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientP2PConnectionFailInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientP2PConnectionFailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientP2PConnectionFailInfo::CopyFrom(const CMsgClientP2PConnectionFailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientP2PConnectionFailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientP2PConnectionFailInfo::IsInitialized() const {
  return true;
}

void CMsgClientP2PConnectionFailInfo::Swap(CMsgClientP2PConnectionFailInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientP2PConnectionFailInfo::InternalSwap(CMsgClientP2PConnectionFailInfo* other) {
  using std::swap;
  close_message_.Swap(&other->close_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_dest_, other->steam_id_dest_);
  swap(steam_id_src_, other->steam_id_src_);
  swap(app_id_, other->app_id_);
  swap(ep2p_session_error_, other->ep2p_session_error_);
  swap(connection_id_dest_, other->connection_id_dest_);
  swap(close_reason_, other->close_reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientP2PConnectionFailInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientNetworkingCertRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientNetworkingCertRequest::kKeyDataFieldNumber;
const int CMsgClientNetworkingCertRequest::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientNetworkingCertRequest::CMsgClientNetworkingCertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientNetworkingCertRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientNetworkingCertRequest)
}
CMsgClientNetworkingCertRequest::CMsgClientNetworkingCertRequest(const CMsgClientNetworkingCertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key_data()) {
    key_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_data_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientNetworkingCertRequest)
}

void CMsgClientNetworkingCertRequest::SharedCtor() {
  key_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientNetworkingCertRequest::~CMsgClientNetworkingCertRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientNetworkingCertRequest)
  SharedDtor();
}

void CMsgClientNetworkingCertRequest::SharedDtor() {
  key_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientNetworkingCertRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientNetworkingCertRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientNetworkingCertRequest& CMsgClientNetworkingCertRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientNetworkingCertRequest.base);
  return *internal_default_instance();
}


void CMsgClientNetworkingCertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientNetworkingCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_data_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientNetworkingCertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientNetworkingCertRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientNetworkingCertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientNetworkingCertRequest)
  return false;
#undef DO_
}

void CMsgClientNetworkingCertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientNetworkingCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key_data(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientNetworkingCertRequest)
}

::google::protobuf::uint8* CMsgClientNetworkingCertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientNetworkingCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key_data(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientNetworkingCertRequest)
  return target;
}

size_t CMsgClientNetworkingCertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientNetworkingCertRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key_data = 2;
    if (has_key_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key_data());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientNetworkingCertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientNetworkingCertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientNetworkingCertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientNetworkingCertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientNetworkingCertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientNetworkingCertRequest)
    MergeFrom(*source);
  }
}

void CMsgClientNetworkingCertRequest::MergeFrom(const CMsgClientNetworkingCertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientNetworkingCertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key_data();
      key_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientNetworkingCertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientNetworkingCertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientNetworkingCertRequest::CopyFrom(const CMsgClientNetworkingCertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientNetworkingCertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientNetworkingCertRequest::IsInitialized() const {
  return true;
}

void CMsgClientNetworkingCertRequest::Swap(CMsgClientNetworkingCertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientNetworkingCertRequest::InternalSwap(CMsgClientNetworkingCertRequest* other) {
  using std::swap;
  key_data_.Swap(&other->key_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientNetworkingCertRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientNetworkingCertReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientNetworkingCertReply::kCertFieldNumber;
const int CMsgClientNetworkingCertReply::kCaKeyIdFieldNumber;
const int CMsgClientNetworkingCertReply::kCaSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientNetworkingCertReply::CMsgClientNetworkingCertReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientNetworkingCertReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientNetworkingCertReply)
}
CMsgClientNetworkingCertReply::CMsgClientNetworkingCertReply(const CMsgClientNetworkingCertReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cert()) {
    cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cert_);
  }
  ca_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ca_signature()) {
    ca_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ca_signature_);
  }
  ca_key_id_ = from.ca_key_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientNetworkingCertReply)
}

void CMsgClientNetworkingCertReply::SharedCtor() {
  cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ca_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ca_key_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientNetworkingCertReply::~CMsgClientNetworkingCertReply() {
  // @@protoc_insertion_point(destructor:CMsgClientNetworkingCertReply)
  SharedDtor();
}

void CMsgClientNetworkingCertReply::SharedDtor() {
  cert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ca_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientNetworkingCertReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientNetworkingCertReply::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientNetworkingCertReply& CMsgClientNetworkingCertReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientNetworkingCertReply.base);
  return *internal_default_instance();
}


void CMsgClientNetworkingCertReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientNetworkingCertReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cert_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ca_signature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ca_key_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientNetworkingCertReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientNetworkingCertReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes cert = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 ca_key_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_ca_key_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &ca_key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ca_signature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ca_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientNetworkingCertReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientNetworkingCertReply)
  return false;
#undef DO_
}

void CMsgClientNetworkingCertReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientNetworkingCertReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cert = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->cert(), output);
  }

  // optional fixed64 ca_key_id = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->ca_key_id(), output);
  }

  // optional bytes ca_signature = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->ca_signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientNetworkingCertReply)
}

::google::protobuf::uint8* CMsgClientNetworkingCertReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientNetworkingCertReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cert = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->cert(), target);
  }

  // optional fixed64 ca_key_id = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->ca_key_id(), target);
  }

  // optional bytes ca_signature = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->ca_signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientNetworkingCertReply)
  return target;
}

size_t CMsgClientNetworkingCertReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientNetworkingCertReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes cert = 4;
    if (has_cert()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cert());
    }

    // optional bytes ca_signature = 6;
    if (has_ca_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ca_signature());
    }

    // optional fixed64 ca_key_id = 5;
    if (has_ca_key_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientNetworkingCertReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientNetworkingCertReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientNetworkingCertReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientNetworkingCertReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientNetworkingCertReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientNetworkingCertReply)
    MergeFrom(*source);
  }
}

void CMsgClientNetworkingCertReply::MergeFrom(const CMsgClientNetworkingCertReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientNetworkingCertReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cert();
      cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cert_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ca_signature();
      ca_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ca_signature_);
    }
    if (cached_has_bits & 0x00000004u) {
      ca_key_id_ = from.ca_key_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientNetworkingCertReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientNetworkingCertReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientNetworkingCertReply::CopyFrom(const CMsgClientNetworkingCertReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientNetworkingCertReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientNetworkingCertReply::IsInitialized() const {
  return true;
}

void CMsgClientNetworkingCertReply::Swap(CMsgClientNetworkingCertReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientNetworkingCertReply::InternalSwap(CMsgClientNetworkingCertReply* other) {
  using std::swap;
  cert_.Swap(&other->cert_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ca_signature_.Swap(&other->ca_signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ca_key_id_, other->ca_key_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientNetworkingCertReply::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAppOwnershipTicket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAppOwnershipTicket::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAppOwnershipTicket::CMsgClientGetAppOwnershipTicket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetAppOwnershipTicket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetAppOwnershipTicket)
}
CMsgClientGetAppOwnershipTicket::CMsgClientGetAppOwnershipTicket(const CMsgClientGetAppOwnershipTicket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetAppOwnershipTicket)
}

void CMsgClientGetAppOwnershipTicket::SharedCtor() {
  app_id_ = 0u;
}

CMsgClientGetAppOwnershipTicket::~CMsgClientGetAppOwnershipTicket() {
  // @@protoc_insertion_point(destructor:CMsgClientGetAppOwnershipTicket)
  SharedDtor();
}

void CMsgClientGetAppOwnershipTicket::SharedDtor() {
}

void CMsgClientGetAppOwnershipTicket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetAppOwnershipTicket::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAppOwnershipTicket& CMsgClientGetAppOwnershipTicket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetAppOwnershipTicket.base);
  return *internal_default_instance();
}


void CMsgClientGetAppOwnershipTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetAppOwnershipTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAppOwnershipTicket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetAppOwnershipTicket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetAppOwnershipTicket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetAppOwnershipTicket)
  return false;
#undef DO_
}

void CMsgClientGetAppOwnershipTicket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetAppOwnershipTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetAppOwnershipTicket)
}

::google::protobuf::uint8* CMsgClientGetAppOwnershipTicket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetAppOwnershipTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetAppOwnershipTicket)
  return target;
}

size_t CMsgClientGetAppOwnershipTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetAppOwnershipTicket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAppOwnershipTicket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetAppOwnershipTicket)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAppOwnershipTicket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAppOwnershipTicket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetAppOwnershipTicket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetAppOwnershipTicket)
    MergeFrom(*source);
  }
}

void CMsgClientGetAppOwnershipTicket::MergeFrom(const CMsgClientGetAppOwnershipTicket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetAppOwnershipTicket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app_id()) {
    set_app_id(from.app_id());
  }
}

void CMsgClientGetAppOwnershipTicket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetAppOwnershipTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAppOwnershipTicket::CopyFrom(const CMsgClientGetAppOwnershipTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetAppOwnershipTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAppOwnershipTicket::IsInitialized() const {
  return true;
}

void CMsgClientGetAppOwnershipTicket::Swap(CMsgClientGetAppOwnershipTicket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAppOwnershipTicket::InternalSwap(CMsgClientGetAppOwnershipTicket* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetAppOwnershipTicket::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAppOwnershipTicketResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAppOwnershipTicketResponse::kEresultFieldNumber;
const int CMsgClientGetAppOwnershipTicketResponse::kAppIdFieldNumber;
const int CMsgClientGetAppOwnershipTicketResponse::kTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAppOwnershipTicketResponse::CMsgClientGetAppOwnershipTicketResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetAppOwnershipTicketResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetAppOwnershipTicketResponse)
}
CMsgClientGetAppOwnershipTicketResponse::CMsgClientGetAppOwnershipTicketResponse(const CMsgClientGetAppOwnershipTicketResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ticket()) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetAppOwnershipTicketResponse)
}

void CMsgClientGetAppOwnershipTicketResponse::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  eresult_ = 2u;
}

CMsgClientGetAppOwnershipTicketResponse::~CMsgClientGetAppOwnershipTicketResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetAppOwnershipTicketResponse)
  SharedDtor();
}

void CMsgClientGetAppOwnershipTicketResponse::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetAppOwnershipTicketResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetAppOwnershipTicketResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAppOwnershipTicketResponse& CMsgClientGetAppOwnershipTicketResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetAppOwnershipTicketResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetAppOwnershipTicketResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetAppOwnershipTicketResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ticket_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    app_id_ = 0u;
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAppOwnershipTicketResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetAppOwnershipTicketResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ticket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ticket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetAppOwnershipTicketResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetAppOwnershipTicketResponse)
  return false;
#undef DO_
}

void CMsgClientGetAppOwnershipTicketResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetAppOwnershipTicketResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional bytes ticket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetAppOwnershipTicketResponse)
}

::google::protobuf::uint8* CMsgClientGetAppOwnershipTicketResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetAppOwnershipTicketResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional bytes ticket = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetAppOwnershipTicketResponse)
  return target;
}

size_t CMsgClientGetAppOwnershipTicketResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetAppOwnershipTicketResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes ticket = 3;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ticket());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAppOwnershipTicketResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetAppOwnershipTicketResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAppOwnershipTicketResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAppOwnershipTicketResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetAppOwnershipTicketResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetAppOwnershipTicketResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetAppOwnershipTicketResponse::MergeFrom(const CMsgClientGetAppOwnershipTicketResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetAppOwnershipTicketResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ticket();
      ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetAppOwnershipTicketResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetAppOwnershipTicketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAppOwnershipTicketResponse::CopyFrom(const CMsgClientGetAppOwnershipTicketResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetAppOwnershipTicketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAppOwnershipTicketResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetAppOwnershipTicketResponse::Swap(CMsgClientGetAppOwnershipTicketResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAppOwnershipTicketResponse::InternalSwap(CMsgClientGetAppOwnershipTicketResponse* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetAppOwnershipTicketResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSessionToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSessionToken::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSessionToken::CMsgClientSessionToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientSessionToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSessionToken)
}
CMsgClientSessionToken::CMsgClientSessionToken(const CMsgClientSessionToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_ = from.token_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientSessionToken)
}

void CMsgClientSessionToken::SharedCtor() {
  token_ = GOOGLE_ULONGLONG(0);
}

CMsgClientSessionToken::~CMsgClientSessionToken() {
  // @@protoc_insertion_point(destructor:CMsgClientSessionToken)
  SharedDtor();
}

void CMsgClientSessionToken::SharedDtor() {
}

void CMsgClientSessionToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSessionToken::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSessionToken& CMsgClientSessionToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientSessionToken.base);
  return *internal_default_instance();
}


void CMsgClientSessionToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSessionToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSessionToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSessionToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSessionToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSessionToken)
  return false;
#undef DO_
}

void CMsgClientSessionToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSessionToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSessionToken)
}

::google::protobuf::uint8* CMsgClientSessionToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSessionToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSessionToken)
  return target;
}

size_t CMsgClientSessionToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSessionToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 token = 1;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSessionToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSessionToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSessionToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSessionToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSessionToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSessionToken)
    MergeFrom(*source);
  }
}

void CMsgClientSessionToken::MergeFrom(const CMsgClientSessionToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSessionToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    set_token(from.token());
  }
}

void CMsgClientSessionToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSessionToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSessionToken::CopyFrom(const CMsgClientSessionToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSessionToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSessionToken::IsInitialized() const {
  return true;
}

void CMsgClientSessionToken::Swap(CMsgClientSessionToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSessionToken::InternalSwap(CMsgClientSessionToken* other) {
  using std::swap;
  swap(token_, other->token_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSessionToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGameConnectTokens::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGameConnectTokens::kMaxTokensToKeepFieldNumber;
const int CMsgClientGameConnectTokens::kTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGameConnectTokens::CMsgClientGameConnectTokens()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGameConnectTokens.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGameConnectTokens)
}
CMsgClientGameConnectTokens::CMsgClientGameConnectTokens(const CMsgClientGameConnectTokens& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tokens_(from.tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_tokens_to_keep_ = from.max_tokens_to_keep_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGameConnectTokens)
}

void CMsgClientGameConnectTokens::SharedCtor() {
  max_tokens_to_keep_ = 10u;
}

CMsgClientGameConnectTokens::~CMsgClientGameConnectTokens() {
  // @@protoc_insertion_point(destructor:CMsgClientGameConnectTokens)
  SharedDtor();
}

void CMsgClientGameConnectTokens::SharedDtor() {
}

void CMsgClientGameConnectTokens::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGameConnectTokens::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGameConnectTokens& CMsgClientGameConnectTokens::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGameConnectTokens.base);
  return *internal_default_instance();
}


void CMsgClientGameConnectTokens::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGameConnectTokens)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tokens_.Clear();
  max_tokens_to_keep_ = 10u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGameConnectTokens::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGameConnectTokens)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 max_tokens_to_keep = 1 [default = 10];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_max_tokens_to_keep();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_tokens_to_keep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes tokens = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGameConnectTokens)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGameConnectTokens)
  return false;
#undef DO_
}

void CMsgClientGameConnectTokens::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGameConnectTokens)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 max_tokens_to_keep = 1 [default = 10];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_tokens_to_keep(), output);
  }

  // repeated bytes tokens = 2;
  for (int i = 0, n = this->tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGameConnectTokens)
}

::google::protobuf::uint8* CMsgClientGameConnectTokens::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGameConnectTokens)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 max_tokens_to_keep = 1 [default = 10];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_tokens_to_keep(), target);
  }

  // repeated bytes tokens = 2;
  for (int i = 0, n = this->tokens_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->tokens(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGameConnectTokens)
  return target;
}

size_t CMsgClientGameConnectTokens::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGameConnectTokens)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes tokens = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tokens_size());
  for (int i = 0, n = this->tokens_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->tokens(i));
  }

  // optional uint32 max_tokens_to_keep = 1 [default = 10];
  if (has_max_tokens_to_keep()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_tokens_to_keep());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGameConnectTokens::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGameConnectTokens)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGameConnectTokens* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGameConnectTokens>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGameConnectTokens)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGameConnectTokens)
    MergeFrom(*source);
  }
}

void CMsgClientGameConnectTokens::MergeFrom(const CMsgClientGameConnectTokens& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGameConnectTokens)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tokens_.MergeFrom(from.tokens_);
  if (from.has_max_tokens_to_keep()) {
    set_max_tokens_to_keep(from.max_tokens_to_keep());
  }
}

void CMsgClientGameConnectTokens::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGameConnectTokens)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGameConnectTokens::CopyFrom(const CMsgClientGameConnectTokens& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGameConnectTokens)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGameConnectTokens::IsInitialized() const {
  return true;
}

void CMsgClientGameConnectTokens::Swap(CMsgClientGameConnectTokens* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGameConnectTokens::InternalSwap(CMsgClientGameConnectTokens* other) {
  using std::swap;
  tokens_.InternalSwap(CastToBase(&other->tokens_));
  swap(max_tokens_to_keep_, other->max_tokens_to_keep_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGameConnectTokens::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSServerType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSServerType::kAppIdServedFieldNumber;
const int CMsgGSServerType::kFlagsFieldNumber;
const int CMsgGSServerType::kGameIpAddressFieldNumber;
const int CMsgGSServerType::kGamePortFieldNumber;
const int CMsgGSServerType::kGameDirFieldNumber;
const int CMsgGSServerType::kGameVersionFieldNumber;
const int CMsgGSServerType::kGameQueryPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSServerType::CMsgGSServerType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSServerType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSServerType)
}
CMsgGSServerType::CMsgGSServerType(const CMsgGSServerType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_dir()) {
    game_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_dir_);
  }
  game_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_version()) {
    game_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_version_);
  }
  ::memcpy(&app_id_served_, &from.app_id_served_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_query_port_) -
    reinterpret_cast<char*>(&app_id_served_)) + sizeof(game_query_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSServerType)
}

void CMsgGSServerType::SharedCtor() {
  game_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_served_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_query_port_) -
      reinterpret_cast<char*>(&app_id_served_)) + sizeof(game_query_port_));
}

CMsgGSServerType::~CMsgGSServerType() {
  // @@protoc_insertion_point(destructor:CMsgGSServerType)
  SharedDtor();
}

void CMsgGSServerType::SharedDtor() {
  game_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGSServerType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSServerType::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSServerType& CMsgGSServerType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSServerType.base);
  return *internal_default_instance();
}


void CMsgGSServerType::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSServerType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      game_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      game_version_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&app_id_served_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_query_port_) -
        reinterpret_cast<char*>(&app_id_served_)) + sizeof(game_query_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSServerType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSServerType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id_served = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id_served();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_served_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_ip_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_game_ip_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_ip_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_dir().data(), static_cast<int>(this->game_dir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGSServerType.game_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_version().data(), static_cast<int>(this->game_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGSServerType.game_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_query_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_game_query_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSServerType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSServerType)
  return false;
#undef DO_
}

void CMsgGSServerType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSServerType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id_served = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id_served(), output);
  }

  // optional uint32 flags = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flags(), output);
  }

  // optional uint32 game_ip_address = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_ip_address(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional string game_dir = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_dir().data(), static_cast<int>(this->game_dir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGSServerType.game_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->game_dir(), output);
  }

  // optional string game_version = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_version().data(), static_cast<int>(this->game_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGSServerType.game_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->game_version(), output);
  }

  // optional uint32 game_query_port = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->game_query_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSServerType)
}

::google::protobuf::uint8* CMsgGSServerType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSServerType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id_served = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id_served(), target);
  }

  // optional uint32 flags = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flags(), target);
  }

  // optional uint32 game_ip_address = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_ip_address(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional string game_dir = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_dir().data(), static_cast<int>(this->game_dir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGSServerType.game_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->game_dir(), target);
  }

  // optional string game_version = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_version().data(), static_cast<int>(this->game_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGSServerType.game_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->game_version(), target);
  }

  // optional uint32 game_query_port = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->game_query_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSServerType)
  return target;
}

size_t CMsgGSServerType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSServerType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string game_dir = 5;
    if (has_game_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_dir());
    }

    // optional string game_version = 6;
    if (has_game_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_version());
    }

    // optional uint32 app_id_served = 1;
    if (has_app_id_served()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id_served());
    }

    // optional uint32 flags = 2;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional uint32 game_ip_address = 3;
    if (has_game_ip_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_ip_address());
    }

    // optional uint32 game_port = 4;
    if (has_game_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

    // optional uint32 game_query_port = 7;
    if (has_game_query_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_query_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSServerType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSServerType)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSServerType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSServerType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSServerType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSServerType)
    MergeFrom(*source);
  }
}

void CMsgGSServerType::MergeFrom(const CMsgGSServerType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSServerType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_game_dir();
      game_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_dir_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_game_version();
      game_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_version_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_served_ = from.app_id_served_;
    }
    if (cached_has_bits & 0x00000008u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_ip_address_ = from.game_ip_address_;
    }
    if (cached_has_bits & 0x00000020u) {
      game_port_ = from.game_port_;
    }
    if (cached_has_bits & 0x00000040u) {
      game_query_port_ = from.game_query_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSServerType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSServerType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSServerType::CopyFrom(const CMsgGSServerType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSServerType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSServerType::IsInitialized() const {
  return true;
}

void CMsgGSServerType::Swap(CMsgGSServerType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSServerType::InternalSwap(CMsgGSServerType* other) {
  using std::swap;
  game_dir_.Swap(&other->game_dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_version_.Swap(&other->game_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_served_, other->app_id_served_);
  swap(flags_, other->flags_);
  swap(game_ip_address_, other->game_ip_address_);
  swap(game_port_, other->game_port_);
  swap(game_query_port_, other->game_query_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSServerType::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSStatusReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSStatusReply::kIsSecureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSStatusReply::CMsgGSStatusReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSStatusReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSStatusReply)
}
CMsgGSStatusReply::CMsgGSStatusReply(const CMsgGSStatusReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_secure_ = from.is_secure_;
  // @@protoc_insertion_point(copy_constructor:CMsgGSStatusReply)
}

void CMsgGSStatusReply::SharedCtor() {
  is_secure_ = false;
}

CMsgGSStatusReply::~CMsgGSStatusReply() {
  // @@protoc_insertion_point(destructor:CMsgGSStatusReply)
  SharedDtor();
}

void CMsgGSStatusReply::SharedDtor() {
}

void CMsgGSStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSStatusReply::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSStatusReply& CMsgGSStatusReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSStatusReply.base);
  return *internal_default_instance();
}


void CMsgGSStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_secure_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSStatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSStatusReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_secure = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_secure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSStatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSStatusReply)
  return false;
#undef DO_
}

void CMsgGSStatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_secure = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_secure(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSStatusReply)
}

::google::protobuf::uint8* CMsgGSStatusReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_secure = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_secure(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSStatusReply)
  return target;
}

size_t CMsgGSStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSStatusReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool is_secure = 1;
  if (has_is_secure()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSStatusReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSStatusReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSStatusReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSStatusReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSStatusReply)
    MergeFrom(*source);
  }
}

void CMsgGSStatusReply::MergeFrom(const CMsgGSStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_is_secure()) {
    set_is_secure(from.is_secure());
  }
}

void CMsgGSStatusReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSStatusReply::CopyFrom(const CMsgGSStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSStatusReply::IsInitialized() const {
  return true;
}

void CMsgGSStatusReply::Swap(CMsgGSStatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSStatusReply::InternalSwap(CMsgGSStatusReply* other) {
  using std::swap;
  swap(is_secure_, other->is_secure_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSStatusReply::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSPlayerList_Player::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSPlayerList_Player::kSteamIdFieldNumber;
const int CMsgGSPlayerList_Player::kPublicIpFieldNumber;
const int CMsgGSPlayerList_Player::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSPlayerList_Player::CMsgGSPlayerList_Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSPlayerList_Player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSPlayerList.Player)
}
CMsgGSPlayerList_Player::CMsgGSPlayerList_Player(const CMsgGSPlayerList_Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&public_ip_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(public_ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSPlayerList.Player)
}

void CMsgGSPlayerList_Player::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_ip_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(public_ip_));
}

CMsgGSPlayerList_Player::~CMsgGSPlayerList_Player() {
  // @@protoc_insertion_point(destructor:CMsgGSPlayerList.Player)
  SharedDtor();
}

void CMsgGSPlayerList_Player::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGSPlayerList_Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSPlayerList_Player::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSPlayerList_Player& CMsgGSPlayerList_Player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSPlayerList_Player.base);
  return *internal_default_instance();
}


void CMsgGSPlayerList_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSPlayerList.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&public_ip_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(public_ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSPlayerList_Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSPlayerList.Player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_public_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSPlayerList.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSPlayerList.Player)
  return false;
#undef DO_
}

void CMsgGSPlayerList_Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSPlayerList.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->steam_id(), output);
  }

  // optional uint32 public_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->public_ip(), output);
  }

  // optional bytes token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSPlayerList.Player)
}

::google::protobuf::uint8* CMsgGSPlayerList_Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSPlayerList.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 public_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->public_ip(), target);
  }

  // optional bytes token = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSPlayerList.Player)
  return target;
}

size_t CMsgGSPlayerList_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSPlayerList.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes token = 3;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steam_id());
    }

    // optional uint32 public_ip = 2;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSPlayerList_Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSPlayerList.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSPlayerList_Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSPlayerList_Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSPlayerList.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSPlayerList.Player)
    MergeFrom(*source);
  }
}

void CMsgGSPlayerList_Player::MergeFrom(const CMsgGSPlayerList_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSPlayerList.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      public_ip_ = from.public_ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSPlayerList_Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSPlayerList.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSPlayerList_Player::CopyFrom(const CMsgGSPlayerList_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSPlayerList.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSPlayerList_Player::IsInitialized() const {
  return true;
}

void CMsgGSPlayerList_Player::Swap(CMsgGSPlayerList_Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSPlayerList_Player::InternalSwap(CMsgGSPlayerList_Player* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(public_ip_, other->public_ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSPlayerList_Player::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSPlayerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSPlayerList::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSPlayerList::CMsgGSPlayerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSPlayerList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSPlayerList)
}
CMsgGSPlayerList::CMsgGSPlayerList(const CMsgGSPlayerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGSPlayerList)
}

void CMsgGSPlayerList::SharedCtor() {
}

CMsgGSPlayerList::~CMsgGSPlayerList() {
  // @@protoc_insertion_point(destructor:CMsgGSPlayerList)
  SharedDtor();
}

void CMsgGSPlayerList::SharedDtor() {
}

void CMsgGSPlayerList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSPlayerList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSPlayerList& CMsgGSPlayerList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSPlayerList.base);
  return *internal_default_instance();
}


void CMsgGSPlayerList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSPlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSPlayerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSPlayerList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGSPlayerList.Player players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSPlayerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSPlayerList)
  return false;
#undef DO_
}

void CMsgGSPlayerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSPlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGSPlayerList.Player players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->players(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSPlayerList)
}

::google::protobuf::uint8* CMsgGSPlayerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSPlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGSPlayerList.Player players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSPlayerList)
  return target;
}

size_t CMsgGSPlayerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSPlayerList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGSPlayerList.Player players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSPlayerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSPlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSPlayerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSPlayerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSPlayerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSPlayerList)
    MergeFrom(*source);
  }
}

void CMsgGSPlayerList::MergeFrom(const CMsgGSPlayerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSPlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
}

void CMsgGSPlayerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSPlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSPlayerList::CopyFrom(const CMsgGSPlayerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSPlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSPlayerList::IsInitialized() const {
  return true;
}

void CMsgGSPlayerList::Swap(CMsgGSPlayerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSPlayerList::InternalSwap(CMsgGSPlayerList* other) {
  using std::swap;
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSPlayerList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSUserPlaying::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSUserPlaying::kSteamIdFieldNumber;
const int CMsgGSUserPlaying::kPublicIpFieldNumber;
const int CMsgGSUserPlaying::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSUserPlaying::CMsgGSUserPlaying()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSUserPlaying.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSUserPlaying)
}
CMsgGSUserPlaying::CMsgGSUserPlaying(const CMsgGSUserPlaying& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&public_ip_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(public_ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSUserPlaying)
}

void CMsgGSUserPlaying::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_ip_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(public_ip_));
}

CMsgGSUserPlaying::~CMsgGSUserPlaying() {
  // @@protoc_insertion_point(destructor:CMsgGSUserPlaying)
  SharedDtor();
}

void CMsgGSUserPlaying::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGSUserPlaying::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSUserPlaying::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSUserPlaying& CMsgGSUserPlaying::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSUserPlaying.base);
  return *internal_default_instance();
}


void CMsgGSUserPlaying::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSUserPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&public_ip_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(public_ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSUserPlaying::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSUserPlaying)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_public_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSUserPlaying)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSUserPlaying)
  return false;
#undef DO_
}

void CMsgGSUserPlaying::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSUserPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 public_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->public_ip(), output);
  }

  // optional bytes token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSUserPlaying)
}

::google::protobuf::uint8* CMsgGSUserPlaying::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSUserPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 public_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->public_ip(), target);
  }

  // optional bytes token = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSUserPlaying)
  return target;
}

size_t CMsgGSUserPlaying::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSUserPlaying)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes token = 3;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 public_ip = 2;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSUserPlaying::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSUserPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSUserPlaying* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSUserPlaying>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSUserPlaying)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSUserPlaying)
    MergeFrom(*source);
  }
}

void CMsgGSUserPlaying::MergeFrom(const CMsgGSUserPlaying& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSUserPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      public_ip_ = from.public_ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSUserPlaying::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSUserPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSUserPlaying::CopyFrom(const CMsgGSUserPlaying& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSUserPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSUserPlaying::IsInitialized() const {
  return true;
}

void CMsgGSUserPlaying::Swap(CMsgGSUserPlaying* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSUserPlaying::InternalSwap(CMsgGSUserPlaying* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(public_ip_, other->public_ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSUserPlaying::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSDisconnectNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSDisconnectNotice::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSDisconnectNotice::CMsgGSDisconnectNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSDisconnectNotice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSDisconnectNotice)
}
CMsgGSDisconnectNotice::CMsgGSDisconnectNotice(const CMsgGSDisconnectNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGSDisconnectNotice)
}

void CMsgGSDisconnectNotice::SharedCtor() {
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGSDisconnectNotice::~CMsgGSDisconnectNotice() {
  // @@protoc_insertion_point(destructor:CMsgGSDisconnectNotice)
  SharedDtor();
}

void CMsgGSDisconnectNotice::SharedDtor() {
}

void CMsgGSDisconnectNotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSDisconnectNotice::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSDisconnectNotice& CMsgGSDisconnectNotice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSDisconnectNotice.base);
  return *internal_default_instance();
}


void CMsgGSDisconnectNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSDisconnectNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSDisconnectNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSDisconnectNotice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSDisconnectNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSDisconnectNotice)
  return false;
#undef DO_
}

void CMsgGSDisconnectNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSDisconnectNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSDisconnectNotice)
}

::google::protobuf::uint8* CMsgGSDisconnectNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSDisconnectNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSDisconnectNotice)
  return target;
}

size_t CMsgGSDisconnectNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSDisconnectNotice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSDisconnectNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSDisconnectNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSDisconnectNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSDisconnectNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSDisconnectNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSDisconnectNotice)
    MergeFrom(*source);
  }
}

void CMsgGSDisconnectNotice::MergeFrom(const CMsgGSDisconnectNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSDisconnectNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgGSDisconnectNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSDisconnectNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSDisconnectNotice::CopyFrom(const CMsgGSDisconnectNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSDisconnectNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSDisconnectNotice::IsInitialized() const {
  return true;
}

void CMsgGSDisconnectNotice::Swap(CMsgGSDisconnectNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSDisconnectNotice::InternalSwap(CMsgGSDisconnectNotice* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSDisconnectNotice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGamesPlayed_GamePlayed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGamesPlayed_GamePlayed::kSteamIdGsFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kGameIdFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kGameIpAddressFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kGamePortFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kIsSecureFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kTokenFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kGameExtraInfoFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kGameDataBlobFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kProcessIdFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kStreamingProviderIdFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kGameFlagsFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kOwnerIdFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kVrHmdVendorFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kVrHmdModelFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kLaunchOptionTypeFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kPrimaryControllerTypeFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kPrimarySteamControllerSerialFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kTotalSteamControllerCountFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kTotalNonSteamControllerCountFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kControllerWorkshopFileIdFieldNumber;
const int CMsgClientGamesPlayed_GamePlayed::kLaunchSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGamesPlayed_GamePlayed::CMsgClientGamesPlayed_GamePlayed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGamesPlayed_GamePlayed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGamesPlayed.GamePlayed)
}
CMsgClientGamesPlayed_GamePlayed::CMsgClientGamesPlayed_GamePlayed(const CMsgClientGamesPlayed_GamePlayed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  game_extra_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_extra_info()) {
    game_extra_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_extra_info_);
  }
  game_data_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data_blob()) {
    game_data_blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_blob_);
  }
  vr_hmd_vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vr_hmd_vendor()) {
    vr_hmd_vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_hmd_vendor_);
  }
  vr_hmd_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vr_hmd_model()) {
    vr_hmd_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_hmd_model_);
  }
  primary_steam_controller_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_primary_steam_controller_serial()) {
    primary_steam_controller_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_steam_controller_serial_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    static_cast<size_t>(reinterpret_cast<char*>(&primary_controller_type_) -
    reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(primary_controller_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGamesPlayed.GamePlayed)
}

void CMsgClientGamesPlayed_GamePlayed::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_extra_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_hmd_vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_hmd_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_steam_controller_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&launch_source_) -
      reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(launch_source_));
  primary_controller_type_ = -1;
}

CMsgClientGamesPlayed_GamePlayed::~CMsgClientGamesPlayed_GamePlayed() {
  // @@protoc_insertion_point(destructor:CMsgClientGamesPlayed.GamePlayed)
  SharedDtor();
}

void CMsgClientGamesPlayed_GamePlayed::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_extra_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_hmd_vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_hmd_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_steam_controller_serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGamesPlayed_GamePlayed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGamesPlayed_GamePlayed::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGamesPlayed_GamePlayed& CMsgClientGamesPlayed_GamePlayed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGamesPlayed_GamePlayed.base);
  return *internal_default_instance();
}


void CMsgClientGamesPlayed_GamePlayed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGamesPlayed.GamePlayed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      game_extra_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      game_data_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      vr_hmd_vendor_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      vr_hmd_model_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      primary_steam_controller_serial_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&steam_id_gs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_id_) -
        reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(game_id_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&game_ip_address_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&launch_option_type_) -
        reinterpret_cast<char*>(&game_ip_address_)) + sizeof(launch_option_type_));
  }
  if (cached_has_bits & 2031616u) {
    ::memset(&total_steam_controller_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&launch_source_) -
        reinterpret_cast<char*>(&total_steam_controller_count_)) + sizeof(launch_source_));
    primary_controller_type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGamesPlayed_GamePlayed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGamesPlayed.GamePlayed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_steam_id_gs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_ip_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_game_ip_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_ip_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_secure = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_secure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_extra_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_extra_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_extra_info().data(), static_cast<int>(this->game_extra_info().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGamesPlayed.GamePlayed.game_extra_info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_data_blob = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_data_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 process_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_process_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 streaming_provider_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_streaming_provider_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &streaming_provider_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_flags = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_game_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vr_hmd_vendor = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr_hmd_vendor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vr_hmd_vendor().data(), static_cast<int>(this->vr_hmd_vendor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGamesPlayed.GamePlayed.vr_hmd_vendor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vr_hmd_model = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr_hmd_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vr_hmd_model().data(), static_cast<int>(this->vr_hmd_model().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGamesPlayed.GamePlayed.vr_hmd_model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 launch_option_type = 15 [default = 0];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_launch_option_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &launch_option_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 primary_controller_type = 16 [default = -1];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_primary_controller_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &primary_controller_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string primary_steam_controller_serial = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primary_steam_controller_serial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->primary_steam_controller_serial().data(), static_cast<int>(this->primary_steam_controller_serial().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGamesPlayed.GamePlayed.primary_steam_controller_serial");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_steam_controller_count = 18 [default = 0];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_total_steam_controller_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_steam_controller_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_non_steam_controller_count = 19 [default = 0];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_total_non_steam_controller_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_non_steam_controller_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 controller_workshop_file_id = 20 [default = 0];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_controller_workshop_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &controller_workshop_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 launch_source = 21 [default = 0];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_launch_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &launch_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGamesPlayed.GamePlayed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGamesPlayed.GamePlayed)
  return false;
#undef DO_
}

void CMsgClientGamesPlayed_GamePlayed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGamesPlayed.GamePlayed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->steam_id_gs(), output);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // optional uint32 game_ip_address = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_ip_address(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional bool is_secure = 5;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_secure(), output);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->token(), output);
  }

  // optional string game_extra_info = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_extra_info().data(), static_cast<int>(this->game_extra_info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.game_extra_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->game_extra_info(), output);
  }

  // optional bytes game_data_blob = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->game_data_blob(), output);
  }

  // optional uint32 process_id = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->process_id(), output);
  }

  // optional uint32 streaming_provider_id = 10;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->streaming_provider_id(), output);
  }

  // optional uint32 game_flags = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->game_flags(), output);
  }

  // optional uint32 owner_id = 12;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->owner_id(), output);
  }

  // optional string vr_hmd_vendor = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_hmd_vendor().data(), static_cast<int>(this->vr_hmd_vendor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.vr_hmd_vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->vr_hmd_vendor(), output);
  }

  // optional string vr_hmd_model = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_hmd_model().data(), static_cast<int>(this->vr_hmd_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.vr_hmd_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->vr_hmd_model(), output);
  }

  // optional uint32 launch_option_type = 15 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->launch_option_type(), output);
  }

  // optional int32 primary_controller_type = 16 [default = -1];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->primary_controller_type(), output);
  }

  // optional string primary_steam_controller_serial = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->primary_steam_controller_serial().data(), static_cast<int>(this->primary_steam_controller_serial().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.primary_steam_controller_serial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->primary_steam_controller_serial(), output);
  }

  // optional uint32 total_steam_controller_count = 18 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->total_steam_controller_count(), output);
  }

  // optional uint32 total_non_steam_controller_count = 19 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->total_non_steam_controller_count(), output);
  }

  // optional uint64 controller_workshop_file_id = 20 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->controller_workshop_file_id(), output);
  }

  // optional uint32 launch_source = 21 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->launch_source(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGamesPlayed.GamePlayed)
}

::google::protobuf::uint8* CMsgClientGamesPlayed_GamePlayed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGamesPlayed.GamePlayed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->steam_id_gs(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // optional uint32 game_ip_address = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_ip_address(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional bool is_secure = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_secure(), target);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->token(), target);
  }

  // optional string game_extra_info = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_extra_info().data(), static_cast<int>(this->game_extra_info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.game_extra_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->game_extra_info(), target);
  }

  // optional bytes game_data_blob = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->game_data_blob(), target);
  }

  // optional uint32 process_id = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->process_id(), target);
  }

  // optional uint32 streaming_provider_id = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->streaming_provider_id(), target);
  }

  // optional uint32 game_flags = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->game_flags(), target);
  }

  // optional uint32 owner_id = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->owner_id(), target);
  }

  // optional string vr_hmd_vendor = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_hmd_vendor().data(), static_cast<int>(this->vr_hmd_vendor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.vr_hmd_vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->vr_hmd_vendor(), target);
  }

  // optional string vr_hmd_model = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_hmd_model().data(), static_cast<int>(this->vr_hmd_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.vr_hmd_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->vr_hmd_model(), target);
  }

  // optional uint32 launch_option_type = 15 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->launch_option_type(), target);
  }

  // optional int32 primary_controller_type = 16 [default = -1];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->primary_controller_type(), target);
  }

  // optional string primary_steam_controller_serial = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->primary_steam_controller_serial().data(), static_cast<int>(this->primary_steam_controller_serial().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGamesPlayed.GamePlayed.primary_steam_controller_serial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->primary_steam_controller_serial(), target);
  }

  // optional uint32 total_steam_controller_count = 18 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->total_steam_controller_count(), target);
  }

  // optional uint32 total_non_steam_controller_count = 19 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->total_non_steam_controller_count(), target);
  }

  // optional uint64 controller_workshop_file_id = 20 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->controller_workshop_file_id(), target);
  }

  // optional uint32 launch_source = 21 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->launch_source(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGamesPlayed.GamePlayed)
  return target;
}

size_t CMsgClientGamesPlayed_GamePlayed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGamesPlayed.GamePlayed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes token = 6;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional string game_extra_info = 7;
    if (has_game_extra_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_extra_info());
    }

    // optional bytes game_data_blob = 8;
    if (has_game_data_blob()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_data_blob());
    }

    // optional string vr_hmd_vendor = 13;
    if (has_vr_hmd_vendor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr_hmd_vendor());
    }

    // optional string vr_hmd_model = 14;
    if (has_vr_hmd_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr_hmd_model());
    }

    // optional string primary_steam_controller_serial = 17;
    if (has_primary_steam_controller_serial()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->primary_steam_controller_serial());
    }

    // optional uint64 steam_id_gs = 1;
    if (has_steam_id_gs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steam_id_gs());
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 game_ip_address = 3;
    if (has_game_ip_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_ip_address());
    }

    // optional uint32 game_port = 4;
    if (has_game_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

    // optional bool is_secure = 5;
    if (has_is_secure()) {
      total_size += 1 + 1;
    }

    // optional uint32 process_id = 9;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->process_id());
    }

    // optional uint32 streaming_provider_id = 10;
    if (has_streaming_provider_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->streaming_provider_id());
    }

    // optional uint32 game_flags = 11;
    if (has_game_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_flags());
    }

    // optional uint32 owner_id = 12;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

    // optional uint32 launch_option_type = 15 [default = 0];
    if (has_launch_option_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->launch_option_type());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional uint32 total_steam_controller_count = 18 [default = 0];
    if (has_total_steam_controller_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_steam_controller_count());
    }

    // optional uint32 total_non_steam_controller_count = 19 [default = 0];
    if (has_total_non_steam_controller_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_non_steam_controller_count());
    }

    // optional uint64 controller_workshop_file_id = 20 [default = 0];
    if (has_controller_workshop_file_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->controller_workshop_file_id());
    }

    // optional uint32 launch_source = 21 [default = 0];
    if (has_launch_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->launch_source());
    }

    // optional int32 primary_controller_type = 16 [default = -1];
    if (has_primary_controller_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->primary_controller_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGamesPlayed_GamePlayed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGamesPlayed.GamePlayed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGamesPlayed_GamePlayed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGamesPlayed_GamePlayed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGamesPlayed.GamePlayed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGamesPlayed.GamePlayed)
    MergeFrom(*source);
  }
}

void CMsgClientGamesPlayed_GamePlayed::MergeFrom(const CMsgClientGamesPlayed_GamePlayed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGamesPlayed.GamePlayed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_game_extra_info();
      game_extra_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_extra_info_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_game_data_blob();
      game_data_blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_blob_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_vr_hmd_vendor();
      vr_hmd_vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_hmd_vendor_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_vr_hmd_model();
      vr_hmd_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_hmd_model_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_primary_steam_controller_serial();
      primary_steam_controller_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_steam_controller_serial_);
    }
    if (cached_has_bits & 0x00000040u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000080u) {
      game_id_ = from.game_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      game_ip_address_ = from.game_ip_address_;
    }
    if (cached_has_bits & 0x00000200u) {
      game_port_ = from.game_port_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_secure_ = from.is_secure_;
    }
    if (cached_has_bits & 0x00000800u) {
      process_id_ = from.process_id_;
    }
    if (cached_has_bits & 0x00001000u) {
      streaming_provider_id_ = from.streaming_provider_id_;
    }
    if (cached_has_bits & 0x00002000u) {
      game_flags_ = from.game_flags_;
    }
    if (cached_has_bits & 0x00004000u) {
      owner_id_ = from.owner_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      launch_option_type_ = from.launch_option_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      total_steam_controller_count_ = from.total_steam_controller_count_;
    }
    if (cached_has_bits & 0x00020000u) {
      total_non_steam_controller_count_ = from.total_non_steam_controller_count_;
    }
    if (cached_has_bits & 0x00040000u) {
      controller_workshop_file_id_ = from.controller_workshop_file_id_;
    }
    if (cached_has_bits & 0x00080000u) {
      launch_source_ = from.launch_source_;
    }
    if (cached_has_bits & 0x00100000u) {
      primary_controller_type_ = from.primary_controller_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGamesPlayed_GamePlayed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGamesPlayed.GamePlayed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGamesPlayed_GamePlayed::CopyFrom(const CMsgClientGamesPlayed_GamePlayed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGamesPlayed.GamePlayed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGamesPlayed_GamePlayed::IsInitialized() const {
  return true;
}

void CMsgClientGamesPlayed_GamePlayed::Swap(CMsgClientGamesPlayed_GamePlayed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGamesPlayed_GamePlayed::InternalSwap(CMsgClientGamesPlayed_GamePlayed* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_extra_info_.Swap(&other->game_extra_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_data_blob_.Swap(&other->game_data_blob_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vr_hmd_vendor_.Swap(&other->vr_hmd_vendor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vr_hmd_model_.Swap(&other->vr_hmd_model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  primary_steam_controller_serial_.Swap(&other->primary_steam_controller_serial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_gs_, other->steam_id_gs_);
  swap(game_id_, other->game_id_);
  swap(game_ip_address_, other->game_ip_address_);
  swap(game_port_, other->game_port_);
  swap(is_secure_, other->is_secure_);
  swap(process_id_, other->process_id_);
  swap(streaming_provider_id_, other->streaming_provider_id_);
  swap(game_flags_, other->game_flags_);
  swap(owner_id_, other->owner_id_);
  swap(launch_option_type_, other->launch_option_type_);
  swap(total_steam_controller_count_, other->total_steam_controller_count_);
  swap(total_non_steam_controller_count_, other->total_non_steam_controller_count_);
  swap(controller_workshop_file_id_, other->controller_workshop_file_id_);
  swap(launch_source_, other->launch_source_);
  swap(primary_controller_type_, other->primary_controller_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGamesPlayed_GamePlayed::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGamesPlayed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGamesPlayed::kGamesPlayedFieldNumber;
const int CMsgClientGamesPlayed::kClientOsTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGamesPlayed::CMsgClientGamesPlayed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGamesPlayed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGamesPlayed)
}
CMsgClientGamesPlayed::CMsgClientGamesPlayed(const CMsgClientGamesPlayed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      games_played_(from.games_played_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_os_type_ = from.client_os_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGamesPlayed)
}

void CMsgClientGamesPlayed::SharedCtor() {
  client_os_type_ = 0u;
}

CMsgClientGamesPlayed::~CMsgClientGamesPlayed() {
  // @@protoc_insertion_point(destructor:CMsgClientGamesPlayed)
  SharedDtor();
}

void CMsgClientGamesPlayed::SharedDtor() {
}

void CMsgClientGamesPlayed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGamesPlayed::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGamesPlayed& CMsgClientGamesPlayed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGamesPlayed.base);
  return *internal_default_instance();
}


void CMsgClientGamesPlayed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGamesPlayed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  games_played_.Clear();
  client_os_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGamesPlayed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGamesPlayed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientGamesPlayed.GamePlayed games_played = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_games_played()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_os_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_client_os_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_os_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGamesPlayed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGamesPlayed)
  return false;
#undef DO_
}

void CMsgClientGamesPlayed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGamesPlayed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientGamesPlayed.GamePlayed games_played = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->games_played_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->games_played(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_os_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_os_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGamesPlayed)
}

::google::protobuf::uint8* CMsgClientGamesPlayed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGamesPlayed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientGamesPlayed.GamePlayed games_played = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->games_played_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->games_played(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_os_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_os_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGamesPlayed)
  return target;
}

size_t CMsgClientGamesPlayed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGamesPlayed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientGamesPlayed.GamePlayed games_played = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->games_played_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->games_played(static_cast<int>(i)));
    }
  }

  // optional uint32 client_os_type = 2;
  if (has_client_os_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_os_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGamesPlayed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGamesPlayed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGamesPlayed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGamesPlayed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGamesPlayed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGamesPlayed)
    MergeFrom(*source);
  }
}

void CMsgClientGamesPlayed::MergeFrom(const CMsgClientGamesPlayed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGamesPlayed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  games_played_.MergeFrom(from.games_played_);
  if (from.has_client_os_type()) {
    set_client_os_type(from.client_os_type());
  }
}

void CMsgClientGamesPlayed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGamesPlayed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGamesPlayed::CopyFrom(const CMsgClientGamesPlayed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGamesPlayed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGamesPlayed::IsInitialized() const {
  return true;
}

void CMsgClientGamesPlayed::Swap(CMsgClientGamesPlayed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGamesPlayed::InternalSwap(CMsgClientGamesPlayed* other) {
  using std::swap;
  CastToBase(&games_played_)->InternalSwap(CastToBase(&other->games_played_));
  swap(client_os_type_, other->client_os_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGamesPlayed::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSApprove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSApprove::kSteamIdFieldNumber;
const int CMsgGSApprove::kOwnerSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSApprove::CMsgGSApprove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSApprove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSApprove)
}
CMsgGSApprove::CMsgGSApprove(const CMsgGSApprove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_steam_id_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(owner_steam_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSApprove)
}

void CMsgGSApprove::SharedCtor() {
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_steam_id_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(owner_steam_id_));
}

CMsgGSApprove::~CMsgGSApprove() {
  // @@protoc_insertion_point(destructor:CMsgGSApprove)
  SharedDtor();
}

void CMsgGSApprove::SharedDtor() {
}

void CMsgGSApprove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSApprove::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSApprove& CMsgGSApprove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSApprove.base);
  return *internal_default_instance();
}


void CMsgGSApprove::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSApprove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_steam_id_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(owner_steam_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSApprove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSApprove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 owner_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_owner_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &owner_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSApprove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSApprove)
  return false;
#undef DO_
}

void CMsgGSApprove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSApprove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 owner_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->owner_steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSApprove)
}

::google::protobuf::uint8* CMsgGSApprove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSApprove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 owner_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->owner_steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSApprove)
  return target;
}

size_t CMsgGSApprove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSApprove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 owner_steam_id = 2;
    if (has_owner_steam_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSApprove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSApprove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSApprove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSApprove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSApprove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSApprove)
    MergeFrom(*source);
  }
}

void CMsgGSApprove::MergeFrom(const CMsgGSApprove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSApprove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_steam_id_ = from.owner_steam_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSApprove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSApprove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSApprove::CopyFrom(const CMsgGSApprove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSApprove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSApprove::IsInitialized() const {
  return true;
}

void CMsgGSApprove::Swap(CMsgGSApprove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSApprove::InternalSwap(CMsgGSApprove* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(owner_steam_id_, other->owner_steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSApprove::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSDeny::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSDeny::kSteamIdFieldNumber;
const int CMsgGSDeny::kEdenyReasonFieldNumber;
const int CMsgGSDeny::kDenyStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSDeny::CMsgGSDeny()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSDeny.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSDeny)
}
CMsgGSDeny::CMsgGSDeny(const CMsgGSDeny& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deny_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deny_string()) {
    deny_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deny_string_);
  }
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&edeny_reason_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(edeny_reason_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSDeny)
}

void CMsgGSDeny::SharedCtor() {
  deny_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&edeny_reason_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(edeny_reason_));
}

CMsgGSDeny::~CMsgGSDeny() {
  // @@protoc_insertion_point(destructor:CMsgGSDeny)
  SharedDtor();
}

void CMsgGSDeny::SharedDtor() {
  deny_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGSDeny::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSDeny::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSDeny& CMsgGSDeny::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSDeny.base);
  return *internal_default_instance();
}


void CMsgGSDeny::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSDeny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    deny_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&edeny_reason_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(edeny_reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSDeny::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSDeny)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 edeny_reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_edeny_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edeny_reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string deny_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deny_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deny_string().data(), static_cast<int>(this->deny_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGSDeny.deny_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSDeny)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSDeny)
  return false;
#undef DO_
}

void CMsgGSDeny::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSDeny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional int32 edeny_reason = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->edeny_reason(), output);
  }

  // optional string deny_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deny_string().data(), static_cast<int>(this->deny_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGSDeny.deny_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deny_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSDeny)
}

::google::protobuf::uint8* CMsgGSDeny::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSDeny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional int32 edeny_reason = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->edeny_reason(), target);
  }

  // optional string deny_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deny_string().data(), static_cast<int>(this->deny_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGSDeny.deny_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deny_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSDeny)
  return target;
}

size_t CMsgGSDeny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSDeny)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string deny_string = 3;
    if (has_deny_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deny_string());
    }

    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional int32 edeny_reason = 2;
    if (has_edeny_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edeny_reason());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSDeny::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSDeny)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSDeny* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSDeny>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSDeny)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSDeny)
    MergeFrom(*source);
  }
}

void CMsgGSDeny::MergeFrom(const CMsgGSDeny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSDeny)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_deny_string();
      deny_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deny_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      edeny_reason_ = from.edeny_reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSDeny::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSDeny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSDeny::CopyFrom(const CMsgGSDeny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSDeny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSDeny::IsInitialized() const {
  return true;
}

void CMsgGSDeny::Swap(CMsgGSDeny* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSDeny::InternalSwap(CMsgGSDeny* other) {
  using std::swap;
  deny_string_.Swap(&other->deny_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(edeny_reason_, other->edeny_reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSDeny::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSKick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSKick::kSteamIdFieldNumber;
const int CMsgGSKick::kEdenyReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSKick::CMsgGSKick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSKick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGSKick)
}
CMsgGSKick::CMsgGSKick(const CMsgGSKick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&edeny_reason_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(edeny_reason_));
  // @@protoc_insertion_point(copy_constructor:CMsgGSKick)
}

void CMsgGSKick::SharedCtor() {
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&edeny_reason_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(edeny_reason_));
}

CMsgGSKick::~CMsgGSKick() {
  // @@protoc_insertion_point(destructor:CMsgGSKick)
  SharedDtor();
}

void CMsgGSKick::SharedDtor() {
}

void CMsgGSKick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGSKick::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSKick& CMsgGSKick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgGSKick.base);
  return *internal_default_instance();
}


void CMsgGSKick::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGSKick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&edeny_reason_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(edeny_reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSKick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGSKick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 edeny_reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_edeny_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edeny_reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGSKick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGSKick)
  return false;
#undef DO_
}

void CMsgGSKick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGSKick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional int32 edeny_reason = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->edeny_reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGSKick)
}

::google::protobuf::uint8* CMsgGSKick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGSKick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional int32 edeny_reason = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->edeny_reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGSKick)
  return target;
}

size_t CMsgGSKick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGSKick)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional int32 edeny_reason = 2;
    if (has_edeny_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edeny_reason());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSKick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGSKick)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSKick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSKick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGSKick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGSKick)
    MergeFrom(*source);
  }
}

void CMsgGSKick::MergeFrom(const CMsgGSKick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGSKick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      edeny_reason_ = from.edeny_reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSKick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGSKick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSKick::CopyFrom(const CMsgGSKick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGSKick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSKick::IsInitialized() const {
  return true;
}

void CMsgGSKick::Swap(CMsgGSKick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSKick::InternalSwap(CMsgGSKick* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(edeny_reason_, other->edeny_reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGSKick::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthList::InitAsDefaultInstance() {
}
void CMsgClientAuthList::clear_tickets() {
  tickets_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthList::kTokensLeftFieldNumber;
const int CMsgClientAuthList::kLastRequestSeqFieldNumber;
const int CMsgClientAuthList::kLastRequestSeqFromServerFieldNumber;
const int CMsgClientAuthList::kTicketsFieldNumber;
const int CMsgClientAuthList::kAppIdsFieldNumber;
const int CMsgClientAuthList::kMessageSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthList::CMsgClientAuthList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAuthList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAuthList)
}
CMsgClientAuthList::CMsgClientAuthList(const CMsgClientAuthList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tickets_(from.tickets_),
      app_ids_(from.app_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tokens_left_, &from.tokens_left_,
    static_cast<size_t>(reinterpret_cast<char*>(&message_sequence_) -
    reinterpret_cast<char*>(&tokens_left_)) + sizeof(message_sequence_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAuthList)
}

void CMsgClientAuthList::SharedCtor() {
  ::memset(&tokens_left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_sequence_) -
      reinterpret_cast<char*>(&tokens_left_)) + sizeof(message_sequence_));
}

CMsgClientAuthList::~CMsgClientAuthList() {
  // @@protoc_insertion_point(destructor:CMsgClientAuthList)
  SharedDtor();
}

void CMsgClientAuthList::SharedDtor() {
}

void CMsgClientAuthList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAuthList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthList& CMsgClientAuthList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAuthList.base);
  return *internal_default_instance();
}


void CMsgClientAuthList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAuthList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tickets_.Clear();
  app_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&tokens_left_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&message_sequence_) -
        reinterpret_cast<char*>(&tokens_left_)) + sizeof(message_sequence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAuthList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tokens_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tokens_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tokens_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_request_seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_last_request_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_request_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_request_seq_from_server = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_last_request_seq_from_server();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_request_seq_from_server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgAuthTicket tickets = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tickets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 app_ids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_app_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_app_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 message_sequence = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_message_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAuthList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAuthList)
  return false;
#undef DO_
}

void CMsgClientAuthList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAuthList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tokens_left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tokens_left(), output);
  }

  // optional uint32 last_request_seq = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_request_seq(), output);
  }

  // optional uint32 last_request_seq_from_server = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_request_seq_from_server(), output);
  }

  // repeated .CMsgAuthTicket tickets = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tickets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->tickets(static_cast<int>(i)),
      output);
  }

  // repeated uint32 app_ids = 5;
  for (int i = 0, n = this->app_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->app_ids(i), output);
  }

  // optional uint32 message_sequence = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->message_sequence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAuthList)
}

::google::protobuf::uint8* CMsgClientAuthList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAuthList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tokens_left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tokens_left(), target);
  }

  // optional uint32 last_request_seq = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_request_seq(), target);
  }

  // optional uint32 last_request_seq_from_server = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_request_seq_from_server(), target);
  }

  // repeated .CMsgAuthTicket tickets = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tickets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->tickets(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 app_ids = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(5, this->app_ids_, target);

  // optional uint32 message_sequence = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->message_sequence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAuthList)
  return target;
}

size_t CMsgClientAuthList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAuthList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgAuthTicket tickets = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->tickets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tickets(static_cast<int>(i)));
    }
  }

  // repeated uint32 app_ids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->app_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->app_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 tokens_left = 1;
    if (has_tokens_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tokens_left());
    }

    // optional uint32 last_request_seq = 2;
    if (has_last_request_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_request_seq());
    }

    // optional uint32 last_request_seq_from_server = 3;
    if (has_last_request_seq_from_server()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_request_seq_from_server());
    }

    // optional uint32 message_sequence = 6;
    if (has_message_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->message_sequence());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAuthList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAuthList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAuthList)
    MergeFrom(*source);
  }
}

void CMsgClientAuthList::MergeFrom(const CMsgClientAuthList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAuthList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tickets_.MergeFrom(from.tickets_);
  app_ids_.MergeFrom(from.app_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      tokens_left_ = from.tokens_left_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_request_seq_ = from.last_request_seq_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_request_seq_from_server_ = from.last_request_seq_from_server_;
    }
    if (cached_has_bits & 0x00000008u) {
      message_sequence_ = from.message_sequence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAuthList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthList::CopyFrom(const CMsgClientAuthList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAuthList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthList::IsInitialized() const {
  return true;
}

void CMsgClientAuthList::Swap(CMsgClientAuthList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthList::InternalSwap(CMsgClientAuthList* other) {
  using std::swap;
  CastToBase(&tickets_)->InternalSwap(CastToBase(&other->tickets_));
  app_ids_.InternalSwap(&other->app_ids_);
  swap(tokens_left_, other->tokens_left_);
  swap(last_request_seq_, other->last_request_seq_);
  swap(last_request_seq_from_server_, other->last_request_seq_from_server_);
  swap(message_sequence_, other->message_sequence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAuthList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthListAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthListAck::kTicketCrcFieldNumber;
const int CMsgClientAuthListAck::kAppIdsFieldNumber;
const int CMsgClientAuthListAck::kMessageSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthListAck::CMsgClientAuthListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAuthListAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAuthListAck)
}
CMsgClientAuthListAck::CMsgClientAuthListAck(const CMsgClientAuthListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ticket_crc_(from.ticket_crc_),
      app_ids_(from.app_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_sequence_ = from.message_sequence_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAuthListAck)
}

void CMsgClientAuthListAck::SharedCtor() {
  message_sequence_ = 0u;
}

CMsgClientAuthListAck::~CMsgClientAuthListAck() {
  // @@protoc_insertion_point(destructor:CMsgClientAuthListAck)
  SharedDtor();
}

void CMsgClientAuthListAck::SharedDtor() {
}

void CMsgClientAuthListAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAuthListAck::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthListAck& CMsgClientAuthListAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAuthListAck.base);
  return *internal_default_instance();
}


void CMsgClientAuthListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAuthListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_crc_.Clear();
  app_ids_.Clear();
  message_sequence_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAuthListAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ticket_crc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_ticket_crc())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ticket_crc())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 app_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_app_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_app_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 message_sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_message_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAuthListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAuthListAck)
  return false;
#undef DO_
}

void CMsgClientAuthListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAuthListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ticket_crc = 1;
  for (int i = 0, n = this->ticket_crc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->ticket_crc(i), output);
  }

  // repeated uint32 app_ids = 2;
  for (int i = 0, n = this->app_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->app_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 message_sequence = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->message_sequence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAuthListAck)
}

::google::protobuf::uint8* CMsgClientAuthListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAuthListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ticket_crc = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->ticket_crc_, target);

  // repeated uint32 app_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->app_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 message_sequence = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->message_sequence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAuthListAck)
  return target;
}

size_t CMsgClientAuthListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAuthListAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 ticket_crc = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ticket_crc_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ticket_crc_size());
    total_size += data_size;
  }

  // repeated uint32 app_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->app_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->app_ids_size());
    total_size += data_size;
  }

  // optional uint32 message_sequence = 3;
  if (has_message_sequence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->message_sequence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAuthListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAuthListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAuthListAck)
    MergeFrom(*source);
  }
}

void CMsgClientAuthListAck::MergeFrom(const CMsgClientAuthListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAuthListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ticket_crc_.MergeFrom(from.ticket_crc_);
  app_ids_.MergeFrom(from.app_ids_);
  if (from.has_message_sequence()) {
    set_message_sequence(from.message_sequence());
  }
}

void CMsgClientAuthListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAuthListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthListAck::CopyFrom(const CMsgClientAuthListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAuthListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthListAck::IsInitialized() const {
  return true;
}

void CMsgClientAuthListAck::Swap(CMsgClientAuthListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthListAck::InternalSwap(CMsgClientAuthListAck* other) {
  using std::swap;
  ticket_crc_.InternalSwap(&other->ticket_crc_);
  app_ids_.InternalSwap(&other->app_ids_);
  swap(message_sequence_, other->message_sequence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAuthListAck::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLicenseList_License::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLicenseList_License::kPackageIdFieldNumber;
const int CMsgClientLicenseList_License::kTimeCreatedFieldNumber;
const int CMsgClientLicenseList_License::kTimeNextProcessFieldNumber;
const int CMsgClientLicenseList_License::kMinuteLimitFieldNumber;
const int CMsgClientLicenseList_License::kMinutesUsedFieldNumber;
const int CMsgClientLicenseList_License::kPaymentMethodFieldNumber;
const int CMsgClientLicenseList_License::kFlagsFieldNumber;
const int CMsgClientLicenseList_License::kPurchaseCountryCodeFieldNumber;
const int CMsgClientLicenseList_License::kLicenseTypeFieldNumber;
const int CMsgClientLicenseList_License::kTerritoryCodeFieldNumber;
const int CMsgClientLicenseList_License::kChangeNumberFieldNumber;
const int CMsgClientLicenseList_License::kOwnerIdFieldNumber;
const int CMsgClientLicenseList_License::kInitialPeriodFieldNumber;
const int CMsgClientLicenseList_License::kInitialTimeUnitFieldNumber;
const int CMsgClientLicenseList_License::kRenewalPeriodFieldNumber;
const int CMsgClientLicenseList_License::kRenewalTimeUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLicenseList_License::CMsgClientLicenseList_License()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLicenseList_License.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLicenseList.License)
}
CMsgClientLicenseList_License::CMsgClientLicenseList_License(const CMsgClientLicenseList_License& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  purchase_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_purchase_country_code()) {
    purchase_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_country_code_);
  }
  ::memcpy(&package_id_, &from.package_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&renewal_time_unit_) -
    reinterpret_cast<char*>(&package_id_)) + sizeof(renewal_time_unit_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLicenseList.License)
}

void CMsgClientLicenseList_License::SharedCtor() {
  purchase_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&renewal_time_unit_) -
      reinterpret_cast<char*>(&package_id_)) + sizeof(renewal_time_unit_));
}

CMsgClientLicenseList_License::~CMsgClientLicenseList_License() {
  // @@protoc_insertion_point(destructor:CMsgClientLicenseList.License)
  SharedDtor();
}

void CMsgClientLicenseList_License::SharedDtor() {
  purchase_country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientLicenseList_License::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLicenseList_License::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLicenseList_License& CMsgClientLicenseList_License::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLicenseList_License.base);
  return *internal_default_instance();
}


void CMsgClientLicenseList_License::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLicenseList.License)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    purchase_country_code_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&package_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&package_id_)) + sizeof(flags_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&license_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&renewal_time_unit_) -
        reinterpret_cast<char*>(&license_type_)) + sizeof(renewal_time_unit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLicenseList_License::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLicenseList.License)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_time_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_next_process = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_time_next_process();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_next_process_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 minute_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_minute_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minute_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 minutes_used = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_minutes_used();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minutes_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 payment_method = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_payment_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string purchase_country_code = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_purchase_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->purchase_country_code().data(), static_cast<int>(this->purchase_country_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientLicenseList.License.purchase_country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 license_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_license_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &license_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 territory_code = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_territory_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &territory_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change_number = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 initial_period = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_initial_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 initial_time_unit = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_initial_time_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_time_unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 renewal_period = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_renewal_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &renewal_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 renewal_time_unit = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_renewal_time_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &renewal_time_unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLicenseList.License)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLicenseList.License)
  return false;
#undef DO_
}

void CMsgClientLicenseList_License::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLicenseList.License)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional fixed32 time_created = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->time_created(), output);
  }

  // optional fixed32 time_next_process = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->time_next_process(), output);
  }

  // optional int32 minute_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->minute_limit(), output);
  }

  // optional int32 minutes_used = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->minutes_used(), output);
  }

  // optional uint32 payment_method = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->payment_method(), output);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flags(), output);
  }

  // optional string purchase_country_code = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->purchase_country_code().data(), static_cast<int>(this->purchase_country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientLicenseList.License.purchase_country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->purchase_country_code(), output);
  }

  // optional uint32 license_type = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->license_type(), output);
  }

  // optional int32 territory_code = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->territory_code(), output);
  }

  // optional int32 change_number = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->change_number(), output);
  }

  // optional uint32 owner_id = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->owner_id(), output);
  }

  // optional uint32 initial_period = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->initial_period(), output);
  }

  // optional uint32 initial_time_unit = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->initial_time_unit(), output);
  }

  // optional uint32 renewal_period = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->renewal_period(), output);
  }

  // optional uint32 renewal_time_unit = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->renewal_time_unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLicenseList.License)
}

::google::protobuf::uint8* CMsgClientLicenseList_License::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLicenseList.License)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional fixed32 time_created = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->time_created(), target);
  }

  // optional fixed32 time_next_process = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->time_next_process(), target);
  }

  // optional int32 minute_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->minute_limit(), target);
  }

  // optional int32 minutes_used = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->minutes_used(), target);
  }

  // optional uint32 payment_method = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->payment_method(), target);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flags(), target);
  }

  // optional string purchase_country_code = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->purchase_country_code().data(), static_cast<int>(this->purchase_country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientLicenseList.License.purchase_country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->purchase_country_code(), target);
  }

  // optional uint32 license_type = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->license_type(), target);
  }

  // optional int32 territory_code = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->territory_code(), target);
  }

  // optional int32 change_number = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->change_number(), target);
  }

  // optional uint32 owner_id = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->owner_id(), target);
  }

  // optional uint32 initial_period = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->initial_period(), target);
  }

  // optional uint32 initial_time_unit = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->initial_time_unit(), target);
  }

  // optional uint32 renewal_period = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->renewal_period(), target);
  }

  // optional uint32 renewal_time_unit = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->renewal_time_unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLicenseList.License)
  return target;
}

size_t CMsgClientLicenseList_License::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLicenseList.License)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string purchase_country_code = 8;
    if (has_purchase_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->purchase_country_code());
    }

    // optional uint32 package_id = 1;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional fixed32 time_created = 2;
    if (has_time_created()) {
      total_size += 1 + 4;
    }

    // optional fixed32 time_next_process = 3;
    if (has_time_next_process()) {
      total_size += 1 + 4;
    }

    // optional int32 minute_limit = 4;
    if (has_minute_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minute_limit());
    }

    // optional int32 minutes_used = 5;
    if (has_minutes_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minutes_used());
    }

    // optional uint32 payment_method = 6;
    if (has_payment_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payment_method());
    }

    // optional uint32 flags = 7;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 license_type = 9;
    if (has_license_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->license_type());
    }

    // optional int32 territory_code = 10;
    if (has_territory_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->territory_code());
    }

    // optional int32 change_number = 11;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_number());
    }

    // optional uint32 owner_id = 12;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

    // optional uint32 initial_period = 13;
    if (has_initial_period()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initial_period());
    }

    // optional uint32 initial_time_unit = 14;
    if (has_initial_time_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initial_time_unit());
    }

    // optional uint32 renewal_period = 15;
    if (has_renewal_period()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->renewal_period());
    }

    // optional uint32 renewal_time_unit = 16;
    if (has_renewal_time_unit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->renewal_time_unit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLicenseList_License::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLicenseList.License)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLicenseList_License* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLicenseList_License>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLicenseList.License)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLicenseList.License)
    MergeFrom(*source);
  }
}

void CMsgClientLicenseList_License::MergeFrom(const CMsgClientLicenseList_License& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLicenseList.License)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_purchase_country_code();
      purchase_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_created_ = from.time_created_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_next_process_ = from.time_next_process_;
    }
    if (cached_has_bits & 0x00000010u) {
      minute_limit_ = from.minute_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      minutes_used_ = from.minutes_used_;
    }
    if (cached_has_bits & 0x00000040u) {
      payment_method_ = from.payment_method_;
    }
    if (cached_has_bits & 0x00000080u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      license_type_ = from.license_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      territory_code_ = from.territory_code_;
    }
    if (cached_has_bits & 0x00000400u) {
      change_number_ = from.change_number_;
    }
    if (cached_has_bits & 0x00000800u) {
      owner_id_ = from.owner_id_;
    }
    if (cached_has_bits & 0x00001000u) {
      initial_period_ = from.initial_period_;
    }
    if (cached_has_bits & 0x00002000u) {
      initial_time_unit_ = from.initial_time_unit_;
    }
    if (cached_has_bits & 0x00004000u) {
      renewal_period_ = from.renewal_period_;
    }
    if (cached_has_bits & 0x00008000u) {
      renewal_time_unit_ = from.renewal_time_unit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLicenseList_License::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLicenseList.License)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLicenseList_License::CopyFrom(const CMsgClientLicenseList_License& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLicenseList.License)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLicenseList_License::IsInitialized() const {
  return true;
}

void CMsgClientLicenseList_License::Swap(CMsgClientLicenseList_License* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLicenseList_License::InternalSwap(CMsgClientLicenseList_License* other) {
  using std::swap;
  purchase_country_code_.Swap(&other->purchase_country_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_id_, other->package_id_);
  swap(time_created_, other->time_created_);
  swap(time_next_process_, other->time_next_process_);
  swap(minute_limit_, other->minute_limit_);
  swap(minutes_used_, other->minutes_used_);
  swap(payment_method_, other->payment_method_);
  swap(flags_, other->flags_);
  swap(license_type_, other->license_type_);
  swap(territory_code_, other->territory_code_);
  swap(change_number_, other->change_number_);
  swap(owner_id_, other->owner_id_);
  swap(initial_period_, other->initial_period_);
  swap(initial_time_unit_, other->initial_time_unit_);
  swap(renewal_period_, other->renewal_period_);
  swap(renewal_time_unit_, other->renewal_time_unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLicenseList_License::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLicenseList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLicenseList::kEresultFieldNumber;
const int CMsgClientLicenseList::kLicensesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLicenseList::CMsgClientLicenseList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLicenseList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLicenseList)
}
CMsgClientLicenseList::CMsgClientLicenseList(const CMsgClientLicenseList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      licenses_(from.licenses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientLicenseList)
}

void CMsgClientLicenseList::SharedCtor() {
  eresult_ = 2;
}

CMsgClientLicenseList::~CMsgClientLicenseList() {
  // @@protoc_insertion_point(destructor:CMsgClientLicenseList)
  SharedDtor();
}

void CMsgClientLicenseList::SharedDtor() {
}

void CMsgClientLicenseList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLicenseList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLicenseList& CMsgClientLicenseList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLicenseList.base);
  return *internal_default_instance();
}


void CMsgClientLicenseList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLicenseList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  licenses_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLicenseList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLicenseList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientLicenseList.License licenses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_licenses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLicenseList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLicenseList)
  return false;
#undef DO_
}

void CMsgClientLicenseList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLicenseList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .CMsgClientLicenseList.License licenses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->licenses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->licenses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLicenseList)
}

::google::protobuf::uint8* CMsgClientLicenseList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLicenseList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .CMsgClientLicenseList.License licenses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->licenses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->licenses(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLicenseList)
  return target;
}

size_t CMsgClientLicenseList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLicenseList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientLicenseList.License licenses = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->licenses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->licenses(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLicenseList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLicenseList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLicenseList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLicenseList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLicenseList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLicenseList)
    MergeFrom(*source);
  }
}

void CMsgClientLicenseList::MergeFrom(const CMsgClientLicenseList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLicenseList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  licenses_.MergeFrom(from.licenses_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientLicenseList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLicenseList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLicenseList::CopyFrom(const CMsgClientLicenseList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLicenseList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLicenseList::IsInitialized() const {
  return true;
}

void CMsgClientLicenseList::Swap(CMsgClientLicenseList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLicenseList::InternalSwap(CMsgClientLicenseList* other) {
  using std::swap;
  CastToBase(&licenses_)->InternalSwap(CastToBase(&other->licenses_));
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLicenseList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSSetScore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSSetScore::kAppIdFieldNumber;
const int CMsgClientLBSSetScore::kLeaderboardIdFieldNumber;
const int CMsgClientLBSSetScore::kScoreFieldNumber;
const int CMsgClientLBSSetScore::kDetailsFieldNumber;
const int CMsgClientLBSSetScore::kUploadScoreMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSSetScore::CMsgClientLBSSetScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetScore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSSetScore)
}
CMsgClientLBSSetScore::CMsgClientLBSSetScore(const CMsgClientLBSSetScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_details()) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&upload_score_method_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(upload_score_method_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSSetScore)
}

void CMsgClientLBSSetScore::SharedCtor() {
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upload_score_method_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(upload_score_method_));
}

CMsgClientLBSSetScore::~CMsgClientLBSSetScore() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSSetScore)
  SharedDtor();
}

void CMsgClientLBSSetScore::SharedDtor() {
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientLBSSetScore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSSetScore::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSSetScore& CMsgClientLBSSetScore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetScore.base);
  return *internal_default_instance();
}


void CMsgClientLBSSetScore::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSSetScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    details_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&upload_score_method_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(upload_score_method_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSSetScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSSetScore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 upload_score_method = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_upload_score_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upload_score_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSSetScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSSetScore)
  return false;
#undef DO_
}

void CMsgClientLBSSetScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSSetScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_id(), output);
  }

  // optional int32 score = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score(), output);
  }

  // optional bytes details = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->details(), output);
  }

  // optional int32 upload_score_method = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->upload_score_method(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSSetScore)
}

::google::protobuf::uint8* CMsgClientLBSSetScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSSetScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_id(), target);
  }

  // optional int32 score = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score(), target);
  }

  // optional bytes details = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->details(), target);
  }

  // optional int32 upload_score_method = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->upload_score_method(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSSetScore)
  return target;
}

size_t CMsgClientLBSSetScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSSetScore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes details = 4;
    if (has_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->details());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 leaderboard_id = 2;
    if (has_leaderboard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_id());
    }

    // optional int32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional int32 upload_score_method = 5;
    if (has_upload_score_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upload_score_method());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSSetScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSSetScore)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSSetScore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSSetScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSSetScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSSetScore)
    MergeFrom(*source);
  }
}

void CMsgClientLBSSetScore::MergeFrom(const CMsgClientLBSSetScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSSetScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_details();
      details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      leaderboard_id_ = from.leaderboard_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000010u) {
      upload_score_method_ = from.upload_score_method_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSSetScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSSetScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSSetScore::CopyFrom(const CMsgClientLBSSetScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSSetScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSSetScore::IsInitialized() const {
  return true;
}

void CMsgClientLBSSetScore::Swap(CMsgClientLBSSetScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSSetScore::InternalSwap(CMsgClientLBSSetScore* other) {
  using std::swap;
  details_.Swap(&other->details_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(leaderboard_id_, other->leaderboard_id_);
  swap(score_, other->score_);
  swap(upload_score_method_, other->upload_score_method_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSSetScore::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSSetScoreResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSSetScoreResponse::kEresultFieldNumber;
const int CMsgClientLBSSetScoreResponse::kLeaderboardEntryCountFieldNumber;
const int CMsgClientLBSSetScoreResponse::kScoreChangedFieldNumber;
const int CMsgClientLBSSetScoreResponse::kGlobalRankPreviousFieldNumber;
const int CMsgClientLBSSetScoreResponse::kGlobalRankNewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSSetScoreResponse::CMsgClientLBSSetScoreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetScoreResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSSetScoreResponse)
}
CMsgClientLBSSetScoreResponse::CMsgClientLBSSetScoreResponse(const CMsgClientLBSSetScoreResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&leaderboard_entry_count_, &from.leaderboard_entry_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&leaderboard_entry_count_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSSetScoreResponse)
}

void CMsgClientLBSSetScoreResponse::SharedCtor() {
  ::memset(&leaderboard_entry_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_rank_new_) -
      reinterpret_cast<char*>(&leaderboard_entry_count_)) + sizeof(global_rank_new_));
  eresult_ = 2;
}

CMsgClientLBSSetScoreResponse::~CMsgClientLBSSetScoreResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSSetScoreResponse)
  SharedDtor();
}

void CMsgClientLBSSetScoreResponse::SharedDtor() {
}

void CMsgClientLBSSetScoreResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSSetScoreResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSSetScoreResponse& CMsgClientLBSSetScoreResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetScoreResponse.base);
  return *internal_default_instance();
}


void CMsgClientLBSSetScoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSSetScoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&leaderboard_entry_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&global_rank_new_) -
        reinterpret_cast<char*>(&leaderboard_entry_count_)) + sizeof(global_rank_new_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSSetScoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSSetScoreResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_entry_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_entry_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_entry_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool score_changed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_score_changed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &score_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 global_rank_previous = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_global_rank_previous();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &global_rank_previous_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 global_rank_new = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_global_rank_new();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &global_rank_new_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSSetScoreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSSetScoreResponse)
  return false;
#undef DO_
}

void CMsgClientLBSSetScoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSSetScoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 leaderboard_entry_count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_entry_count(), output);
  }

  // optional bool score_changed = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->score_changed(), output);
  }

  // optional int32 global_rank_previous = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->global_rank_previous(), output);
  }

  // optional int32 global_rank_new = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->global_rank_new(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSSetScoreResponse)
}

::google::protobuf::uint8* CMsgClientLBSSetScoreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSSetScoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 leaderboard_entry_count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_entry_count(), target);
  }

  // optional bool score_changed = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->score_changed(), target);
  }

  // optional int32 global_rank_previous = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->global_rank_previous(), target);
  }

  // optional int32 global_rank_new = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->global_rank_new(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSSetScoreResponse)
  return target;
}

size_t CMsgClientLBSSetScoreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSSetScoreResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 leaderboard_entry_count = 2;
    if (has_leaderboard_entry_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_entry_count());
    }

    // optional bool score_changed = 3;
    if (has_score_changed()) {
      total_size += 1 + 1;
    }

    // optional int32 global_rank_previous = 4;
    if (has_global_rank_previous()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->global_rank_previous());
    }

    // optional int32 global_rank_new = 5;
    if (has_global_rank_new()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->global_rank_new());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSSetScoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSSetScoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSSetScoreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSSetScoreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSSetScoreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSSetScoreResponse)
    MergeFrom(*source);
  }
}

void CMsgClientLBSSetScoreResponse::MergeFrom(const CMsgClientLBSSetScoreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSSetScoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      leaderboard_entry_count_ = from.leaderboard_entry_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      score_changed_ = from.score_changed_;
    }
    if (cached_has_bits & 0x00000004u) {
      global_rank_previous_ = from.global_rank_previous_;
    }
    if (cached_has_bits & 0x00000008u) {
      global_rank_new_ = from.global_rank_new_;
    }
    if (cached_has_bits & 0x00000010u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSSetScoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSSetScoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSSetScoreResponse::CopyFrom(const CMsgClientLBSSetScoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSSetScoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSSetScoreResponse::IsInitialized() const {
  return true;
}

void CMsgClientLBSSetScoreResponse::Swap(CMsgClientLBSSetScoreResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSSetScoreResponse::InternalSwap(CMsgClientLBSSetScoreResponse* other) {
  using std::swap;
  swap(leaderboard_entry_count_, other->leaderboard_entry_count_);
  swap(score_changed_, other->score_changed_);
  swap(global_rank_previous_, other->global_rank_previous_);
  swap(global_rank_new_, other->global_rank_new_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSSetScoreResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSSetUGC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSSetUGC::kAppIdFieldNumber;
const int CMsgClientLBSSetUGC::kLeaderboardIdFieldNumber;
const int CMsgClientLBSSetUGC::kUgcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSSetUGC::CMsgClientLBSSetUGC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetUGC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSSetUGC)
}
CMsgClientLBSSetUGC::CMsgClientLBSSetUGC(const CMsgClientLBSSetUGC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_id_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(ugc_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSSetUGC)
}

void CMsgClientLBSSetUGC::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_id_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(ugc_id_));
}

CMsgClientLBSSetUGC::~CMsgClientLBSSetUGC() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSSetUGC)
  SharedDtor();
}

void CMsgClientLBSSetUGC::SharedDtor() {
}

void CMsgClientLBSSetUGC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSSetUGC::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSSetUGC& CMsgClientLBSSetUGC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetUGC.base);
  return *internal_default_instance();
}


void CMsgClientLBSSetUGC::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSSetUGC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ugc_id_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(ugc_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSSetUGC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSSetUGC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 ugc_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_ugc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &ugc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSSetUGC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSSetUGC)
  return false;
#undef DO_
}

void CMsgClientLBSSetUGC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSSetUGC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_id(), output);
  }

  // optional fixed64 ugc_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->ugc_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSSetUGC)
}

::google::protobuf::uint8* CMsgClientLBSSetUGC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSSetUGC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_id(), target);
  }

  // optional fixed64 ugc_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->ugc_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSSetUGC)
  return target;
}

size_t CMsgClientLBSSetUGC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSSetUGC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 leaderboard_id = 2;
    if (has_leaderboard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_id());
    }

    // optional fixed64 ugc_id = 3;
    if (has_ugc_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSSetUGC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSSetUGC)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSSetUGC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSSetUGC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSSetUGC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSSetUGC)
    MergeFrom(*source);
  }
}

void CMsgClientLBSSetUGC::MergeFrom(const CMsgClientLBSSetUGC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSSetUGC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      leaderboard_id_ = from.leaderboard_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      ugc_id_ = from.ugc_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSSetUGC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSSetUGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSSetUGC::CopyFrom(const CMsgClientLBSSetUGC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSSetUGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSSetUGC::IsInitialized() const {
  return true;
}

void CMsgClientLBSSetUGC::Swap(CMsgClientLBSSetUGC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSSetUGC::InternalSwap(CMsgClientLBSSetUGC* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(leaderboard_id_, other->leaderboard_id_);
  swap(ugc_id_, other->ugc_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSSetUGC::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSSetUGCResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSSetUGCResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSSetUGCResponse::CMsgClientLBSSetUGCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetUGCResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSSetUGCResponse)
}
CMsgClientLBSSetUGCResponse::CMsgClientLBSSetUGCResponse(const CMsgClientLBSSetUGCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSSetUGCResponse)
}

void CMsgClientLBSSetUGCResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientLBSSetUGCResponse::~CMsgClientLBSSetUGCResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSSetUGCResponse)
  SharedDtor();
}

void CMsgClientLBSSetUGCResponse::SharedDtor() {
}

void CMsgClientLBSSetUGCResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSSetUGCResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSSetUGCResponse& CMsgClientLBSSetUGCResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSSetUGCResponse.base);
  return *internal_default_instance();
}


void CMsgClientLBSSetUGCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSSetUGCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSSetUGCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSSetUGCResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSSetUGCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSSetUGCResponse)
  return false;
#undef DO_
}

void CMsgClientLBSSetUGCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSSetUGCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSSetUGCResponse)
}

::google::protobuf::uint8* CMsgClientLBSSetUGCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSSetUGCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSSetUGCResponse)
  return target;
}

size_t CMsgClientLBSSetUGCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSSetUGCResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSSetUGCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSSetUGCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSSetUGCResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSSetUGCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSSetUGCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSSetUGCResponse)
    MergeFrom(*source);
  }
}

void CMsgClientLBSSetUGCResponse::MergeFrom(const CMsgClientLBSSetUGCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSSetUGCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientLBSSetUGCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSSetUGCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSSetUGCResponse::CopyFrom(const CMsgClientLBSSetUGCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSSetUGCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSSetUGCResponse::IsInitialized() const {
  return true;
}

void CMsgClientLBSSetUGCResponse::Swap(CMsgClientLBSSetUGCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSSetUGCResponse::InternalSwap(CMsgClientLBSSetUGCResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSSetUGCResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSFindOrCreateLB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSFindOrCreateLB::kAppIdFieldNumber;
const int CMsgClientLBSFindOrCreateLB::kLeaderboardSortMethodFieldNumber;
const int CMsgClientLBSFindOrCreateLB::kLeaderboardDisplayTypeFieldNumber;
const int CMsgClientLBSFindOrCreateLB::kCreateIfNotFoundFieldNumber;
const int CMsgClientLBSFindOrCreateLB::kLeaderboardNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSFindOrCreateLB::CMsgClientLBSFindOrCreateLB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSFindOrCreateLB.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSFindOrCreateLB)
}
CMsgClientLBSFindOrCreateLB::CMsgClientLBSFindOrCreateLB(const CMsgClientLBSFindOrCreateLB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leaderboard_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leaderboard_name()) {
    leaderboard_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderboard_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&create_if_not_found_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(create_if_not_found_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSFindOrCreateLB)
}

void CMsgClientLBSFindOrCreateLB::SharedCtor() {
  leaderboard_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_if_not_found_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(create_if_not_found_));
}

CMsgClientLBSFindOrCreateLB::~CMsgClientLBSFindOrCreateLB() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSFindOrCreateLB)
  SharedDtor();
}

void CMsgClientLBSFindOrCreateLB::SharedDtor() {
  leaderboard_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientLBSFindOrCreateLB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSFindOrCreateLB::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSFindOrCreateLB& CMsgClientLBSFindOrCreateLB::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSFindOrCreateLB.base);
  return *internal_default_instance();
}


void CMsgClientLBSFindOrCreateLB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSFindOrCreateLB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    leaderboard_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&create_if_not_found_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(create_if_not_found_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSFindOrCreateLB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSFindOrCreateLB)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_sort_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_sort_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_sort_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_display_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_leaderboard_display_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_display_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool create_if_not_found = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_create_if_not_found();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_if_not_found_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string leaderboard_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leaderboard_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leaderboard_name().data(), static_cast<int>(this->leaderboard_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientLBSFindOrCreateLB.leaderboard_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSFindOrCreateLB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSFindOrCreateLB)
  return false;
#undef DO_
}

void CMsgClientLBSFindOrCreateLB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSFindOrCreateLB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 leaderboard_sort_method = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_sort_method(), output);
  }

  // optional int32 leaderboard_display_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->leaderboard_display_type(), output);
  }

  // optional bool create_if_not_found = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->create_if_not_found(), output);
  }

  // optional string leaderboard_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leaderboard_name().data(), static_cast<int>(this->leaderboard_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientLBSFindOrCreateLB.leaderboard_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->leaderboard_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSFindOrCreateLB)
}

::google::protobuf::uint8* CMsgClientLBSFindOrCreateLB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSFindOrCreateLB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 leaderboard_sort_method = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_sort_method(), target);
  }

  // optional int32 leaderboard_display_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->leaderboard_display_type(), target);
  }

  // optional bool create_if_not_found = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->create_if_not_found(), target);
  }

  // optional string leaderboard_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leaderboard_name().data(), static_cast<int>(this->leaderboard_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientLBSFindOrCreateLB.leaderboard_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->leaderboard_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSFindOrCreateLB)
  return target;
}

size_t CMsgClientLBSFindOrCreateLB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSFindOrCreateLB)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string leaderboard_name = 5;
    if (has_leaderboard_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leaderboard_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 leaderboard_sort_method = 2;
    if (has_leaderboard_sort_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_sort_method());
    }

    // optional int32 leaderboard_display_type = 3;
    if (has_leaderboard_display_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_display_type());
    }

    // optional bool create_if_not_found = 4;
    if (has_create_if_not_found()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSFindOrCreateLB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSFindOrCreateLB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSFindOrCreateLB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSFindOrCreateLB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSFindOrCreateLB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSFindOrCreateLB)
    MergeFrom(*source);
  }
}

void CMsgClientLBSFindOrCreateLB::MergeFrom(const CMsgClientLBSFindOrCreateLB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSFindOrCreateLB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leaderboard_name();
      leaderboard_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderboard_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      leaderboard_sort_method_ = from.leaderboard_sort_method_;
    }
    if (cached_has_bits & 0x00000008u) {
      leaderboard_display_type_ = from.leaderboard_display_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      create_if_not_found_ = from.create_if_not_found_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSFindOrCreateLB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSFindOrCreateLB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSFindOrCreateLB::CopyFrom(const CMsgClientLBSFindOrCreateLB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSFindOrCreateLB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSFindOrCreateLB::IsInitialized() const {
  return true;
}

void CMsgClientLBSFindOrCreateLB::Swap(CMsgClientLBSFindOrCreateLB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSFindOrCreateLB::InternalSwap(CMsgClientLBSFindOrCreateLB* other) {
  using std::swap;
  leaderboard_name_.Swap(&other->leaderboard_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(leaderboard_sort_method_, other->leaderboard_sort_method_);
  swap(leaderboard_display_type_, other->leaderboard_display_type_);
  swap(create_if_not_found_, other->create_if_not_found_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSFindOrCreateLB::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSFindOrCreateLBResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSFindOrCreateLBResponse::kEresultFieldNumber;
const int CMsgClientLBSFindOrCreateLBResponse::kLeaderboardIdFieldNumber;
const int CMsgClientLBSFindOrCreateLBResponse::kLeaderboardEntryCountFieldNumber;
const int CMsgClientLBSFindOrCreateLBResponse::kLeaderboardSortMethodFieldNumber;
const int CMsgClientLBSFindOrCreateLBResponse::kLeaderboardDisplayTypeFieldNumber;
const int CMsgClientLBSFindOrCreateLBResponse::kLeaderboardNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSFindOrCreateLBResponse::CMsgClientLBSFindOrCreateLBResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSFindOrCreateLBResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSFindOrCreateLBResponse)
}
CMsgClientLBSFindOrCreateLBResponse::CMsgClientLBSFindOrCreateLBResponse(const CMsgClientLBSFindOrCreateLBResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leaderboard_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leaderboard_name()) {
    leaderboard_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderboard_name_);
  }
  ::memcpy(&leaderboard_id_, &from.leaderboard_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&leaderboard_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSFindOrCreateLBResponse)
}

void CMsgClientLBSFindOrCreateLBResponse::SharedCtor() {
  leaderboard_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&leaderboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leaderboard_display_type_) -
      reinterpret_cast<char*>(&leaderboard_id_)) + sizeof(leaderboard_display_type_));
  eresult_ = 2;
}

CMsgClientLBSFindOrCreateLBResponse::~CMsgClientLBSFindOrCreateLBResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSFindOrCreateLBResponse)
  SharedDtor();
}

void CMsgClientLBSFindOrCreateLBResponse::SharedDtor() {
  leaderboard_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientLBSFindOrCreateLBResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSFindOrCreateLBResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSFindOrCreateLBResponse& CMsgClientLBSFindOrCreateLBResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSFindOrCreateLBResponse.base);
  return *internal_default_instance();
}


void CMsgClientLBSFindOrCreateLBResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSFindOrCreateLBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    leaderboard_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&leaderboard_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leaderboard_display_type_) -
        reinterpret_cast<char*>(&leaderboard_id_)) + sizeof(leaderboard_display_type_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSFindOrCreateLBResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSFindOrCreateLBResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_entry_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_leaderboard_entry_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_entry_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_sort_method = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_leaderboard_sort_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_sort_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_display_type = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_leaderboard_display_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_display_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string leaderboard_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leaderboard_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leaderboard_name().data(), static_cast<int>(this->leaderboard_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientLBSFindOrCreateLBResponse.leaderboard_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSFindOrCreateLBResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSFindOrCreateLBResponse)
  return false;
#undef DO_
}

void CMsgClientLBSFindOrCreateLBResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSFindOrCreateLBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_id(), output);
  }

  // optional int32 leaderboard_entry_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->leaderboard_entry_count(), output);
  }

  // optional int32 leaderboard_sort_method = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->leaderboard_sort_method(), output);
  }

  // optional int32 leaderboard_display_type = 5 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->leaderboard_display_type(), output);
  }

  // optional string leaderboard_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leaderboard_name().data(), static_cast<int>(this->leaderboard_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientLBSFindOrCreateLBResponse.leaderboard_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->leaderboard_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSFindOrCreateLBResponse)
}

::google::protobuf::uint8* CMsgClientLBSFindOrCreateLBResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSFindOrCreateLBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_id(), target);
  }

  // optional int32 leaderboard_entry_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->leaderboard_entry_count(), target);
  }

  // optional int32 leaderboard_sort_method = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->leaderboard_sort_method(), target);
  }

  // optional int32 leaderboard_display_type = 5 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->leaderboard_display_type(), target);
  }

  // optional string leaderboard_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leaderboard_name().data(), static_cast<int>(this->leaderboard_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientLBSFindOrCreateLBResponse.leaderboard_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->leaderboard_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSFindOrCreateLBResponse)
  return target;
}

size_t CMsgClientLBSFindOrCreateLBResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSFindOrCreateLBResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string leaderboard_name = 6;
    if (has_leaderboard_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leaderboard_name());
    }

    // optional int32 leaderboard_id = 2;
    if (has_leaderboard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_id());
    }

    // optional int32 leaderboard_entry_count = 3;
    if (has_leaderboard_entry_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_entry_count());
    }

    // optional int32 leaderboard_sort_method = 4 [default = 0];
    if (has_leaderboard_sort_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_sort_method());
    }

    // optional int32 leaderboard_display_type = 5 [default = 0];
    if (has_leaderboard_display_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_display_type());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSFindOrCreateLBResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSFindOrCreateLBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSFindOrCreateLBResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSFindOrCreateLBResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSFindOrCreateLBResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSFindOrCreateLBResponse)
    MergeFrom(*source);
  }
}

void CMsgClientLBSFindOrCreateLBResponse::MergeFrom(const CMsgClientLBSFindOrCreateLBResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSFindOrCreateLBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leaderboard_name();
      leaderboard_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderboard_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      leaderboard_id_ = from.leaderboard_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      leaderboard_entry_count_ = from.leaderboard_entry_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      leaderboard_sort_method_ = from.leaderboard_sort_method_;
    }
    if (cached_has_bits & 0x00000010u) {
      leaderboard_display_type_ = from.leaderboard_display_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSFindOrCreateLBResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSFindOrCreateLBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSFindOrCreateLBResponse::CopyFrom(const CMsgClientLBSFindOrCreateLBResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSFindOrCreateLBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSFindOrCreateLBResponse::IsInitialized() const {
  return true;
}

void CMsgClientLBSFindOrCreateLBResponse::Swap(CMsgClientLBSFindOrCreateLBResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSFindOrCreateLBResponse::InternalSwap(CMsgClientLBSFindOrCreateLBResponse* other) {
  using std::swap;
  leaderboard_name_.Swap(&other->leaderboard_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(leaderboard_id_, other->leaderboard_id_);
  swap(leaderboard_entry_count_, other->leaderboard_entry_count_);
  swap(leaderboard_sort_method_, other->leaderboard_sort_method_);
  swap(leaderboard_display_type_, other->leaderboard_display_type_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSFindOrCreateLBResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSGetLBEntries::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSGetLBEntries::kAppIdFieldNumber;
const int CMsgClientLBSGetLBEntries::kLeaderboardIdFieldNumber;
const int CMsgClientLBSGetLBEntries::kRangeStartFieldNumber;
const int CMsgClientLBSGetLBEntries::kRangeEndFieldNumber;
const int CMsgClientLBSGetLBEntries::kLeaderboardDataRequestFieldNumber;
const int CMsgClientLBSGetLBEntries::kSteamidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSGetLBEntries::CMsgClientLBSGetLBEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntries.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSGetLBEntries)
}
CMsgClientLBSGetLBEntries::CMsgClientLBSGetLBEntries(const CMsgClientLBSGetLBEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steamids_(from.steamids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&leaderboard_data_request_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(leaderboard_data_request_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSGetLBEntries)
}

void CMsgClientLBSGetLBEntries::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leaderboard_data_request_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(leaderboard_data_request_));
}

CMsgClientLBSGetLBEntries::~CMsgClientLBSGetLBEntries() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSGetLBEntries)
  SharedDtor();
}

void CMsgClientLBSGetLBEntries::SharedDtor() {
}

void CMsgClientLBSGetLBEntries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSGetLBEntries::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSGetLBEntries& CMsgClientLBSGetLBEntries::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntries.base);
  return *internal_default_instance();
}


void CMsgClientLBSGetLBEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSGetLBEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leaderboard_data_request_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(leaderboard_data_request_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSGetLBEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSGetLBEntries)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 range_start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_range_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 range_end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_range_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_data_request = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_leaderboard_data_request();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_data_request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 49u, input, this->mutable_steamids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSGetLBEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSGetLBEntries)
  return false;
#undef DO_
}

void CMsgClientLBSGetLBEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSGetLBEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->app_id(), output);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_id(), output);
  }

  // optional int32 range_start = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->range_start(), output);
  }

  // optional int32 range_end = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->range_end(), output);
  }

  // optional int32 leaderboard_data_request = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->leaderboard_data_request(), output);
  }

  // repeated fixed64 steamids = 6;
  for (int i = 0, n = this->steamids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      6, this->steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSGetLBEntries)
}

::google::protobuf::uint8* CMsgClientLBSGetLBEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSGetLBEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 leaderboard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_id(), target);
  }

  // optional int32 range_start = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->range_start(), target);
  }

  // optional int32 range_end = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->range_end(), target);
  }

  // optional int32 leaderboard_data_request = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->leaderboard_data_request(), target);
  }

  // repeated fixed64 steamids = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(6, this->steamids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSGetLBEntries)
  return target;
}

size_t CMsgClientLBSGetLBEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSGetLBEntries)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamids = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->steamids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_id());
    }

    // optional int32 leaderboard_id = 2;
    if (has_leaderboard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_id());
    }

    // optional int32 range_start = 3;
    if (has_range_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->range_start());
    }

    // optional int32 range_end = 4;
    if (has_range_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->range_end());
    }

    // optional int32 leaderboard_data_request = 5;
    if (has_leaderboard_data_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_data_request());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSGetLBEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSGetLBEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSGetLBEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSGetLBEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSGetLBEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSGetLBEntries)
    MergeFrom(*source);
  }
}

void CMsgClientLBSGetLBEntries::MergeFrom(const CMsgClientLBSGetLBEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSGetLBEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamids_.MergeFrom(from.steamids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      leaderboard_id_ = from.leaderboard_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      range_start_ = from.range_start_;
    }
    if (cached_has_bits & 0x00000008u) {
      range_end_ = from.range_end_;
    }
    if (cached_has_bits & 0x00000010u) {
      leaderboard_data_request_ = from.leaderboard_data_request_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSGetLBEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSGetLBEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSGetLBEntries::CopyFrom(const CMsgClientLBSGetLBEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSGetLBEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSGetLBEntries::IsInitialized() const {
  return true;
}

void CMsgClientLBSGetLBEntries::Swap(CMsgClientLBSGetLBEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSGetLBEntries::InternalSwap(CMsgClientLBSGetLBEntries* other) {
  using std::swap;
  steamids_.InternalSwap(&other->steamids_);
  swap(app_id_, other->app_id_);
  swap(leaderboard_id_, other->leaderboard_id_);
  swap(range_start_, other->range_start_);
  swap(range_end_, other->range_end_);
  swap(leaderboard_data_request_, other->leaderboard_data_request_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSGetLBEntries::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSGetLBEntriesResponse_Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSGetLBEntriesResponse_Entry::kSteamIdUserFieldNumber;
const int CMsgClientLBSGetLBEntriesResponse_Entry::kGlobalRankFieldNumber;
const int CMsgClientLBSGetLBEntriesResponse_Entry::kScoreFieldNumber;
const int CMsgClientLBSGetLBEntriesResponse_Entry::kDetailsFieldNumber;
const int CMsgClientLBSGetLBEntriesResponse_Entry::kUgcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSGetLBEntriesResponse_Entry::CMsgClientLBSGetLBEntriesResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntriesResponse_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSGetLBEntriesResponse.Entry)
}
CMsgClientLBSGetLBEntriesResponse_Entry::CMsgClientLBSGetLBEntriesResponse_Entry(const CMsgClientLBSGetLBEntriesResponse_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_details()) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  ::memcpy(&steam_id_user_, &from.steam_id_user_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_id_) -
    reinterpret_cast<char*>(&steam_id_user_)) + sizeof(ugc_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSGetLBEntriesResponse.Entry)
}

void CMsgClientLBSGetLBEntriesResponse_Entry::SharedCtor() {
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_id_) -
      reinterpret_cast<char*>(&steam_id_user_)) + sizeof(ugc_id_));
}

CMsgClientLBSGetLBEntriesResponse_Entry::~CMsgClientLBSGetLBEntriesResponse_Entry() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSGetLBEntriesResponse.Entry)
  SharedDtor();
}

void CMsgClientLBSGetLBEntriesResponse_Entry::SharedDtor() {
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientLBSGetLBEntriesResponse_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSGetLBEntriesResponse_Entry::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSGetLBEntriesResponse_Entry& CMsgClientLBSGetLBEntriesResponse_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntriesResponse_Entry.base);
  return *internal_default_instance();
}


void CMsgClientLBSGetLBEntriesResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    details_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&steam_id_user_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ugc_id_) -
        reinterpret_cast<char*>(&steam_id_user_)) + sizeof(ugc_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSGetLBEntriesResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 global_rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_global_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &global_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 ugc_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_ugc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &ugc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSGetLBEntriesResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSGetLBEntriesResponse.Entry)
  return false;
#undef DO_
}

void CMsgClientLBSGetLBEntriesResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_user = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_user(), output);
  }

  // optional int32 global_rank = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->global_rank(), output);
  }

  // optional int32 score = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score(), output);
  }

  // optional bytes details = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->details(), output);
  }

  // optional fixed64 ugc_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->ugc_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSGetLBEntriesResponse.Entry)
}

::google::protobuf::uint8* CMsgClientLBSGetLBEntriesResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_user = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_user(), target);
  }

  // optional int32 global_rank = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->global_rank(), target);
  }

  // optional int32 score = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score(), target);
  }

  // optional bytes details = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->details(), target);
  }

  // optional fixed64 ugc_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->ugc_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSGetLBEntriesResponse.Entry)
  return target;
}

size_t CMsgClientLBSGetLBEntriesResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes details = 4;
    if (has_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->details());
    }

    // optional fixed64 steam_id_user = 1;
    if (has_steam_id_user()) {
      total_size += 1 + 8;
    }

    // optional int32 global_rank = 2;
    if (has_global_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->global_rank());
    }

    // optional int32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional fixed64 ugc_id = 5;
    if (has_ugc_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSGetLBEntriesResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSGetLBEntriesResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSGetLBEntriesResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSGetLBEntriesResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSGetLBEntriesResponse.Entry)
    MergeFrom(*source);
  }
}

void CMsgClientLBSGetLBEntriesResponse_Entry::MergeFrom(const CMsgClientLBSGetLBEntriesResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_details();
      details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_user_ = from.steam_id_user_;
    }
    if (cached_has_bits & 0x00000004u) {
      global_rank_ = from.global_rank_;
    }
    if (cached_has_bits & 0x00000008u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000010u) {
      ugc_id_ = from.ugc_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSGetLBEntriesResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSGetLBEntriesResponse_Entry::CopyFrom(const CMsgClientLBSGetLBEntriesResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSGetLBEntriesResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSGetLBEntriesResponse_Entry::IsInitialized() const {
  return true;
}

void CMsgClientLBSGetLBEntriesResponse_Entry::Swap(CMsgClientLBSGetLBEntriesResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSGetLBEntriesResponse_Entry::InternalSwap(CMsgClientLBSGetLBEntriesResponse_Entry* other) {
  using std::swap;
  details_.Swap(&other->details_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_user_, other->steam_id_user_);
  swap(global_rank_, other->global_rank_);
  swap(score_, other->score_);
  swap(ugc_id_, other->ugc_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSGetLBEntriesResponse_Entry::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientLBSGetLBEntriesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientLBSGetLBEntriesResponse::kEresultFieldNumber;
const int CMsgClientLBSGetLBEntriesResponse::kLeaderboardEntryCountFieldNumber;
const int CMsgClientLBSGetLBEntriesResponse::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientLBSGetLBEntriesResponse::CMsgClientLBSGetLBEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntriesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientLBSGetLBEntriesResponse)
}
CMsgClientLBSGetLBEntriesResponse::CMsgClientLBSGetLBEntriesResponse(const CMsgClientLBSGetLBEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&leaderboard_entry_count_, &from.leaderboard_entry_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&leaderboard_entry_count_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientLBSGetLBEntriesResponse)
}

void CMsgClientLBSGetLBEntriesResponse::SharedCtor() {
  leaderboard_entry_count_ = 0;
  eresult_ = 2;
}

CMsgClientLBSGetLBEntriesResponse::~CMsgClientLBSGetLBEntriesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientLBSGetLBEntriesResponse)
  SharedDtor();
}

void CMsgClientLBSGetLBEntriesResponse::SharedDtor() {
}

void CMsgClientLBSGetLBEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientLBSGetLBEntriesResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientLBSGetLBEntriesResponse& CMsgClientLBSGetLBEntriesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientLBSGetLBEntriesResponse.base);
  return *internal_default_instance();
}


void CMsgClientLBSGetLBEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientLBSGetLBEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    leaderboard_entry_count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientLBSGetLBEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientLBSGetLBEntriesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leaderboard_entry_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leaderboard_entry_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leaderboard_entry_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientLBSGetLBEntriesResponse.Entry entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientLBSGetLBEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientLBSGetLBEntriesResponse)
  return false;
#undef DO_
}

void CMsgClientLBSGetLBEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientLBSGetLBEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 leaderboard_entry_count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leaderboard_entry_count(), output);
  }

  // repeated .CMsgClientLBSGetLBEntriesResponse.Entry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientLBSGetLBEntriesResponse)
}

::google::protobuf::uint8* CMsgClientLBSGetLBEntriesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientLBSGetLBEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 leaderboard_entry_count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leaderboard_entry_count(), target);
  }

  // repeated .CMsgClientLBSGetLBEntriesResponse.Entry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientLBSGetLBEntriesResponse)
  return target;
}

size_t CMsgClientLBSGetLBEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientLBSGetLBEntriesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientLBSGetLBEntriesResponse.Entry entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 leaderboard_entry_count = 2;
    if (has_leaderboard_entry_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leaderboard_entry_count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientLBSGetLBEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientLBSGetLBEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientLBSGetLBEntriesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientLBSGetLBEntriesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientLBSGetLBEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientLBSGetLBEntriesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientLBSGetLBEntriesResponse::MergeFrom(const CMsgClientLBSGetLBEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientLBSGetLBEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      leaderboard_entry_count_ = from.leaderboard_entry_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientLBSGetLBEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientLBSGetLBEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientLBSGetLBEntriesResponse::CopyFrom(const CMsgClientLBSGetLBEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientLBSGetLBEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientLBSGetLBEntriesResponse::IsInitialized() const {
  return true;
}

void CMsgClientLBSGetLBEntriesResponse::Swap(CMsgClientLBSGetLBEntriesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientLBSGetLBEntriesResponse::InternalSwap(CMsgClientLBSGetLBEntriesResponse* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(leaderboard_entry_count_, other->leaderboard_entry_count_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientLBSGetLBEntriesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::kAppIdFieldNumber;
const int CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::kForeverFieldNumber;
const int CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::kLastTwoWeeksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
}
CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData(const CMsgClientAppMinutesPlayedData_AppMinutesPlayedData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_two_weeks_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(last_two_weeks_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_two_weeks_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(last_two_weeks_));
}

CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::~CMsgClientAppMinutesPlayedData_AppMinutesPlayedData() {
  // @@protoc_insertion_point(destructor:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  SharedDtor();
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::SharedDtor() {
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppMinutesPlayedData_AppMinutesPlayedData& CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData.base);
  return *internal_default_instance();
}


void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_two_weeks_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(last_two_weeks_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 forever = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_forever();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &forever_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 last_two_weeks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_last_two_weeks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_two_weeks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  return false;
#undef DO_
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 forever = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->forever(), output);
  }

  // optional int32 last_two_weeks = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last_two_weeks(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
}

::google::protobuf::uint8* CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 forever = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->forever(), target);
  }

  // optional int32 last_two_weeks = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last_two_weeks(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  return target;
}

size_t CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 forever = 2;
    if (has_forever()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->forever());
    }

    // optional int32 last_two_weeks = 3;
    if (has_last_two_weeks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_two_weeks());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppMinutesPlayedData_AppMinutesPlayedData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppMinutesPlayedData_AppMinutesPlayedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
    MergeFrom(*source);
  }
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::MergeFrom(const CMsgClientAppMinutesPlayedData_AppMinutesPlayedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      forever_ = from.forever_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_two_weeks_ = from.last_two_weeks_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::CopyFrom(const CMsgClientAppMinutesPlayedData_AppMinutesPlayedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::IsInitialized() const {
  return true;
}

void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::Swap(CMsgClientAppMinutesPlayedData_AppMinutesPlayedData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::InternalSwap(CMsgClientAppMinutesPlayedData_AppMinutesPlayedData* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(forever_, other->forever_);
  swap(last_two_weeks_, other->last_two_weeks_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppMinutesPlayedData_AppMinutesPlayedData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppMinutesPlayedData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppMinutesPlayedData::kMinutesPlayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppMinutesPlayedData::CMsgClientAppMinutesPlayedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppMinutesPlayedData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppMinutesPlayedData)
}
CMsgClientAppMinutesPlayedData::CMsgClientAppMinutesPlayedData(const CMsgClientAppMinutesPlayedData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      minutes_played_(from.minutes_played_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppMinutesPlayedData)
}

void CMsgClientAppMinutesPlayedData::SharedCtor() {
}

CMsgClientAppMinutesPlayedData::~CMsgClientAppMinutesPlayedData() {
  // @@protoc_insertion_point(destructor:CMsgClientAppMinutesPlayedData)
  SharedDtor();
}

void CMsgClientAppMinutesPlayedData::SharedDtor() {
}

void CMsgClientAppMinutesPlayedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppMinutesPlayedData::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppMinutesPlayedData& CMsgClientAppMinutesPlayedData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppMinutesPlayedData.base);
  return *internal_default_instance();
}


void CMsgClientAppMinutesPlayedData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppMinutesPlayedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  minutes_played_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppMinutesPlayedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppMinutesPlayedData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientAppMinutesPlayedData.AppMinutesPlayedData minutes_played = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_minutes_played()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppMinutesPlayedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppMinutesPlayedData)
  return false;
#undef DO_
}

void CMsgClientAppMinutesPlayedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppMinutesPlayedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAppMinutesPlayedData.AppMinutesPlayedData minutes_played = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->minutes_played_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->minutes_played(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppMinutesPlayedData)
}

::google::protobuf::uint8* CMsgClientAppMinutesPlayedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppMinutesPlayedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAppMinutesPlayedData.AppMinutesPlayedData minutes_played = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->minutes_played_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->minutes_played(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppMinutesPlayedData)
  return target;
}

size_t CMsgClientAppMinutesPlayedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppMinutesPlayedData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAppMinutesPlayedData.AppMinutesPlayedData minutes_played = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->minutes_played_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->minutes_played(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppMinutesPlayedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppMinutesPlayedData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppMinutesPlayedData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppMinutesPlayedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppMinutesPlayedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppMinutesPlayedData)
    MergeFrom(*source);
  }
}

void CMsgClientAppMinutesPlayedData::MergeFrom(const CMsgClientAppMinutesPlayedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppMinutesPlayedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  minutes_played_.MergeFrom(from.minutes_played_);
}

void CMsgClientAppMinutesPlayedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppMinutesPlayedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppMinutesPlayedData::CopyFrom(const CMsgClientAppMinutesPlayedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppMinutesPlayedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppMinutesPlayedData::IsInitialized() const {
  return true;
}

void CMsgClientAppMinutesPlayedData::Swap(CMsgClientAppMinutesPlayedData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppMinutesPlayedData::InternalSwap(CMsgClientAppMinutesPlayedData* other) {
  using std::swap;
  CastToBase(&minutes_played_)->InternalSwap(CastToBase(&other->minutes_played_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppMinutesPlayedData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientIsLimitedAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientIsLimitedAccount::kBisLimitedAccountFieldNumber;
const int CMsgClientIsLimitedAccount::kBisCommunityBannedFieldNumber;
const int CMsgClientIsLimitedAccount::kBisLockedAccountFieldNumber;
const int CMsgClientIsLimitedAccount::kBisLimitedAccountAllowedToInviteFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientIsLimitedAccount::CMsgClientIsLimitedAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientIsLimitedAccount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientIsLimitedAccount)
}
CMsgClientIsLimitedAccount::CMsgClientIsLimitedAccount(const CMsgClientIsLimitedAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bis_limited_account_, &from.bis_limited_account_,
    static_cast<size_t>(reinterpret_cast<char*>(&bis_limited_account_allowed_to_invite_friends_) -
    reinterpret_cast<char*>(&bis_limited_account_)) + sizeof(bis_limited_account_allowed_to_invite_friends_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientIsLimitedAccount)
}

void CMsgClientIsLimitedAccount::SharedCtor() {
  ::memset(&bis_limited_account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bis_limited_account_allowed_to_invite_friends_) -
      reinterpret_cast<char*>(&bis_limited_account_)) + sizeof(bis_limited_account_allowed_to_invite_friends_));
}

CMsgClientIsLimitedAccount::~CMsgClientIsLimitedAccount() {
  // @@protoc_insertion_point(destructor:CMsgClientIsLimitedAccount)
  SharedDtor();
}

void CMsgClientIsLimitedAccount::SharedDtor() {
}

void CMsgClientIsLimitedAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientIsLimitedAccount::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientIsLimitedAccount& CMsgClientIsLimitedAccount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientIsLimitedAccount.base);
  return *internal_default_instance();
}


void CMsgClientIsLimitedAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientIsLimitedAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bis_limited_account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bis_limited_account_allowed_to_invite_friends_) -
      reinterpret_cast<char*>(&bis_limited_account_)) + sizeof(bis_limited_account_allowed_to_invite_friends_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientIsLimitedAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientIsLimitedAccount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bis_limited_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bis_limited_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bis_limited_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bis_community_banned = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bis_community_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bis_community_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bis_locked_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bis_locked_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bis_locked_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bis_limited_account_allowed_to_invite_friends = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bis_limited_account_allowed_to_invite_friends();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bis_limited_account_allowed_to_invite_friends_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientIsLimitedAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientIsLimitedAccount)
  return false;
#undef DO_
}

void CMsgClientIsLimitedAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientIsLimitedAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bis_limited_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bis_limited_account(), output);
  }

  // optional bool bis_community_banned = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bis_community_banned(), output);
  }

  // optional bool bis_locked_account = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bis_locked_account(), output);
  }

  // optional bool bis_limited_account_allowed_to_invite_friends = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bis_limited_account_allowed_to_invite_friends(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientIsLimitedAccount)
}

::google::protobuf::uint8* CMsgClientIsLimitedAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientIsLimitedAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bis_limited_account = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bis_limited_account(), target);
  }

  // optional bool bis_community_banned = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bis_community_banned(), target);
  }

  // optional bool bis_locked_account = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bis_locked_account(), target);
  }

  // optional bool bis_limited_account_allowed_to_invite_friends = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bis_limited_account_allowed_to_invite_friends(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientIsLimitedAccount)
  return target;
}

size_t CMsgClientIsLimitedAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientIsLimitedAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bool bis_limited_account = 1;
    if (has_bis_limited_account()) {
      total_size += 1 + 1;
    }

    // optional bool bis_community_banned = 2;
    if (has_bis_community_banned()) {
      total_size += 1 + 1;
    }

    // optional bool bis_locked_account = 3;
    if (has_bis_locked_account()) {
      total_size += 1 + 1;
    }

    // optional bool bis_limited_account_allowed_to_invite_friends = 4;
    if (has_bis_limited_account_allowed_to_invite_friends()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientIsLimitedAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientIsLimitedAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientIsLimitedAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientIsLimitedAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientIsLimitedAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientIsLimitedAccount)
    MergeFrom(*source);
  }
}

void CMsgClientIsLimitedAccount::MergeFrom(const CMsgClientIsLimitedAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientIsLimitedAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      bis_limited_account_ = from.bis_limited_account_;
    }
    if (cached_has_bits & 0x00000002u) {
      bis_community_banned_ = from.bis_community_banned_;
    }
    if (cached_has_bits & 0x00000004u) {
      bis_locked_account_ = from.bis_locked_account_;
    }
    if (cached_has_bits & 0x00000008u) {
      bis_limited_account_allowed_to_invite_friends_ = from.bis_limited_account_allowed_to_invite_friends_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientIsLimitedAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientIsLimitedAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientIsLimitedAccount::CopyFrom(const CMsgClientIsLimitedAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientIsLimitedAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientIsLimitedAccount::IsInitialized() const {
  return true;
}

void CMsgClientIsLimitedAccount::Swap(CMsgClientIsLimitedAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientIsLimitedAccount::InternalSwap(CMsgClientIsLimitedAccount* other) {
  using std::swap;
  swap(bis_limited_account_, other->bis_limited_account_);
  swap(bis_community_banned_, other->bis_community_banned_);
  swap(bis_locked_account_, other->bis_locked_account_);
  swap(bis_limited_account_allowed_to_invite_friends_, other->bis_limited_account_allowed_to_invite_friends_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientIsLimitedAccount::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServerList_Server::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServerList_Server::kServerTypeFieldNumber;
const int CMsgClientServerList_Server::kServerIpFieldNumber;
const int CMsgClientServerList_Server::kServerPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServerList_Server::CMsgClientServerList_Server()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServerList_Server.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServerList.Server)
}
CMsgClientServerList_Server::CMsgClientServerList_Server(const CMsgClientServerList_Server& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_type_, &from.server_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_port_) -
    reinterpret_cast<char*>(&server_type_)) + sizeof(server_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientServerList.Server)
}

void CMsgClientServerList_Server::SharedCtor() {
  ::memset(&server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_port_) -
      reinterpret_cast<char*>(&server_type_)) + sizeof(server_port_));
}

CMsgClientServerList_Server::~CMsgClientServerList_Server() {
  // @@protoc_insertion_point(destructor:CMsgClientServerList.Server)
  SharedDtor();
}

void CMsgClientServerList_Server::SharedDtor() {
}

void CMsgClientServerList_Server::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServerList_Server::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServerList_Server& CMsgClientServerList_Server::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServerList_Server.base);
  return *internal_default_instance();
}


void CMsgClientServerList_Server::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServerList.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&server_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&server_port_) -
        reinterpret_cast<char*>(&server_type_)) + sizeof(server_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServerList_Server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServerList.Server)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_server_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServerList.Server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServerList.Server)
  return false;
#undef DO_
}

void CMsgClientServerList_Server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServerList.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_type(), output);
  }

  // optional uint32 server_ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_ip(), output);
  }

  // optional uint32 server_port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServerList.Server)
}

::google::protobuf::uint8* CMsgClientServerList_Server::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServerList.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_type(), target);
  }

  // optional uint32 server_ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_ip(), target);
  }

  // optional uint32 server_port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServerList.Server)
  return target;
}

size_t CMsgClientServerList_Server::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServerList.Server)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 server_type = 1;
    if (has_server_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_type());
    }

    // optional uint32 server_ip = 2;
    if (has_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_ip());
    }

    // optional uint32 server_port = 3;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServerList_Server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServerList.Server)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServerList_Server* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServerList_Server>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServerList.Server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServerList.Server)
    MergeFrom(*source);
  }
}

void CMsgClientServerList_Server::MergeFrom(const CMsgClientServerList_Server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServerList.Server)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      server_type_ = from.server_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      server_ip_ = from.server_ip_;
    }
    if (cached_has_bits & 0x00000004u) {
      server_port_ = from.server_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServerList_Server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServerList.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServerList_Server::CopyFrom(const CMsgClientServerList_Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServerList.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServerList_Server::IsInitialized() const {
  return true;
}

void CMsgClientServerList_Server::Swap(CMsgClientServerList_Server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServerList_Server::InternalSwap(CMsgClientServerList_Server* other) {
  using std::swap;
  swap(server_type_, other->server_type_);
  swap(server_ip_, other->server_ip_);
  swap(server_port_, other->server_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServerList_Server::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServerList::kServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServerList::CMsgClientServerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServerList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServerList)
}
CMsgClientServerList::CMsgClientServerList(const CMsgClientServerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientServerList)
}

void CMsgClientServerList::SharedCtor() {
}

CMsgClientServerList::~CMsgClientServerList() {
  // @@protoc_insertion_point(destructor:CMsgClientServerList)
  SharedDtor();
}

void CMsgClientServerList::SharedDtor() {
}

void CMsgClientServerList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServerList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServerList& CMsgClientServerList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServerList.base);
  return *internal_default_instance();
}


void CMsgClientServerList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServerList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientServerList.Server servers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServerList)
  return false;
#undef DO_
}

void CMsgClientServerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientServerList.Server servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->servers(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServerList)
}

::google::protobuf::uint8* CMsgClientServerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientServerList.Server servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->servers(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServerList)
  return target;
}

size_t CMsgClientServerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServerList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientServerList.Server servers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->servers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServerList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServerList)
    MergeFrom(*source);
  }
}

void CMsgClientServerList::MergeFrom(const CMsgClientServerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
}

void CMsgClientServerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServerList::CopyFrom(const CMsgClientServerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServerList::IsInitialized() const {
  return true;
}

void CMsgClientServerList::Swap(CMsgClientServerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServerList::InternalSwap(CMsgClientServerList* other) {
  using std::swap;
  CastToBase(&servers_)->InternalSwap(CastToBase(&other->servers_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServerList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestedClientStats_StatsToSend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestedClientStats_StatsToSend::kClientStatFieldNumber;
const int CMsgClientRequestedClientStats_StatsToSend::kStatAggregateMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestedClientStats_StatsToSend::CMsgClientRequestedClientStats_StatsToSend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestedClientStats_StatsToSend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestedClientStats.StatsToSend)
}
CMsgClientRequestedClientStats_StatsToSend::CMsgClientRequestedClientStats_StatsToSend(const CMsgClientRequestedClientStats_StatsToSend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_stat_, &from.client_stat_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_aggregate_method_) -
    reinterpret_cast<char*>(&client_stat_)) + sizeof(stat_aggregate_method_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestedClientStats.StatsToSend)
}

void CMsgClientRequestedClientStats_StatsToSend::SharedCtor() {
  ::memset(&client_stat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_aggregate_method_) -
      reinterpret_cast<char*>(&client_stat_)) + sizeof(stat_aggregate_method_));
}

CMsgClientRequestedClientStats_StatsToSend::~CMsgClientRequestedClientStats_StatsToSend() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestedClientStats.StatsToSend)
  SharedDtor();
}

void CMsgClientRequestedClientStats_StatsToSend::SharedDtor() {
}

void CMsgClientRequestedClientStats_StatsToSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestedClientStats_StatsToSend::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestedClientStats_StatsToSend& CMsgClientRequestedClientStats_StatsToSend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestedClientStats_StatsToSend.base);
  return *internal_default_instance();
}


void CMsgClientRequestedClientStats_StatsToSend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestedClientStats.StatsToSend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&client_stat_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_aggregate_method_) -
        reinterpret_cast<char*>(&client_stat_)) + sizeof(stat_aggregate_method_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestedClientStats_StatsToSend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestedClientStats.StatsToSend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 client_stat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_client_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_aggregate_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_aggregate_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_aggregate_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestedClientStats.StatsToSend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestedClientStats.StatsToSend)
  return false;
#undef DO_
}

void CMsgClientRequestedClientStats_StatsToSend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestedClientStats.StatsToSend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_stat = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_stat(), output);
  }

  // optional uint32 stat_aggregate_method = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_aggregate_method(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestedClientStats.StatsToSend)
}

::google::protobuf::uint8* CMsgClientRequestedClientStats_StatsToSend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestedClientStats.StatsToSend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_stat = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_stat(), target);
  }

  // optional uint32 stat_aggregate_method = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_aggregate_method(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestedClientStats.StatsToSend)
  return target;
}

size_t CMsgClientRequestedClientStats_StatsToSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestedClientStats.StatsToSend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 client_stat = 1;
    if (has_client_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_stat());
    }

    // optional uint32 stat_aggregate_method = 2;
    if (has_stat_aggregate_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_aggregate_method());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestedClientStats_StatsToSend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestedClientStats.StatsToSend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestedClientStats_StatsToSend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestedClientStats_StatsToSend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestedClientStats.StatsToSend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestedClientStats.StatsToSend)
    MergeFrom(*source);
  }
}

void CMsgClientRequestedClientStats_StatsToSend::MergeFrom(const CMsgClientRequestedClientStats_StatsToSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestedClientStats.StatsToSend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      client_stat_ = from.client_stat_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_aggregate_method_ = from.stat_aggregate_method_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestedClientStats_StatsToSend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestedClientStats.StatsToSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestedClientStats_StatsToSend::CopyFrom(const CMsgClientRequestedClientStats_StatsToSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestedClientStats.StatsToSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestedClientStats_StatsToSend::IsInitialized() const {
  return true;
}

void CMsgClientRequestedClientStats_StatsToSend::Swap(CMsgClientRequestedClientStats_StatsToSend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestedClientStats_StatsToSend::InternalSwap(CMsgClientRequestedClientStats_StatsToSend* other) {
  using std::swap;
  swap(client_stat_, other->client_stat_);
  swap(stat_aggregate_method_, other->stat_aggregate_method_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestedClientStats_StatsToSend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestedClientStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestedClientStats::kStatsToSendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestedClientStats::CMsgClientRequestedClientStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestedClientStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestedClientStats)
}
CMsgClientRequestedClientStats::CMsgClientRequestedClientStats(const CMsgClientRequestedClientStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_to_send_(from.stats_to_send_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestedClientStats)
}

void CMsgClientRequestedClientStats::SharedCtor() {
}

CMsgClientRequestedClientStats::~CMsgClientRequestedClientStats() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestedClientStats)
  SharedDtor();
}

void CMsgClientRequestedClientStats::SharedDtor() {
}

void CMsgClientRequestedClientStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestedClientStats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestedClientStats& CMsgClientRequestedClientStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestedClientStats.base);
  return *internal_default_instance();
}


void CMsgClientRequestedClientStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestedClientStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_to_send_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestedClientStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestedClientStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientRequestedClientStats.StatsToSend stats_to_send = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats_to_send()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestedClientStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestedClientStats)
  return false;
#undef DO_
}

void CMsgClientRequestedClientStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestedClientStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientRequestedClientStats.StatsToSend stats_to_send = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_to_send_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stats_to_send(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestedClientStats)
}

::google::protobuf::uint8* CMsgClientRequestedClientStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestedClientStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientRequestedClientStats.StatsToSend stats_to_send = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_to_send_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stats_to_send(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestedClientStats)
  return target;
}

size_t CMsgClientRequestedClientStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestedClientStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientRequestedClientStats.StatsToSend stats_to_send = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_to_send_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats_to_send(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestedClientStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestedClientStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestedClientStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestedClientStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestedClientStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestedClientStats)
    MergeFrom(*source);
  }
}

void CMsgClientRequestedClientStats::MergeFrom(const CMsgClientRequestedClientStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestedClientStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_to_send_.MergeFrom(from.stats_to_send_);
}

void CMsgClientRequestedClientStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestedClientStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestedClientStats::CopyFrom(const CMsgClientRequestedClientStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestedClientStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestedClientStats::IsInitialized() const {
  return true;
}

void CMsgClientRequestedClientStats::Swap(CMsgClientRequestedClientStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestedClientStats::InternalSwap(CMsgClientRequestedClientStats* other) {
  using std::swap;
  CastToBase(&stats_to_send_)->InternalSwap(CastToBase(&other->stats_to_send_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestedClientStats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStat2_StatDetail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStat2_StatDetail::kClientStatFieldNumber;
const int CMsgClientStat2_StatDetail::kLlValueFieldNumber;
const int CMsgClientStat2_StatDetail::kTimeOfDayFieldNumber;
const int CMsgClientStat2_StatDetail::kCellIdFieldNumber;
const int CMsgClientStat2_StatDetail::kDepotIdFieldNumber;
const int CMsgClientStat2_StatDetail::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStat2_StatDetail::CMsgClientStat2_StatDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStat2_StatDetail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStat2.StatDetail)
}
CMsgClientStat2_StatDetail::CMsgClientStat2_StatDetail(const CMsgClientStat2_StatDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ll_value_, &from.ll_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&ll_value_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStat2.StatDetail)
}

void CMsgClientStat2_StatDetail::SharedCtor() {
  ::memset(&ll_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&ll_value_)) + sizeof(app_id_));
}

CMsgClientStat2_StatDetail::~CMsgClientStat2_StatDetail() {
  // @@protoc_insertion_point(destructor:CMsgClientStat2.StatDetail)
  SharedDtor();
}

void CMsgClientStat2_StatDetail::SharedDtor() {
}

void CMsgClientStat2_StatDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStat2_StatDetail::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStat2_StatDetail& CMsgClientStat2_StatDetail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStat2_StatDetail.base);
  return *internal_default_instance();
}


void CMsgClientStat2_StatDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStat2.StatDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&ll_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&ll_value_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStat2_StatDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStat2.StatDetail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 client_stat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_client_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 ll_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ll_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ll_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_of_day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_of_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_of_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cell_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depot_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStat2.StatDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStat2.StatDetail)
  return false;
#undef DO_
}

void CMsgClientStat2_StatDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStat2.StatDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_stat = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_stat(), output);
  }

  // optional int64 ll_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ll_value(), output);
  }

  // optional uint32 time_of_day = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_of_day(), output);
  }

  // optional uint32 cell_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cell_id(), output);
  }

  // optional uint32 depot_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->depot_id(), output);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStat2.StatDetail)
}

::google::protobuf::uint8* CMsgClientStat2_StatDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStat2.StatDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_stat = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_stat(), target);
  }

  // optional int64 ll_value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ll_value(), target);
  }

  // optional uint32 time_of_day = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_of_day(), target);
  }

  // optional uint32 cell_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cell_id(), target);
  }

  // optional uint32 depot_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->depot_id(), target);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStat2.StatDetail)
  return target;
}

size_t CMsgClientStat2_StatDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStat2.StatDetail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int64 ll_value = 2;
    if (has_ll_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ll_value());
    }

    // optional uint32 client_stat = 1;
    if (has_client_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_stat());
    }

    // optional uint32 time_of_day = 3;
    if (has_time_of_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_of_day());
    }

    // optional uint32 cell_id = 4;
    if (has_cell_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cell_id());
    }

    // optional uint32 depot_id = 5;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 6;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStat2_StatDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStat2.StatDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStat2_StatDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStat2_StatDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStat2.StatDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStat2.StatDetail)
    MergeFrom(*source);
  }
}

void CMsgClientStat2_StatDetail::MergeFrom(const CMsgClientStat2_StatDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStat2.StatDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      ll_value_ = from.ll_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_stat_ = from.client_stat_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_of_day_ = from.time_of_day_;
    }
    if (cached_has_bits & 0x00000008u) {
      cell_id_ = from.cell_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStat2_StatDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStat2.StatDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStat2_StatDetail::CopyFrom(const CMsgClientStat2_StatDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStat2.StatDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStat2_StatDetail::IsInitialized() const {
  return true;
}

void CMsgClientStat2_StatDetail::Swap(CMsgClientStat2_StatDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStat2_StatDetail::InternalSwap(CMsgClientStat2_StatDetail* other) {
  using std::swap;
  swap(ll_value_, other->ll_value_);
  swap(client_stat_, other->client_stat_);
  swap(time_of_day_, other->time_of_day_);
  swap(cell_id_, other->cell_id_);
  swap(depot_id_, other->depot_id_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStat2_StatDetail::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStat2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStat2::kStatDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStat2::CMsgClientStat2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStat2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStat2)
}
CMsgClientStat2::CMsgClientStat2(const CMsgClientStat2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stat_detail_(from.stat_detail_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientStat2)
}

void CMsgClientStat2::SharedCtor() {
}

CMsgClientStat2::~CMsgClientStat2() {
  // @@protoc_insertion_point(destructor:CMsgClientStat2)
  SharedDtor();
}

void CMsgClientStat2::SharedDtor() {
}

void CMsgClientStat2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStat2::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStat2& CMsgClientStat2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStat2.base);
  return *internal_default_instance();
}


void CMsgClientStat2::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStat2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_detail_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStat2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStat2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientStat2.StatDetail stat_detail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stat_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStat2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStat2)
  return false;
#undef DO_
}

void CMsgClientStat2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStat2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientStat2.StatDetail stat_detail = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_detail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stat_detail(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStat2)
}

::google::protobuf::uint8* CMsgClientStat2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStat2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientStat2.StatDetail stat_detail = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_detail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stat_detail(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStat2)
  return target;
}

size_t CMsgClientStat2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStat2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientStat2.StatDetail stat_detail = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stat_detail_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stat_detail(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStat2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStat2)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStat2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStat2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStat2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStat2)
    MergeFrom(*source);
  }
}

void CMsgClientStat2::MergeFrom(const CMsgClientStat2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStat2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_detail_.MergeFrom(from.stat_detail_);
}

void CMsgClientStat2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStat2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStat2::CopyFrom(const CMsgClientStat2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStat2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStat2::IsInitialized() const {
  return true;
}

void CMsgClientStat2::Swap(CMsgClientStat2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStat2::InternalSwap(CMsgClientStat2* other) {
  using std::swap;
  CastToBase(&stat_detail_)->InternalSwap(CastToBase(&other->stat_detail_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStat2::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSCreateLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSCreateLobby::kAppIdFieldNumber;
const int CMsgClientMMSCreateLobby::kMaxMembersFieldNumber;
const int CMsgClientMMSCreateLobby::kLobbyTypeFieldNumber;
const int CMsgClientMMSCreateLobby::kLobbyFlagsFieldNumber;
const int CMsgClientMMSCreateLobby::kCellIdFieldNumber;
const int CMsgClientMMSCreateLobby::kPublicIpFieldNumber;
const int CMsgClientMMSCreateLobby::kMetadataFieldNumber;
const int CMsgClientMMSCreateLobby::kPersonaNameOwnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSCreateLobby::CMsgClientMMSCreateLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSCreateLobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSCreateLobby)
}
CMsgClientMMSCreateLobby::CMsgClientMMSCreateLobby(const CMsgClientMMSCreateLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  persona_name_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name_owner()) {
    persona_name_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_owner_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&public_ip_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(public_ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSCreateLobby)
}

void CMsgClientMMSCreateLobby::SharedCtor() {
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_name_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_ip_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(public_ip_));
}

CMsgClientMMSCreateLobby::~CMsgClientMMSCreateLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSCreateLobby)
  SharedDtor();
}

void CMsgClientMMSCreateLobby::SharedDtor() {
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_name_owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSCreateLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSCreateLobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSCreateLobby& CMsgClientMMSCreateLobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSCreateLobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSCreateLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSCreateLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      metadata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      persona_name_owner_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&public_ip_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(public_ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSCreateLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSCreateLobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_max_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lobby_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_flags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lobby_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cell_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_public_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name_owner = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name_owner()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name_owner().data(), static_cast<int>(this->persona_name_owner().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSCreateLobby.persona_name_owner");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSCreateLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSCreateLobby)
  return false;
#undef DO_
}

void CMsgClientMMSCreateLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSCreateLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 max_members = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_members(), output);
  }

  // optional int32 lobby_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lobby_type(), output);
  }

  // optional int32 lobby_flags = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lobby_flags(), output);
  }

  // optional uint32 cell_id = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cell_id(), output);
  }

  // optional uint32 public_ip = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->public_ip(), output);
  }

  // optional bytes metadata = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->metadata(), output);
  }

  // optional string persona_name_owner = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name_owner().data(), static_cast<int>(this->persona_name_owner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSCreateLobby.persona_name_owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->persona_name_owner(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSCreateLobby)
}

::google::protobuf::uint8* CMsgClientMMSCreateLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSCreateLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 max_members = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_members(), target);
  }

  // optional int32 lobby_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lobby_type(), target);
  }

  // optional int32 lobby_flags = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lobby_flags(), target);
  }

  // optional uint32 cell_id = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cell_id(), target);
  }

  // optional uint32 public_ip = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->public_ip(), target);
  }

  // optional bytes metadata = 7;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->metadata(), target);
  }

  // optional string persona_name_owner = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name_owner().data(), static_cast<int>(this->persona_name_owner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSCreateLobby.persona_name_owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->persona_name_owner(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSCreateLobby)
  return target;
}

size_t CMsgClientMMSCreateLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSCreateLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes metadata = 7;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional string persona_name_owner = 8;
    if (has_persona_name_owner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name_owner());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 max_members = 2;
    if (has_max_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_members());
    }

    // optional int32 lobby_type = 3;
    if (has_lobby_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_type());
    }

    // optional int32 lobby_flags = 4;
    if (has_lobby_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_flags());
    }

    // optional uint32 cell_id = 5;
    if (has_cell_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cell_id());
    }

    // optional uint32 public_ip = 6;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSCreateLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSCreateLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSCreateLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSCreateLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSCreateLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSCreateLobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSCreateLobby::MergeFrom(const CMsgClientMMSCreateLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSCreateLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_persona_name_owner();
      persona_name_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_owner_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      max_members_ = from.max_members_;
    }
    if (cached_has_bits & 0x00000010u) {
      lobby_type_ = from.lobby_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      lobby_flags_ = from.lobby_flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      cell_id_ = from.cell_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      public_ip_ = from.public_ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSCreateLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSCreateLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSCreateLobby::CopyFrom(const CMsgClientMMSCreateLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSCreateLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSCreateLobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSCreateLobby::Swap(CMsgClientMMSCreateLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSCreateLobby::InternalSwap(CMsgClientMMSCreateLobby* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  persona_name_owner_.Swap(&other->persona_name_owner_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(max_members_, other->max_members_);
  swap(lobby_type_, other->lobby_type_);
  swap(lobby_flags_, other->lobby_flags_);
  swap(cell_id_, other->cell_id_);
  swap(public_ip_, other->public_ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSCreateLobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSCreateLobbyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSCreateLobbyResponse::kAppIdFieldNumber;
const int CMsgClientMMSCreateLobbyResponse::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSCreateLobbyResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSCreateLobbyResponse::CMsgClientMMSCreateLobbyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSCreateLobbyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSCreateLobbyResponse)
}
CMsgClientMMSCreateLobbyResponse::CMsgClientMMSCreateLobbyResponse(const CMsgClientMMSCreateLobbyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSCreateLobbyResponse)
}

void CMsgClientMMSCreateLobbyResponse::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  eresult_ = 2;
}

CMsgClientMMSCreateLobbyResponse::~CMsgClientMMSCreateLobbyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSCreateLobbyResponse)
  SharedDtor();
}

void CMsgClientMMSCreateLobbyResponse::SharedDtor() {
}

void CMsgClientMMSCreateLobbyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSCreateLobbyResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSCreateLobbyResponse& CMsgClientMMSCreateLobbyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSCreateLobbyResponse.base);
  return *internal_default_instance();
}


void CMsgClientMMSCreateLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSCreateLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSCreateLobbyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSCreateLobbyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSCreateLobbyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSCreateLobbyResponse)
  return false;
#undef DO_
}

void CMsgClientMMSCreateLobbyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSCreateLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSCreateLobbyResponse)
}

::google::protobuf::uint8* CMsgClientMMSCreateLobbyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSCreateLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSCreateLobbyResponse)
  return target;
}

size_t CMsgClientMMSCreateLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSCreateLobbyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSCreateLobbyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSCreateLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSCreateLobbyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSCreateLobbyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSCreateLobbyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSCreateLobbyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientMMSCreateLobbyResponse::MergeFrom(const CMsgClientMMSCreateLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSCreateLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSCreateLobbyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSCreateLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSCreateLobbyResponse::CopyFrom(const CMsgClientMMSCreateLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSCreateLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSCreateLobbyResponse::IsInitialized() const {
  return true;
}

void CMsgClientMMSCreateLobbyResponse::Swap(CMsgClientMMSCreateLobbyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSCreateLobbyResponse::InternalSwap(CMsgClientMMSCreateLobbyResponse* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSCreateLobbyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSJoinLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSJoinLobby::kAppIdFieldNumber;
const int CMsgClientMMSJoinLobby::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSJoinLobby::kPersonaNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSJoinLobby::CMsgClientMMSJoinLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSJoinLobby)
}
CMsgClientMMSJoinLobby::CMsgClientMMSJoinLobby(const CMsgClientMMSJoinLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSJoinLobby)
}

void CMsgClientMMSJoinLobby::SharedCtor() {
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSJoinLobby::~CMsgClientMMSJoinLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSJoinLobby)
  SharedDtor();
}

void CMsgClientMMSJoinLobby::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSJoinLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSJoinLobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSJoinLobby& CMsgClientMMSJoinLobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSJoinLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSJoinLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    persona_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSJoinLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSJoinLobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSJoinLobby.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSJoinLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSJoinLobby)
  return false;
#undef DO_
}

void CMsgClientMMSJoinLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSJoinLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional string persona_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSJoinLobby.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->persona_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSJoinLobby)
}

::google::protobuf::uint8* CMsgClientMMSJoinLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSJoinLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional string persona_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSJoinLobby.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->persona_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSJoinLobby)
  return target;
}

size_t CMsgClientMMSJoinLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSJoinLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string persona_name = 3;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSJoinLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSJoinLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSJoinLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSJoinLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSJoinLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSJoinLobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSJoinLobby::MergeFrom(const CMsgClientMMSJoinLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSJoinLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSJoinLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSJoinLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSJoinLobby::CopyFrom(const CMsgClientMMSJoinLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSJoinLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSJoinLobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSJoinLobby::Swap(CMsgClientMMSJoinLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSJoinLobby::InternalSwap(CMsgClientMMSJoinLobby* other) {
  using std::swap;
  persona_name_.Swap(&other->persona_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSJoinLobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSJoinLobbyResponse_Member::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSJoinLobbyResponse_Member::kSteamIdFieldNumber;
const int CMsgClientMMSJoinLobbyResponse_Member::kPersonaNameFieldNumber;
const int CMsgClientMMSJoinLobbyResponse_Member::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSJoinLobbyResponse_Member::CMsgClientMMSJoinLobbyResponse_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobbyResponse_Member.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSJoinLobbyResponse.Member)
}
CMsgClientMMSJoinLobbyResponse_Member::CMsgClientMMSJoinLobbyResponse_Member(const CMsgClientMMSJoinLobbyResponse_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSJoinLobbyResponse.Member)
}

void CMsgClientMMSJoinLobbyResponse_Member::SharedCtor() {
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientMMSJoinLobbyResponse_Member::~CMsgClientMMSJoinLobbyResponse_Member() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSJoinLobbyResponse.Member)
  SharedDtor();
}

void CMsgClientMMSJoinLobbyResponse_Member::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSJoinLobbyResponse_Member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSJoinLobbyResponse_Member::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSJoinLobbyResponse_Member& CMsgClientMMSJoinLobbyResponse_Member::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobbyResponse_Member.base);
  return *internal_default_instance();
}


void CMsgClientMMSJoinLobbyResponse_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSJoinLobbyResponse.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      persona_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      metadata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSJoinLobbyResponse_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSJoinLobbyResponse.Member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSJoinLobbyResponse.Member.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSJoinLobbyResponse.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSJoinLobbyResponse.Member)
  return false;
#undef DO_
}

void CMsgClientMMSJoinLobbyResponse_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSJoinLobbyResponse.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSJoinLobbyResponse.Member.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona_name(), output);
  }

  // optional bytes metadata = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSJoinLobbyResponse.Member)
}

::google::protobuf::uint8* CMsgClientMMSJoinLobbyResponse_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSJoinLobbyResponse.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSJoinLobbyResponse.Member.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona_name(), target);
  }

  // optional bytes metadata = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->metadata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSJoinLobbyResponse.Member)
  return target;
}

size_t CMsgClientMMSJoinLobbyResponse_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSJoinLobbyResponse.Member)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string persona_name = 2;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional bytes metadata = 3;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSJoinLobbyResponse_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSJoinLobbyResponse.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSJoinLobbyResponse_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSJoinLobbyResponse_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSJoinLobbyResponse.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSJoinLobbyResponse.Member)
    MergeFrom(*source);
  }
}

void CMsgClientMMSJoinLobbyResponse_Member::MergeFrom(const CMsgClientMMSJoinLobbyResponse_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSJoinLobbyResponse.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_ = from.steam_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSJoinLobbyResponse_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSJoinLobbyResponse.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSJoinLobbyResponse_Member::CopyFrom(const CMsgClientMMSJoinLobbyResponse_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSJoinLobbyResponse.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSJoinLobbyResponse_Member::IsInitialized() const {
  return true;
}

void CMsgClientMMSJoinLobbyResponse_Member::Swap(CMsgClientMMSJoinLobbyResponse_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSJoinLobbyResponse_Member::InternalSwap(CMsgClientMMSJoinLobbyResponse_Member* other) {
  using std::swap;
  persona_name_.Swap(&other->persona_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSJoinLobbyResponse_Member::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSJoinLobbyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSJoinLobbyResponse::kAppIdFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kChatRoomEnterResponseFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kMaxMembersFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kLobbyTypeFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kLobbyFlagsFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kSteamIdOwnerFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kMetadataFieldNumber;
const int CMsgClientMMSJoinLobbyResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSJoinLobbyResponse::CMsgClientMMSJoinLobbyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobbyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSJoinLobbyResponse)
}
CMsgClientMMSJoinLobbyResponse::CMsgClientMMSJoinLobbyResponse(const CMsgClientMMSJoinLobbyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobby_flags_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSJoinLobbyResponse)
}

void CMsgClientMMSJoinLobbyResponse::SharedCtor() {
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobby_flags_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
}

CMsgClientMMSJoinLobbyResponse::~CMsgClientMMSJoinLobbyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSJoinLobbyResponse)
  SharedDtor();
}

void CMsgClientMMSJoinLobbyResponse::SharedDtor() {
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSJoinLobbyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSJoinLobbyResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSJoinLobbyResponse& CMsgClientMMSJoinLobbyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSJoinLobbyResponse.base);
  return *internal_default_instance();
}


void CMsgClientMMSJoinLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSJoinLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    metadata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobby_flags_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSJoinLobbyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSJoinLobbyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_room_enter_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_chat_room_enter_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_room_enter_response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_members = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_lobby_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_lobby_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_owner = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_steam_id_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientMMSJoinLobbyResponse.Member members = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSJoinLobbyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSJoinLobbyResponse)
  return false;
#undef DO_
}

void CMsgClientMMSJoinLobbyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSJoinLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional int32 chat_room_enter_response = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chat_room_enter_response(), output);
  }

  // optional int32 max_members = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_members(), output);
  }

  // optional int32 lobby_type = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lobby_type(), output);
  }

  // optional int32 lobby_flags = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lobby_flags(), output);
  }

  // optional fixed64 steam_id_owner = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->steam_id_owner(), output);
  }

  // optional bytes metadata = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->metadata(), output);
  }

  // repeated .CMsgClientMMSJoinLobbyResponse.Member members = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->members(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSJoinLobbyResponse)
}

::google::protobuf::uint8* CMsgClientMMSJoinLobbyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSJoinLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional int32 chat_room_enter_response = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chat_room_enter_response(), target);
  }

  // optional int32 max_members = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_members(), target);
  }

  // optional int32 lobby_type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lobby_type(), target);
  }

  // optional int32 lobby_flags = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lobby_flags(), target);
  }

  // optional fixed64 steam_id_owner = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(7, this->steam_id_owner(), target);
  }

  // optional bytes metadata = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->metadata(), target);
  }

  // repeated .CMsgClientMMSJoinLobbyResponse.Member members = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->members(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSJoinLobbyResponse)
  return target;
}

size_t CMsgClientMMSJoinLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSJoinLobbyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientMMSJoinLobbyResponse.Member members = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes metadata = 8;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 chat_room_enter_response = 3;
    if (has_chat_room_enter_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_room_enter_response());
    }

    // optional int32 max_members = 4;
    if (has_max_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_members());
    }

    // optional int32 lobby_type = 5;
    if (has_lobby_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_type());
    }

    // optional fixed64 steam_id_owner = 7;
    if (has_steam_id_owner()) {
      total_size += 1 + 8;
    }

    // optional int32 lobby_flags = 6;
    if (has_lobby_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSJoinLobbyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSJoinLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSJoinLobbyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSJoinLobbyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSJoinLobbyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSJoinLobbyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientMMSJoinLobbyResponse::MergeFrom(const CMsgClientMMSJoinLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSJoinLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      chat_room_enter_response_ = from.chat_room_enter_response_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_members_ = from.max_members_;
    }
    if (cached_has_bits & 0x00000020u) {
      lobby_type_ = from.lobby_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      steam_id_owner_ = from.steam_id_owner_;
    }
    if (cached_has_bits & 0x00000080u) {
      lobby_flags_ = from.lobby_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSJoinLobbyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSJoinLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSJoinLobbyResponse::CopyFrom(const CMsgClientMMSJoinLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSJoinLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSJoinLobbyResponse::IsInitialized() const {
  return true;
}

void CMsgClientMMSJoinLobbyResponse::Swap(CMsgClientMMSJoinLobbyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSJoinLobbyResponse::InternalSwap(CMsgClientMMSJoinLobbyResponse* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(chat_room_enter_response_, other->chat_room_enter_response_);
  swap(max_members_, other->max_members_);
  swap(lobby_type_, other->lobby_type_);
  swap(steam_id_owner_, other->steam_id_owner_);
  swap(lobby_flags_, other->lobby_flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSJoinLobbyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSLeaveLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSLeaveLobby::kAppIdFieldNumber;
const int CMsgClientMMSLeaveLobby::kSteamIdLobbyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSLeaveLobby::CMsgClientMMSLeaveLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLeaveLobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSLeaveLobby)
}
CMsgClientMMSLeaveLobby::CMsgClientMMSLeaveLobby(const CMsgClientMMSLeaveLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSLeaveLobby)
}

void CMsgClientMMSLeaveLobby::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSLeaveLobby::~CMsgClientMMSLeaveLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSLeaveLobby)
  SharedDtor();
}

void CMsgClientMMSLeaveLobby::SharedDtor() {
}

void CMsgClientMMSLeaveLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSLeaveLobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSLeaveLobby& CMsgClientMMSLeaveLobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLeaveLobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSLeaveLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSLeaveLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSLeaveLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSLeaveLobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSLeaveLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSLeaveLobby)
  return false;
#undef DO_
}

void CMsgClientMMSLeaveLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSLeaveLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSLeaveLobby)
}

::google::protobuf::uint8* CMsgClientMMSLeaveLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSLeaveLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSLeaveLobby)
  return target;
}

size_t CMsgClientMMSLeaveLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSLeaveLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSLeaveLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSLeaveLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSLeaveLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSLeaveLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSLeaveLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSLeaveLobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSLeaveLobby::MergeFrom(const CMsgClientMMSLeaveLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSLeaveLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSLeaveLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSLeaveLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSLeaveLobby::CopyFrom(const CMsgClientMMSLeaveLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSLeaveLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSLeaveLobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSLeaveLobby::Swap(CMsgClientMMSLeaveLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSLeaveLobby::InternalSwap(CMsgClientMMSLeaveLobby* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSLeaveLobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSLeaveLobbyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSLeaveLobbyResponse::kAppIdFieldNumber;
const int CMsgClientMMSLeaveLobbyResponse::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSLeaveLobbyResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSLeaveLobbyResponse::CMsgClientMMSLeaveLobbyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLeaveLobbyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSLeaveLobbyResponse)
}
CMsgClientMMSLeaveLobbyResponse::CMsgClientMMSLeaveLobbyResponse(const CMsgClientMMSLeaveLobbyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSLeaveLobbyResponse)
}

void CMsgClientMMSLeaveLobbyResponse::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  eresult_ = 2;
}

CMsgClientMMSLeaveLobbyResponse::~CMsgClientMMSLeaveLobbyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSLeaveLobbyResponse)
  SharedDtor();
}

void CMsgClientMMSLeaveLobbyResponse::SharedDtor() {
}

void CMsgClientMMSLeaveLobbyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSLeaveLobbyResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSLeaveLobbyResponse& CMsgClientMMSLeaveLobbyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLeaveLobbyResponse.base);
  return *internal_default_instance();
}


void CMsgClientMMSLeaveLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSLeaveLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSLeaveLobbyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSLeaveLobbyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSLeaveLobbyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSLeaveLobbyResponse)
  return false;
#undef DO_
}

void CMsgClientMMSLeaveLobbyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSLeaveLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSLeaveLobbyResponse)
}

::google::protobuf::uint8* CMsgClientMMSLeaveLobbyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSLeaveLobbyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSLeaveLobbyResponse)
  return target;
}

size_t CMsgClientMMSLeaveLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSLeaveLobbyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSLeaveLobbyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSLeaveLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSLeaveLobbyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSLeaveLobbyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSLeaveLobbyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSLeaveLobbyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientMMSLeaveLobbyResponse::MergeFrom(const CMsgClientMMSLeaveLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSLeaveLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSLeaveLobbyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSLeaveLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSLeaveLobbyResponse::CopyFrom(const CMsgClientMMSLeaveLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSLeaveLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSLeaveLobbyResponse::IsInitialized() const {
  return true;
}

void CMsgClientMMSLeaveLobbyResponse::Swap(CMsgClientMMSLeaveLobbyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSLeaveLobbyResponse::InternalSwap(CMsgClientMMSLeaveLobbyResponse* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSLeaveLobbyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSGetLobbyList_Filter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSGetLobbyList_Filter::kKeyFieldNumber;
const int CMsgClientMMSGetLobbyList_Filter::kValueFieldNumber;
const int CMsgClientMMSGetLobbyList_Filter::kComparisionFieldNumber;
const int CMsgClientMMSGetLobbyList_Filter::kFilterTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSGetLobbyList_Filter::CMsgClientMMSGetLobbyList_Filter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyList_Filter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSGetLobbyList.Filter)
}
CMsgClientMMSGetLobbyList_Filter::CMsgClientMMSGetLobbyList_Filter(const CMsgClientMMSGetLobbyList_Filter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&comparision_, &from.comparision_,
    static_cast<size_t>(reinterpret_cast<char*>(&filter_type_) -
    reinterpret_cast<char*>(&comparision_)) + sizeof(filter_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSGetLobbyList.Filter)
}

void CMsgClientMMSGetLobbyList_Filter::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&comparision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filter_type_) -
      reinterpret_cast<char*>(&comparision_)) + sizeof(filter_type_));
}

CMsgClientMMSGetLobbyList_Filter::~CMsgClientMMSGetLobbyList_Filter() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSGetLobbyList.Filter)
  SharedDtor();
}

void CMsgClientMMSGetLobbyList_Filter::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSGetLobbyList_Filter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSGetLobbyList_Filter::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSGetLobbyList_Filter& CMsgClientMMSGetLobbyList_Filter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyList_Filter.base);
  return *internal_default_instance();
}


void CMsgClientMMSGetLobbyList_Filter::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSGetLobbyList.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&comparision_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&filter_type_) -
        reinterpret_cast<char*>(&comparision_)) + sizeof(filter_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSGetLobbyList_Filter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSGetLobbyList.Filter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSGetLobbyList.Filter.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSGetLobbyList.Filter.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 comparision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_comparision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &comparision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 filter_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_filter_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filter_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSGetLobbyList.Filter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSGetLobbyList.Filter)
  return false;
#undef DO_
}

void CMsgClientMMSGetLobbyList_Filter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSGetLobbyList.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSGetLobbyList.Filter.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSGetLobbyList.Filter.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // optional int32 comparision = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->comparision(), output);
  }

  // optional int32 filter_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->filter_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSGetLobbyList.Filter)
}

::google::protobuf::uint8* CMsgClientMMSGetLobbyList_Filter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSGetLobbyList.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSGetLobbyList.Filter.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSGetLobbyList.Filter.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // optional int32 comparision = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->comparision(), target);
  }

  // optional int32 filter_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->filter_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSGetLobbyList.Filter)
  return target;
}

size_t CMsgClientMMSGetLobbyList_Filter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSGetLobbyList.Filter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional int32 comparision = 3;
    if (has_comparision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->comparision());
    }

    // optional int32 filter_type = 4;
    if (has_filter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->filter_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSGetLobbyList_Filter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSGetLobbyList.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSGetLobbyList_Filter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSGetLobbyList_Filter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSGetLobbyList.Filter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSGetLobbyList.Filter)
    MergeFrom(*source);
  }
}

void CMsgClientMMSGetLobbyList_Filter::MergeFrom(const CMsgClientMMSGetLobbyList_Filter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSGetLobbyList.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      comparision_ = from.comparision_;
    }
    if (cached_has_bits & 0x00000008u) {
      filter_type_ = from.filter_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSGetLobbyList_Filter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSGetLobbyList.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSGetLobbyList_Filter::CopyFrom(const CMsgClientMMSGetLobbyList_Filter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSGetLobbyList.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSGetLobbyList_Filter::IsInitialized() const {
  return true;
}

void CMsgClientMMSGetLobbyList_Filter::Swap(CMsgClientMMSGetLobbyList_Filter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSGetLobbyList_Filter::InternalSwap(CMsgClientMMSGetLobbyList_Filter* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(comparision_, other->comparision_);
  swap(filter_type_, other->filter_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSGetLobbyList_Filter::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSGetLobbyList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSGetLobbyList::kAppIdFieldNumber;
const int CMsgClientMMSGetLobbyList::kNumLobbiesRequestedFieldNumber;
const int CMsgClientMMSGetLobbyList::kCellIdFieldNumber;
const int CMsgClientMMSGetLobbyList::kPublicIpFieldNumber;
const int CMsgClientMMSGetLobbyList::kFiltersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSGetLobbyList::CMsgClientMMSGetLobbyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSGetLobbyList)
}
CMsgClientMMSGetLobbyList::CMsgClientMMSGetLobbyList(const CMsgClientMMSGetLobbyList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      filters_(from.filters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&public_ip_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(public_ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSGetLobbyList)
}

void CMsgClientMMSGetLobbyList::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_ip_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(public_ip_));
}

CMsgClientMMSGetLobbyList::~CMsgClientMMSGetLobbyList() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSGetLobbyList)
  SharedDtor();
}

void CMsgClientMMSGetLobbyList::SharedDtor() {
}

void CMsgClientMMSGetLobbyList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSGetLobbyList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSGetLobbyList& CMsgClientMMSGetLobbyList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyList.base);
  return *internal_default_instance();
}


void CMsgClientMMSGetLobbyList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSGetLobbyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&public_ip_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(public_ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSGetLobbyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSGetLobbyList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_lobbies_requested = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_lobbies_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_lobbies_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cell_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_public_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientMMSGetLobbyList.Filter filters = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSGetLobbyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSGetLobbyList)
  return false;
#undef DO_
}

void CMsgClientMMSGetLobbyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSGetLobbyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 num_lobbies_requested = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_lobbies_requested(), output);
  }

  // optional uint32 cell_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cell_id(), output);
  }

  // optional uint32 public_ip = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->public_ip(), output);
  }

  // repeated .CMsgClientMMSGetLobbyList.Filter filters = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->filters(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSGetLobbyList)
}

::google::protobuf::uint8* CMsgClientMMSGetLobbyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSGetLobbyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 num_lobbies_requested = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_lobbies_requested(), target);
  }

  // optional uint32 cell_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cell_id(), target);
  }

  // optional uint32 public_ip = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->public_ip(), target);
  }

  // repeated .CMsgClientMMSGetLobbyList.Filter filters = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->filters(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSGetLobbyList)
  return target;
}

size_t CMsgClientMMSGetLobbyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSGetLobbyList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientMMSGetLobbyList.Filter filters = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->filters(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 num_lobbies_requested = 3;
    if (has_num_lobbies_requested()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_lobbies_requested());
    }

    // optional uint32 cell_id = 4;
    if (has_cell_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cell_id());
    }

    // optional uint32 public_ip = 5;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSGetLobbyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSGetLobbyList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSGetLobbyList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSGetLobbyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSGetLobbyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSGetLobbyList)
    MergeFrom(*source);
  }
}

void CMsgClientMMSGetLobbyList::MergeFrom(const CMsgClientMMSGetLobbyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSGetLobbyList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_lobbies_requested_ = from.num_lobbies_requested_;
    }
    if (cached_has_bits & 0x00000004u) {
      cell_id_ = from.cell_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      public_ip_ = from.public_ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSGetLobbyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSGetLobbyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSGetLobbyList::CopyFrom(const CMsgClientMMSGetLobbyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSGetLobbyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSGetLobbyList::IsInitialized() const {
  return true;
}

void CMsgClientMMSGetLobbyList::Swap(CMsgClientMMSGetLobbyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSGetLobbyList::InternalSwap(CMsgClientMMSGetLobbyList* other) {
  using std::swap;
  CastToBase(&filters_)->InternalSwap(CastToBase(&other->filters_));
  swap(app_id_, other->app_id_);
  swap(num_lobbies_requested_, other->num_lobbies_requested_);
  swap(cell_id_, other->cell_id_);
  swap(public_ip_, other->public_ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSGetLobbyList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSGetLobbyListResponse_Lobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSGetLobbyListResponse_Lobby::kSteamIdFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kMaxMembersFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kLobbyTypeFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kLobbyFlagsFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kMetadataFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kNumMembersFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kDistanceFieldNumber;
const int CMsgClientMMSGetLobbyListResponse_Lobby::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSGetLobbyListResponse_Lobby::CMsgClientMMSGetLobbyListResponse_Lobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyListResponse_Lobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSGetLobbyListResponse.Lobby)
}
CMsgClientMMSGetLobbyListResponse_Lobby::CMsgClientMMSGetLobbyListResponse_Lobby(const CMsgClientMMSGetLobbyListResponse_Lobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSGetLobbyListResponse.Lobby)
}

void CMsgClientMMSGetLobbyListResponse_Lobby::SharedCtor() {
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(distance_));
}

CMsgClientMMSGetLobbyListResponse_Lobby::~CMsgClientMMSGetLobbyListResponse_Lobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSGetLobbyListResponse.Lobby)
  SharedDtor();
}

void CMsgClientMMSGetLobbyListResponse_Lobby::SharedDtor() {
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSGetLobbyListResponse_Lobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSGetLobbyListResponse_Lobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSGetLobbyListResponse_Lobby& CMsgClientMMSGetLobbyListResponse_Lobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyListResponse_Lobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSGetLobbyListResponse_Lobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    metadata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSGetLobbyListResponse_Lobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_max_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lobby_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_flags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lobby_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_members = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_num_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float distance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 weight = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSGetLobbyListResponse.Lobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSGetLobbyListResponse.Lobby)
  return false;
#undef DO_
}

void CMsgClientMMSGetLobbyListResponse_Lobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional int32 max_members = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_members(), output);
  }

  // optional int32 lobby_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lobby_type(), output);
  }

  // optional int32 lobby_flags = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lobby_flags(), output);
  }

  // optional bytes metadata = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->metadata(), output);
  }

  // optional int32 num_members = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_members(), output);
  }

  // optional float distance = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->distance(), output);
  }

  // optional int64 weight = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSGetLobbyListResponse.Lobby)
}

::google::protobuf::uint8* CMsgClientMMSGetLobbyListResponse_Lobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional int32 max_members = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_members(), target);
  }

  // optional int32 lobby_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lobby_type(), target);
  }

  // optional int32 lobby_flags = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lobby_flags(), target);
  }

  // optional bytes metadata = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->metadata(), target);
  }

  // optional int32 num_members = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->num_members(), target);
  }

  // optional float distance = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->distance(), target);
  }

  // optional int64 weight = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSGetLobbyListResponse.Lobby)
  return target;
}

size_t CMsgClientMMSGetLobbyListResponse_Lobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes metadata = 5;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional int32 max_members = 2;
    if (has_max_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_members());
    }

    // optional int32 lobby_type = 3;
    if (has_lobby_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_type());
    }

    // optional int32 lobby_flags = 4;
    if (has_lobby_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_flags());
    }

    // optional int32 num_members = 6;
    if (has_num_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_members());
    }

    // optional int64 weight = 8;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weight());
    }

    // optional float distance = 7;
    if (has_distance()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSGetLobbyListResponse_Lobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSGetLobbyListResponse_Lobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSGetLobbyListResponse_Lobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSGetLobbyListResponse.Lobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSGetLobbyListResponse.Lobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSGetLobbyListResponse_Lobby::MergeFrom(const CMsgClientMMSGetLobbyListResponse_Lobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_members_ = from.max_members_;
    }
    if (cached_has_bits & 0x00000008u) {
      lobby_type_ = from.lobby_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      lobby_flags_ = from.lobby_flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_members_ = from.num_members_;
    }
    if (cached_has_bits & 0x00000040u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000080u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSGetLobbyListResponse_Lobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSGetLobbyListResponse_Lobby::CopyFrom(const CMsgClientMMSGetLobbyListResponse_Lobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSGetLobbyListResponse.Lobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSGetLobbyListResponse_Lobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSGetLobbyListResponse_Lobby::Swap(CMsgClientMMSGetLobbyListResponse_Lobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSGetLobbyListResponse_Lobby::InternalSwap(CMsgClientMMSGetLobbyListResponse_Lobby* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(max_members_, other->max_members_);
  swap(lobby_type_, other->lobby_type_);
  swap(lobby_flags_, other->lobby_flags_);
  swap(num_members_, other->num_members_);
  swap(weight_, other->weight_);
  swap(distance_, other->distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSGetLobbyListResponse_Lobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSGetLobbyListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSGetLobbyListResponse::kAppIdFieldNumber;
const int CMsgClientMMSGetLobbyListResponse::kEresultFieldNumber;
const int CMsgClientMMSGetLobbyListResponse::kLobbiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSGetLobbyListResponse::CMsgClientMMSGetLobbyListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSGetLobbyListResponse)
}
CMsgClientMMSGetLobbyListResponse::CMsgClientMMSGetLobbyListResponse(const CMsgClientMMSGetLobbyListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lobbies_(from.lobbies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSGetLobbyListResponse)
}

void CMsgClientMMSGetLobbyListResponse::SharedCtor() {
  app_id_ = 0u;
  eresult_ = 2;
}

CMsgClientMMSGetLobbyListResponse::~CMsgClientMMSGetLobbyListResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSGetLobbyListResponse)
  SharedDtor();
}

void CMsgClientMMSGetLobbyListResponse::SharedDtor() {
}

void CMsgClientMMSGetLobbyListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSGetLobbyListResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSGetLobbyListResponse& CMsgClientMMSGetLobbyListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyListResponse.base);
  return *internal_default_instance();
}


void CMsgClientMMSGetLobbyListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSGetLobbyListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lobbies_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    app_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSGetLobbyListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSGetLobbyListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientMMSGetLobbyListResponse.Lobby lobbies = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lobbies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSGetLobbyListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSGetLobbyListResponse)
  return false;
#undef DO_
}

void CMsgClientMMSGetLobbyListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSGetLobbyListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  // repeated .CMsgClientMMSGetLobbyListResponse.Lobby lobbies = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lobbies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->lobbies(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSGetLobbyListResponse)
}

::google::protobuf::uint8* CMsgClientMMSGetLobbyListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSGetLobbyListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  // repeated .CMsgClientMMSGetLobbyListResponse.Lobby lobbies = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lobbies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->lobbies(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSGetLobbyListResponse)
  return target;
}

size_t CMsgClientMMSGetLobbyListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSGetLobbyListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientMMSGetLobbyListResponse.Lobby lobbies = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->lobbies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lobbies(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSGetLobbyListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSGetLobbyListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSGetLobbyListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSGetLobbyListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSGetLobbyListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSGetLobbyListResponse)
    MergeFrom(*source);
  }
}

void CMsgClientMMSGetLobbyListResponse::MergeFrom(const CMsgClientMMSGetLobbyListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSGetLobbyListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lobbies_.MergeFrom(from.lobbies_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSGetLobbyListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSGetLobbyListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSGetLobbyListResponse::CopyFrom(const CMsgClientMMSGetLobbyListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSGetLobbyListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSGetLobbyListResponse::IsInitialized() const {
  return true;
}

void CMsgClientMMSGetLobbyListResponse::Swap(CMsgClientMMSGetLobbyListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSGetLobbyListResponse::InternalSwap(CMsgClientMMSGetLobbyListResponse* other) {
  using std::swap;
  CastToBase(&lobbies_)->InternalSwap(CastToBase(&other->lobbies_));
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSGetLobbyListResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSetLobbyData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSetLobbyData::kAppIdFieldNumber;
const int CMsgClientMMSSetLobbyData::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSetLobbyData::kSteamIdMemberFieldNumber;
const int CMsgClientMMSSetLobbyData::kMaxMembersFieldNumber;
const int CMsgClientMMSSetLobbyData::kLobbyTypeFieldNumber;
const int CMsgClientMMSSetLobbyData::kLobbyFlagsFieldNumber;
const int CMsgClientMMSSetLobbyData::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSetLobbyData::CMsgClientMMSSetLobbyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSetLobbyData)
}
CMsgClientMMSSetLobbyData::CMsgClientMMSSetLobbyData(const CMsgClientMMSSetLobbyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobby_flags_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSetLobbyData)
}

void CMsgClientMMSSetLobbyData::SharedCtor() {
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobby_flags_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
}

CMsgClientMMSSetLobbyData::~CMsgClientMMSSetLobbyData() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSetLobbyData)
  SharedDtor();
}

void CMsgClientMMSSetLobbyData::SharedDtor() {
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSSetLobbyData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSetLobbyData::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSetLobbyData& CMsgClientMMSSetLobbyData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyData.base);
  return *internal_default_instance();
}


void CMsgClientMMSSetLobbyData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSetLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    metadata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobby_flags_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSetLobbyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSetLobbyData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_member();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_member_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_members = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_lobby_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_lobby_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSetLobbyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSetLobbyData)
  return false;
#undef DO_
}

void CMsgClientMMSSetLobbyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSetLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_member = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_member(), output);
  }

  // optional int32 max_members = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_members(), output);
  }

  // optional int32 lobby_type = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lobby_type(), output);
  }

  // optional int32 lobby_flags = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lobby_flags(), output);
  }

  // optional bytes metadata = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSetLobbyData)
}

::google::protobuf::uint8* CMsgClientMMSSetLobbyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSetLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_member = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_member(), target);
  }

  // optional int32 max_members = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_members(), target);
  }

  // optional int32 lobby_type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lobby_type(), target);
  }

  // optional int32 lobby_flags = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lobby_flags(), target);
  }

  // optional bytes metadata = 7;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->metadata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSetLobbyData)
  return target;
}

size_t CMsgClientMMSSetLobbyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSetLobbyData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes metadata = 7;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 max_members = 4;
    if (has_max_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_members());
    }

    // optional fixed64 steam_id_member = 3;
    if (has_steam_id_member()) {
      total_size += 1 + 8;
    }

    // optional int32 lobby_type = 5;
    if (has_lobby_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_type());
    }

    // optional int32 lobby_flags = 6;
    if (has_lobby_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSetLobbyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSetLobbyData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSetLobbyData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSetLobbyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSetLobbyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSetLobbyData)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSetLobbyData::MergeFrom(const CMsgClientMMSSetLobbyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSetLobbyData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      max_members_ = from.max_members_;
    }
    if (cached_has_bits & 0x00000010u) {
      steam_id_member_ = from.steam_id_member_;
    }
    if (cached_has_bits & 0x00000020u) {
      lobby_type_ = from.lobby_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      lobby_flags_ = from.lobby_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSetLobbyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSetLobbyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSetLobbyData::CopyFrom(const CMsgClientMMSSetLobbyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSetLobbyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSetLobbyData::IsInitialized() const {
  return true;
}

void CMsgClientMMSSetLobbyData::Swap(CMsgClientMMSSetLobbyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSetLobbyData::InternalSwap(CMsgClientMMSSetLobbyData* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(max_members_, other->max_members_);
  swap(steam_id_member_, other->steam_id_member_);
  swap(lobby_type_, other->lobby_type_);
  swap(lobby_flags_, other->lobby_flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSetLobbyData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSetLobbyDataResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSetLobbyDataResponse::kAppIdFieldNumber;
const int CMsgClientMMSSetLobbyDataResponse::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSetLobbyDataResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSetLobbyDataResponse::CMsgClientMMSSetLobbyDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyDataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSetLobbyDataResponse)
}
CMsgClientMMSSetLobbyDataResponse::CMsgClientMMSSetLobbyDataResponse(const CMsgClientMMSSetLobbyDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSetLobbyDataResponse)
}

void CMsgClientMMSSetLobbyDataResponse::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  eresult_ = 2;
}

CMsgClientMMSSetLobbyDataResponse::~CMsgClientMMSSetLobbyDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSetLobbyDataResponse)
  SharedDtor();
}

void CMsgClientMMSSetLobbyDataResponse::SharedDtor() {
}

void CMsgClientMMSSetLobbyDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSetLobbyDataResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSetLobbyDataResponse& CMsgClientMMSSetLobbyDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyDataResponse.base);
  return *internal_default_instance();
}


void CMsgClientMMSSetLobbyDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSetLobbyDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSetLobbyDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSetLobbyDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSetLobbyDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSetLobbyDataResponse)
  return false;
#undef DO_
}

void CMsgClientMMSSetLobbyDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSetLobbyDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSetLobbyDataResponse)
}

::google::protobuf::uint8* CMsgClientMMSSetLobbyDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSetLobbyDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSetLobbyDataResponse)
  return target;
}

size_t CMsgClientMMSSetLobbyDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSetLobbyDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSetLobbyDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSetLobbyDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSetLobbyDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSetLobbyDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSetLobbyDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSetLobbyDataResponse)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSetLobbyDataResponse::MergeFrom(const CMsgClientMMSSetLobbyDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSetLobbyDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSetLobbyDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSetLobbyDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSetLobbyDataResponse::CopyFrom(const CMsgClientMMSSetLobbyDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSetLobbyDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSetLobbyDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientMMSSetLobbyDataResponse::Swap(CMsgClientMMSSetLobbyDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSetLobbyDataResponse::InternalSwap(CMsgClientMMSSetLobbyDataResponse* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSetLobbyDataResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSGetLobbyData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSGetLobbyData::kAppIdFieldNumber;
const int CMsgClientMMSGetLobbyData::kSteamIdLobbyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSGetLobbyData::CMsgClientMMSGetLobbyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSGetLobbyData)
}
CMsgClientMMSGetLobbyData::CMsgClientMMSGetLobbyData(const CMsgClientMMSGetLobbyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSGetLobbyData)
}

void CMsgClientMMSGetLobbyData::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSGetLobbyData::~CMsgClientMMSGetLobbyData() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSGetLobbyData)
  SharedDtor();
}

void CMsgClientMMSGetLobbyData::SharedDtor() {
}

void CMsgClientMMSGetLobbyData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSGetLobbyData::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSGetLobbyData& CMsgClientMMSGetLobbyData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSGetLobbyData.base);
  return *internal_default_instance();
}


void CMsgClientMMSGetLobbyData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSGetLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSGetLobbyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSGetLobbyData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSGetLobbyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSGetLobbyData)
  return false;
#undef DO_
}

void CMsgClientMMSGetLobbyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSGetLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSGetLobbyData)
}

::google::protobuf::uint8* CMsgClientMMSGetLobbyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSGetLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSGetLobbyData)
  return target;
}

size_t CMsgClientMMSGetLobbyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSGetLobbyData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSGetLobbyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSGetLobbyData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSGetLobbyData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSGetLobbyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSGetLobbyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSGetLobbyData)
    MergeFrom(*source);
  }
}

void CMsgClientMMSGetLobbyData::MergeFrom(const CMsgClientMMSGetLobbyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSGetLobbyData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSGetLobbyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSGetLobbyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSGetLobbyData::CopyFrom(const CMsgClientMMSGetLobbyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSGetLobbyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSGetLobbyData::IsInitialized() const {
  return true;
}

void CMsgClientMMSGetLobbyData::Swap(CMsgClientMMSGetLobbyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSGetLobbyData::InternalSwap(CMsgClientMMSGetLobbyData* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSGetLobbyData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSLobbyData_Member::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSLobbyData_Member::kSteamIdFieldNumber;
const int CMsgClientMMSLobbyData_Member::kPersonaNameFieldNumber;
const int CMsgClientMMSLobbyData_Member::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSLobbyData_Member::CMsgClientMMSLobbyData_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyData_Member.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSLobbyData.Member)
}
CMsgClientMMSLobbyData_Member::CMsgClientMMSLobbyData_Member(const CMsgClientMMSLobbyData_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSLobbyData.Member)
}

void CMsgClientMMSLobbyData_Member::SharedCtor() {
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientMMSLobbyData_Member::~CMsgClientMMSLobbyData_Member() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSLobbyData.Member)
  SharedDtor();
}

void CMsgClientMMSLobbyData_Member::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSLobbyData_Member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSLobbyData_Member::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSLobbyData_Member& CMsgClientMMSLobbyData_Member::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyData_Member.base);
  return *internal_default_instance();
}


void CMsgClientMMSLobbyData_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSLobbyData.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      persona_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      metadata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSLobbyData_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSLobbyData.Member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSLobbyData.Member.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSLobbyData.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSLobbyData.Member)
  return false;
#undef DO_
}

void CMsgClientMMSLobbyData_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSLobbyData.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSLobbyData.Member.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona_name(), output);
  }

  // optional bytes metadata = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSLobbyData.Member)
}

::google::protobuf::uint8* CMsgClientMMSLobbyData_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSLobbyData.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSLobbyData.Member.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona_name(), target);
  }

  // optional bytes metadata = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->metadata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSLobbyData.Member)
  return target;
}

size_t CMsgClientMMSLobbyData_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSLobbyData.Member)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string persona_name = 2;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional bytes metadata = 3;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSLobbyData_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSLobbyData.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSLobbyData_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSLobbyData_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSLobbyData.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSLobbyData.Member)
    MergeFrom(*source);
  }
}

void CMsgClientMMSLobbyData_Member::MergeFrom(const CMsgClientMMSLobbyData_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSLobbyData.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_ = from.steam_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSLobbyData_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSLobbyData.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSLobbyData_Member::CopyFrom(const CMsgClientMMSLobbyData_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSLobbyData.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSLobbyData_Member::IsInitialized() const {
  return true;
}

void CMsgClientMMSLobbyData_Member::Swap(CMsgClientMMSLobbyData_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSLobbyData_Member::InternalSwap(CMsgClientMMSLobbyData_Member* other) {
  using std::swap;
  persona_name_.Swap(&other->persona_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSLobbyData_Member::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSLobbyData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSLobbyData::kAppIdFieldNumber;
const int CMsgClientMMSLobbyData::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSLobbyData::kNumMembersFieldNumber;
const int CMsgClientMMSLobbyData::kMaxMembersFieldNumber;
const int CMsgClientMMSLobbyData::kLobbyTypeFieldNumber;
const int CMsgClientMMSLobbyData::kLobbyFlagsFieldNumber;
const int CMsgClientMMSLobbyData::kSteamIdOwnerFieldNumber;
const int CMsgClientMMSLobbyData::kMetadataFieldNumber;
const int CMsgClientMMSLobbyData::kMembersFieldNumber;
const int CMsgClientMMSLobbyData::kLobbyCellidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSLobbyData::CMsgClientMMSLobbyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSLobbyData)
}
CMsgClientMMSLobbyData::CMsgClientMMSLobbyData(const CMsgClientMMSLobbyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&lobby_cellid_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_cellid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSLobbyData)
}

void CMsgClientMMSLobbyData::SharedCtor() {
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lobby_cellid_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_cellid_));
}

CMsgClientMMSLobbyData::~CMsgClientMMSLobbyData() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSLobbyData)
  SharedDtor();
}

void CMsgClientMMSLobbyData::SharedDtor() {
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSLobbyData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSLobbyData::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSLobbyData& CMsgClientMMSLobbyData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyData.base);
  return *internal_default_instance();
}


void CMsgClientMMSLobbyData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    metadata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lobby_flags_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(lobby_flags_));
  }
  lobby_cellid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSLobbyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSLobbyData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_members = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_members = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_lobby_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lobby_flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_lobby_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lobby_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_owner = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_steam_id_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes metadata = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientMMSLobbyData.Member members = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lobby_cellid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_lobby_cellid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lobby_cellid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSLobbyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSLobbyData)
  return false;
#undef DO_
}

void CMsgClientMMSLobbyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional int32 num_members = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_members(), output);
  }

  // optional int32 max_members = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_members(), output);
  }

  // optional int32 lobby_type = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lobby_type(), output);
  }

  // optional int32 lobby_flags = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lobby_flags(), output);
  }

  // optional fixed64 steam_id_owner = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->steam_id_owner(), output);
  }

  // optional bytes metadata = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->metadata(), output);
  }

  // repeated .CMsgClientMMSLobbyData.Member members = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->members(static_cast<int>(i)),
      output);
  }

  // optional uint32 lobby_cellid = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->lobby_cellid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSLobbyData)
}

::google::protobuf::uint8* CMsgClientMMSLobbyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSLobbyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional int32 num_members = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_members(), target);
  }

  // optional int32 max_members = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_members(), target);
  }

  // optional int32 lobby_type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lobby_type(), target);
  }

  // optional int32 lobby_flags = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lobby_flags(), target);
  }

  // optional fixed64 steam_id_owner = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(7, this->steam_id_owner(), target);
  }

  // optional bytes metadata = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->metadata(), target);
  }

  // repeated .CMsgClientMMSLobbyData.Member members = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->members(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 lobby_cellid = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->lobby_cellid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSLobbyData)
  return target;
}

size_t CMsgClientMMSLobbyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSLobbyData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientMMSLobbyData.Member members = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes metadata = 8;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->metadata());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 num_members = 3;
    if (has_num_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_members());
    }

    // optional int32 max_members = 4;
    if (has_max_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_members());
    }

    // optional int32 lobby_type = 5;
    if (has_lobby_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_type());
    }

    // optional fixed64 steam_id_owner = 7;
    if (has_steam_id_owner()) {
      total_size += 1 + 8;
    }

    // optional int32 lobby_flags = 6;
    if (has_lobby_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lobby_flags());
    }

  }
  // optional uint32 lobby_cellid = 10;
  if (has_lobby_cellid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lobby_cellid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSLobbyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSLobbyData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSLobbyData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSLobbyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSLobbyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSLobbyData)
    MergeFrom(*source);
  }
}

void CMsgClientMMSLobbyData::MergeFrom(const CMsgClientMMSLobbyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSLobbyData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_members_ = from.num_members_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_members_ = from.max_members_;
    }
    if (cached_has_bits & 0x00000020u) {
      lobby_type_ = from.lobby_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      steam_id_owner_ = from.steam_id_owner_;
    }
    if (cached_has_bits & 0x00000080u) {
      lobby_flags_ = from.lobby_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_lobby_cellid(from.lobby_cellid());
  }
}

void CMsgClientMMSLobbyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSLobbyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSLobbyData::CopyFrom(const CMsgClientMMSLobbyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSLobbyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSLobbyData::IsInitialized() const {
  return true;
}

void CMsgClientMMSLobbyData::Swap(CMsgClientMMSLobbyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSLobbyData::InternalSwap(CMsgClientMMSLobbyData* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(num_members_, other->num_members_);
  swap(max_members_, other->max_members_);
  swap(lobby_type_, other->lobby_type_);
  swap(steam_id_owner_, other->steam_id_owner_);
  swap(lobby_flags_, other->lobby_flags_);
  swap(lobby_cellid_, other->lobby_cellid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSLobbyData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSendLobbyChatMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSendLobbyChatMsg::kAppIdFieldNumber;
const int CMsgClientMMSSendLobbyChatMsg::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSendLobbyChatMsg::kSteamIdTargetFieldNumber;
const int CMsgClientMMSSendLobbyChatMsg::kLobbyMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSendLobbyChatMsg::CMsgClientMMSSendLobbyChatMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSendLobbyChatMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSendLobbyChatMsg)
}
CMsgClientMMSSendLobbyChatMsg::CMsgClientMMSSendLobbyChatMsg(const CMsgClientMMSSendLobbyChatMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lobby_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lobby_message()) {
    lobby_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lobby_message_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSendLobbyChatMsg)
}

void CMsgClientMMSSendLobbyChatMsg::SharedCtor() {
  lobby_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSSendLobbyChatMsg::~CMsgClientMMSSendLobbyChatMsg() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSendLobbyChatMsg)
  SharedDtor();
}

void CMsgClientMMSSendLobbyChatMsg::SharedDtor() {
  lobby_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSSendLobbyChatMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSendLobbyChatMsg::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSendLobbyChatMsg& CMsgClientMMSSendLobbyChatMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSendLobbyChatMsg.base);
  return *internal_default_instance();
}


void CMsgClientMMSSendLobbyChatMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSendLobbyChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    lobby_message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSendLobbyChatMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSendLobbyChatMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes lobby_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_lobby_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSendLobbyChatMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSendLobbyChatMsg)
  return false;
#undef DO_
}

void CMsgClientMMSSendLobbyChatMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSendLobbyChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_target = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_target(), output);
  }

  // optional bytes lobby_message = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->lobby_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSendLobbyChatMsg)
}

::google::protobuf::uint8* CMsgClientMMSSendLobbyChatMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSendLobbyChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_target(), target);
  }

  // optional bytes lobby_message = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->lobby_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSendLobbyChatMsg)
  return target;
}

size_t CMsgClientMMSSendLobbyChatMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSendLobbyChatMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes lobby_message = 4;
    if (has_lobby_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->lobby_message());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_target = 3;
    if (has_steam_id_target()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSendLobbyChatMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSendLobbyChatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSendLobbyChatMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSendLobbyChatMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSendLobbyChatMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSendLobbyChatMsg)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSendLobbyChatMsg::MergeFrom(const CMsgClientMMSSendLobbyChatMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSendLobbyChatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lobby_message();
      lobby_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lobby_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_target_ = from.steam_id_target_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSendLobbyChatMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSendLobbyChatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSendLobbyChatMsg::CopyFrom(const CMsgClientMMSSendLobbyChatMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSendLobbyChatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSendLobbyChatMsg::IsInitialized() const {
  return true;
}

void CMsgClientMMSSendLobbyChatMsg::Swap(CMsgClientMMSSendLobbyChatMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSendLobbyChatMsg::InternalSwap(CMsgClientMMSSendLobbyChatMsg* other) {
  using std::swap;
  lobby_message_.Swap(&other->lobby_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_target_, other->steam_id_target_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSendLobbyChatMsg::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSLobbyChatMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSLobbyChatMsg::kAppIdFieldNumber;
const int CMsgClientMMSLobbyChatMsg::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSLobbyChatMsg::kSteamIdSenderFieldNumber;
const int CMsgClientMMSLobbyChatMsg::kLobbyMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSLobbyChatMsg::CMsgClientMMSLobbyChatMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyChatMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSLobbyChatMsg)
}
CMsgClientMMSLobbyChatMsg::CMsgClientMMSLobbyChatMsg(const CMsgClientMMSLobbyChatMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lobby_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lobby_message()) {
    lobby_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lobby_message_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSLobbyChatMsg)
}

void CMsgClientMMSLobbyChatMsg::SharedCtor() {
  lobby_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSLobbyChatMsg::~CMsgClientMMSLobbyChatMsg() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSLobbyChatMsg)
  SharedDtor();
}

void CMsgClientMMSLobbyChatMsg::SharedDtor() {
  lobby_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSLobbyChatMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSLobbyChatMsg::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSLobbyChatMsg& CMsgClientMMSLobbyChatMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyChatMsg.base);
  return *internal_default_instance();
}


void CMsgClientMMSLobbyChatMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSLobbyChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    lobby_message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSLobbyChatMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSLobbyChatMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_sender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_sender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes lobby_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_lobby_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSLobbyChatMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSLobbyChatMsg)
  return false;
#undef DO_
}

void CMsgClientMMSLobbyChatMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSLobbyChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_sender = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_sender(), output);
  }

  // optional bytes lobby_message = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->lobby_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSLobbyChatMsg)
}

::google::protobuf::uint8* CMsgClientMMSLobbyChatMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSLobbyChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_sender = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_sender(), target);
  }

  // optional bytes lobby_message = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->lobby_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSLobbyChatMsg)
  return target;
}

size_t CMsgClientMMSLobbyChatMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSLobbyChatMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes lobby_message = 4;
    if (has_lobby_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->lobby_message());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_sender = 3;
    if (has_steam_id_sender()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSLobbyChatMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSLobbyChatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSLobbyChatMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSLobbyChatMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSLobbyChatMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSLobbyChatMsg)
    MergeFrom(*source);
  }
}

void CMsgClientMMSLobbyChatMsg::MergeFrom(const CMsgClientMMSLobbyChatMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSLobbyChatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lobby_message();
      lobby_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lobby_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_sender_ = from.steam_id_sender_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSLobbyChatMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSLobbyChatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSLobbyChatMsg::CopyFrom(const CMsgClientMMSLobbyChatMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSLobbyChatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSLobbyChatMsg::IsInitialized() const {
  return true;
}

void CMsgClientMMSLobbyChatMsg::Swap(CMsgClientMMSLobbyChatMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSLobbyChatMsg::InternalSwap(CMsgClientMMSLobbyChatMsg* other) {
  using std::swap;
  lobby_message_.Swap(&other->lobby_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_sender_, other->steam_id_sender_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSLobbyChatMsg::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSetLobbyOwner::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSetLobbyOwner::kAppIdFieldNumber;
const int CMsgClientMMSSetLobbyOwner::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSetLobbyOwner::kSteamIdNewOwnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSetLobbyOwner::CMsgClientMMSSetLobbyOwner()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyOwner.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSetLobbyOwner)
}
CMsgClientMMSSetLobbyOwner::CMsgClientMMSSetLobbyOwner(const CMsgClientMMSSetLobbyOwner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSetLobbyOwner)
}

void CMsgClientMMSSetLobbyOwner::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSSetLobbyOwner::~CMsgClientMMSSetLobbyOwner() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSetLobbyOwner)
  SharedDtor();
}

void CMsgClientMMSSetLobbyOwner::SharedDtor() {
}

void CMsgClientMMSSetLobbyOwner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSetLobbyOwner::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSetLobbyOwner& CMsgClientMMSSetLobbyOwner::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyOwner.base);
  return *internal_default_instance();
}


void CMsgClientMMSSetLobbyOwner::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSetLobbyOwner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSetLobbyOwner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSetLobbyOwner)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_new_owner = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_new_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_new_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSetLobbyOwner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSetLobbyOwner)
  return false;
#undef DO_
}

void CMsgClientMMSSetLobbyOwner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSetLobbyOwner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_new_owner = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_new_owner(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSetLobbyOwner)
}

::google::protobuf::uint8* CMsgClientMMSSetLobbyOwner::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSetLobbyOwner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_new_owner = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_new_owner(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSetLobbyOwner)
  return target;
}

size_t CMsgClientMMSSetLobbyOwner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSetLobbyOwner)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_new_owner = 3;
    if (has_steam_id_new_owner()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSetLobbyOwner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSetLobbyOwner)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSetLobbyOwner* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSetLobbyOwner>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSetLobbyOwner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSetLobbyOwner)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSetLobbyOwner::MergeFrom(const CMsgClientMMSSetLobbyOwner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSetLobbyOwner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_new_owner_ = from.steam_id_new_owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSetLobbyOwner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSetLobbyOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSetLobbyOwner::CopyFrom(const CMsgClientMMSSetLobbyOwner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSetLobbyOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSetLobbyOwner::IsInitialized() const {
  return true;
}

void CMsgClientMMSSetLobbyOwner::Swap(CMsgClientMMSSetLobbyOwner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSetLobbyOwner::InternalSwap(CMsgClientMMSSetLobbyOwner* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_new_owner_, other->steam_id_new_owner_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSetLobbyOwner::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSetLobbyOwnerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSetLobbyOwnerResponse::kAppIdFieldNumber;
const int CMsgClientMMSSetLobbyOwnerResponse::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSetLobbyOwnerResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSetLobbyOwnerResponse::CMsgClientMMSSetLobbyOwnerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyOwnerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSetLobbyOwnerResponse)
}
CMsgClientMMSSetLobbyOwnerResponse::CMsgClientMMSSetLobbyOwnerResponse(const CMsgClientMMSSetLobbyOwnerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSetLobbyOwnerResponse)
}

void CMsgClientMMSSetLobbyOwnerResponse::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  eresult_ = 2;
}

CMsgClientMMSSetLobbyOwnerResponse::~CMsgClientMMSSetLobbyOwnerResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSetLobbyOwnerResponse)
  SharedDtor();
}

void CMsgClientMMSSetLobbyOwnerResponse::SharedDtor() {
}

void CMsgClientMMSSetLobbyOwnerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSetLobbyOwnerResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSetLobbyOwnerResponse& CMsgClientMMSSetLobbyOwnerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyOwnerResponse.base);
  return *internal_default_instance();
}


void CMsgClientMMSSetLobbyOwnerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSetLobbyOwnerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSetLobbyOwnerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSetLobbyOwnerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSetLobbyOwnerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSetLobbyOwnerResponse)
  return false;
#undef DO_
}

void CMsgClientMMSSetLobbyOwnerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSetLobbyOwnerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSetLobbyOwnerResponse)
}

::google::protobuf::uint8* CMsgClientMMSSetLobbyOwnerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSetLobbyOwnerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSetLobbyOwnerResponse)
  return target;
}

size_t CMsgClientMMSSetLobbyOwnerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSetLobbyOwnerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSetLobbyOwnerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSetLobbyOwnerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSetLobbyOwnerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSetLobbyOwnerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSetLobbyOwnerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSetLobbyOwnerResponse)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSetLobbyOwnerResponse::MergeFrom(const CMsgClientMMSSetLobbyOwnerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSetLobbyOwnerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSetLobbyOwnerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSetLobbyOwnerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSetLobbyOwnerResponse::CopyFrom(const CMsgClientMMSSetLobbyOwnerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSetLobbyOwnerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSetLobbyOwnerResponse::IsInitialized() const {
  return true;
}

void CMsgClientMMSSetLobbyOwnerResponse::Swap(CMsgClientMMSSetLobbyOwnerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSetLobbyOwnerResponse::InternalSwap(CMsgClientMMSSetLobbyOwnerResponse* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSetLobbyOwnerResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSetLobbyLinked::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSetLobbyLinked::kAppIdFieldNumber;
const int CMsgClientMMSSetLobbyLinked::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSetLobbyLinked::kSteamIdLobby2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSetLobbyLinked::CMsgClientMMSSetLobbyLinked()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyLinked.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSetLobbyLinked)
}
CMsgClientMMSSetLobbyLinked::CMsgClientMMSSetLobbyLinked(const CMsgClientMMSSetLobbyLinked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSetLobbyLinked)
}

void CMsgClientMMSSetLobbyLinked::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSSetLobbyLinked::~CMsgClientMMSSetLobbyLinked() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSetLobbyLinked)
  SharedDtor();
}

void CMsgClientMMSSetLobbyLinked::SharedDtor() {
}

void CMsgClientMMSSetLobbyLinked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSetLobbyLinked::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSetLobbyLinked& CMsgClientMMSSetLobbyLinked::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyLinked.base);
  return *internal_default_instance();
}


void CMsgClientMMSSetLobbyLinked::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSetLobbyLinked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSetLobbyLinked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSetLobbyLinked)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_lobby2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSetLobbyLinked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSetLobbyLinked)
  return false;
#undef DO_
}

void CMsgClientMMSSetLobbyLinked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSetLobbyLinked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_lobby2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_lobby2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSetLobbyLinked)
}

::google::protobuf::uint8* CMsgClientMMSSetLobbyLinked::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSetLobbyLinked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_lobby2 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_lobby2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSetLobbyLinked)
  return target;
}

size_t CMsgClientMMSSetLobbyLinked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSetLobbyLinked)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_lobby2 = 3;
    if (has_steam_id_lobby2()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSetLobbyLinked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSetLobbyLinked)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSetLobbyLinked* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSetLobbyLinked>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSetLobbyLinked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSetLobbyLinked)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSetLobbyLinked::MergeFrom(const CMsgClientMMSSetLobbyLinked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSetLobbyLinked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby2_ = from.steam_id_lobby2_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSetLobbyLinked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSetLobbyLinked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSetLobbyLinked::CopyFrom(const CMsgClientMMSSetLobbyLinked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSetLobbyLinked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSetLobbyLinked::IsInitialized() const {
  return true;
}

void CMsgClientMMSSetLobbyLinked::Swap(CMsgClientMMSSetLobbyLinked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSetLobbyLinked::InternalSwap(CMsgClientMMSSetLobbyLinked* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_lobby2_, other->steam_id_lobby2_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSetLobbyLinked::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSSetLobbyGameServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSSetLobbyGameServer::kAppIdFieldNumber;
const int CMsgClientMMSSetLobbyGameServer::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSSetLobbyGameServer::kGameServerIpFieldNumber;
const int CMsgClientMMSSetLobbyGameServer::kGameServerPortFieldNumber;
const int CMsgClientMMSSetLobbyGameServer::kGameServerSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSSetLobbyGameServer::CMsgClientMMSSetLobbyGameServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyGameServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSSetLobbyGameServer)
}
CMsgClientMMSSetLobbyGameServer::CMsgClientMMSSetLobbyGameServer(const CMsgClientMMSSetLobbyGameServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_server_port_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(game_server_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSSetLobbyGameServer)
}

void CMsgClientMMSSetLobbyGameServer::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_server_port_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(game_server_port_));
}

CMsgClientMMSSetLobbyGameServer::~CMsgClientMMSSetLobbyGameServer() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSSetLobbyGameServer)
  SharedDtor();
}

void CMsgClientMMSSetLobbyGameServer::SharedDtor() {
}

void CMsgClientMMSSetLobbyGameServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSSetLobbyGameServer::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSSetLobbyGameServer& CMsgClientMMSSetLobbyGameServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSSetLobbyGameServer.base);
  return *internal_default_instance();
}


void CMsgClientMMSSetLobbyGameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSSetLobbyGameServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_server_port_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(game_server_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSSetLobbyGameServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSSetLobbyGameServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_game_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_server_steam_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_game_server_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_server_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSSetLobbyGameServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSSetLobbyGameServer)
  return false;
#undef DO_
}

void CMsgClientMMSSetLobbyGameServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSSetLobbyGameServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional uint32 game_server_ip = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_server_ip(), output);
  }

  // optional uint32 game_server_port = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_server_port(), output);
  }

  // optional fixed64 game_server_steam_id = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->game_server_steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSSetLobbyGameServer)
}

::google::protobuf::uint8* CMsgClientMMSSetLobbyGameServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSSetLobbyGameServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional uint32 game_server_ip = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_server_ip(), target);
  }

  // optional uint32 game_server_port = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_server_port(), target);
  }

  // optional fixed64 game_server_steam_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->game_server_steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSSetLobbyGameServer)
  return target;
}

size_t CMsgClientMMSSetLobbyGameServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSSetLobbyGameServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 game_server_ip = 3;
    if (has_game_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_ip());
    }

    // optional fixed64 game_server_steam_id = 5;
    if (has_game_server_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 game_server_port = 4;
    if (has_game_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSSetLobbyGameServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSSetLobbyGameServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSSetLobbyGameServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSSetLobbyGameServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSSetLobbyGameServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSSetLobbyGameServer)
    MergeFrom(*source);
  }
}

void CMsgClientMMSSetLobbyGameServer::MergeFrom(const CMsgClientMMSSetLobbyGameServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSSetLobbyGameServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      game_server_ip_ = from.game_server_ip_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_server_steam_id_ = from.game_server_steam_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_server_port_ = from.game_server_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSSetLobbyGameServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSSetLobbyGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSSetLobbyGameServer::CopyFrom(const CMsgClientMMSSetLobbyGameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSSetLobbyGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSSetLobbyGameServer::IsInitialized() const {
  return true;
}

void CMsgClientMMSSetLobbyGameServer::Swap(CMsgClientMMSSetLobbyGameServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSSetLobbyGameServer::InternalSwap(CMsgClientMMSSetLobbyGameServer* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(game_server_ip_, other->game_server_ip_);
  swap(game_server_steam_id_, other->game_server_steam_id_);
  swap(game_server_port_, other->game_server_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSSetLobbyGameServer::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSLobbyGameServerSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSLobbyGameServerSet::kAppIdFieldNumber;
const int CMsgClientMMSLobbyGameServerSet::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSLobbyGameServerSet::kGameServerIpFieldNumber;
const int CMsgClientMMSLobbyGameServerSet::kGameServerPortFieldNumber;
const int CMsgClientMMSLobbyGameServerSet::kGameServerSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSLobbyGameServerSet::CMsgClientMMSLobbyGameServerSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyGameServerSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSLobbyGameServerSet)
}
CMsgClientMMSLobbyGameServerSet::CMsgClientMMSLobbyGameServerSet(const CMsgClientMMSLobbyGameServerSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_server_port_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(game_server_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSLobbyGameServerSet)
}

void CMsgClientMMSLobbyGameServerSet::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_server_port_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(game_server_port_));
}

CMsgClientMMSLobbyGameServerSet::~CMsgClientMMSLobbyGameServerSet() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSLobbyGameServerSet)
  SharedDtor();
}

void CMsgClientMMSLobbyGameServerSet::SharedDtor() {
}

void CMsgClientMMSLobbyGameServerSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSLobbyGameServerSet::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSLobbyGameServerSet& CMsgClientMMSLobbyGameServerSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSLobbyGameServerSet.base);
  return *internal_default_instance();
}


void CMsgClientMMSLobbyGameServerSet::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSLobbyGameServerSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_server_port_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(game_server_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSLobbyGameServerSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSLobbyGameServerSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_game_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_server_steam_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_game_server_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_server_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSLobbyGameServerSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSLobbyGameServerSet)
  return false;
#undef DO_
}

void CMsgClientMMSLobbyGameServerSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSLobbyGameServerSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional uint32 game_server_ip = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_server_ip(), output);
  }

  // optional uint32 game_server_port = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_server_port(), output);
  }

  // optional fixed64 game_server_steam_id = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->game_server_steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSLobbyGameServerSet)
}

::google::protobuf::uint8* CMsgClientMMSLobbyGameServerSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSLobbyGameServerSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional uint32 game_server_ip = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_server_ip(), target);
  }

  // optional uint32 game_server_port = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_server_port(), target);
  }

  // optional fixed64 game_server_steam_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->game_server_steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSLobbyGameServerSet)
  return target;
}

size_t CMsgClientMMSLobbyGameServerSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSLobbyGameServerSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 game_server_ip = 3;
    if (has_game_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_ip());
    }

    // optional fixed64 game_server_steam_id = 5;
    if (has_game_server_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 game_server_port = 4;
    if (has_game_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSLobbyGameServerSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSLobbyGameServerSet)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSLobbyGameServerSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSLobbyGameServerSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSLobbyGameServerSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSLobbyGameServerSet)
    MergeFrom(*source);
  }
}

void CMsgClientMMSLobbyGameServerSet::MergeFrom(const CMsgClientMMSLobbyGameServerSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSLobbyGameServerSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      game_server_ip_ = from.game_server_ip_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_server_steam_id_ = from.game_server_steam_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_server_port_ = from.game_server_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSLobbyGameServerSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSLobbyGameServerSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSLobbyGameServerSet::CopyFrom(const CMsgClientMMSLobbyGameServerSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSLobbyGameServerSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSLobbyGameServerSet::IsInitialized() const {
  return true;
}

void CMsgClientMMSLobbyGameServerSet::Swap(CMsgClientMMSLobbyGameServerSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSLobbyGameServerSet::InternalSwap(CMsgClientMMSLobbyGameServerSet* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(app_id_, other->app_id_);
  swap(game_server_ip_, other->game_server_ip_);
  swap(game_server_steam_id_, other->game_server_steam_id_);
  swap(game_server_port_, other->game_server_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSLobbyGameServerSet::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSUserJoinedLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSUserJoinedLobby::kAppIdFieldNumber;
const int CMsgClientMMSUserJoinedLobby::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSUserJoinedLobby::kSteamIdUserFieldNumber;
const int CMsgClientMMSUserJoinedLobby::kPersonaNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSUserJoinedLobby::CMsgClientMMSUserJoinedLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSUserJoinedLobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSUserJoinedLobby)
}
CMsgClientMMSUserJoinedLobby::CMsgClientMMSUserJoinedLobby(const CMsgClientMMSUserJoinedLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSUserJoinedLobby)
}

void CMsgClientMMSUserJoinedLobby::SharedCtor() {
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSUserJoinedLobby::~CMsgClientMMSUserJoinedLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSUserJoinedLobby)
  SharedDtor();
}

void CMsgClientMMSUserJoinedLobby::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSUserJoinedLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSUserJoinedLobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSUserJoinedLobby& CMsgClientMMSUserJoinedLobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSUserJoinedLobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSUserJoinedLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSUserJoinedLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    persona_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSUserJoinedLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSUserJoinedLobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_user = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSUserJoinedLobby.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSUserJoinedLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSUserJoinedLobby)
  return false;
#undef DO_
}

void CMsgClientMMSUserJoinedLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSUserJoinedLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_user = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_user(), output);
  }

  // optional string persona_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSUserJoinedLobby.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->persona_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSUserJoinedLobby)
}

::google::protobuf::uint8* CMsgClientMMSUserJoinedLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSUserJoinedLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_user = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_user(), target);
  }

  // optional string persona_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSUserJoinedLobby.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->persona_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSUserJoinedLobby)
  return target;
}

size_t CMsgClientMMSUserJoinedLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSUserJoinedLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string persona_name = 4;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_user = 3;
    if (has_steam_id_user()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSUserJoinedLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSUserJoinedLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSUserJoinedLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSUserJoinedLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSUserJoinedLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSUserJoinedLobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSUserJoinedLobby::MergeFrom(const CMsgClientMMSUserJoinedLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSUserJoinedLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_user_ = from.steam_id_user_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSUserJoinedLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSUserJoinedLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSUserJoinedLobby::CopyFrom(const CMsgClientMMSUserJoinedLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSUserJoinedLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSUserJoinedLobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSUserJoinedLobby::Swap(CMsgClientMMSUserJoinedLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSUserJoinedLobby::InternalSwap(CMsgClientMMSUserJoinedLobby* other) {
  using std::swap;
  persona_name_.Swap(&other->persona_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_user_, other->steam_id_user_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSUserJoinedLobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSUserLeftLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSUserLeftLobby::kAppIdFieldNumber;
const int CMsgClientMMSUserLeftLobby::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSUserLeftLobby::kSteamIdUserFieldNumber;
const int CMsgClientMMSUserLeftLobby::kPersonaNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSUserLeftLobby::CMsgClientMMSUserLeftLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSUserLeftLobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSUserLeftLobby)
}
CMsgClientMMSUserLeftLobby::CMsgClientMMSUserLeftLobby(const CMsgClientMMSUserLeftLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSUserLeftLobby)
}

void CMsgClientMMSUserLeftLobby::SharedCtor() {
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSUserLeftLobby::~CMsgClientMMSUserLeftLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSUserLeftLobby)
  SharedDtor();
}

void CMsgClientMMSUserLeftLobby::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientMMSUserLeftLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSUserLeftLobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSUserLeftLobby& CMsgClientMMSUserLeftLobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSUserLeftLobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSUserLeftLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSUserLeftLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    persona_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSUserLeftLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSUserLeftLobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_user = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientMMSUserLeftLobby.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSUserLeftLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSUserLeftLobby)
  return false;
#undef DO_
}

void CMsgClientMMSUserLeftLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSUserLeftLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_user = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_user(), output);
  }

  // optional string persona_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSUserLeftLobby.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->persona_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSUserLeftLobby)
}

::google::protobuf::uint8* CMsgClientMMSUserLeftLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSUserLeftLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_user = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_user(), target);
  }

  // optional string persona_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientMMSUserLeftLobby.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->persona_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSUserLeftLobby)
  return target;
}

size_t CMsgClientMMSUserLeftLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSUserLeftLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string persona_name = 4;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_user = 3;
    if (has_steam_id_user()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSUserLeftLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSUserLeftLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSUserLeftLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSUserLeftLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSUserLeftLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSUserLeftLobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSUserLeftLobby::MergeFrom(const CMsgClientMMSUserLeftLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSUserLeftLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_user_ = from.steam_id_user_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSUserLeftLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSUserLeftLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSUserLeftLobby::CopyFrom(const CMsgClientMMSUserLeftLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSUserLeftLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSUserLeftLobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSUserLeftLobby::Swap(CMsgClientMMSUserLeftLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSUserLeftLobby::InternalSwap(CMsgClientMMSUserLeftLobby* other) {
  using std::swap;
  persona_name_.Swap(&other->persona_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_user_, other->steam_id_user_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSUserLeftLobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientMMSInviteToLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientMMSInviteToLobby::kAppIdFieldNumber;
const int CMsgClientMMSInviteToLobby::kSteamIdLobbyFieldNumber;
const int CMsgClientMMSInviteToLobby::kSteamIdUserInvitedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientMMSInviteToLobby::CMsgClientMMSInviteToLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSInviteToLobby.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientMMSInviteToLobby)
}
CMsgClientMMSInviteToLobby::CMsgClientMMSInviteToLobby(const CMsgClientMMSInviteToLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_lobby_, &from.steam_id_lobby_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientMMSInviteToLobby)
}

void CMsgClientMMSInviteToLobby::SharedCtor() {
  ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
}

CMsgClientMMSInviteToLobby::~CMsgClientMMSInviteToLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientMMSInviteToLobby)
  SharedDtor();
}

void CMsgClientMMSInviteToLobby::SharedDtor() {
}

void CMsgClientMMSInviteToLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientMMSInviteToLobby::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientMMSInviteToLobby& CMsgClientMMSInviteToLobby::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientMMSInviteToLobby.base);
  return *internal_default_instance();
}


void CMsgClientMMSInviteToLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientMMSInviteToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_lobby_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&steam_id_lobby_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientMMSInviteToLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientMMSInviteToLobby)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_lobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_user_invited = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_user_invited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_user_invited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientMMSInviteToLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientMMSInviteToLobby)
  return false;
#undef DO_
}

void CMsgClientMMSInviteToLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientMMSInviteToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_lobby(), output);
  }

  // optional fixed64 steam_id_user_invited = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_user_invited(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientMMSInviteToLobby)
}

::google::protobuf::uint8* CMsgClientMMSInviteToLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientMMSInviteToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 steam_id_lobby = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_lobby(), target);
  }

  // optional fixed64 steam_id_user_invited = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_user_invited(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientMMSInviteToLobby)
  return target;
}

size_t CMsgClientMMSInviteToLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientMMSInviteToLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id_lobby = 2;
    if (has_steam_id_lobby()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_user_invited = 3;
    if (has_steam_id_user_invited()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientMMSInviteToLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientMMSInviteToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientMMSInviteToLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientMMSInviteToLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientMMSInviteToLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientMMSInviteToLobby)
    MergeFrom(*source);
  }
}

void CMsgClientMMSInviteToLobby::MergeFrom(const CMsgClientMMSInviteToLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientMMSInviteToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_lobby_ = from.steam_id_lobby_;
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_user_invited_ = from.steam_id_user_invited_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientMMSInviteToLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientMMSInviteToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientMMSInviteToLobby::CopyFrom(const CMsgClientMMSInviteToLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientMMSInviteToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientMMSInviteToLobby::IsInitialized() const {
  return true;
}

void CMsgClientMMSInviteToLobby::Swap(CMsgClientMMSInviteToLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientMMSInviteToLobby::InternalSwap(CMsgClientMMSInviteToLobby* other) {
  using std::swap;
  swap(steam_id_lobby_, other->steam_id_lobby_);
  swap(steam_id_user_invited_, other->steam_id_user_invited_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientMMSInviteToLobby::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientInviteToGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientInviteToGame::kSteamIdDestFieldNumber;
const int CMsgClientInviteToGame::kSteamIdSrcFieldNumber;
const int CMsgClientInviteToGame::kConnectStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientInviteToGame::CMsgClientInviteToGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientInviteToGame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientInviteToGame)
}
CMsgClientInviteToGame::CMsgClientInviteToGame(const CMsgClientInviteToGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connect_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_connect_string()) {
    connect_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connect_string_);
  }
  ::memcpy(&steam_id_dest_, &from.steam_id_dest_,
    static_cast<size_t>(reinterpret_cast<char*>(&steam_id_src_) -
    reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(steam_id_src_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientInviteToGame)
}

void CMsgClientInviteToGame::SharedCtor() {
  connect_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_dest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steam_id_src_) -
      reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(steam_id_src_));
}

CMsgClientInviteToGame::~CMsgClientInviteToGame() {
  // @@protoc_insertion_point(destructor:CMsgClientInviteToGame)
  SharedDtor();
}

void CMsgClientInviteToGame::SharedDtor() {
  connect_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientInviteToGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientInviteToGame::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientInviteToGame& CMsgClientInviteToGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientInviteToGame.base);
  return *internal_default_instance();
}


void CMsgClientInviteToGame::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientInviteToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    connect_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steam_id_dest_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steam_id_src_) -
        reinterpret_cast<char*>(&steam_id_dest_)) + sizeof(steam_id_src_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientInviteToGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientInviteToGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_dest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_dest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_src();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string connect_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connect_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->connect_string().data(), static_cast<int>(this->connect_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientInviteToGame.connect_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientInviteToGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientInviteToGame)
  return false;
#undef DO_
}

void CMsgClientInviteToGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientInviteToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_dest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_dest(), output);
  }

  // optional fixed64 steam_id_src = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_src(), output);
  }

  // optional string connect_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->connect_string().data(), static_cast<int>(this->connect_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientInviteToGame.connect_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->connect_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientInviteToGame)
}

::google::protobuf::uint8* CMsgClientInviteToGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientInviteToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_dest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_dest(), target);
  }

  // optional fixed64 steam_id_src = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_src(), target);
  }

  // optional string connect_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->connect_string().data(), static_cast<int>(this->connect_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientInviteToGame.connect_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->connect_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientInviteToGame)
  return target;
}

size_t CMsgClientInviteToGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientInviteToGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string connect_string = 3;
    if (has_connect_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->connect_string());
    }

    // optional fixed64 steam_id_dest = 1;
    if (has_steam_id_dest()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_src = 2;
    if (has_steam_id_src()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientInviteToGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientInviteToGame)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientInviteToGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientInviteToGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientInviteToGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientInviteToGame)
    MergeFrom(*source);
  }
}

void CMsgClientInviteToGame::MergeFrom(const CMsgClientInviteToGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientInviteToGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_connect_string();
      connect_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connect_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_dest_ = from.steam_id_dest_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_src_ = from.steam_id_src_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientInviteToGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientInviteToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientInviteToGame::CopyFrom(const CMsgClientInviteToGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientInviteToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientInviteToGame::IsInitialized() const {
  return true;
}

void CMsgClientInviteToGame::Swap(CMsgClientInviteToGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientInviteToGame::InternalSwap(CMsgClientInviteToGame* other) {
  using std::swap;
  connect_string_.Swap(&other->connect_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_dest_, other->steam_id_dest_);
  swap(steam_id_src_, other->steam_id_src_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientInviteToGame::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatInvite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatInvite::kSteamIdInvitedFieldNumber;
const int CMsgClientChatInvite::kSteamIdChatFieldNumber;
const int CMsgClientChatInvite::kSteamIdPatronFieldNumber;
const int CMsgClientChatInvite::kChatroomTypeFieldNumber;
const int CMsgClientChatInvite::kSteamIdFriendChatFieldNumber;
const int CMsgClientChatInvite::kChatNameFieldNumber;
const int CMsgClientChatInvite::kGameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatInvite::CMsgClientChatInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientChatInvite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientChatInvite)
}
CMsgClientChatInvite::CMsgClientChatInvite(const CMsgClientChatInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_name()) {
    chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
  }
  ::memcpy(&steam_id_invited_, &from.steam_id_invited_,
    static_cast<size_t>(reinterpret_cast<char*>(&chatroom_type_) -
    reinterpret_cast<char*>(&steam_id_invited_)) + sizeof(chatroom_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientChatInvite)
}

void CMsgClientChatInvite::SharedCtor() {
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_invited_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chatroom_type_) -
      reinterpret_cast<char*>(&steam_id_invited_)) + sizeof(chatroom_type_));
}

CMsgClientChatInvite::~CMsgClientChatInvite() {
  // @@protoc_insertion_point(destructor:CMsgClientChatInvite)
  SharedDtor();
}

void CMsgClientChatInvite::SharedDtor() {
  chat_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientChatInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientChatInvite::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatInvite& CMsgClientChatInvite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientChatInvite.base);
  return *internal_default_instance();
}


void CMsgClientChatInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientChatInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    chat_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&steam_id_invited_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chatroom_type_) -
        reinterpret_cast<char*>(&steam_id_invited_)) + sizeof(chatroom_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientChatInvite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_invited = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id_invited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_invited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_patron = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steam_id_patron();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_patron_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chatroom_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_chatroom_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chatroom_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_friend_chat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_steam_id_friend_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_friend_chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string chat_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_name().data(), static_cast<int>(this->chat_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientChatInvite.chat_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientChatInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientChatInvite)
  return false;
#undef DO_
}

void CMsgClientChatInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientChatInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_invited = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_invited(), output);
  }

  // optional fixed64 steam_id_chat = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_chat(), output);
  }

  // optional fixed64 steam_id_patron = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steam_id_patron(), output);
  }

  // optional int32 chatroom_type = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->chatroom_type(), output);
  }

  // optional fixed64 steam_id_friend_chat = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->steam_id_friend_chat(), output);
  }

  // optional string chat_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), static_cast<int>(this->chat_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientChatInvite.chat_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->chat_name(), output);
  }

  // optional fixed64 game_id = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->game_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientChatInvite)
}

::google::protobuf::uint8* CMsgClientChatInvite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientChatInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_invited = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_invited(), target);
  }

  // optional fixed64 steam_id_chat = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_chat(), target);
  }

  // optional fixed64 steam_id_patron = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steam_id_patron(), target);
  }

  // optional int32 chatroom_type = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->chatroom_type(), target);
  }

  // optional fixed64 steam_id_friend_chat = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->steam_id_friend_chat(), target);
  }

  // optional string chat_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), static_cast<int>(this->chat_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientChatInvite.chat_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->chat_name(), target);
  }

  // optional fixed64 game_id = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(7, this->game_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientChatInvite)
  return target;
}

size_t CMsgClientChatInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientChatInvite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string chat_name = 6;
    if (has_chat_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_name());
    }

    // optional fixed64 steam_id_invited = 1;
    if (has_steam_id_invited()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_chat = 2;
    if (has_steam_id_chat()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_patron = 3;
    if (has_steam_id_patron()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steam_id_friend_chat = 5;
    if (has_steam_id_friend_chat()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 7;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional int32 chatroom_type = 4;
    if (has_chatroom_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chatroom_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatInvite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientChatInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatInvite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatInvite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientChatInvite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientChatInvite)
    MergeFrom(*source);
  }
}

void CMsgClientChatInvite::MergeFrom(const CMsgClientChatInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientChatInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_name();
      chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_invited_ = from.steam_id_invited_;
    }
    if (cached_has_bits & 0x00000004u) {
      steam_id_chat_ = from.steam_id_chat_;
    }
    if (cached_has_bits & 0x00000008u) {
      steam_id_patron_ = from.steam_id_patron_;
    }
    if (cached_has_bits & 0x00000010u) {
      steam_id_friend_chat_ = from.steam_id_friend_chat_;
    }
    if (cached_has_bits & 0x00000020u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      chatroom_type_ = from.chatroom_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatInvite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientChatInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatInvite::CopyFrom(const CMsgClientChatInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientChatInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatInvite::IsInitialized() const {
  return true;
}

void CMsgClientChatInvite::Swap(CMsgClientChatInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatInvite::InternalSwap(CMsgClientChatInvite* other) {
  using std::swap;
  chat_name_.Swap(&other->chat_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_invited_, other->steam_id_invited_);
  swap(steam_id_chat_, other->steam_id_chat_);
  swap(steam_id_patron_, other->steam_id_patron_);
  swap(steam_id_friend_chat_, other->steam_id_friend_chat_);
  swap(game_id_, other->game_id_);
  swap(chatroom_type_, other->chatroom_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientChatInvite::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientConnectionStats_Stats_Logon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientConnectionStats_Stats_Logon::kConnectAttemptsFieldNumber;
const int CMsgClientConnectionStats_Stats_Logon::kConnectSuccessesFieldNumber;
const int CMsgClientConnectionStats_Stats_Logon::kConnectFailuresFieldNumber;
const int CMsgClientConnectionStats_Stats_Logon::kConnectionsDroppedFieldNumber;
const int CMsgClientConnectionStats_Stats_Logon::kSecondsRunningFieldNumber;
const int CMsgClientConnectionStats_Stats_Logon::kMsecTologonthistimeFieldNumber;
const int CMsgClientConnectionStats_Stats_Logon::kCountBadCmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientConnectionStats_Stats_Logon::CMsgClientConnectionStats_Stats_Logon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_Logon.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientConnectionStats.Stats_Logon)
}
CMsgClientConnectionStats_Stats_Logon::CMsgClientConnectionStats_Stats_Logon(const CMsgClientConnectionStats_Stats_Logon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&connect_attempts_, &from.connect_attempts_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_bad_cms_) -
    reinterpret_cast<char*>(&connect_attempts_)) + sizeof(count_bad_cms_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientConnectionStats.Stats_Logon)
}

void CMsgClientConnectionStats_Stats_Logon::SharedCtor() {
  ::memset(&connect_attempts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_bad_cms_) -
      reinterpret_cast<char*>(&connect_attempts_)) + sizeof(count_bad_cms_));
}

CMsgClientConnectionStats_Stats_Logon::~CMsgClientConnectionStats_Stats_Logon() {
  // @@protoc_insertion_point(destructor:CMsgClientConnectionStats.Stats_Logon)
  SharedDtor();
}

void CMsgClientConnectionStats_Stats_Logon::SharedDtor() {
}

void CMsgClientConnectionStats_Stats_Logon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientConnectionStats_Stats_Logon::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientConnectionStats_Stats_Logon& CMsgClientConnectionStats_Stats_Logon::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_Logon.base);
  return *internal_default_instance();
}


void CMsgClientConnectionStats_Stats_Logon::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientConnectionStats.Stats_Logon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&connect_attempts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_bad_cms_) -
        reinterpret_cast<char*>(&connect_attempts_)) + sizeof(count_bad_cms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientConnectionStats_Stats_Logon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientConnectionStats.Stats_Logon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 connect_attempts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_connect_attempts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connect_attempts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 connect_successes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_connect_successes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connect_successes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 connect_failures = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_connect_failures();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connect_failures_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 connections_dropped = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_connections_dropped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connections_dropped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seconds_running = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_seconds_running();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msec_tologonthistime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_msec_tologonthistime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msec_tologonthistime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_bad_cms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_count_bad_cms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_bad_cms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientConnectionStats.Stats_Logon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientConnectionStats.Stats_Logon)
  return false;
#undef DO_
}

void CMsgClientConnectionStats_Stats_Logon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientConnectionStats.Stats_Logon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 connect_attempts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->connect_attempts(), output);
  }

  // optional int32 connect_successes = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->connect_successes(), output);
  }

  // optional int32 connect_failures = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->connect_failures(), output);
  }

  // optional int32 connections_dropped = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->connections_dropped(), output);
  }

  // optional uint32 seconds_running = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->seconds_running(), output);
  }

  // optional uint32 msec_tologonthistime = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msec_tologonthistime(), output);
  }

  // optional uint32 count_bad_cms = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->count_bad_cms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientConnectionStats.Stats_Logon)
}

::google::protobuf::uint8* CMsgClientConnectionStats_Stats_Logon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientConnectionStats.Stats_Logon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 connect_attempts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->connect_attempts(), target);
  }

  // optional int32 connect_successes = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->connect_successes(), target);
  }

  // optional int32 connect_failures = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->connect_failures(), target);
  }

  // optional int32 connections_dropped = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->connections_dropped(), target);
  }

  // optional uint32 seconds_running = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->seconds_running(), target);
  }

  // optional uint32 msec_tologonthistime = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->msec_tologonthistime(), target);
  }

  // optional uint32 count_bad_cms = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->count_bad_cms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientConnectionStats.Stats_Logon)
  return target;
}

size_t CMsgClientConnectionStats_Stats_Logon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientConnectionStats.Stats_Logon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 connect_attempts = 1;
    if (has_connect_attempts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connect_attempts());
    }

    // optional int32 connect_successes = 2;
    if (has_connect_successes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connect_successes());
    }

    // optional int32 connect_failures = 3;
    if (has_connect_failures()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connect_failures());
    }

    // optional int32 connections_dropped = 4;
    if (has_connections_dropped()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connections_dropped());
    }

    // optional uint32 seconds_running = 5;
    if (has_seconds_running()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds_running());
    }

    // optional uint32 msec_tologonthistime = 6;
    if (has_msec_tologonthistime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msec_tologonthistime());
    }

    // optional uint32 count_bad_cms = 7;
    if (has_count_bad_cms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_bad_cms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientConnectionStats_Stats_Logon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientConnectionStats.Stats_Logon)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientConnectionStats_Stats_Logon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientConnectionStats_Stats_Logon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientConnectionStats.Stats_Logon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientConnectionStats.Stats_Logon)
    MergeFrom(*source);
  }
}

void CMsgClientConnectionStats_Stats_Logon::MergeFrom(const CMsgClientConnectionStats_Stats_Logon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientConnectionStats.Stats_Logon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      connect_attempts_ = from.connect_attempts_;
    }
    if (cached_has_bits & 0x00000002u) {
      connect_successes_ = from.connect_successes_;
    }
    if (cached_has_bits & 0x00000004u) {
      connect_failures_ = from.connect_failures_;
    }
    if (cached_has_bits & 0x00000008u) {
      connections_dropped_ = from.connections_dropped_;
    }
    if (cached_has_bits & 0x00000010u) {
      seconds_running_ = from.seconds_running_;
    }
    if (cached_has_bits & 0x00000020u) {
      msec_tologonthistime_ = from.msec_tologonthistime_;
    }
    if (cached_has_bits & 0x00000040u) {
      count_bad_cms_ = from.count_bad_cms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientConnectionStats_Stats_Logon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientConnectionStats.Stats_Logon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientConnectionStats_Stats_Logon::CopyFrom(const CMsgClientConnectionStats_Stats_Logon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientConnectionStats.Stats_Logon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientConnectionStats_Stats_Logon::IsInitialized() const {
  return true;
}

void CMsgClientConnectionStats_Stats_Logon::Swap(CMsgClientConnectionStats_Stats_Logon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientConnectionStats_Stats_Logon::InternalSwap(CMsgClientConnectionStats_Stats_Logon* other) {
  using std::swap;
  swap(connect_attempts_, other->connect_attempts_);
  swap(connect_successes_, other->connect_successes_);
  swap(connect_failures_, other->connect_failures_);
  swap(connections_dropped_, other->connections_dropped_);
  swap(seconds_running_, other->seconds_running_);
  swap(msec_tologonthistime_, other->msec_tologonthistime_);
  swap(count_bad_cms_, other->count_bad_cms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientConnectionStats_Stats_Logon::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientConnectionStats_Stats_UDP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientConnectionStats_Stats_UDP::kPktsSentFieldNumber;
const int CMsgClientConnectionStats_Stats_UDP::kBytesSentFieldNumber;
const int CMsgClientConnectionStats_Stats_UDP::kPktsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_UDP::kPktsProcessedFieldNumber;
const int CMsgClientConnectionStats_Stats_UDP::kBytesRecvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientConnectionStats_Stats_UDP::CMsgClientConnectionStats_Stats_UDP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_UDP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientConnectionStats.Stats_UDP)
}
CMsgClientConnectionStats_Stats_UDP::CMsgClientConnectionStats_Stats_UDP(const CMsgClientConnectionStats_Stats_UDP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pkts_sent_, &from.pkts_sent_,
    static_cast<size_t>(reinterpret_cast<char*>(&bytes_recv_) -
    reinterpret_cast<char*>(&pkts_sent_)) + sizeof(bytes_recv_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientConnectionStats.Stats_UDP)
}

void CMsgClientConnectionStats_Stats_UDP::SharedCtor() {
  ::memset(&pkts_sent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_recv_) -
      reinterpret_cast<char*>(&pkts_sent_)) + sizeof(bytes_recv_));
}

CMsgClientConnectionStats_Stats_UDP::~CMsgClientConnectionStats_Stats_UDP() {
  // @@protoc_insertion_point(destructor:CMsgClientConnectionStats.Stats_UDP)
  SharedDtor();
}

void CMsgClientConnectionStats_Stats_UDP::SharedDtor() {
}

void CMsgClientConnectionStats_Stats_UDP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientConnectionStats_Stats_UDP::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientConnectionStats_Stats_UDP& CMsgClientConnectionStats_Stats_UDP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_UDP.base);
  return *internal_default_instance();
}


void CMsgClientConnectionStats_Stats_UDP::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientConnectionStats.Stats_UDP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&pkts_sent_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bytes_recv_) -
        reinterpret_cast<char*>(&pkts_sent_)) + sizeof(bytes_recv_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientConnectionStats_Stats_UDP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientConnectionStats.Stats_UDP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 pkts_sent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pkts_sent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pkts_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_sent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bytes_sent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pkts_recv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pkts_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pkts_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pkts_processed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pkts_processed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pkts_processed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_recv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bytes_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientConnectionStats.Stats_UDP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientConnectionStats.Stats_UDP)
  return false;
#undef DO_
}

void CMsgClientConnectionStats_Stats_UDP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientConnectionStats.Stats_UDP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 pkts_sent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->pkts_sent(), output);
  }

  // optional uint64 bytes_sent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bytes_sent(), output);
  }

  // optional uint64 pkts_recv = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pkts_recv(), output);
  }

  // optional uint64 pkts_processed = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->pkts_processed(), output);
  }

  // optional uint64 bytes_recv = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bytes_recv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientConnectionStats.Stats_UDP)
}

::google::protobuf::uint8* CMsgClientConnectionStats_Stats_UDP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientConnectionStats.Stats_UDP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 pkts_sent = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->pkts_sent(), target);
  }

  // optional uint64 bytes_sent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bytes_sent(), target);
  }

  // optional uint64 pkts_recv = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->pkts_recv(), target);
  }

  // optional uint64 pkts_processed = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->pkts_processed(), target);
  }

  // optional uint64 bytes_recv = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bytes_recv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientConnectionStats.Stats_UDP)
  return target;
}

size_t CMsgClientConnectionStats_Stats_UDP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientConnectionStats.Stats_UDP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 pkts_sent = 1;
    if (has_pkts_sent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pkts_sent());
    }

    // optional uint64 bytes_sent = 2;
    if (has_bytes_sent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_sent());
    }

    // optional uint64 pkts_recv = 3;
    if (has_pkts_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pkts_recv());
    }

    // optional uint64 pkts_processed = 4;
    if (has_pkts_processed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pkts_processed());
    }

    // optional uint64 bytes_recv = 5;
    if (has_bytes_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_recv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientConnectionStats_Stats_UDP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientConnectionStats.Stats_UDP)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientConnectionStats_Stats_UDP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientConnectionStats_Stats_UDP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientConnectionStats.Stats_UDP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientConnectionStats.Stats_UDP)
    MergeFrom(*source);
  }
}

void CMsgClientConnectionStats_Stats_UDP::MergeFrom(const CMsgClientConnectionStats_Stats_UDP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientConnectionStats.Stats_UDP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      pkts_sent_ = from.pkts_sent_;
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_sent_ = from.bytes_sent_;
    }
    if (cached_has_bits & 0x00000004u) {
      pkts_recv_ = from.pkts_recv_;
    }
    if (cached_has_bits & 0x00000008u) {
      pkts_processed_ = from.pkts_processed_;
    }
    if (cached_has_bits & 0x00000010u) {
      bytes_recv_ = from.bytes_recv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientConnectionStats_Stats_UDP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientConnectionStats.Stats_UDP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientConnectionStats_Stats_UDP::CopyFrom(const CMsgClientConnectionStats_Stats_UDP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientConnectionStats.Stats_UDP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientConnectionStats_Stats_UDP::IsInitialized() const {
  return true;
}

void CMsgClientConnectionStats_Stats_UDP::Swap(CMsgClientConnectionStats_Stats_UDP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientConnectionStats_Stats_UDP::InternalSwap(CMsgClientConnectionStats_Stats_UDP* other) {
  using std::swap;
  swap(pkts_sent_, other->pkts_sent_);
  swap(bytes_sent_, other->bytes_sent_);
  swap(pkts_recv_, other->pkts_recv_);
  swap(pkts_processed_, other->pkts_processed_);
  swap(bytes_recv_, other->bytes_recv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientConnectionStats_Stats_UDP::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientConnectionStats_Stats_VConn::InitAsDefaultInstance() {
  ::_CMsgClientConnectionStats_Stats_VConn_default_instance_._instance.get_mutable()->stats_udp_ = const_cast< ::CMsgClientConnectionStats_Stats_UDP*>(
      ::CMsgClientConnectionStats_Stats_UDP::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientConnectionStats_Stats_VConn::kConnectionsUdpFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kConnectionsTcpFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kStatsUdpFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kPktsAbandonedFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kConnReqReceivedFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kPktsResentFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMsgsSentFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMsgsSentFailedFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMsgsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kDatagramsSentFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kDatagramsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kBadPktsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kUnknownConnPktsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMissedPktsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kDupPktsRecvFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kFailedConnectChallengesFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMicroSecAvgLatencyFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMicroSecMinLatencyFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMicroSecMaxLatencyFieldNumber;
const int CMsgClientConnectionStats_Stats_VConn::kMemPoolMsgInUseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientConnectionStats_Stats_VConn::CMsgClientConnectionStats_Stats_VConn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_VConn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientConnectionStats.Stats_VConn)
}
CMsgClientConnectionStats_Stats_VConn::CMsgClientConnectionStats_Stats_VConn(const CMsgClientConnectionStats_Stats_VConn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stats_udp()) {
    stats_udp_ = new ::CMsgClientConnectionStats_Stats_UDP(*from.stats_udp_);
  } else {
    stats_udp_ = NULL;
  }
  ::memcpy(&connections_udp_, &from.connections_udp_,
    static_cast<size_t>(reinterpret_cast<char*>(&mem_pool_msg_in_use_) -
    reinterpret_cast<char*>(&connections_udp_)) + sizeof(mem_pool_msg_in_use_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientConnectionStats.Stats_VConn)
}

void CMsgClientConnectionStats_Stats_VConn::SharedCtor() {
  ::memset(&stats_udp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mem_pool_msg_in_use_) -
      reinterpret_cast<char*>(&stats_udp_)) + sizeof(mem_pool_msg_in_use_));
}

CMsgClientConnectionStats_Stats_VConn::~CMsgClientConnectionStats_Stats_VConn() {
  // @@protoc_insertion_point(destructor:CMsgClientConnectionStats.Stats_VConn)
  SharedDtor();
}

void CMsgClientConnectionStats_Stats_VConn::SharedDtor() {
  if (this != internal_default_instance()) delete stats_udp_;
}

void CMsgClientConnectionStats_Stats_VConn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientConnectionStats_Stats_VConn::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientConnectionStats_Stats_VConn& CMsgClientConnectionStats_Stats_VConn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats_Stats_VConn.base);
  return *internal_default_instance();
}


void CMsgClientConnectionStats_Stats_VConn::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientConnectionStats.Stats_VConn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(stats_udp_ != NULL);
    stats_udp_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&connections_udp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msgs_sent_failed_) -
        reinterpret_cast<char*>(&connections_udp_)) + sizeof(msgs_sent_failed_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&msgs_recv_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&failed_connect_challenges_) -
        reinterpret_cast<char*>(&msgs_recv_)) + sizeof(failed_connect_challenges_));
  }
  if (cached_has_bits & 983040u) {
    ::memset(&micro_sec_avg_latency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mem_pool_msg_in_use_) -
        reinterpret_cast<char*>(&micro_sec_avg_latency_)) + sizeof(mem_pool_msg_in_use_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientConnectionStats_Stats_VConn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientConnectionStats.Stats_VConn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 connections_udp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_connections_udp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connections_udp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 connections_tcp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_connections_tcp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connections_tcp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgClientConnectionStats.Stats_UDP stats_udp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats_udp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pkts_abandoned = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pkts_abandoned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pkts_abandoned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 conn_req_received = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_conn_req_received();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conn_req_received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pkts_resent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pkts_resent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pkts_resent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 msgs_sent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_msgs_sent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgs_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 msgs_sent_failed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_msgs_sent_failed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgs_sent_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 msgs_recv = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_msgs_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgs_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 datagrams_sent = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_datagrams_sent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &datagrams_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 datagrams_recv = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_datagrams_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &datagrams_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bad_pkts_recv = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_bad_pkts_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bad_pkts_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 unknown_conn_pkts_recv = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_unknown_conn_pkts_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unknown_conn_pkts_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 missed_pkts_recv = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_missed_pkts_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &missed_pkts_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 dup_pkts_recv = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_dup_pkts_recv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dup_pkts_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 failed_connect_challenges = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_failed_connect_challenges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &failed_connect_challenges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 micro_sec_avg_latency = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_micro_sec_avg_latency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &micro_sec_avg_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 micro_sec_min_latency = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_micro_sec_min_latency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &micro_sec_min_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 micro_sec_max_latency = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_micro_sec_max_latency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &micro_sec_max_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mem_pool_msg_in_use = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_mem_pool_msg_in_use();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mem_pool_msg_in_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientConnectionStats.Stats_VConn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientConnectionStats.Stats_VConn)
  return false;
#undef DO_
}

void CMsgClientConnectionStats_Stats_VConn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientConnectionStats.Stats_VConn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 connections_udp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->connections_udp(), output);
  }

  // optional uint32 connections_tcp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->connections_tcp(), output);
  }

  // optional .CMsgClientConnectionStats.Stats_UDP stats_udp = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_stats_udp(), output);
  }

  // optional uint64 pkts_abandoned = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->pkts_abandoned(), output);
  }

  // optional uint64 conn_req_received = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->conn_req_received(), output);
  }

  // optional uint64 pkts_resent = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->pkts_resent(), output);
  }

  // optional uint64 msgs_sent = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgs_sent(), output);
  }

  // optional uint64 msgs_sent_failed = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgs_sent_failed(), output);
  }

  // optional uint64 msgs_recv = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->msgs_recv(), output);
  }

  // optional uint64 datagrams_sent = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->datagrams_sent(), output);
  }

  // optional uint64 datagrams_recv = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->datagrams_recv(), output);
  }

  // optional uint64 bad_pkts_recv = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->bad_pkts_recv(), output);
  }

  // optional uint64 unknown_conn_pkts_recv = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->unknown_conn_pkts_recv(), output);
  }

  // optional uint64 missed_pkts_recv = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->missed_pkts_recv(), output);
  }

  // optional uint64 dup_pkts_recv = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->dup_pkts_recv(), output);
  }

  // optional uint64 failed_connect_challenges = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->failed_connect_challenges(), output);
  }

  // optional uint32 micro_sec_avg_latency = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->micro_sec_avg_latency(), output);
  }

  // optional uint32 micro_sec_min_latency = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->micro_sec_min_latency(), output);
  }

  // optional uint32 micro_sec_max_latency = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->micro_sec_max_latency(), output);
  }

  // optional uint32 mem_pool_msg_in_use = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->mem_pool_msg_in_use(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientConnectionStats.Stats_VConn)
}

::google::protobuf::uint8* CMsgClientConnectionStats_Stats_VConn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientConnectionStats.Stats_VConn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 connections_udp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->connections_udp(), target);
  }

  // optional uint32 connections_tcp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->connections_tcp(), target);
  }

  // optional .CMsgClientConnectionStats.Stats_UDP stats_udp = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_stats_udp(), deterministic, target);
  }

  // optional uint64 pkts_abandoned = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->pkts_abandoned(), target);
  }

  // optional uint64 conn_req_received = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->conn_req_received(), target);
  }

  // optional uint64 pkts_resent = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->pkts_resent(), target);
  }

  // optional uint64 msgs_sent = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->msgs_sent(), target);
  }

  // optional uint64 msgs_sent_failed = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->msgs_sent_failed(), target);
  }

  // optional uint64 msgs_recv = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->msgs_recv(), target);
  }

  // optional uint64 datagrams_sent = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->datagrams_sent(), target);
  }

  // optional uint64 datagrams_recv = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->datagrams_recv(), target);
  }

  // optional uint64 bad_pkts_recv = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->bad_pkts_recv(), target);
  }

  // optional uint64 unknown_conn_pkts_recv = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->unknown_conn_pkts_recv(), target);
  }

  // optional uint64 missed_pkts_recv = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->missed_pkts_recv(), target);
  }

  // optional uint64 dup_pkts_recv = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->dup_pkts_recv(), target);
  }

  // optional uint64 failed_connect_challenges = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->failed_connect_challenges(), target);
  }

  // optional uint32 micro_sec_avg_latency = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->micro_sec_avg_latency(), target);
  }

  // optional uint32 micro_sec_min_latency = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->micro_sec_min_latency(), target);
  }

  // optional uint32 micro_sec_max_latency = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->micro_sec_max_latency(), target);
  }

  // optional uint32 mem_pool_msg_in_use = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->mem_pool_msg_in_use(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientConnectionStats.Stats_VConn)
  return target;
}

size_t CMsgClientConnectionStats_Stats_VConn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientConnectionStats.Stats_VConn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgClientConnectionStats.Stats_UDP stats_udp = 3;
    if (has_stats_udp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stats_udp_);
    }

    // optional uint32 connections_udp = 1;
    if (has_connections_udp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connections_udp());
    }

    // optional uint32 connections_tcp = 2;
    if (has_connections_tcp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connections_tcp());
    }

    // optional uint64 pkts_abandoned = 4;
    if (has_pkts_abandoned()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pkts_abandoned());
    }

    // optional uint64 conn_req_received = 5;
    if (has_conn_req_received()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->conn_req_received());
    }

    // optional uint64 pkts_resent = 6;
    if (has_pkts_resent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pkts_resent());
    }

    // optional uint64 msgs_sent = 7;
    if (has_msgs_sent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->msgs_sent());
    }

    // optional uint64 msgs_sent_failed = 8;
    if (has_msgs_sent_failed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->msgs_sent_failed());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint64 msgs_recv = 9;
    if (has_msgs_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->msgs_recv());
    }

    // optional uint64 datagrams_sent = 10;
    if (has_datagrams_sent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->datagrams_sent());
    }

    // optional uint64 datagrams_recv = 11;
    if (has_datagrams_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->datagrams_recv());
    }

    // optional uint64 bad_pkts_recv = 12;
    if (has_bad_pkts_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bad_pkts_recv());
    }

    // optional uint64 unknown_conn_pkts_recv = 13;
    if (has_unknown_conn_pkts_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->unknown_conn_pkts_recv());
    }

    // optional uint64 missed_pkts_recv = 14;
    if (has_missed_pkts_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->missed_pkts_recv());
    }

    // optional uint64 dup_pkts_recv = 15;
    if (has_dup_pkts_recv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->dup_pkts_recv());
    }

    // optional uint64 failed_connect_challenges = 16;
    if (has_failed_connect_challenges()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->failed_connect_challenges());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional uint32 micro_sec_avg_latency = 17;
    if (has_micro_sec_avg_latency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->micro_sec_avg_latency());
    }

    // optional uint32 micro_sec_min_latency = 18;
    if (has_micro_sec_min_latency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->micro_sec_min_latency());
    }

    // optional uint32 micro_sec_max_latency = 19;
    if (has_micro_sec_max_latency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->micro_sec_max_latency());
    }

    // optional uint32 mem_pool_msg_in_use = 20;
    if (has_mem_pool_msg_in_use()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mem_pool_msg_in_use());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientConnectionStats_Stats_VConn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientConnectionStats.Stats_VConn)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientConnectionStats_Stats_VConn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientConnectionStats_Stats_VConn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientConnectionStats.Stats_VConn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientConnectionStats.Stats_VConn)
    MergeFrom(*source);
  }
}

void CMsgClientConnectionStats_Stats_VConn::MergeFrom(const CMsgClientConnectionStats_Stats_VConn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientConnectionStats.Stats_VConn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stats_udp()->::CMsgClientConnectionStats_Stats_UDP::MergeFrom(from.stats_udp());
    }
    if (cached_has_bits & 0x00000002u) {
      connections_udp_ = from.connections_udp_;
    }
    if (cached_has_bits & 0x00000004u) {
      connections_tcp_ = from.connections_tcp_;
    }
    if (cached_has_bits & 0x00000008u) {
      pkts_abandoned_ = from.pkts_abandoned_;
    }
    if (cached_has_bits & 0x00000010u) {
      conn_req_received_ = from.conn_req_received_;
    }
    if (cached_has_bits & 0x00000020u) {
      pkts_resent_ = from.pkts_resent_;
    }
    if (cached_has_bits & 0x00000040u) {
      msgs_sent_ = from.msgs_sent_;
    }
    if (cached_has_bits & 0x00000080u) {
      msgs_sent_failed_ = from.msgs_sent_failed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      msgs_recv_ = from.msgs_recv_;
    }
    if (cached_has_bits & 0x00000200u) {
      datagrams_sent_ = from.datagrams_sent_;
    }
    if (cached_has_bits & 0x00000400u) {
      datagrams_recv_ = from.datagrams_recv_;
    }
    if (cached_has_bits & 0x00000800u) {
      bad_pkts_recv_ = from.bad_pkts_recv_;
    }
    if (cached_has_bits & 0x00001000u) {
      unknown_conn_pkts_recv_ = from.unknown_conn_pkts_recv_;
    }
    if (cached_has_bits & 0x00002000u) {
      missed_pkts_recv_ = from.missed_pkts_recv_;
    }
    if (cached_has_bits & 0x00004000u) {
      dup_pkts_recv_ = from.dup_pkts_recv_;
    }
    if (cached_has_bits & 0x00008000u) {
      failed_connect_challenges_ = from.failed_connect_challenges_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      micro_sec_avg_latency_ = from.micro_sec_avg_latency_;
    }
    if (cached_has_bits & 0x00020000u) {
      micro_sec_min_latency_ = from.micro_sec_min_latency_;
    }
    if (cached_has_bits & 0x00040000u) {
      micro_sec_max_latency_ = from.micro_sec_max_latency_;
    }
    if (cached_has_bits & 0x00080000u) {
      mem_pool_msg_in_use_ = from.mem_pool_msg_in_use_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientConnectionStats_Stats_VConn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientConnectionStats.Stats_VConn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientConnectionStats_Stats_VConn::CopyFrom(const CMsgClientConnectionStats_Stats_VConn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientConnectionStats.Stats_VConn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientConnectionStats_Stats_VConn::IsInitialized() const {
  return true;
}

void CMsgClientConnectionStats_Stats_VConn::Swap(CMsgClientConnectionStats_Stats_VConn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientConnectionStats_Stats_VConn::InternalSwap(CMsgClientConnectionStats_Stats_VConn* other) {
  using std::swap;
  swap(stats_udp_, other->stats_udp_);
  swap(connections_udp_, other->connections_udp_);
  swap(connections_tcp_, other->connections_tcp_);
  swap(pkts_abandoned_, other->pkts_abandoned_);
  swap(conn_req_received_, other->conn_req_received_);
  swap(pkts_resent_, other->pkts_resent_);
  swap(msgs_sent_, other->msgs_sent_);
  swap(msgs_sent_failed_, other->msgs_sent_failed_);
  swap(msgs_recv_, other->msgs_recv_);
  swap(datagrams_sent_, other->datagrams_sent_);
  swap(datagrams_recv_, other->datagrams_recv_);
  swap(bad_pkts_recv_, other->bad_pkts_recv_);
  swap(unknown_conn_pkts_recv_, other->unknown_conn_pkts_recv_);
  swap(missed_pkts_recv_, other->missed_pkts_recv_);
  swap(dup_pkts_recv_, other->dup_pkts_recv_);
  swap(failed_connect_challenges_, other->failed_connect_challenges_);
  swap(micro_sec_avg_latency_, other->micro_sec_avg_latency_);
  swap(micro_sec_min_latency_, other->micro_sec_min_latency_);
  swap(micro_sec_max_latency_, other->micro_sec_max_latency_);
  swap(mem_pool_msg_in_use_, other->mem_pool_msg_in_use_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientConnectionStats_Stats_VConn::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientConnectionStats::InitAsDefaultInstance() {
  ::_CMsgClientConnectionStats_default_instance_._instance.get_mutable()->stats_logon_ = const_cast< ::CMsgClientConnectionStats_Stats_Logon*>(
      ::CMsgClientConnectionStats_Stats_Logon::internal_default_instance());
  ::_CMsgClientConnectionStats_default_instance_._instance.get_mutable()->stats_vconn_ = const_cast< ::CMsgClientConnectionStats_Stats_VConn*>(
      ::CMsgClientConnectionStats_Stats_VConn::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientConnectionStats::kStatsLogonFieldNumber;
const int CMsgClientConnectionStats::kStatsVconnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientConnectionStats::CMsgClientConnectionStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientConnectionStats)
}
CMsgClientConnectionStats::CMsgClientConnectionStats(const CMsgClientConnectionStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stats_logon()) {
    stats_logon_ = new ::CMsgClientConnectionStats_Stats_Logon(*from.stats_logon_);
  } else {
    stats_logon_ = NULL;
  }
  if (from.has_stats_vconn()) {
    stats_vconn_ = new ::CMsgClientConnectionStats_Stats_VConn(*from.stats_vconn_);
  } else {
    stats_vconn_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientConnectionStats)
}

void CMsgClientConnectionStats::SharedCtor() {
  ::memset(&stats_logon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stats_vconn_) -
      reinterpret_cast<char*>(&stats_logon_)) + sizeof(stats_vconn_));
}

CMsgClientConnectionStats::~CMsgClientConnectionStats() {
  // @@protoc_insertion_point(destructor:CMsgClientConnectionStats)
  SharedDtor();
}

void CMsgClientConnectionStats::SharedDtor() {
  if (this != internal_default_instance()) delete stats_logon_;
  if (this != internal_default_instance()) delete stats_vconn_;
}

void CMsgClientConnectionStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientConnectionStats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientConnectionStats& CMsgClientConnectionStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientConnectionStats.base);
  return *internal_default_instance();
}


void CMsgClientConnectionStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientConnectionStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(stats_logon_ != NULL);
      stats_logon_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stats_vconn_ != NULL);
      stats_vconn_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientConnectionStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientConnectionStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgClientConnectionStats.Stats_Logon stats_logon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats_logon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgClientConnectionStats.Stats_VConn stats_vconn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats_vconn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientConnectionStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientConnectionStats)
  return false;
#undef DO_
}

void CMsgClientConnectionStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientConnectionStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientConnectionStats.Stats_Logon stats_logon = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_stats_logon(), output);
  }

  // optional .CMsgClientConnectionStats.Stats_VConn stats_vconn = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_stats_vconn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientConnectionStats)
}

::google::protobuf::uint8* CMsgClientConnectionStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientConnectionStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientConnectionStats.Stats_Logon stats_logon = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_stats_logon(), deterministic, target);
  }

  // optional .CMsgClientConnectionStats.Stats_VConn stats_vconn = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_stats_vconn(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientConnectionStats)
  return target;
}

size_t CMsgClientConnectionStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientConnectionStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgClientConnectionStats.Stats_Logon stats_logon = 1;
    if (has_stats_logon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stats_logon_);
    }

    // optional .CMsgClientConnectionStats.Stats_VConn stats_vconn = 2;
    if (has_stats_vconn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stats_vconn_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientConnectionStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientConnectionStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientConnectionStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientConnectionStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientConnectionStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientConnectionStats)
    MergeFrom(*source);
  }
}

void CMsgClientConnectionStats::MergeFrom(const CMsgClientConnectionStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientConnectionStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stats_logon()->::CMsgClientConnectionStats_Stats_Logon::MergeFrom(from.stats_logon());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stats_vconn()->::CMsgClientConnectionStats_Stats_VConn::MergeFrom(from.stats_vconn());
    }
  }
}

void CMsgClientConnectionStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientConnectionStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientConnectionStats::CopyFrom(const CMsgClientConnectionStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientConnectionStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientConnectionStats::IsInitialized() const {
  return true;
}

void CMsgClientConnectionStats::Swap(CMsgClientConnectionStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientConnectionStats::InternalSwap(CMsgClientConnectionStats* other) {
  using std::swap;
  swap(stats_logon_, other->stats_logon_);
  swap(stats_vconn_, other->stats_vconn_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientConnectionStats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServersAvailable_Server_Types_Available::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServersAvailable_Server_Types_Available::kServerFieldNumber;
const int CMsgClientServersAvailable_Server_Types_Available::kChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServersAvailable_Server_Types_Available::CMsgClientServersAvailable_Server_Types_Available()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServersAvailable_Server_Types_Available.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServersAvailable.Server_Types_Available)
}
CMsgClientServersAvailable_Server_Types_Available::CMsgClientServersAvailable_Server_Types_Available(const CMsgClientServersAvailable_Server_Types_Available& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_, &from.server_,
    static_cast<size_t>(reinterpret_cast<char*>(&changed_) -
    reinterpret_cast<char*>(&server_)) + sizeof(changed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientServersAvailable.Server_Types_Available)
}

void CMsgClientServersAvailable_Server_Types_Available::SharedCtor() {
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changed_) -
      reinterpret_cast<char*>(&server_)) + sizeof(changed_));
}

CMsgClientServersAvailable_Server_Types_Available::~CMsgClientServersAvailable_Server_Types_Available() {
  // @@protoc_insertion_point(destructor:CMsgClientServersAvailable.Server_Types_Available)
  SharedDtor();
}

void CMsgClientServersAvailable_Server_Types_Available::SharedDtor() {
}

void CMsgClientServersAvailable_Server_Types_Available::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServersAvailable_Server_Types_Available::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServersAvailable_Server_Types_Available& CMsgClientServersAvailable_Server_Types_Available::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServersAvailable_Server_Types_Available.base);
  return *internal_default_instance();
}


void CMsgClientServersAvailable_Server_Types_Available::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServersAvailable.Server_Types_Available)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&server_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&changed_) -
        reinterpret_cast<char*>(&server_)) + sizeof(changed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServersAvailable_Server_Types_Available::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServersAvailable.Server_Types_Available)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_server();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool changed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_changed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServersAvailable.Server_Types_Available)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServersAvailable.Server_Types_Available)
  return false;
#undef DO_
}

void CMsgClientServersAvailable_Server_Types_Available::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServersAvailable.Server_Types_Available)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server(), output);
  }

  // optional bool changed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->changed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServersAvailable.Server_Types_Available)
}

::google::protobuf::uint8* CMsgClientServersAvailable_Server_Types_Available::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServersAvailable.Server_Types_Available)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server(), target);
  }

  // optional bool changed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->changed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServersAvailable.Server_Types_Available)
  return target;
}

size_t CMsgClientServersAvailable_Server_Types_Available::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServersAvailable.Server_Types_Available)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 server = 1;
    if (has_server()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server());
    }

    // optional bool changed = 2;
    if (has_changed()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServersAvailable_Server_Types_Available::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServersAvailable.Server_Types_Available)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServersAvailable_Server_Types_Available* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServersAvailable_Server_Types_Available>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServersAvailable.Server_Types_Available)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServersAvailable.Server_Types_Available)
    MergeFrom(*source);
  }
}

void CMsgClientServersAvailable_Server_Types_Available::MergeFrom(const CMsgClientServersAvailable_Server_Types_Available& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServersAvailable.Server_Types_Available)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      server_ = from.server_;
    }
    if (cached_has_bits & 0x00000002u) {
      changed_ = from.changed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServersAvailable_Server_Types_Available::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServersAvailable.Server_Types_Available)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServersAvailable_Server_Types_Available::CopyFrom(const CMsgClientServersAvailable_Server_Types_Available& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServersAvailable.Server_Types_Available)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServersAvailable_Server_Types_Available::IsInitialized() const {
  return true;
}

void CMsgClientServersAvailable_Server_Types_Available::Swap(CMsgClientServersAvailable_Server_Types_Available* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServersAvailable_Server_Types_Available::InternalSwap(CMsgClientServersAvailable_Server_Types_Available* other) {
  using std::swap;
  swap(server_, other->server_);
  swap(changed_, other->changed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServersAvailable_Server_Types_Available::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServersAvailable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServersAvailable::kServerTypesAvailableFieldNumber;
const int CMsgClientServersAvailable::kServerTypeForAuthServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServersAvailable::CMsgClientServersAvailable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServersAvailable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientServersAvailable)
}
CMsgClientServersAvailable::CMsgClientServersAvailable(const CMsgClientServersAvailable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      server_types_available_(from.server_types_available_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_type_for_auth_services_ = from.server_type_for_auth_services_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientServersAvailable)
}

void CMsgClientServersAvailable::SharedCtor() {
  server_type_for_auth_services_ = 0u;
}

CMsgClientServersAvailable::~CMsgClientServersAvailable() {
  // @@protoc_insertion_point(destructor:CMsgClientServersAvailable)
  SharedDtor();
}

void CMsgClientServersAvailable::SharedDtor() {
}

void CMsgClientServersAvailable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientServersAvailable::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServersAvailable& CMsgClientServersAvailable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientServersAvailable.base);
  return *internal_default_instance();
}


void CMsgClientServersAvailable::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientServersAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_types_available_.Clear();
  server_type_for_auth_services_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServersAvailable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientServersAvailable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientServersAvailable.Server_Types_Available server_types_available = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_server_types_available()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_type_for_auth_services = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_server_type_for_auth_services();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_for_auth_services_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientServersAvailable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientServersAvailable)
  return false;
#undef DO_
}

void CMsgClientServersAvailable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientServersAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientServersAvailable.Server_Types_Available server_types_available = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_types_available_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->server_types_available(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_type_for_auth_services = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_type_for_auth_services(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientServersAvailable)
}

::google::protobuf::uint8* CMsgClientServersAvailable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientServersAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientServersAvailable.Server_Types_Available server_types_available = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_types_available_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->server_types_available(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_type_for_auth_services = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_type_for_auth_services(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientServersAvailable)
  return target;
}

size_t CMsgClientServersAvailable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientServersAvailable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientServersAvailable.Server_Types_Available server_types_available = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->server_types_available_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->server_types_available(static_cast<int>(i)));
    }
  }

  // optional uint32 server_type_for_auth_services = 2;
  if (has_server_type_for_auth_services()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_type_for_auth_services());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServersAvailable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientServersAvailable)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServersAvailable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServersAvailable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientServersAvailable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientServersAvailable)
    MergeFrom(*source);
  }
}

void CMsgClientServersAvailable::MergeFrom(const CMsgClientServersAvailable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientServersAvailable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_types_available_.MergeFrom(from.server_types_available_);
  if (from.has_server_type_for_auth_services()) {
    set_server_type_for_auth_services(from.server_type_for_auth_services());
  }
}

void CMsgClientServersAvailable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientServersAvailable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServersAvailable::CopyFrom(const CMsgClientServersAvailable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientServersAvailable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServersAvailable::IsInitialized() const {
  return true;
}

void CMsgClientServersAvailable::Swap(CMsgClientServersAvailable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServersAvailable::InternalSwap(CMsgClientServersAvailable* other) {
  using std::swap;
  CastToBase(&server_types_available_)->InternalSwap(CastToBase(&other->server_types_available_));
  swap(server_type_for_auth_services_, other->server_type_for_auth_services_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientServersAvailable::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetUserStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetUserStats::kGameIdFieldNumber;
const int CMsgClientGetUserStats::kCrcStatsFieldNumber;
const int CMsgClientGetUserStats::kSchemaLocalVersionFieldNumber;
const int CMsgClientGetUserStats::kSteamIdForUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetUserStats::CMsgClientGetUserStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetUserStats)
}
CMsgClientGetUserStats::CMsgClientGetUserStats(const CMsgClientGetUserStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_id_, &from.game_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&steam_id_for_user_) -
    reinterpret_cast<char*>(&game_id_)) + sizeof(steam_id_for_user_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetUserStats)
}

void CMsgClientGetUserStats::SharedCtor() {
  ::memset(&game_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steam_id_for_user_) -
      reinterpret_cast<char*>(&game_id_)) + sizeof(steam_id_for_user_));
}

CMsgClientGetUserStats::~CMsgClientGetUserStats() {
  // @@protoc_insertion_point(destructor:CMsgClientGetUserStats)
  SharedDtor();
}

void CMsgClientGetUserStats::SharedDtor() {
}

void CMsgClientGetUserStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetUserStats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetUserStats& CMsgClientGetUserStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStats.base);
  return *internal_default_instance();
}


void CMsgClientGetUserStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetUserStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&game_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steam_id_for_user_) -
        reinterpret_cast<char*>(&game_id_)) + sizeof(steam_id_for_user_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetUserStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetUserStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 game_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_crc_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 schema_local_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_schema_local_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &schema_local_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_for_user = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_steam_id_for_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_for_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetUserStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetUserStats)
  return false;
#undef DO_
}

void CMsgClientGetUserStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetUserStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->game_id(), output);
  }

  // optional uint32 crc_stats = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->crc_stats(), output);
  }

  // optional int32 schema_local_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->schema_local_version(), output);
  }

  // optional fixed64 steam_id_for_user = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steam_id_for_user(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetUserStats)
}

::google::protobuf::uint8* CMsgClientGetUserStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetUserStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->game_id(), target);
  }

  // optional uint32 crc_stats = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->crc_stats(), target);
  }

  // optional int32 schema_local_version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->schema_local_version(), target);
  }

  // optional fixed64 steam_id_for_user = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steam_id_for_user(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetUserStats)
  return target;
}

size_t CMsgClientGetUserStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetUserStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 game_id = 1;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 crc_stats = 2;
    if (has_crc_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_stats());
    }

    // optional int32 schema_local_version = 3;
    if (has_schema_local_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->schema_local_version());
    }

    // optional fixed64 steam_id_for_user = 4;
    if (has_steam_id_for_user()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetUserStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetUserStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetUserStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetUserStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetUserStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetUserStats)
    MergeFrom(*source);
  }
}

void CMsgClientGetUserStats::MergeFrom(const CMsgClientGetUserStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetUserStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      crc_stats_ = from.crc_stats_;
    }
    if (cached_has_bits & 0x00000004u) {
      schema_local_version_ = from.schema_local_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      steam_id_for_user_ = from.steam_id_for_user_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetUserStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetUserStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetUserStats::CopyFrom(const CMsgClientGetUserStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetUserStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetUserStats::IsInitialized() const {
  return true;
}

void CMsgClientGetUserStats::Swap(CMsgClientGetUserStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetUserStats::InternalSwap(CMsgClientGetUserStats* other) {
  using std::swap;
  swap(game_id_, other->game_id_);
  swap(crc_stats_, other->crc_stats_);
  swap(schema_local_version_, other->schema_local_version_);
  swap(steam_id_for_user_, other->steam_id_for_user_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetUserStats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetUserStatsResponse_Stats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetUserStatsResponse_Stats::kStatIdFieldNumber;
const int CMsgClientGetUserStatsResponse_Stats::kStatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetUserStatsResponse_Stats::CMsgClientGetUserStatsResponse_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse_Stats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetUserStatsResponse.Stats)
}
CMsgClientGetUserStatsResponse_Stats::CMsgClientGetUserStatsResponse_Stats(const CMsgClientGetUserStatsResponse_Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_id_, &from.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_value_) -
    reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetUserStatsResponse.Stats)
}

void CMsgClientGetUserStatsResponse_Stats::SharedCtor() {
  ::memset(&stat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_value_) -
      reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
}

CMsgClientGetUserStatsResponse_Stats::~CMsgClientGetUserStatsResponse_Stats() {
  // @@protoc_insertion_point(destructor:CMsgClientGetUserStatsResponse.Stats)
  SharedDtor();
}

void CMsgClientGetUserStatsResponse_Stats::SharedDtor() {
}

void CMsgClientGetUserStatsResponse_Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetUserStatsResponse_Stats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetUserStatsResponse_Stats& CMsgClientGetUserStatsResponse_Stats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse_Stats.base);
  return *internal_default_instance();
}


void CMsgClientGetUserStatsResponse_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetUserStatsResponse.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_value_) -
        reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetUserStatsResponse_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetUserStatsResponse.Stats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetUserStatsResponse.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetUserStatsResponse.Stats)
  return false;
#undef DO_
}

void CMsgClientGetUserStatsResponse_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetUserStatsResponse.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetUserStatsResponse.Stats)
}

::google::protobuf::uint8* CMsgClientGetUserStatsResponse_Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetUserStatsResponse.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetUserStatsResponse.Stats)
  return target;
}

size_t CMsgClientGetUserStatsResponse_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetUserStatsResponse.Stats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 stat_value = 2;
    if (has_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetUserStatsResponse_Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetUserStatsResponse.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetUserStatsResponse_Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetUserStatsResponse_Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetUserStatsResponse.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetUserStatsResponse.Stats)
    MergeFrom(*source);
  }
}

void CMsgClientGetUserStatsResponse_Stats::MergeFrom(const CMsgClientGetUserStatsResponse_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetUserStatsResponse.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stat_id_ = from.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_value_ = from.stat_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetUserStatsResponse_Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetUserStatsResponse.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetUserStatsResponse_Stats::CopyFrom(const CMsgClientGetUserStatsResponse_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetUserStatsResponse.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetUserStatsResponse_Stats::IsInitialized() const {
  return true;
}

void CMsgClientGetUserStatsResponse_Stats::Swap(CMsgClientGetUserStatsResponse_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetUserStatsResponse_Stats::InternalSwap(CMsgClientGetUserStatsResponse_Stats* other) {
  using std::swap;
  swap(stat_id_, other->stat_id_);
  swap(stat_value_, other->stat_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetUserStatsResponse_Stats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetUserStatsResponse_Achievement_Blocks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetUserStatsResponse_Achievement_Blocks::kAchievementIdFieldNumber;
const int CMsgClientGetUserStatsResponse_Achievement_Blocks::kUnlockTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetUserStatsResponse_Achievement_Blocks::CMsgClientGetUserStatsResponse_Achievement_Blocks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse_Achievement_Blocks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetUserStatsResponse.Achievement_Blocks)
}
CMsgClientGetUserStatsResponse_Achievement_Blocks::CMsgClientGetUserStatsResponse_Achievement_Blocks(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      unlock_time_(from.unlock_time_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  achievement_id_ = from.achievement_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetUserStatsResponse.Achievement_Blocks)
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::SharedCtor() {
  achievement_id_ = 0u;
}

CMsgClientGetUserStatsResponse_Achievement_Blocks::~CMsgClientGetUserStatsResponse_Achievement_Blocks() {
  // @@protoc_insertion_point(destructor:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  SharedDtor();
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::SharedDtor() {
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetUserStatsResponse_Achievement_Blocks::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetUserStatsResponse_Achievement_Blocks& CMsgClientGetUserStatsResponse_Achievement_Blocks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse_Achievement_Blocks.base);
  return *internal_default_instance();
}


void CMsgClientGetUserStatsResponse_Achievement_Blocks::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlock_time_.Clear();
  achievement_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetUserStatsResponse_Achievement_Blocks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 achievement_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_achievement_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievement_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 unlock_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 21u, input, this->mutable_unlock_time())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_unlock_time())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  return false;
#undef DO_
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 achievement_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achievement_id(), output);
  }

  // repeated fixed32 unlock_time = 2;
  for (int i = 0, n = this->unlock_time_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      2, this->unlock_time(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetUserStatsResponse.Achievement_Blocks)
}

::google::protobuf::uint8* CMsgClientGetUserStatsResponse_Achievement_Blocks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 achievement_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achievement_id(), target);
  }

  // repeated fixed32 unlock_time = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(2, this->unlock_time_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  return target;
}

size_t CMsgClientGetUserStatsResponse_Achievement_Blocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed32 unlock_time = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->unlock_time_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unlock_time_size());
    total_size += data_size;
  }

  // optional uint32 achievement_id = 1;
  if (has_achievement_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achievement_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetUserStatsResponse_Achievement_Blocks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetUserStatsResponse_Achievement_Blocks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetUserStatsResponse.Achievement_Blocks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetUserStatsResponse.Achievement_Blocks)
    MergeFrom(*source);
  }
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::MergeFrom(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlock_time_.MergeFrom(from.unlock_time_);
  if (from.has_achievement_id()) {
    set_achievement_id(from.achievement_id());
  }
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::CopyFrom(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetUserStatsResponse.Achievement_Blocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetUserStatsResponse_Achievement_Blocks::IsInitialized() const {
  return true;
}

void CMsgClientGetUserStatsResponse_Achievement_Blocks::Swap(CMsgClientGetUserStatsResponse_Achievement_Blocks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetUserStatsResponse_Achievement_Blocks::InternalSwap(CMsgClientGetUserStatsResponse_Achievement_Blocks* other) {
  using std::swap;
  unlock_time_.InternalSwap(&other->unlock_time_);
  swap(achievement_id_, other->achievement_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetUserStatsResponse_Achievement_Blocks::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetUserStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetUserStatsResponse::kGameIdFieldNumber;
const int CMsgClientGetUserStatsResponse::kEresultFieldNumber;
const int CMsgClientGetUserStatsResponse::kCrcStatsFieldNumber;
const int CMsgClientGetUserStatsResponse::kSchemaFieldNumber;
const int CMsgClientGetUserStatsResponse::kStatsFieldNumber;
const int CMsgClientGetUserStatsResponse::kAchievementBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetUserStatsResponse::CMsgClientGetUserStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetUserStatsResponse)
}
CMsgClientGetUserStatsResponse::CMsgClientGetUserStatsResponse(const CMsgClientGetUserStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_(from.stats_),
      achievement_blocks_(from.achievement_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schema()) {
    schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
  }
  ::memcpy(&game_id_, &from.game_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&game_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetUserStatsResponse)
}

void CMsgClientGetUserStatsResponse::SharedCtor() {
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&game_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_stats_) -
      reinterpret_cast<char*>(&game_id_)) + sizeof(crc_stats_));
  eresult_ = 2;
}

CMsgClientGetUserStatsResponse::~CMsgClientGetUserStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetUserStatsResponse)
  SharedDtor();
}

void CMsgClientGetUserStatsResponse::SharedDtor() {
  schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetUserStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetUserStatsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetUserStatsResponse& CMsgClientGetUserStatsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetUserStatsResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetUserStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetUserStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  achievement_blocks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    schema_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&game_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&crc_stats_) -
        reinterpret_cast<char*>(&game_id_)) + sizeof(crc_stats_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetUserStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetUserStatsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 game_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_stats = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_crc_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes schema = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientGetUserStatsResponse.Stats stats = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientGetUserStatsResponse.Achievement_Blocks achievement_blocks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_achievement_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetUserStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetUserStatsResponse)
  return false;
#undef DO_
}

void CMsgClientGetUserStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetUserStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->game_id(), output);
  }

  // optional int32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eresult(), output);
  }

  // optional uint32 crc_stats = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->crc_stats(), output);
  }

  // optional bytes schema = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->schema(), output);
  }

  // repeated .CMsgClientGetUserStatsResponse.Stats stats = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->stats(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgClientGetUserStatsResponse.Achievement_Blocks achievement_blocks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->achievement_blocks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetUserStatsResponse)
}

::google::protobuf::uint8* CMsgClientGetUserStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetUserStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->game_id(), target);
  }

  // optional int32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 crc_stats = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->crc_stats(), target);
  }

  // optional bytes schema = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->schema(), target);
  }

  // repeated .CMsgClientGetUserStatsResponse.Stats stats = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->stats(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgClientGetUserStatsResponse.Achievement_Blocks achievement_blocks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->achievement_blocks(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetUserStatsResponse)
  return target;
}

size_t CMsgClientGetUserStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetUserStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientGetUserStatsResponse.Stats stats = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // repeated .CMsgClientGetUserStatsResponse.Achievement_Blocks achievement_blocks = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->achievement_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->achievement_blocks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes schema = 4;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema());
    }

    // optional fixed64 game_id = 1;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 crc_stats = 3;
    if (has_crc_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_stats());
    }

    // optional int32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetUserStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetUserStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetUserStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetUserStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetUserStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetUserStatsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetUserStatsResponse::MergeFrom(const CMsgClientGetUserStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetUserStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  achievement_blocks_.MergeFrom(from.achievement_blocks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_schema();
      schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
    }
    if (cached_has_bits & 0x00000002u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      crc_stats_ = from.crc_stats_;
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetUserStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetUserStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetUserStatsResponse::CopyFrom(const CMsgClientGetUserStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetUserStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetUserStatsResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetUserStatsResponse::Swap(CMsgClientGetUserStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetUserStatsResponse::InternalSwap(CMsgClientGetUserStatsResponse* other) {
  using std::swap;
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  CastToBase(&achievement_blocks_)->InternalSwap(CastToBase(&other->achievement_blocks_));
  schema_.Swap(&other->schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(game_id_, other->game_id_);
  swap(crc_stats_, other->crc_stats_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetUserStatsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::kStatIdFieldNumber;
const int CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::kRevertedStatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
}
CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_id_, &from.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reverted_stat_value_) -
    reinterpret_cast<char*>(&stat_id_)) + sizeof(reverted_stat_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::SharedCtor() {
  ::memset(&stat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverted_stat_value_) -
      reinterpret_cast<char*>(&stat_id_)) + sizeof(reverted_stat_value_));
}

CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::~CMsgClientStoreUserStatsResponse_Stats_Failed_Validation() {
  // @@protoc_insertion_point(destructor:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  SharedDtor();
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::SharedDtor() {
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation.base);
  return *internal_default_instance();
}


void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reverted_stat_value_) -
        reinterpret_cast<char*>(&stat_id_)) + sizeof(reverted_stat_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reverted_stat_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_reverted_stat_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reverted_stat_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  return false;
#undef DO_
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 reverted_stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reverted_stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
}

::google::protobuf::uint8* CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 reverted_stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reverted_stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  return target;
}

size_t CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 reverted_stat_value = 2;
    if (has_reverted_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reverted_stat_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
    MergeFrom(*source);
  }
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::MergeFrom(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stat_id_ = from.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      reverted_stat_value_ = from.reverted_stat_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::CopyFrom(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::IsInitialized() const {
  return true;
}

void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::Swap(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::InternalSwap(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* other) {
  using std::swap;
  swap(stat_id_, other->stat_id_);
  swap(reverted_stat_value_, other->reverted_stat_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStoreUserStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStoreUserStatsResponse::kGameIdFieldNumber;
const int CMsgClientStoreUserStatsResponse::kEresultFieldNumber;
const int CMsgClientStoreUserStatsResponse::kCrcStatsFieldNumber;
const int CMsgClientStoreUserStatsResponse::kStatsFailedValidationFieldNumber;
const int CMsgClientStoreUserStatsResponse::kStatsOutOfDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStoreUserStatsResponse::CMsgClientStoreUserStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStatsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStoreUserStatsResponse)
}
CMsgClientStoreUserStatsResponse::CMsgClientStoreUserStatsResponse(const CMsgClientStoreUserStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_failed_validation_(from.stats_failed_validation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_id_, &from.game_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&game_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStoreUserStatsResponse)
}

void CMsgClientStoreUserStatsResponse::SharedCtor() {
  ::memset(&game_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stats_out_of_date_) -
      reinterpret_cast<char*>(&game_id_)) + sizeof(stats_out_of_date_));
  eresult_ = 2;
}

CMsgClientStoreUserStatsResponse::~CMsgClientStoreUserStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientStoreUserStatsResponse)
  SharedDtor();
}

void CMsgClientStoreUserStatsResponse::SharedDtor() {
}

void CMsgClientStoreUserStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStoreUserStatsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStoreUserStatsResponse& CMsgClientStoreUserStatsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStatsResponse.base);
  return *internal_default_instance();
}


void CMsgClientStoreUserStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStoreUserStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_failed_validation_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&game_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stats_out_of_date_) -
        reinterpret_cast<char*>(&game_id_)) + sizeof(stats_out_of_date_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStoreUserStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStoreUserStatsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 game_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_stats = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_crc_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientStoreUserStatsResponse.Stats_Failed_Validation stats_failed_validation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats_failed_validation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool stats_out_of_date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_stats_out_of_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stats_out_of_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStoreUserStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStoreUserStatsResponse)
  return false;
#undef DO_
}

void CMsgClientStoreUserStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStoreUserStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->game_id(), output);
  }

  // optional int32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eresult(), output);
  }

  // optional uint32 crc_stats = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->crc_stats(), output);
  }

  // repeated .CMsgClientStoreUserStatsResponse.Stats_Failed_Validation stats_failed_validation = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_failed_validation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->stats_failed_validation(static_cast<int>(i)),
      output);
  }

  // optional bool stats_out_of_date = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stats_out_of_date(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStoreUserStatsResponse)
}

::google::protobuf::uint8* CMsgClientStoreUserStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStoreUserStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->game_id(), target);
  }

  // optional int32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 crc_stats = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->crc_stats(), target);
  }

  // repeated .CMsgClientStoreUserStatsResponse.Stats_Failed_Validation stats_failed_validation = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_failed_validation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stats_failed_validation(static_cast<int>(i)), deterministic, target);
  }

  // optional bool stats_out_of_date = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->stats_out_of_date(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStoreUserStatsResponse)
  return target;
}

size_t CMsgClientStoreUserStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStoreUserStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientStoreUserStatsResponse.Stats_Failed_Validation stats_failed_validation = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_failed_validation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats_failed_validation(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 game_id = 1;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 crc_stats = 3;
    if (has_crc_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_stats());
    }

    // optional bool stats_out_of_date = 5;
    if (has_stats_out_of_date()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStoreUserStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStoreUserStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStoreUserStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStoreUserStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStoreUserStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStoreUserStatsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientStoreUserStatsResponse::MergeFrom(const CMsgClientStoreUserStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStoreUserStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_failed_validation_.MergeFrom(from.stats_failed_validation_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      crc_stats_ = from.crc_stats_;
    }
    if (cached_has_bits & 0x00000004u) {
      stats_out_of_date_ = from.stats_out_of_date_;
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStoreUserStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStoreUserStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStoreUserStatsResponse::CopyFrom(const CMsgClientStoreUserStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStoreUserStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStoreUserStatsResponse::IsInitialized() const {
  return true;
}

void CMsgClientStoreUserStatsResponse::Swap(CMsgClientStoreUserStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStoreUserStatsResponse::InternalSwap(CMsgClientStoreUserStatsResponse* other) {
  using std::swap;
  CastToBase(&stats_failed_validation_)->InternalSwap(CastToBase(&other->stats_failed_validation_));
  swap(game_id_, other->game_id_);
  swap(crc_stats_, other->crc_stats_);
  swap(stats_out_of_date_, other->stats_out_of_date_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStoreUserStatsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStoreUserStats2_Stats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStoreUserStats2_Stats::kStatIdFieldNumber;
const int CMsgClientStoreUserStats2_Stats::kStatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStoreUserStats2_Stats::CMsgClientStoreUserStats2_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats2_Stats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStoreUserStats2.Stats)
}
CMsgClientStoreUserStats2_Stats::CMsgClientStoreUserStats2_Stats(const CMsgClientStoreUserStats2_Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_id_, &from.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_value_) -
    reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStoreUserStats2.Stats)
}

void CMsgClientStoreUserStats2_Stats::SharedCtor() {
  ::memset(&stat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_value_) -
      reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
}

CMsgClientStoreUserStats2_Stats::~CMsgClientStoreUserStats2_Stats() {
  // @@protoc_insertion_point(destructor:CMsgClientStoreUserStats2.Stats)
  SharedDtor();
}

void CMsgClientStoreUserStats2_Stats::SharedDtor() {
}

void CMsgClientStoreUserStats2_Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStoreUserStats2_Stats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStoreUserStats2_Stats& CMsgClientStoreUserStats2_Stats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats2_Stats.base);
  return *internal_default_instance();
}


void CMsgClientStoreUserStats2_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStoreUserStats2.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_value_) -
        reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStoreUserStats2_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStoreUserStats2.Stats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStoreUserStats2.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStoreUserStats2.Stats)
  return false;
#undef DO_
}

void CMsgClientStoreUserStats2_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStoreUserStats2.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStoreUserStats2.Stats)
}

::google::protobuf::uint8* CMsgClientStoreUserStats2_Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStoreUserStats2.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStoreUserStats2.Stats)
  return target;
}

size_t CMsgClientStoreUserStats2_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStoreUserStats2.Stats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 stat_value = 2;
    if (has_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStoreUserStats2_Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStoreUserStats2.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStoreUserStats2_Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStoreUserStats2_Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStoreUserStats2.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStoreUserStats2.Stats)
    MergeFrom(*source);
  }
}

void CMsgClientStoreUserStats2_Stats::MergeFrom(const CMsgClientStoreUserStats2_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStoreUserStats2.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stat_id_ = from.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_value_ = from.stat_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStoreUserStats2_Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStoreUserStats2.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStoreUserStats2_Stats::CopyFrom(const CMsgClientStoreUserStats2_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStoreUserStats2.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStoreUserStats2_Stats::IsInitialized() const {
  return true;
}

void CMsgClientStoreUserStats2_Stats::Swap(CMsgClientStoreUserStats2_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStoreUserStats2_Stats::InternalSwap(CMsgClientStoreUserStats2_Stats* other) {
  using std::swap;
  swap(stat_id_, other->stat_id_);
  swap(stat_value_, other->stat_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStoreUserStats2_Stats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStoreUserStats2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStoreUserStats2::kGameIdFieldNumber;
const int CMsgClientStoreUserStats2::kSettorSteamIdFieldNumber;
const int CMsgClientStoreUserStats2::kSetteeSteamIdFieldNumber;
const int CMsgClientStoreUserStats2::kCrcStatsFieldNumber;
const int CMsgClientStoreUserStats2::kExplicitResetFieldNumber;
const int CMsgClientStoreUserStats2::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStoreUserStats2::CMsgClientStoreUserStats2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStoreUserStats2)
}
CMsgClientStoreUserStats2::CMsgClientStoreUserStats2(const CMsgClientStoreUserStats2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_id_, &from.game_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&explicit_reset_) -
    reinterpret_cast<char*>(&game_id_)) + sizeof(explicit_reset_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStoreUserStats2)
}

void CMsgClientStoreUserStats2::SharedCtor() {
  ::memset(&game_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explicit_reset_) -
      reinterpret_cast<char*>(&game_id_)) + sizeof(explicit_reset_));
}

CMsgClientStoreUserStats2::~CMsgClientStoreUserStats2() {
  // @@protoc_insertion_point(destructor:CMsgClientStoreUserStats2)
  SharedDtor();
}

void CMsgClientStoreUserStats2::SharedDtor() {
}

void CMsgClientStoreUserStats2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStoreUserStats2::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStoreUserStats2& CMsgClientStoreUserStats2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats2.base);
  return *internal_default_instance();
}


void CMsgClientStoreUserStats2::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStoreUserStats2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&game_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&explicit_reset_) -
        reinterpret_cast<char*>(&game_id_)) + sizeof(explicit_reset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStoreUserStats2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStoreUserStats2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 game_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 settor_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_settor_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &settor_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 settee_steam_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_settee_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &settee_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_stats = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_crc_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool explicit_reset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_explicit_reset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &explicit_reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientStoreUserStats2.Stats stats = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStoreUserStats2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStoreUserStats2)
  return false;
#undef DO_
}

void CMsgClientStoreUserStats2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStoreUserStats2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->game_id(), output);
  }

  // optional fixed64 settor_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->settor_steam_id(), output);
  }

  // optional fixed64 settee_steam_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->settee_steam_id(), output);
  }

  // optional uint32 crc_stats = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->crc_stats(), output);
  }

  // optional bool explicit_reset = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->explicit_reset(), output);
  }

  // repeated .CMsgClientStoreUserStats2.Stats stats = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStoreUserStats2)
}

::google::protobuf::uint8* CMsgClientStoreUserStats2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStoreUserStats2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->game_id(), target);
  }

  // optional fixed64 settor_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->settor_steam_id(), target);
  }

  // optional fixed64 settee_steam_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->settee_steam_id(), target);
  }

  // optional uint32 crc_stats = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->crc_stats(), target);
  }

  // optional bool explicit_reset = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->explicit_reset(), target);
  }

  // repeated .CMsgClientStoreUserStats2.Stats stats = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->stats(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStoreUserStats2)
  return target;
}

size_t CMsgClientStoreUserStats2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStoreUserStats2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientStoreUserStats2.Stats stats = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 game_id = 1;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 settor_steam_id = 2;
    if (has_settor_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 settee_steam_id = 3;
    if (has_settee_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 crc_stats = 4;
    if (has_crc_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_stats());
    }

    // optional bool explicit_reset = 5;
    if (has_explicit_reset()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStoreUserStats2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStoreUserStats2)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStoreUserStats2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStoreUserStats2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStoreUserStats2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStoreUserStats2)
    MergeFrom(*source);
  }
}

void CMsgClientStoreUserStats2::MergeFrom(const CMsgClientStoreUserStats2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStoreUserStats2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      settor_steam_id_ = from.settor_steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      settee_steam_id_ = from.settee_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      crc_stats_ = from.crc_stats_;
    }
    if (cached_has_bits & 0x00000010u) {
      explicit_reset_ = from.explicit_reset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStoreUserStats2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStoreUserStats2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStoreUserStats2::CopyFrom(const CMsgClientStoreUserStats2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStoreUserStats2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStoreUserStats2::IsInitialized() const {
  return true;
}

void CMsgClientStoreUserStats2::Swap(CMsgClientStoreUserStats2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStoreUserStats2::InternalSwap(CMsgClientStoreUserStats2* other) {
  using std::swap;
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  swap(game_id_, other->game_id_);
  swap(settor_steam_id_, other->settor_steam_id_);
  swap(settee_steam_id_, other->settee_steam_id_);
  swap(crc_stats_, other->crc_stats_);
  swap(explicit_reset_, other->explicit_reset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStoreUserStats2::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStatsUpdated_Updated_Stats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStatsUpdated_Updated_Stats::kStatIdFieldNumber;
const int CMsgClientStatsUpdated_Updated_Stats::kStatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStatsUpdated_Updated_Stats::CMsgClientStatsUpdated_Updated_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStatsUpdated_Updated_Stats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStatsUpdated.Updated_Stats)
}
CMsgClientStatsUpdated_Updated_Stats::CMsgClientStatsUpdated_Updated_Stats(const CMsgClientStatsUpdated_Updated_Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_id_, &from.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_value_) -
    reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStatsUpdated.Updated_Stats)
}

void CMsgClientStatsUpdated_Updated_Stats::SharedCtor() {
  ::memset(&stat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_value_) -
      reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
}

CMsgClientStatsUpdated_Updated_Stats::~CMsgClientStatsUpdated_Updated_Stats() {
  // @@protoc_insertion_point(destructor:CMsgClientStatsUpdated.Updated_Stats)
  SharedDtor();
}

void CMsgClientStatsUpdated_Updated_Stats::SharedDtor() {
}

void CMsgClientStatsUpdated_Updated_Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStatsUpdated_Updated_Stats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStatsUpdated_Updated_Stats& CMsgClientStatsUpdated_Updated_Stats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStatsUpdated_Updated_Stats.base);
  return *internal_default_instance();
}


void CMsgClientStatsUpdated_Updated_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStatsUpdated.Updated_Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_value_) -
        reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStatsUpdated_Updated_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStatsUpdated.Updated_Stats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStatsUpdated.Updated_Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStatsUpdated.Updated_Stats)
  return false;
#undef DO_
}

void CMsgClientStatsUpdated_Updated_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStatsUpdated.Updated_Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStatsUpdated.Updated_Stats)
}

::google::protobuf::uint8* CMsgClientStatsUpdated_Updated_Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStatsUpdated.Updated_Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStatsUpdated.Updated_Stats)
  return target;
}

size_t CMsgClientStatsUpdated_Updated_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStatsUpdated.Updated_Stats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 stat_value = 2;
    if (has_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStatsUpdated_Updated_Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStatsUpdated.Updated_Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStatsUpdated_Updated_Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStatsUpdated_Updated_Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStatsUpdated.Updated_Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStatsUpdated.Updated_Stats)
    MergeFrom(*source);
  }
}

void CMsgClientStatsUpdated_Updated_Stats::MergeFrom(const CMsgClientStatsUpdated_Updated_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStatsUpdated.Updated_Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stat_id_ = from.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_value_ = from.stat_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStatsUpdated_Updated_Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStatsUpdated.Updated_Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStatsUpdated_Updated_Stats::CopyFrom(const CMsgClientStatsUpdated_Updated_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStatsUpdated.Updated_Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStatsUpdated_Updated_Stats::IsInitialized() const {
  return true;
}

void CMsgClientStatsUpdated_Updated_Stats::Swap(CMsgClientStatsUpdated_Updated_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStatsUpdated_Updated_Stats::InternalSwap(CMsgClientStatsUpdated_Updated_Stats* other) {
  using std::swap;
  swap(stat_id_, other->stat_id_);
  swap(stat_value_, other->stat_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStatsUpdated_Updated_Stats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStatsUpdated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStatsUpdated::kSteamIdFieldNumber;
const int CMsgClientStatsUpdated::kGameIdFieldNumber;
const int CMsgClientStatsUpdated::kCrcStatsFieldNumber;
const int CMsgClientStatsUpdated::kUpdatedStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStatsUpdated::CMsgClientStatsUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStatsUpdated.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStatsUpdated)
}
CMsgClientStatsUpdated::CMsgClientStatsUpdated(const CMsgClientStatsUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      updated_stats_(from.updated_stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc_stats_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(crc_stats_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStatsUpdated)
}

void CMsgClientStatsUpdated::SharedCtor() {
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_stats_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(crc_stats_));
}

CMsgClientStatsUpdated::~CMsgClientStatsUpdated() {
  // @@protoc_insertion_point(destructor:CMsgClientStatsUpdated)
  SharedDtor();
}

void CMsgClientStatsUpdated::SharedDtor() {
}

void CMsgClientStatsUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStatsUpdated::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStatsUpdated& CMsgClientStatsUpdated::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStatsUpdated.base);
  return *internal_default_instance();
}


void CMsgClientStatsUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStatsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updated_stats_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&crc_stats_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(crc_stats_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStatsUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStatsUpdated)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_stats = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_crc_stats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_stats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientStatsUpdated.Updated_Stats updated_stats = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_updated_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStatsUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStatsUpdated)
  return false;
#undef DO_
}

void CMsgClientStatsUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStatsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // optional uint32 crc_stats = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->crc_stats(), output);
  }

  // repeated .CMsgClientStatsUpdated.Updated_Stats updated_stats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updated_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->updated_stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStatsUpdated)
}

::google::protobuf::uint8* CMsgClientStatsUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStatsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // optional uint32 crc_stats = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->crc_stats(), target);
  }

  // repeated .CMsgClientStatsUpdated.Updated_Stats updated_stats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updated_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->updated_stats(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStatsUpdated)
  return target;
}

size_t CMsgClientStatsUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStatsUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientStatsUpdated.Updated_Stats updated_stats = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->updated_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->updated_stats(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 crc_stats = 3;
    if (has_crc_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_stats());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStatsUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStatsUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStatsUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStatsUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStatsUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStatsUpdated)
    MergeFrom(*source);
  }
}

void CMsgClientStatsUpdated::MergeFrom(const CMsgClientStatsUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStatsUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updated_stats_.MergeFrom(from.updated_stats_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      crc_stats_ = from.crc_stats_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStatsUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStatsUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStatsUpdated::CopyFrom(const CMsgClientStatsUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStatsUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStatsUpdated::IsInitialized() const {
  return true;
}

void CMsgClientStatsUpdated::Swap(CMsgClientStatsUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStatsUpdated::InternalSwap(CMsgClientStatsUpdated* other) {
  using std::swap;
  CastToBase(&updated_stats_)->InternalSwap(CastToBase(&other->updated_stats_));
  swap(steam_id_, other->steam_id_);
  swap(game_id_, other->game_id_);
  swap(crc_stats_, other->crc_stats_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStatsUpdated::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStoreUserStats_Stats_To_Store::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStoreUserStats_Stats_To_Store::kStatIdFieldNumber;
const int CMsgClientStoreUserStats_Stats_To_Store::kStatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStoreUserStats_Stats_To_Store::CMsgClientStoreUserStats_Stats_To_Store()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats_Stats_To_Store.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStoreUserStats.Stats_To_Store)
}
CMsgClientStoreUserStats_Stats_To_Store::CMsgClientStoreUserStats_Stats_To_Store(const CMsgClientStoreUserStats_Stats_To_Store& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_id_, &from.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_value_) -
    reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStoreUserStats.Stats_To_Store)
}

void CMsgClientStoreUserStats_Stats_To_Store::SharedCtor() {
  ::memset(&stat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_value_) -
      reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
}

CMsgClientStoreUserStats_Stats_To_Store::~CMsgClientStoreUserStats_Stats_To_Store() {
  // @@protoc_insertion_point(destructor:CMsgClientStoreUserStats.Stats_To_Store)
  SharedDtor();
}

void CMsgClientStoreUserStats_Stats_To_Store::SharedDtor() {
}

void CMsgClientStoreUserStats_Stats_To_Store::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStoreUserStats_Stats_To_Store::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStoreUserStats_Stats_To_Store& CMsgClientStoreUserStats_Stats_To_Store::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats_Stats_To_Store.base);
  return *internal_default_instance();
}


void CMsgClientStoreUserStats_Stats_To_Store::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStoreUserStats.Stats_To_Store)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_value_) -
        reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStoreUserStats_Stats_To_Store::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStoreUserStats.Stats_To_Store)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStoreUserStats.Stats_To_Store)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStoreUserStats.Stats_To_Store)
  return false;
#undef DO_
}

void CMsgClientStoreUserStats_Stats_To_Store::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStoreUserStats.Stats_To_Store)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStoreUserStats.Stats_To_Store)
}

::google::protobuf::uint8* CMsgClientStoreUserStats_Stats_To_Store::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStoreUserStats.Stats_To_Store)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStoreUserStats.Stats_To_Store)
  return target;
}

size_t CMsgClientStoreUserStats_Stats_To_Store::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStoreUserStats.Stats_To_Store)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 stat_value = 2;
    if (has_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStoreUserStats_Stats_To_Store::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStoreUserStats.Stats_To_Store)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStoreUserStats_Stats_To_Store* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStoreUserStats_Stats_To_Store>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStoreUserStats.Stats_To_Store)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStoreUserStats.Stats_To_Store)
    MergeFrom(*source);
  }
}

void CMsgClientStoreUserStats_Stats_To_Store::MergeFrom(const CMsgClientStoreUserStats_Stats_To_Store& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStoreUserStats.Stats_To_Store)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stat_id_ = from.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_value_ = from.stat_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStoreUserStats_Stats_To_Store::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStoreUserStats.Stats_To_Store)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStoreUserStats_Stats_To_Store::CopyFrom(const CMsgClientStoreUserStats_Stats_To_Store& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStoreUserStats.Stats_To_Store)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStoreUserStats_Stats_To_Store::IsInitialized() const {
  return true;
}

void CMsgClientStoreUserStats_Stats_To_Store::Swap(CMsgClientStoreUserStats_Stats_To_Store* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStoreUserStats_Stats_To_Store::InternalSwap(CMsgClientStoreUserStats_Stats_To_Store* other) {
  using std::swap;
  swap(stat_id_, other->stat_id_);
  swap(stat_value_, other->stat_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStoreUserStats_Stats_To_Store::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientStoreUserStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientStoreUserStats::kGameIdFieldNumber;
const int CMsgClientStoreUserStats::kExplicitResetFieldNumber;
const int CMsgClientStoreUserStats::kStatsToStoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientStoreUserStats::CMsgClientStoreUserStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientStoreUserStats)
}
CMsgClientStoreUserStats::CMsgClientStoreUserStats(const CMsgClientStoreUserStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stats_to_store_(from.stats_to_store_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_id_, &from.game_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&explicit_reset_) -
    reinterpret_cast<char*>(&game_id_)) + sizeof(explicit_reset_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientStoreUserStats)
}

void CMsgClientStoreUserStats::SharedCtor() {
  ::memset(&game_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explicit_reset_) -
      reinterpret_cast<char*>(&game_id_)) + sizeof(explicit_reset_));
}

CMsgClientStoreUserStats::~CMsgClientStoreUserStats() {
  // @@protoc_insertion_point(destructor:CMsgClientStoreUserStats)
  SharedDtor();
}

void CMsgClientStoreUserStats::SharedDtor() {
}

void CMsgClientStoreUserStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientStoreUserStats::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientStoreUserStats& CMsgClientStoreUserStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientStoreUserStats.base);
  return *internal_default_instance();
}


void CMsgClientStoreUserStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientStoreUserStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_to_store_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&game_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&explicit_reset_) -
        reinterpret_cast<char*>(&game_id_)) + sizeof(explicit_reset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientStoreUserStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientStoreUserStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 game_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool explicit_reset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_explicit_reset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &explicit_reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientStoreUserStats.Stats_To_Store stats_to_store = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats_to_store()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientStoreUserStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientStoreUserStats)
  return false;
#undef DO_
}

void CMsgClientStoreUserStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientStoreUserStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->game_id(), output);
  }

  // optional bool explicit_reset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->explicit_reset(), output);
  }

  // repeated .CMsgClientStoreUserStats.Stats_To_Store stats_to_store = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_to_store_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->stats_to_store(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientStoreUserStats)
}

::google::protobuf::uint8* CMsgClientStoreUserStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientStoreUserStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 game_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->game_id(), target);
  }

  // optional bool explicit_reset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->explicit_reset(), target);
  }

  // repeated .CMsgClientStoreUserStats.Stats_To_Store stats_to_store = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_to_store_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stats_to_store(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientStoreUserStats)
  return target;
}

size_t CMsgClientStoreUserStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientStoreUserStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientStoreUserStats.Stats_To_Store stats_to_store = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_to_store_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats_to_store(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 game_id = 1;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional bool explicit_reset = 2;
    if (has_explicit_reset()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientStoreUserStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientStoreUserStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientStoreUserStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientStoreUserStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientStoreUserStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientStoreUserStats)
    MergeFrom(*source);
  }
}

void CMsgClientStoreUserStats::MergeFrom(const CMsgClientStoreUserStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientStoreUserStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_to_store_.MergeFrom(from.stats_to_store_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      explicit_reset_ = from.explicit_reset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientStoreUserStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientStoreUserStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientStoreUserStats::CopyFrom(const CMsgClientStoreUserStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientStoreUserStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientStoreUserStats::IsInitialized() const {
  return true;
}

void CMsgClientStoreUserStats::Swap(CMsgClientStoreUserStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientStoreUserStats::InternalSwap(CMsgClientStoreUserStats* other) {
  using std::swap;
  CastToBase(&stats_to_store_)->InternalSwap(CastToBase(&other->stats_to_store_));
  swap(game_id_, other->game_id_);
  swap(explicit_reset_, other->explicit_reset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientStoreUserStats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientDetails::CMsgClientGetClientDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientDetails)
}
CMsgClientGetClientDetails::CMsgClientGetClientDetails(const CMsgClientGetClientDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientDetails)
}

void CMsgClientGetClientDetails::SharedCtor() {
}

CMsgClientGetClientDetails::~CMsgClientGetClientDetails() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientDetails)
  SharedDtor();
}

void CMsgClientGetClientDetails::SharedDtor() {
}

void CMsgClientGetClientDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientDetails::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientDetails& CMsgClientGetClientDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetails.base);
  return *internal_default_instance();
}


void CMsgClientGetClientDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientDetails)
  return false;
#undef DO_
}

void CMsgClientGetClientDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientDetails)
}

::google::protobuf::uint8* CMsgClientGetClientDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientDetails)
  return target;
}

size_t CMsgClientGetClientDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientDetails)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientDetails::MergeFrom(const CMsgClientGetClientDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientGetClientDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientDetails::CopyFrom(const CMsgClientGetClientDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientDetails::IsInitialized() const {
  return true;
}

void CMsgClientGetClientDetails::Swap(CMsgClientGetClientDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientDetails::InternalSwap(CMsgClientGetClientDetails* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientDetails::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientReportOverlayDetourFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReportOverlayDetourFailure::kFailureStringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReportOverlayDetourFailure::CMsgClientReportOverlayDetourFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientReportOverlayDetourFailure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientReportOverlayDetourFailure)
}
CMsgClientReportOverlayDetourFailure::CMsgClientReportOverlayDetourFailure(const CMsgClientReportOverlayDetourFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      failure_strings_(from.failure_strings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientReportOverlayDetourFailure)
}

void CMsgClientReportOverlayDetourFailure::SharedCtor() {
}

CMsgClientReportOverlayDetourFailure::~CMsgClientReportOverlayDetourFailure() {
  // @@protoc_insertion_point(destructor:CMsgClientReportOverlayDetourFailure)
  SharedDtor();
}

void CMsgClientReportOverlayDetourFailure::SharedDtor() {
}

void CMsgClientReportOverlayDetourFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientReportOverlayDetourFailure::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientReportOverlayDetourFailure& CMsgClientReportOverlayDetourFailure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientReportOverlayDetourFailure.base);
  return *internal_default_instance();
}


void CMsgClientReportOverlayDetourFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientReportOverlayDetourFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  failure_strings_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientReportOverlayDetourFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientReportOverlayDetourFailure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string failure_strings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_failure_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->failure_strings(this->failure_strings_size() - 1).data(),
            static_cast<int>(this->failure_strings(this->failure_strings_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientReportOverlayDetourFailure.failure_strings");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientReportOverlayDetourFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientReportOverlayDetourFailure)
  return false;
#undef DO_
}

void CMsgClientReportOverlayDetourFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientReportOverlayDetourFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string failure_strings = 1;
  for (int i = 0, n = this->failure_strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->failure_strings(i).data(), static_cast<int>(this->failure_strings(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReportOverlayDetourFailure.failure_strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->failure_strings(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientReportOverlayDetourFailure)
}

::google::protobuf::uint8* CMsgClientReportOverlayDetourFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientReportOverlayDetourFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string failure_strings = 1;
  for (int i = 0, n = this->failure_strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->failure_strings(i).data(), static_cast<int>(this->failure_strings(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientReportOverlayDetourFailure.failure_strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->failure_strings(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientReportOverlayDetourFailure)
  return target;
}

size_t CMsgClientReportOverlayDetourFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientReportOverlayDetourFailure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string failure_strings = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->failure_strings_size());
  for (int i = 0, n = this->failure_strings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->failure_strings(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientReportOverlayDetourFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientReportOverlayDetourFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReportOverlayDetourFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientReportOverlayDetourFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientReportOverlayDetourFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientReportOverlayDetourFailure)
    MergeFrom(*source);
  }
}

void CMsgClientReportOverlayDetourFailure::MergeFrom(const CMsgClientReportOverlayDetourFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientReportOverlayDetourFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  failure_strings_.MergeFrom(from.failure_strings_);
}

void CMsgClientReportOverlayDetourFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientReportOverlayDetourFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReportOverlayDetourFailure::CopyFrom(const CMsgClientReportOverlayDetourFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientReportOverlayDetourFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReportOverlayDetourFailure::IsInitialized() const {
  return true;
}

void CMsgClientReportOverlayDetourFailure::Swap(CMsgClientReportOverlayDetourFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReportOverlayDetourFailure::InternalSwap(CMsgClientReportOverlayDetourFailure* other) {
  using std::swap;
  failure_strings_.InternalSwap(CastToBase(&other->failure_strings_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientReportOverlayDetourFailure::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientDetailsResponse_Game::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClientDetailsResponse_Game::kAppidFieldNumber;
const int CMsgClientGetClientDetailsResponse_Game::kExtraInfoFieldNumber;
const int CMsgClientGetClientDetailsResponse_Game::kTimeRunningSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientDetailsResponse_Game::CMsgClientGetClientDetailsResponse_Game()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetailsResponse_Game.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientDetailsResponse.Game)
}
CMsgClientGetClientDetailsResponse_Game::CMsgClientGetClientDetailsResponse_Game(const CMsgClientGetClientDetailsResponse_Game& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extra_info()) {
    extra_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_info_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_running_sec_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(time_running_sec_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientDetailsResponse.Game)
}

void CMsgClientGetClientDetailsResponse_Game::SharedCtor() {
  extra_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_running_sec_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(time_running_sec_));
}

CMsgClientGetClientDetailsResponse_Game::~CMsgClientGetClientDetailsResponse_Game() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientDetailsResponse.Game)
  SharedDtor();
}

void CMsgClientGetClientDetailsResponse_Game::SharedDtor() {
  extra_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetClientDetailsResponse_Game::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientDetailsResponse_Game::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientDetailsResponse_Game& CMsgClientGetClientDetailsResponse_Game::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetailsResponse_Game.base);
  return *internal_default_instance();
}


void CMsgClientGetClientDetailsResponse_Game::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientDetailsResponse.Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    extra_info_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_running_sec_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(time_running_sec_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientDetailsResponse_Game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientDetailsResponse.Game)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string extra_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extra_info().data(), static_cast<int>(this->extra_info().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientDetailsResponse.Game.extra_info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_running_sec = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_running_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_running_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientDetailsResponse.Game)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientDetailsResponse.Game)
  return false;
#undef DO_
}

void CMsgClientGetClientDetailsResponse_Game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientDetailsResponse.Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string extra_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_info().data(), static_cast<int>(this->extra_info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.Game.extra_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extra_info(), output);
  }

  // optional uint32 time_running_sec = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_running_sec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientDetailsResponse.Game)
}

::google::protobuf::uint8* CMsgClientGetClientDetailsResponse_Game::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientDetailsResponse.Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string extra_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_info().data(), static_cast<int>(this->extra_info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.Game.extra_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extra_info(), target);
  }

  // optional uint32 time_running_sec = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_running_sec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientDetailsResponse.Game)
  return target;
}

size_t CMsgClientGetClientDetailsResponse_Game::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientDetailsResponse.Game)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string extra_info = 2;
    if (has_extra_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extra_info());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 time_running_sec = 3;
    if (has_time_running_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_running_sec());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientDetailsResponse_Game::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientDetailsResponse.Game)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientDetailsResponse_Game* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientDetailsResponse_Game>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientDetailsResponse.Game)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientDetailsResponse.Game)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientDetailsResponse_Game::MergeFrom(const CMsgClientGetClientDetailsResponse_Game& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientDetailsResponse.Game)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_extra_info();
      extra_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_running_sec_ = from.time_running_sec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetClientDetailsResponse_Game::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientDetailsResponse.Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientDetailsResponse_Game::CopyFrom(const CMsgClientGetClientDetailsResponse_Game& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientDetailsResponse.Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientDetailsResponse_Game::IsInitialized() const {
  return true;
}

void CMsgClientGetClientDetailsResponse_Game::Swap(CMsgClientGetClientDetailsResponse_Game* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientDetailsResponse_Game::InternalSwap(CMsgClientGetClientDetailsResponse_Game* other) {
  using std::swap;
  extra_info_.Swap(&other->extra_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(time_running_sec_, other->time_running_sec_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientDetailsResponse_Game::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientDetailsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClientDetailsResponse::kPackageVersionFieldNumber;
const int CMsgClientGetClientDetailsResponse::kProtocolVersionFieldNumber;
const int CMsgClientGetClientDetailsResponse::kOsFieldNumber;
const int CMsgClientGetClientDetailsResponse::kMachineNameFieldNumber;
const int CMsgClientGetClientDetailsResponse::kIpPublicFieldNumber;
const int CMsgClientGetClientDetailsResponse::kIpPrivateFieldNumber;
const int CMsgClientGetClientDetailsResponse::kBytesAvailableFieldNumber;
const int CMsgClientGetClientDetailsResponse::kGamesRunningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientDetailsResponse::CMsgClientGetClientDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetailsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientDetailsResponse)
}
CMsgClientGetClientDetailsResponse::CMsgClientGetClientDetailsResponse(const CMsgClientGetClientDetailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      games_running_(from.games_running_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os()) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name()) {
    machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
  }
  ip_public_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_public()) {
    ip_public_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_public_);
  }
  ip_private_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_private()) {
    ip_private_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_private_);
  }
  ::memcpy(&package_version_, &from.package_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&bytes_available_) -
    reinterpret_cast<char*>(&package_version_)) + sizeof(bytes_available_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientDetailsResponse)
}

void CMsgClientGetClientDetailsResponse::SharedCtor() {
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_public_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_private_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_available_) -
      reinterpret_cast<char*>(&package_version_)) + sizeof(bytes_available_));
}

CMsgClientGetClientDetailsResponse::~CMsgClientGetClientDetailsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientDetailsResponse)
  SharedDtor();
}

void CMsgClientGetClientDetailsResponse::SharedDtor() {
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_public_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_private_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetClientDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientDetailsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientDetailsResponse& CMsgClientGetClientDetailsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientDetailsResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetClientDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  games_running_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      os_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      machine_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      ip_public_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      ip_private_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&package_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bytes_available_) -
        reinterpret_cast<char*>(&package_version_)) + sizeof(bytes_available_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientDetailsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string os = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientDetailsResponse.os");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name().data(), static_cast<int>(this->machine_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientDetailsResponse.machine_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_public = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_public()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_public().data(), static_cast<int>(this->ip_public().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientDetailsResponse.ip_public");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_private = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_private()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_private().data(), static_cast<int>(this->ip_private().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientDetailsResponse.ip_private");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientGetClientDetailsResponse.Game games_running = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_games_running()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_available = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bytes_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 protocol_version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_protocol_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientDetailsResponse)
  return false;
#undef DO_
}

void CMsgClientGetClientDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_version = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_version(), output);
  }

  // optional string os = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->os(), output);
  }

  // optional string machine_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), static_cast<int>(this->machine_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.machine_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->machine_name(), output);
  }

  // optional string ip_public = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_public().data(), static_cast<int>(this->ip_public().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.ip_public");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip_public(), output);
  }

  // optional string ip_private = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_private().data(), static_cast<int>(this->ip_private().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.ip_private");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ip_private(), output);
  }

  // repeated .CMsgClientGetClientDetailsResponse.Game games_running = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->games_running_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->games_running(static_cast<int>(i)),
      output);
  }

  // optional uint64 bytes_available = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->bytes_available(), output);
  }

  // optional uint32 protocol_version = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->protocol_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientDetailsResponse)
}

::google::protobuf::uint8* CMsgClientGetClientDetailsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_version = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_version(), target);
  }

  // optional string os = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->os(), target);
  }

  // optional string machine_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), static_cast<int>(this->machine_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.machine_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->machine_name(), target);
  }

  // optional string ip_public = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_public().data(), static_cast<int>(this->ip_public().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.ip_public");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip_public(), target);
  }

  // optional string ip_private = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_private().data(), static_cast<int>(this->ip_private().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientDetailsResponse.ip_private");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ip_private(), target);
  }

  // repeated .CMsgClientGetClientDetailsResponse.Game games_running = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->games_running_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->games_running(static_cast<int>(i)), deterministic, target);
  }

  // optional uint64 bytes_available = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->bytes_available(), target);
  }

  // optional uint32 protocol_version = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->protocol_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientDetailsResponse)
  return target;
}

size_t CMsgClientGetClientDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientDetailsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientGetClientDetailsResponse.Game games_running = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->games_running_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->games_running(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string os = 2;
    if (has_os()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os());
    }

    // optional string machine_name = 3;
    if (has_machine_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name());
    }

    // optional string ip_public = 4;
    if (has_ip_public()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_public());
    }

    // optional string ip_private = 5;
    if (has_ip_private()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_private());
    }

    // optional uint32 package_version = 1;
    if (has_package_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_version());
    }

    // optional uint32 protocol_version = 8;
    if (has_protocol_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protocol_version());
    }

    // optional uint64 bytes_available = 7;
    if (has_bytes_available()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_available());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientDetailsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientDetailsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientDetailsResponse::MergeFrom(const CMsgClientGetClientDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  games_running_.MergeFrom(from.games_running_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_os();
      os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_machine_name();
      machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ip_public();
      ip_public_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_public_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_ip_private();
      ip_private_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_private_);
    }
    if (cached_has_bits & 0x00000010u) {
      package_version_ = from.package_version_;
    }
    if (cached_has_bits & 0x00000020u) {
      protocol_version_ = from.protocol_version_;
    }
    if (cached_has_bits & 0x00000040u) {
      bytes_available_ = from.bytes_available_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetClientDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientDetailsResponse::CopyFrom(const CMsgClientGetClientDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetClientDetailsResponse::Swap(CMsgClientGetClientDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientDetailsResponse::InternalSwap(CMsgClientGetClientDetailsResponse* other) {
  using std::swap;
  CastToBase(&games_running_)->InternalSwap(CastToBase(&other->games_running_));
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_name_.Swap(&other->machine_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_public_.Swap(&other->ip_public_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_private_.Swap(&other->ip_private_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_version_, other->package_version_);
  swap(protocol_version_, other->protocol_version_);
  swap(bytes_available_, other->bytes_available_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientDetailsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientAppList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClientAppList::kMediaFieldNumber;
const int CMsgClientGetClientAppList::kToolsFieldNumber;
const int CMsgClientGetClientAppList::kGamesFieldNumber;
const int CMsgClientGetClientAppList::kOnlyInstalledFieldNumber;
const int CMsgClientGetClientAppList::kOnlyChangingFieldNumber;
const int CMsgClientGetClientAppList::kComicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientAppList::CMsgClientGetClientAppList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientAppList)
}
CMsgClientGetClientAppList::CMsgClientGetClientAppList(const CMsgClientGetClientAppList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&media_, &from.media_,
    static_cast<size_t>(reinterpret_cast<char*>(&comics_) -
    reinterpret_cast<char*>(&media_)) + sizeof(comics_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientAppList)
}

void CMsgClientGetClientAppList::SharedCtor() {
  ::memset(&media_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&comics_) -
      reinterpret_cast<char*>(&media_)) + sizeof(comics_));
}

CMsgClientGetClientAppList::~CMsgClientGetClientAppList() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientAppList)
  SharedDtor();
}

void CMsgClientGetClientAppList::SharedDtor() {
}

void CMsgClientGetClientAppList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientAppList::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientAppList& CMsgClientGetClientAppList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppList.base);
  return *internal_default_instance();
}


void CMsgClientGetClientAppList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&media_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&comics_) -
        reinterpret_cast<char*>(&media_)) + sizeof(comics_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientAppList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientAppList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool media = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_media();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &media_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool tools = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tools();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tools_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool games = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_games();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool only_installed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_only_installed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_installed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool only_changing = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_only_changing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_changing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool comics = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_comics();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &comics_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientAppList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientAppList)
  return false;
#undef DO_
}

void CMsgClientGetClientAppList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool media = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->media(), output);
  }

  // optional bool tools = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->tools(), output);
  }

  // optional bool games = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->games(), output);
  }

  // optional bool only_installed = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->only_installed(), output);
  }

  // optional bool only_changing = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->only_changing(), output);
  }

  // optional bool comics = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->comics(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientAppList)
}

::google::protobuf::uint8* CMsgClientGetClientAppList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool media = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->media(), target);
  }

  // optional bool tools = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->tools(), target);
  }

  // optional bool games = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->games(), target);
  }

  // optional bool only_installed = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->only_installed(), target);
  }

  // optional bool only_changing = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->only_changing(), target);
  }

  // optional bool comics = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->comics(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientAppList)
  return target;
}

size_t CMsgClientGetClientAppList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientAppList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bool media = 1;
    if (has_media()) {
      total_size += 1 + 1;
    }

    // optional bool tools = 2;
    if (has_tools()) {
      total_size += 1 + 1;
    }

    // optional bool games = 3;
    if (has_games()) {
      total_size += 1 + 1;
    }

    // optional bool only_installed = 4;
    if (has_only_installed()) {
      total_size += 1 + 1;
    }

    // optional bool only_changing = 5;
    if (has_only_changing()) {
      total_size += 1 + 1;
    }

    // optional bool comics = 6;
    if (has_comics()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientAppList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientAppList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientAppList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientAppList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientAppList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientAppList)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientAppList::MergeFrom(const CMsgClientGetClientAppList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientAppList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      media_ = from.media_;
    }
    if (cached_has_bits & 0x00000002u) {
      tools_ = from.tools_;
    }
    if (cached_has_bits & 0x00000004u) {
      games_ = from.games_;
    }
    if (cached_has_bits & 0x00000008u) {
      only_installed_ = from.only_installed_;
    }
    if (cached_has_bits & 0x00000010u) {
      only_changing_ = from.only_changing_;
    }
    if (cached_has_bits & 0x00000020u) {
      comics_ = from.comics_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetClientAppList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientAppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientAppList::CopyFrom(const CMsgClientGetClientAppList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientAppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientAppList::IsInitialized() const {
  return true;
}

void CMsgClientGetClientAppList::Swap(CMsgClientGetClientAppList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientAppList::InternalSwap(CMsgClientGetClientAppList* other) {
  using std::swap;
  swap(media_, other->media_);
  swap(tools_, other->tools_);
  swap(games_, other->games_);
  swap(only_installed_, other->only_installed_);
  swap(only_changing_, other->only_changing_);
  swap(comics_, other->comics_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientAppList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientAppListResponse_App_DLC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClientAppListResponse_App_DLC::kAppidFieldNumber;
const int CMsgClientGetClientAppListResponse_App_DLC::kInstalledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientAppListResponse_App_DLC::CMsgClientGetClientAppListResponse_App_DLC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse_App_DLC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientAppListResponse.App.DLC)
}
CMsgClientGetClientAppListResponse_App_DLC::CMsgClientGetClientAppListResponse_App_DLC(const CMsgClientGetClientAppListResponse_App_DLC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&installed_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(installed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientAppListResponse.App.DLC)
}

void CMsgClientGetClientAppListResponse_App_DLC::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&installed_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(installed_));
}

CMsgClientGetClientAppListResponse_App_DLC::~CMsgClientGetClientAppListResponse_App_DLC() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientAppListResponse.App.DLC)
  SharedDtor();
}

void CMsgClientGetClientAppListResponse_App_DLC::SharedDtor() {
}

void CMsgClientGetClientAppListResponse_App_DLC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientAppListResponse_App_DLC::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientAppListResponse_App_DLC& CMsgClientGetClientAppListResponse_App_DLC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse_App_DLC.base);
  return *internal_default_instance();
}


void CMsgClientGetClientAppListResponse_App_DLC::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientAppListResponse.App.DLC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&installed_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(installed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientAppListResponse_App_DLC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientAppListResponse.App.DLC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool installed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_installed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &installed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientAppListResponse.App.DLC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientAppListResponse.App.DLC)
  return false;
#undef DO_
}

void CMsgClientGetClientAppListResponse_App_DLC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientAppListResponse.App.DLC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional bool installed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->installed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientAppListResponse.App.DLC)
}

::google::protobuf::uint8* CMsgClientGetClientAppListResponse_App_DLC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientAppListResponse.App.DLC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional bool installed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->installed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientAppListResponse.App.DLC)
  return target;
}

size_t CMsgClientGetClientAppListResponse_App_DLC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientAppListResponse.App.DLC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool installed = 2;
    if (has_installed()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientAppListResponse_App_DLC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientAppListResponse.App.DLC)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientAppListResponse_App_DLC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientAppListResponse_App_DLC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientAppListResponse.App.DLC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientAppListResponse.App.DLC)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientAppListResponse_App_DLC::MergeFrom(const CMsgClientGetClientAppListResponse_App_DLC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientAppListResponse.App.DLC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      installed_ = from.installed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetClientAppListResponse_App_DLC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientAppListResponse.App.DLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientAppListResponse_App_DLC::CopyFrom(const CMsgClientGetClientAppListResponse_App_DLC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientAppListResponse.App.DLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientAppListResponse_App_DLC::IsInitialized() const {
  return true;
}

void CMsgClientGetClientAppListResponse_App_DLC::Swap(CMsgClientGetClientAppListResponse_App_DLC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientAppListResponse_App_DLC::InternalSwap(CMsgClientGetClientAppListResponse_App_DLC* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(installed_, other->installed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientAppListResponse_App_DLC::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientAppListResponse_App::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClientAppListResponse_App::kAppidFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kCategoryFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kAppTypeFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kFavoriteFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kInstalledFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kAutoUpdateFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kBytesDownloadedFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kBytesNeededFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kBytesDownloadRateFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kDownloadPausedFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kNumDownloadingFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kNumPausedFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kChangingFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kAvailableOnPlatformFieldNumber;
const int CMsgClientGetClientAppListResponse_App::kDlcsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientAppListResponse_App::CMsgClientGetClientAppListResponse_App()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse_App.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientAppListResponse.App)
}
CMsgClientGetClientAppListResponse_App::CMsgClientGetClientAppListResponse_App(const CMsgClientGetClientAppListResponse_App& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dlcs_(from.dlcs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category()) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  app_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_type()) {
    app_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_type_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&available_on_platform_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(available_on_platform_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientAppListResponse.App)
}

void CMsgClientGetClientAppListResponse_App::SharedCtor() {
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_on_platform_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(available_on_platform_));
}

CMsgClientGetClientAppListResponse_App::~CMsgClientGetClientAppListResponse_App() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientAppListResponse.App)
  SharedDtor();
}

void CMsgClientGetClientAppListResponse_App::SharedDtor() {
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetClientAppListResponse_App::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientAppListResponse_App::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientAppListResponse_App& CMsgClientGetClientAppListResponse_App::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse_App.base);
  return *internal_default_instance();
}


void CMsgClientGetClientAppListResponse_App::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientAppListResponse.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dlcs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      category_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      app_type_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bytes_downloaded_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(bytes_downloaded_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&bytes_needed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&available_on_platform_) -
        reinterpret_cast<char*>(&bytes_needed_)) + sizeof(available_on_platform_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientAppListResponse_App::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientAppListResponse.App)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientAppListResponse.App.category");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool favorite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_favorite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &favorite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool installed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_installed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &installed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool auto_update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_auto_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_downloaded = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_bytes_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_needed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bytes_needed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_needed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bytes_download_rate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_bytes_download_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytes_download_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientGetClientAppListResponse.App.DLC dlcs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dlcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string app_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_type().data(), static_cast<int>(this->app_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientGetClientAppListResponse.App.app_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool download_paused = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_download_paused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &download_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_downloading = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_num_downloading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_downloading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_paused = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_num_paused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool changing = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_changing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &changing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool available_on_platform = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_available_on_platform();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &available_on_platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientAppListResponse.App)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientAppListResponse.App)
  return false;
#undef DO_
}

void CMsgClientGetClientAppListResponse_App::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientAppListResponse.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string category = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientAppListResponse.App.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->category(), output);
  }

  // optional bool favorite = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->favorite(), output);
  }

  // optional bool installed = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->installed(), output);
  }

  // optional bool auto_update = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->auto_update(), output);
  }

  // optional uint64 bytes_downloaded = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->bytes_downloaded(), output);
  }

  // optional uint64 bytes_needed = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->bytes_needed(), output);
  }

  // optional uint32 bytes_download_rate = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->bytes_download_rate(), output);
  }

  // repeated .CMsgClientGetClientAppListResponse.App.DLC dlcs = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dlcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->dlcs(static_cast<int>(i)),
      output);
  }

  // optional string app_type = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_type().data(), static_cast<int>(this->app_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientAppListResponse.App.app_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->app_type(), output);
  }

  // optional bool download_paused = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->download_paused(), output);
  }

  // optional uint32 num_downloading = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->num_downloading(), output);
  }

  // optional uint32 num_paused = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->num_paused(), output);
  }

  // optional bool changing = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->changing(), output);
  }

  // optional bool available_on_platform = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->available_on_platform(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientAppListResponse.App)
}

::google::protobuf::uint8* CMsgClientGetClientAppListResponse_App::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientAppListResponse.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string category = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientAppListResponse.App.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->category(), target);
  }

  // optional bool favorite = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->favorite(), target);
  }

  // optional bool installed = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->installed(), target);
  }

  // optional bool auto_update = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->auto_update(), target);
  }

  // optional uint64 bytes_downloaded = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->bytes_downloaded(), target);
  }

  // optional uint64 bytes_needed = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->bytes_needed(), target);
  }

  // optional uint32 bytes_download_rate = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->bytes_download_rate(), target);
  }

  // repeated .CMsgClientGetClientAppListResponse.App.DLC dlcs = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dlcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->dlcs(static_cast<int>(i)), deterministic, target);
  }

  // optional string app_type = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_type().data(), static_cast<int>(this->app_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientGetClientAppListResponse.App.app_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->app_type(), target);
  }

  // optional bool download_paused = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->download_paused(), target);
  }

  // optional uint32 num_downloading = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->num_downloading(), target);
  }

  // optional uint32 num_paused = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->num_paused(), target);
  }

  // optional bool changing = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->changing(), target);
  }

  // optional bool available_on_platform = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->available_on_platform(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientAppListResponse.App)
  return target;
}

size_t CMsgClientGetClientAppListResponse_App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientAppListResponse.App)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientGetClientAppListResponse.App.DLC dlcs = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->dlcs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dlcs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string category = 2;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

    // optional string app_type = 10;
    if (has_app_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_type());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool favorite = 3;
    if (has_favorite()) {
      total_size += 1 + 1;
    }

    // optional bool installed = 4;
    if (has_installed()) {
      total_size += 1 + 1;
    }

    // optional bool auto_update = 5;
    if (has_auto_update()) {
      total_size += 1 + 1;
    }

    // optional bool download_paused = 11;
    if (has_download_paused()) {
      total_size += 1 + 1;
    }

    // optional uint64 bytes_downloaded = 6;
    if (has_bytes_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_downloaded());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint64 bytes_needed = 7;
    if (has_bytes_needed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_needed());
    }

    // optional uint32 bytes_download_rate = 8;
    if (has_bytes_download_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bytes_download_rate());
    }

    // optional uint32 num_downloading = 12;
    if (has_num_downloading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_downloading());
    }

    // optional uint32 num_paused = 13;
    if (has_num_paused()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_paused());
    }

    // optional bool changing = 14;
    if (has_changing()) {
      total_size += 1 + 1;
    }

    // optional bool available_on_platform = 15;
    if (has_available_on_platform()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientAppListResponse_App::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientAppListResponse.App)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientAppListResponse_App* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientAppListResponse_App>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientAppListResponse.App)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientAppListResponse.App)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientAppListResponse_App::MergeFrom(const CMsgClientGetClientAppListResponse_App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientAppListResponse.App)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dlcs_.MergeFrom(from.dlcs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_category();
      category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_app_type();
      app_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      favorite_ = from.favorite_;
    }
    if (cached_has_bits & 0x00000010u) {
      installed_ = from.installed_;
    }
    if (cached_has_bits & 0x00000020u) {
      auto_update_ = from.auto_update_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_paused_ = from.download_paused_;
    }
    if (cached_has_bits & 0x00000080u) {
      bytes_downloaded_ = from.bytes_downloaded_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      bytes_needed_ = from.bytes_needed_;
    }
    if (cached_has_bits & 0x00000200u) {
      bytes_download_rate_ = from.bytes_download_rate_;
    }
    if (cached_has_bits & 0x00000400u) {
      num_downloading_ = from.num_downloading_;
    }
    if (cached_has_bits & 0x00000800u) {
      num_paused_ = from.num_paused_;
    }
    if (cached_has_bits & 0x00001000u) {
      changing_ = from.changing_;
    }
    if (cached_has_bits & 0x00002000u) {
      available_on_platform_ = from.available_on_platform_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetClientAppListResponse_App::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientAppListResponse.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientAppListResponse_App::CopyFrom(const CMsgClientGetClientAppListResponse_App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientAppListResponse.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientAppListResponse_App::IsInitialized() const {
  return true;
}

void CMsgClientGetClientAppListResponse_App::Swap(CMsgClientGetClientAppListResponse_App* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientAppListResponse_App::InternalSwap(CMsgClientGetClientAppListResponse_App* other) {
  using std::swap;
  CastToBase(&dlcs_)->InternalSwap(CastToBase(&other->dlcs_));
  category_.Swap(&other->category_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_type_.Swap(&other->app_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(favorite_, other->favorite_);
  swap(installed_, other->installed_);
  swap(auto_update_, other->auto_update_);
  swap(download_paused_, other->download_paused_);
  swap(bytes_downloaded_, other->bytes_downloaded_);
  swap(bytes_needed_, other->bytes_needed_);
  swap(bytes_download_rate_, other->bytes_download_rate_);
  swap(num_downloading_, other->num_downloading_);
  swap(num_paused_, other->num_paused_);
  swap(changing_, other->changing_);
  swap(available_on_platform_, other->available_on_platform_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientAppListResponse_App::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClientAppListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClientAppListResponse::kAppsFieldNumber;
const int CMsgClientGetClientAppListResponse::kBytesAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClientAppListResponse::CMsgClientGetClientAppListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetClientAppListResponse)
}
CMsgClientGetClientAppListResponse::CMsgClientGetClientAppListResponse(const CMsgClientGetClientAppListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_available_ = from.bytes_available_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetClientAppListResponse)
}

void CMsgClientGetClientAppListResponse::SharedCtor() {
  bytes_available_ = GOOGLE_ULONGLONG(0);
}

CMsgClientGetClientAppListResponse::~CMsgClientGetClientAppListResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientGetClientAppListResponse)
  SharedDtor();
}

void CMsgClientGetClientAppListResponse::SharedDtor() {
}

void CMsgClientGetClientAppListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetClientAppListResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClientAppListResponse& CMsgClientGetClientAppListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientGetClientAppListResponse.base);
  return *internal_default_instance();
}


void CMsgClientGetClientAppListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetClientAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  bytes_available_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClientAppListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetClientAppListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientGetClientAppListResponse.App apps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_available = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bytes_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetClientAppListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetClientAppListResponse)
  return false;
#undef DO_
}

void CMsgClientGetClientAppListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetClientAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientGetClientAppListResponse.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->apps(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 bytes_available = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bytes_available(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetClientAppListResponse)
}

::google::protobuf::uint8* CMsgClientGetClientAppListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetClientAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientGetClientAppListResponse.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->apps(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 bytes_available = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bytes_available(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetClientAppListResponse)
  return target;
}

size_t CMsgClientGetClientAppListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetClientAppListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientGetClientAppListResponse.App apps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  // optional uint64 bytes_available = 2;
  if (has_bytes_available()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_available());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClientAppListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetClientAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClientAppListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClientAppListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetClientAppListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetClientAppListResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetClientAppListResponse::MergeFrom(const CMsgClientGetClientAppListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetClientAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  if (from.has_bytes_available()) {
    set_bytes_available(from.bytes_available());
  }
}

void CMsgClientGetClientAppListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetClientAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClientAppListResponse::CopyFrom(const CMsgClientGetClientAppListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetClientAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClientAppListResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetClientAppListResponse::Swap(CMsgClientGetClientAppListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClientAppListResponse::InternalSwap(CMsgClientGetClientAppListResponse* other) {
  using std::swap;
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  swap(bytes_available_, other->bytes_available_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetClientAppListResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientInstallClientApp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientInstallClientApp::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientInstallClientApp::CMsgClientInstallClientApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientInstallClientApp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientInstallClientApp)
}
CMsgClientInstallClientApp::CMsgClientInstallClientApp(const CMsgClientInstallClientApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientInstallClientApp)
}

void CMsgClientInstallClientApp::SharedCtor() {
  appid_ = 0u;
}

CMsgClientInstallClientApp::~CMsgClientInstallClientApp() {
  // @@protoc_insertion_point(destructor:CMsgClientInstallClientApp)
  SharedDtor();
}

void CMsgClientInstallClientApp::SharedDtor() {
}

void CMsgClientInstallClientApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientInstallClientApp::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientInstallClientApp& CMsgClientInstallClientApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientInstallClientApp.base);
  return *internal_default_instance();
}


void CMsgClientInstallClientApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientInstallClientApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientInstallClientApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientInstallClientApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientInstallClientApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientInstallClientApp)
  return false;
#undef DO_
}

void CMsgClientInstallClientApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientInstallClientApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientInstallClientApp)
}

::google::protobuf::uint8* CMsgClientInstallClientApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientInstallClientApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientInstallClientApp)
  return target;
}

size_t CMsgClientInstallClientApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientInstallClientApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientInstallClientApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientInstallClientApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientInstallClientApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientInstallClientApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientInstallClientApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientInstallClientApp)
    MergeFrom(*source);
  }
}

void CMsgClientInstallClientApp::MergeFrom(const CMsgClientInstallClientApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientInstallClientApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CMsgClientInstallClientApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientInstallClientApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientInstallClientApp::CopyFrom(const CMsgClientInstallClientApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientInstallClientApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientInstallClientApp::IsInitialized() const {
  return true;
}

void CMsgClientInstallClientApp::Swap(CMsgClientInstallClientApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientInstallClientApp::InternalSwap(CMsgClientInstallClientApp* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientInstallClientApp::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientInstallClientAppResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientInstallClientAppResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientInstallClientAppResponse::CMsgClientInstallClientAppResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientInstallClientAppResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientInstallClientAppResponse)
}
CMsgClientInstallClientAppResponse::CMsgClientInstallClientAppResponse(const CMsgClientInstallClientAppResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientInstallClientAppResponse)
}

void CMsgClientInstallClientAppResponse::SharedCtor() {
  result_ = 0u;
}

CMsgClientInstallClientAppResponse::~CMsgClientInstallClientAppResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientInstallClientAppResponse)
  SharedDtor();
}

void CMsgClientInstallClientAppResponse::SharedDtor() {
}

void CMsgClientInstallClientAppResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientInstallClientAppResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientInstallClientAppResponse& CMsgClientInstallClientAppResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientInstallClientAppResponse.base);
  return *internal_default_instance();
}


void CMsgClientInstallClientAppResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientInstallClientAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientInstallClientAppResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientInstallClientAppResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientInstallClientAppResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientInstallClientAppResponse)
  return false;
#undef DO_
}

void CMsgClientInstallClientAppResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientInstallClientAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientInstallClientAppResponse)
}

::google::protobuf::uint8* CMsgClientInstallClientAppResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientInstallClientAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientInstallClientAppResponse)
  return target;
}

size_t CMsgClientInstallClientAppResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientInstallClientAppResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientInstallClientAppResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientInstallClientAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientInstallClientAppResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientInstallClientAppResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientInstallClientAppResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientInstallClientAppResponse)
    MergeFrom(*source);
  }
}

void CMsgClientInstallClientAppResponse::MergeFrom(const CMsgClientInstallClientAppResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientInstallClientAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgClientInstallClientAppResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientInstallClientAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientInstallClientAppResponse::CopyFrom(const CMsgClientInstallClientAppResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientInstallClientAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientInstallClientAppResponse::IsInitialized() const {
  return true;
}

void CMsgClientInstallClientAppResponse::Swap(CMsgClientInstallClientAppResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientInstallClientAppResponse::InternalSwap(CMsgClientInstallClientAppResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientInstallClientAppResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUninstallClientApp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUninstallClientApp::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUninstallClientApp::CMsgClientUninstallClientApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUninstallClientApp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUninstallClientApp)
}
CMsgClientUninstallClientApp::CMsgClientUninstallClientApp(const CMsgClientUninstallClientApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUninstallClientApp)
}

void CMsgClientUninstallClientApp::SharedCtor() {
  appid_ = 0u;
}

CMsgClientUninstallClientApp::~CMsgClientUninstallClientApp() {
  // @@protoc_insertion_point(destructor:CMsgClientUninstallClientApp)
  SharedDtor();
}

void CMsgClientUninstallClientApp::SharedDtor() {
}

void CMsgClientUninstallClientApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUninstallClientApp::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUninstallClientApp& CMsgClientUninstallClientApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUninstallClientApp.base);
  return *internal_default_instance();
}


void CMsgClientUninstallClientApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUninstallClientApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUninstallClientApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUninstallClientApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUninstallClientApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUninstallClientApp)
  return false;
#undef DO_
}

void CMsgClientUninstallClientApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUninstallClientApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUninstallClientApp)
}

::google::protobuf::uint8* CMsgClientUninstallClientApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUninstallClientApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUninstallClientApp)
  return target;
}

size_t CMsgClientUninstallClientApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUninstallClientApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUninstallClientApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUninstallClientApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUninstallClientApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUninstallClientApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUninstallClientApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUninstallClientApp)
    MergeFrom(*source);
  }
}

void CMsgClientUninstallClientApp::MergeFrom(const CMsgClientUninstallClientApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUninstallClientApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CMsgClientUninstallClientApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUninstallClientApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUninstallClientApp::CopyFrom(const CMsgClientUninstallClientApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUninstallClientApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUninstallClientApp::IsInitialized() const {
  return true;
}

void CMsgClientUninstallClientApp::Swap(CMsgClientUninstallClientApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUninstallClientApp::InternalSwap(CMsgClientUninstallClientApp* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUninstallClientApp::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUninstallClientAppResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUninstallClientAppResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUninstallClientAppResponse::CMsgClientUninstallClientAppResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUninstallClientAppResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUninstallClientAppResponse)
}
CMsgClientUninstallClientAppResponse::CMsgClientUninstallClientAppResponse(const CMsgClientUninstallClientAppResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUninstallClientAppResponse)
}

void CMsgClientUninstallClientAppResponse::SharedCtor() {
  result_ = 0u;
}

CMsgClientUninstallClientAppResponse::~CMsgClientUninstallClientAppResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUninstallClientAppResponse)
  SharedDtor();
}

void CMsgClientUninstallClientAppResponse::SharedDtor() {
}

void CMsgClientUninstallClientAppResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUninstallClientAppResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUninstallClientAppResponse& CMsgClientUninstallClientAppResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUninstallClientAppResponse.base);
  return *internal_default_instance();
}


void CMsgClientUninstallClientAppResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUninstallClientAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUninstallClientAppResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUninstallClientAppResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUninstallClientAppResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUninstallClientAppResponse)
  return false;
#undef DO_
}

void CMsgClientUninstallClientAppResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUninstallClientAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUninstallClientAppResponse)
}

::google::protobuf::uint8* CMsgClientUninstallClientAppResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUninstallClientAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUninstallClientAppResponse)
  return target;
}

size_t CMsgClientUninstallClientAppResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUninstallClientAppResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUninstallClientAppResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUninstallClientAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUninstallClientAppResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUninstallClientAppResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUninstallClientAppResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUninstallClientAppResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUninstallClientAppResponse::MergeFrom(const CMsgClientUninstallClientAppResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUninstallClientAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgClientUninstallClientAppResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUninstallClientAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUninstallClientAppResponse::CopyFrom(const CMsgClientUninstallClientAppResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUninstallClientAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUninstallClientAppResponse::IsInitialized() const {
  return true;
}

void CMsgClientUninstallClientAppResponse::Swap(CMsgClientUninstallClientAppResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUninstallClientAppResponse::InternalSwap(CMsgClientUninstallClientAppResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUninstallClientAppResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSetClientAppUpdateState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSetClientAppUpdateState::kAppidFieldNumber;
const int CMsgClientSetClientAppUpdateState::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSetClientAppUpdateState::CMsgClientSetClientAppUpdateState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientSetClientAppUpdateState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSetClientAppUpdateState)
}
CMsgClientSetClientAppUpdateState::CMsgClientSetClientAppUpdateState(const CMsgClientSetClientAppUpdateState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(update_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientSetClientAppUpdateState)
}

void CMsgClientSetClientAppUpdateState::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(update_));
}

CMsgClientSetClientAppUpdateState::~CMsgClientSetClientAppUpdateState() {
  // @@protoc_insertion_point(destructor:CMsgClientSetClientAppUpdateState)
  SharedDtor();
}

void CMsgClientSetClientAppUpdateState::SharedDtor() {
}

void CMsgClientSetClientAppUpdateState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSetClientAppUpdateState::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSetClientAppUpdateState& CMsgClientSetClientAppUpdateState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientSetClientAppUpdateState.base);
  return *internal_default_instance();
}


void CMsgClientSetClientAppUpdateState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSetClientAppUpdateState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&update_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(update_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSetClientAppUpdateState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSetClientAppUpdateState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSetClientAppUpdateState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSetClientAppUpdateState)
  return false;
#undef DO_
}

void CMsgClientSetClientAppUpdateState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSetClientAppUpdateState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional bool update = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->update(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSetClientAppUpdateState)
}

::google::protobuf::uint8* CMsgClientSetClientAppUpdateState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSetClientAppUpdateState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional bool update = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->update(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSetClientAppUpdateState)
  return target;
}

size_t CMsgClientSetClientAppUpdateState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSetClientAppUpdateState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool update = 2;
    if (has_update()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSetClientAppUpdateState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSetClientAppUpdateState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSetClientAppUpdateState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSetClientAppUpdateState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSetClientAppUpdateState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSetClientAppUpdateState)
    MergeFrom(*source);
  }
}

void CMsgClientSetClientAppUpdateState::MergeFrom(const CMsgClientSetClientAppUpdateState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSetClientAppUpdateState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      update_ = from.update_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSetClientAppUpdateState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSetClientAppUpdateState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSetClientAppUpdateState::CopyFrom(const CMsgClientSetClientAppUpdateState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSetClientAppUpdateState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSetClientAppUpdateState::IsInitialized() const {
  return true;
}

void CMsgClientSetClientAppUpdateState::Swap(CMsgClientSetClientAppUpdateState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSetClientAppUpdateState::InternalSwap(CMsgClientSetClientAppUpdateState* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(update_, other->update_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSetClientAppUpdateState::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSetClientAppUpdateStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSetClientAppUpdateStateResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSetClientAppUpdateStateResponse::CMsgClientSetClientAppUpdateStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientSetClientAppUpdateStateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSetClientAppUpdateStateResponse)
}
CMsgClientSetClientAppUpdateStateResponse::CMsgClientSetClientAppUpdateStateResponse(const CMsgClientSetClientAppUpdateStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientSetClientAppUpdateStateResponse)
}

void CMsgClientSetClientAppUpdateStateResponse::SharedCtor() {
  result_ = 0u;
}

CMsgClientSetClientAppUpdateStateResponse::~CMsgClientSetClientAppUpdateStateResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientSetClientAppUpdateStateResponse)
  SharedDtor();
}

void CMsgClientSetClientAppUpdateStateResponse::SharedDtor() {
}

void CMsgClientSetClientAppUpdateStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSetClientAppUpdateStateResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSetClientAppUpdateStateResponse& CMsgClientSetClientAppUpdateStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientSetClientAppUpdateStateResponse.base);
  return *internal_default_instance();
}


void CMsgClientSetClientAppUpdateStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSetClientAppUpdateStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSetClientAppUpdateStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSetClientAppUpdateStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSetClientAppUpdateStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSetClientAppUpdateStateResponse)
  return false;
#undef DO_
}

void CMsgClientSetClientAppUpdateStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSetClientAppUpdateStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSetClientAppUpdateStateResponse)
}

::google::protobuf::uint8* CMsgClientSetClientAppUpdateStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSetClientAppUpdateStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSetClientAppUpdateStateResponse)
  return target;
}

size_t CMsgClientSetClientAppUpdateStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSetClientAppUpdateStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSetClientAppUpdateStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSetClientAppUpdateStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSetClientAppUpdateStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSetClientAppUpdateStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSetClientAppUpdateStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSetClientAppUpdateStateResponse)
    MergeFrom(*source);
  }
}

void CMsgClientSetClientAppUpdateStateResponse::MergeFrom(const CMsgClientSetClientAppUpdateStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSetClientAppUpdateStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgClientSetClientAppUpdateStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSetClientAppUpdateStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSetClientAppUpdateStateResponse::CopyFrom(const CMsgClientSetClientAppUpdateStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSetClientAppUpdateStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSetClientAppUpdateStateResponse::IsInitialized() const {
  return true;
}

void CMsgClientSetClientAppUpdateStateResponse::Swap(CMsgClientSetClientAppUpdateStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSetClientAppUpdateStateResponse::InternalSwap(CMsgClientSetClientAppUpdateStateResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSetClientAppUpdateStateResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadFileRequest::kAppIdFieldNumber;
const int CMsgClientUFSUploadFileRequest::kFileSizeFieldNumber;
const int CMsgClientUFSUploadFileRequest::kRawFileSizeFieldNumber;
const int CMsgClientUFSUploadFileRequest::kShaFileFieldNumber;
const int CMsgClientUFSUploadFileRequest::kTimeStampFieldNumber;
const int CMsgClientUFSUploadFileRequest::kFileNameFieldNumber;
const int CMsgClientUFSUploadFileRequest::kPlatformsToSyncDeprecatedFieldNumber;
const int CMsgClientUFSUploadFileRequest::kPlatformsToSyncFieldNumber;
const int CMsgClientUFSUploadFileRequest::kCellIdFieldNumber;
const int CMsgClientUFSUploadFileRequest::kCanEncryptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadFileRequest::CMsgClientUFSUploadFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadFileRequest)
}
CMsgClientUFSUploadFileRequest::CMsgClientUFSUploadFileRequest(const CMsgClientUFSUploadFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&platforms_to_sync_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(platforms_to_sync_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadFileRequest)
}

void CMsgClientUFSUploadFileRequest::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_encrypt_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(can_encrypt_));
  platforms_to_sync_ = 4294967295u;
}

CMsgClientUFSUploadFileRequest::~CMsgClientUFSUploadFileRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadFileRequest)
  SharedDtor();
}

void CMsgClientUFSUploadFileRequest::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSUploadFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadFileRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadFileRequest& CMsgClientUFSUploadFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadFileRequest.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cell_id_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(cell_id_));
  }
  if (cached_has_bits & 768u) {
    can_encrypt_ = false;
    platforms_to_sync_ = 4294967295u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 raw_file_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_raw_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raw_file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 time_stamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSUploadFileRequest.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 platforms_to_sync_deprecated = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_platforms_to_sync_deprecated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platforms_to_sync_deprecated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 platforms_to_sync = 8 [default = 4294967295];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_platforms_to_sync();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platforms_to_sync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cell_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_encrypt = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_can_encrypt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadFileRequest)
  return false;
#undef DO_
}

void CMsgClientUFSUploadFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 file_size = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_size(), output);
  }

  // optional uint32 raw_file_size = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->raw_file_size(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time_stamp(), output);
  }

  // optional string file_name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadFileRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->file_name(), output);
  }

  // optional uint32 platforms_to_sync_deprecated = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->platforms_to_sync_deprecated(), output);
  }

  // optional uint32 platforms_to_sync = 8 [default = 4294967295];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->platforms_to_sync(), output);
  }

  // optional uint32 cell_id = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->cell_id(), output);
  }

  // optional bool can_encrypt = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->can_encrypt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadFileRequest)
}

::google::protobuf::uint8* CMsgClientUFSUploadFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 file_size = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->file_size(), target);
  }

  // optional uint32 raw_file_size = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->raw_file_size(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time_stamp(), target);
  }

  // optional string file_name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadFileRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->file_name(), target);
  }

  // optional uint32 platforms_to_sync_deprecated = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->platforms_to_sync_deprecated(), target);
  }

  // optional uint32 platforms_to_sync = 8 [default = 4294967295];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->platforms_to_sync(), target);
  }

  // optional uint32 cell_id = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->cell_id(), target);
  }

  // optional bool can_encrypt = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->can_encrypt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadFileRequest)
  return target;
}

size_t CMsgClientUFSUploadFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadFileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sha_file = 4;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string file_name = 6;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 file_size = 2;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional uint64 time_stamp = 5;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time_stamp());
    }

    // optional uint32 raw_file_size = 3;
    if (has_raw_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->raw_file_size());
    }

    // optional uint32 platforms_to_sync_deprecated = 7;
    if (has_platforms_to_sync_deprecated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platforms_to_sync_deprecated());
    }

    // optional uint32 cell_id = 9;
    if (has_cell_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cell_id());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool can_encrypt = 10;
    if (has_can_encrypt()) {
      total_size += 1 + 1;
    }

    // optional uint32 platforms_to_sync = 8 [default = 4294967295];
    if (has_platforms_to_sync()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platforms_to_sync());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadFileRequest)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadFileRequest::MergeFrom(const CMsgClientUFSUploadFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      raw_file_size_ = from.raw_file_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      platforms_to_sync_deprecated_ = from.platforms_to_sync_deprecated_;
    }
    if (cached_has_bits & 0x00000080u) {
      cell_id_ = from.cell_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      can_encrypt_ = from.can_encrypt_;
    }
    if (cached_has_bits & 0x00000200u) {
      platforms_to_sync_ = from.platforms_to_sync_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSUploadFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadFileRequest::CopyFrom(const CMsgClientUFSUploadFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadFileRequest::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadFileRequest::Swap(CMsgClientUFSUploadFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadFileRequest::InternalSwap(CMsgClientUFSUploadFileRequest* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(file_size_, other->file_size_);
  swap(time_stamp_, other->time_stamp_);
  swap(raw_file_size_, other->raw_file_size_);
  swap(platforms_to_sync_deprecated_, other->platforms_to_sync_deprecated_);
  swap(cell_id_, other->cell_id_);
  swap(can_encrypt_, other->can_encrypt_);
  swap(platforms_to_sync_, other->platforms_to_sync_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadFileRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadFileResponse::kEresultFieldNumber;
const int CMsgClientUFSUploadFileResponse::kShaFileFieldNumber;
const int CMsgClientUFSUploadFileResponse::kUseHttpFieldNumber;
const int CMsgClientUFSUploadFileResponse::kHttpHostFieldNumber;
const int CMsgClientUFSUploadFileResponse::kHttpUrlFieldNumber;
const int CMsgClientUFSUploadFileResponse::kKvHeadersFieldNumber;
const int CMsgClientUFSUploadFileResponse::kUseHttpsFieldNumber;
const int CMsgClientUFSUploadFileResponse::kEncryptFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadFileResponse::CMsgClientUFSUploadFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadFileResponse)
}
CMsgClientUFSUploadFileResponse::CMsgClientUFSUploadFileResponse(const CMsgClientUFSUploadFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  http_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_http_host()) {
    http_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_host_);
  }
  http_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_http_url()) {
    http_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_url_);
  }
  kv_headers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_kv_headers()) {
    kv_headers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kv_headers_);
  }
  ::memcpy(&use_http_, &from.use_http_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&use_http_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadFileResponse)
}

void CMsgClientUFSUploadFileResponse::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kv_headers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_http_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_file_) -
      reinterpret_cast<char*>(&use_http_)) + sizeof(encrypt_file_));
  eresult_ = 2;
}

CMsgClientUFSUploadFileResponse::~CMsgClientUFSUploadFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadFileResponse)
  SharedDtor();
}

void CMsgClientUFSUploadFileResponse::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kv_headers_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSUploadFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadFileResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadFileResponse& CMsgClientUFSUploadFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadFileResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      http_host_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      http_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      kv_headers_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ::memset(&use_http_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_file_) -
      reinterpret_cast<char*>(&use_http_)) + sizeof(encrypt_file_));
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_http = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_use_http();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_http_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string http_host = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->http_host().data(), static_cast<int>(this->http_host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSUploadFileResponse.http_host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string http_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->http_url().data(), static_cast<int>(this->http_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSUploadFileResponse.http_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes kv_headers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_kv_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_https = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_use_https();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_https_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool encrypt_file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_encrypt_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encrypt_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadFileResponse)
  return false;
#undef DO_
}

void CMsgClientUFSUploadFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bytes sha_file = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sha_file(), output);
  }

  // optional bool use_http = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_http(), output);
  }

  // optional string http_host = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_host().data(), static_cast<int>(this->http_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadFileResponse.http_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->http_host(), output);
  }

  // optional string http_url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_url().data(), static_cast<int>(this->http_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadFileResponse.http_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->http_url(), output);
  }

  // optional bytes kv_headers = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->kv_headers(), output);
  }

  // optional bool use_https = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->use_https(), output);
  }

  // optional bool encrypt_file = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->encrypt_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadFileResponse)
}

::google::protobuf::uint8* CMsgClientUFSUploadFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes sha_file = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sha_file(), target);
  }

  // optional bool use_http = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_http(), target);
  }

  // optional string http_host = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_host().data(), static_cast<int>(this->http_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadFileResponse.http_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->http_host(), target);
  }

  // optional string http_url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_url().data(), static_cast<int>(this->http_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadFileResponse.http_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->http_url(), target);
  }

  // optional bytes kv_headers = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->kv_headers(), target);
  }

  // optional bool use_https = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->use_https(), target);
  }

  // optional bool encrypt_file = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->encrypt_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadFileResponse)
  return target;
}

size_t CMsgClientUFSUploadFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sha_file = 2;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string http_host = 4;
    if (has_http_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->http_host());
    }

    // optional string http_url = 5;
    if (has_http_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->http_url());
    }

    // optional bytes kv_headers = 6;
    if (has_kv_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->kv_headers());
    }

    // optional bool use_http = 3;
    if (has_use_http()) {
      total_size += 1 + 1;
    }

    // optional bool use_https = 7;
    if (has_use_https()) {
      total_size += 1 + 1;
    }

    // optional bool encrypt_file = 8;
    if (has_encrypt_file()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadFileResponse::MergeFrom(const CMsgClientUFSUploadFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_http_host();
      http_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_host_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_http_url();
      http_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_kv_headers();
      kv_headers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kv_headers_);
    }
    if (cached_has_bits & 0x00000010u) {
      use_http_ = from.use_http_;
    }
    if (cached_has_bits & 0x00000020u) {
      use_https_ = from.use_https_;
    }
    if (cached_has_bits & 0x00000040u) {
      encrypt_file_ = from.encrypt_file_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSUploadFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadFileResponse::CopyFrom(const CMsgClientUFSUploadFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadFileResponse::Swap(CMsgClientUFSUploadFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadFileResponse::InternalSwap(CMsgClientUFSUploadFileResponse* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_host_.Swap(&other->http_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_url_.Swap(&other->http_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kv_headers_.Swap(&other->kv_headers_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(use_http_, other->use_http_);
  swap(use_https_, other->use_https_);
  swap(encrypt_file_, other->encrypt_file_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadCommit_File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadCommit_File::kEresultFieldNumber;
const int CMsgClientUFSUploadCommit_File::kAppIdFieldNumber;
const int CMsgClientUFSUploadCommit_File::kShaFileFieldNumber;
const int CMsgClientUFSUploadCommit_File::kCubFileFieldNumber;
const int CMsgClientUFSUploadCommit_File::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadCommit_File::CMsgClientUFSUploadCommit_File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommit_File.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadCommit.File)
}
CMsgClientUFSUploadCommit_File::CMsgClientUFSUploadCommit_File(const CMsgClientUFSUploadCommit_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadCommit.File)
}

void CMsgClientUFSUploadCommit_File::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cub_file_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(cub_file_));
  eresult_ = 2;
}

CMsgClientUFSUploadCommit_File::~CMsgClientUFSUploadCommit_File() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadCommit.File)
  SharedDtor();
}

void CMsgClientUFSUploadCommit_File::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSUploadCommit_File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadCommit_File::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadCommit_File& CMsgClientUFSUploadCommit_File::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommit_File.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadCommit_File::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadCommit.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cub_file_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(cub_file_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadCommit_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadCommit.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cub_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cub_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cub_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSUploadCommit.File.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadCommit.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadCommit.File)
  return false;
#undef DO_
}

void CMsgClientUFSUploadCommit_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadCommit.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional bytes sha_file = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sha_file(), output);
  }

  // optional uint32 cub_file = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cub_file(), output);
  }

  // optional string file_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadCommit.File.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->file_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadCommit.File)
}

::google::protobuf::uint8* CMsgClientUFSUploadCommit_File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadCommit.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional bytes sha_file = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sha_file(), target);
  }

  // optional uint32 cub_file = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cub_file(), target);
  }

  // optional string file_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSUploadCommit.File.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->file_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadCommit.File)
  return target;
}

size_t CMsgClientUFSUploadCommit_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadCommit.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes sha_file = 3;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string file_name = 5;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 cub_file = 4;
    if (has_cub_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cub_file());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadCommit_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadCommit.File)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadCommit_File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadCommit_File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadCommit.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadCommit.File)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadCommit_File::MergeFrom(const CMsgClientUFSUploadCommit_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadCommit.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      cub_file_ = from.cub_file_;
    }
    if (cached_has_bits & 0x00000010u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSUploadCommit_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadCommit.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadCommit_File::CopyFrom(const CMsgClientUFSUploadCommit_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadCommit.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadCommit_File::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadCommit_File::Swap(CMsgClientUFSUploadCommit_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadCommit_File::InternalSwap(CMsgClientUFSUploadCommit_File* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(cub_file_, other->cub_file_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadCommit_File::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadCommit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadCommit::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadCommit::CMsgClientUFSUploadCommit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadCommit)
}
CMsgClientUFSUploadCommit::CMsgClientUFSUploadCommit(const CMsgClientUFSUploadCommit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadCommit)
}

void CMsgClientUFSUploadCommit::SharedCtor() {
}

CMsgClientUFSUploadCommit::~CMsgClientUFSUploadCommit() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadCommit)
  SharedDtor();
}

void CMsgClientUFSUploadCommit::SharedDtor() {
}

void CMsgClientUFSUploadCommit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadCommit::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadCommit& CMsgClientUFSUploadCommit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommit.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadCommit::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadCommit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadCommit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadCommit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientUFSUploadCommit.File files = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadCommit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadCommit)
  return false;
#undef DO_
}

void CMsgClientUFSUploadCommit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadCommit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUFSUploadCommit.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->files(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadCommit)
}

::google::protobuf::uint8* CMsgClientUFSUploadCommit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadCommit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUFSUploadCommit.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->files(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadCommit)
  return target;
}

size_t CMsgClientUFSUploadCommit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadCommit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUFSUploadCommit.File files = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadCommit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadCommit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadCommit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadCommit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadCommit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadCommit)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadCommit::MergeFrom(const CMsgClientUFSUploadCommit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadCommit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
}

void CMsgClientUFSUploadCommit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadCommit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadCommit::CopyFrom(const CMsgClientUFSUploadCommit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadCommit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadCommit::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadCommit::Swap(CMsgClientUFSUploadCommit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadCommit::InternalSwap(CMsgClientUFSUploadCommit* other) {
  using std::swap;
  CastToBase(&files_)->InternalSwap(CastToBase(&other->files_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadCommit::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadCommitResponse_File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadCommitResponse_File::kEresultFieldNumber;
const int CMsgClientUFSUploadCommitResponse_File::kAppIdFieldNumber;
const int CMsgClientUFSUploadCommitResponse_File::kShaFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadCommitResponse_File::CMsgClientUFSUploadCommitResponse_File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommitResponse_File.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadCommitResponse.File)
}
CMsgClientUFSUploadCommitResponse_File::CMsgClientUFSUploadCommitResponse_File(const CMsgClientUFSUploadCommitResponse_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadCommitResponse.File)
}

void CMsgClientUFSUploadCommitResponse_File::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  eresult_ = 2;
}

CMsgClientUFSUploadCommitResponse_File::~CMsgClientUFSUploadCommitResponse_File() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadCommitResponse.File)
  SharedDtor();
}

void CMsgClientUFSUploadCommitResponse_File::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSUploadCommitResponse_File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadCommitResponse_File::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadCommitResponse_File& CMsgClientUFSUploadCommitResponse_File::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommitResponse_File.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadCommitResponse_File::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadCommitResponse.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sha_file_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    app_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadCommitResponse_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadCommitResponse.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadCommitResponse.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadCommitResponse.File)
  return false;
#undef DO_
}

void CMsgClientUFSUploadCommitResponse_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadCommitResponse.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional bytes sha_file = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sha_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadCommitResponse.File)
}

::google::protobuf::uint8* CMsgClientUFSUploadCommitResponse_File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadCommitResponse.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional bytes sha_file = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sha_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadCommitResponse.File)
  return target;
}

size_t CMsgClientUFSUploadCommitResponse_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadCommitResponse.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes sha_file = 3;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadCommitResponse_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadCommitResponse.File)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadCommitResponse_File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadCommitResponse_File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadCommitResponse.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadCommitResponse.File)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadCommitResponse_File::MergeFrom(const CMsgClientUFSUploadCommitResponse_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadCommitResponse.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSUploadCommitResponse_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadCommitResponse.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadCommitResponse_File::CopyFrom(const CMsgClientUFSUploadCommitResponse_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadCommitResponse.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadCommitResponse_File::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadCommitResponse_File::Swap(CMsgClientUFSUploadCommitResponse_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadCommitResponse_File::InternalSwap(CMsgClientUFSUploadCommitResponse_File* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadCommitResponse_File::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadCommitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadCommitResponse::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadCommitResponse::CMsgClientUFSUploadCommitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommitResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadCommitResponse)
}
CMsgClientUFSUploadCommitResponse::CMsgClientUFSUploadCommitResponse(const CMsgClientUFSUploadCommitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadCommitResponse)
}

void CMsgClientUFSUploadCommitResponse::SharedCtor() {
}

CMsgClientUFSUploadCommitResponse::~CMsgClientUFSUploadCommitResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadCommitResponse)
  SharedDtor();
}

void CMsgClientUFSUploadCommitResponse::SharedDtor() {
}

void CMsgClientUFSUploadCommitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadCommitResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadCommitResponse& CMsgClientUFSUploadCommitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadCommitResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadCommitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadCommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadCommitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadCommitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientUFSUploadCommitResponse.File files = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadCommitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadCommitResponse)
  return false;
#undef DO_
}

void CMsgClientUFSUploadCommitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadCommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUFSUploadCommitResponse.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->files(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadCommitResponse)
}

::google::protobuf::uint8* CMsgClientUFSUploadCommitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadCommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUFSUploadCommitResponse.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->files(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadCommitResponse)
  return target;
}

size_t CMsgClientUFSUploadCommitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadCommitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUFSUploadCommitResponse.File files = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadCommitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadCommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadCommitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadCommitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadCommitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadCommitResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadCommitResponse::MergeFrom(const CMsgClientUFSUploadCommitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadCommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
}

void CMsgClientUFSUploadCommitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadCommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadCommitResponse::CopyFrom(const CMsgClientUFSUploadCommitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadCommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadCommitResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadCommitResponse::Swap(CMsgClientUFSUploadCommitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadCommitResponse::InternalSwap(CMsgClientUFSUploadCommitResponse* other) {
  using std::swap;
  CastToBase(&files_)->InternalSwap(CastToBase(&other->files_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadCommitResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSFileChunk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSFileChunk::kShaFileFieldNumber;
const int CMsgClientUFSFileChunk::kFileStartFieldNumber;
const int CMsgClientUFSFileChunk::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSFileChunk::CMsgClientUFSFileChunk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSFileChunk.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSFileChunk)
}
CMsgClientUFSFileChunk::CMsgClientUFSFileChunk(const CMsgClientUFSFileChunk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  file_start_ = from.file_start_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSFileChunk)
}

void CMsgClientUFSFileChunk::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_start_ = 0u;
}

CMsgClientUFSFileChunk::~CMsgClientUFSFileChunk() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSFileChunk)
  SharedDtor();
}

void CMsgClientUFSFileChunk::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSFileChunk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSFileChunk::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSFileChunk& CMsgClientUFSFileChunk::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSFileChunk.base);
  return *internal_default_instance();
}


void CMsgClientUFSFileChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSFileChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  file_start_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSFileChunk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSFileChunk)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sha_file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSFileChunk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSFileChunk)
  return false;
#undef DO_
}

void CMsgClientUFSFileChunk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSFileChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha_file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sha_file(), output);
  }

  // optional uint32 file_start = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_start(), output);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSFileChunk)
}

::google::protobuf::uint8* CMsgClientUFSFileChunk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSFileChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha_file = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sha_file(), target);
  }

  // optional uint32 file_start = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->file_start(), target);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSFileChunk)
  return target;
}

size_t CMsgClientUFSFileChunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSFileChunk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes sha_file = 1;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional uint32 file_start = 2;
    if (has_file_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_start());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSFileChunk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSFileChunk)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSFileChunk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSFileChunk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSFileChunk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSFileChunk)
    MergeFrom(*source);
  }
}

void CMsgClientUFSFileChunk::MergeFrom(const CMsgClientUFSFileChunk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSFileChunk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000004u) {
      file_start_ = from.file_start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSFileChunk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSFileChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSFileChunk::CopyFrom(const CMsgClientUFSFileChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSFileChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSFileChunk::IsInitialized() const {
  return true;
}

void CMsgClientUFSFileChunk::Swap(CMsgClientUFSFileChunk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSFileChunk::InternalSwap(CMsgClientUFSFileChunk* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_start_, other->file_start_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSFileChunk::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSTransferHeartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSTransferHeartbeat::CMsgClientUFSTransferHeartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSTransferHeartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSTransferHeartbeat)
}
CMsgClientUFSTransferHeartbeat::CMsgClientUFSTransferHeartbeat(const CMsgClientUFSTransferHeartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSTransferHeartbeat)
}

void CMsgClientUFSTransferHeartbeat::SharedCtor() {
}

CMsgClientUFSTransferHeartbeat::~CMsgClientUFSTransferHeartbeat() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSTransferHeartbeat)
  SharedDtor();
}

void CMsgClientUFSTransferHeartbeat::SharedDtor() {
}

void CMsgClientUFSTransferHeartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSTransferHeartbeat::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSTransferHeartbeat& CMsgClientUFSTransferHeartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSTransferHeartbeat.base);
  return *internal_default_instance();
}


void CMsgClientUFSTransferHeartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSTransferHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSTransferHeartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSTransferHeartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSTransferHeartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSTransferHeartbeat)
  return false;
#undef DO_
}

void CMsgClientUFSTransferHeartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSTransferHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSTransferHeartbeat)
}

::google::protobuf::uint8* CMsgClientUFSTransferHeartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSTransferHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSTransferHeartbeat)
  return target;
}

size_t CMsgClientUFSTransferHeartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSTransferHeartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSTransferHeartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSTransferHeartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSTransferHeartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSTransferHeartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSTransferHeartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSTransferHeartbeat)
    MergeFrom(*source);
  }
}

void CMsgClientUFSTransferHeartbeat::MergeFrom(const CMsgClientUFSTransferHeartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSTransferHeartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientUFSTransferHeartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSTransferHeartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSTransferHeartbeat::CopyFrom(const CMsgClientUFSTransferHeartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSTransferHeartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSTransferHeartbeat::IsInitialized() const {
  return true;
}

void CMsgClientUFSTransferHeartbeat::Swap(CMsgClientUFSTransferHeartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSTransferHeartbeat::InternalSwap(CMsgClientUFSTransferHeartbeat* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSTransferHeartbeat::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSUploadFileFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSUploadFileFinished::kEresultFieldNumber;
const int CMsgClientUFSUploadFileFinished::kShaFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSUploadFileFinished::CMsgClientUFSUploadFileFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadFileFinished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSUploadFileFinished)
}
CMsgClientUFSUploadFileFinished::CMsgClientUFSUploadFileFinished(const CMsgClientUFSUploadFileFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSUploadFileFinished)
}

void CMsgClientUFSUploadFileFinished::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2;
}

CMsgClientUFSUploadFileFinished::~CMsgClientUFSUploadFileFinished() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSUploadFileFinished)
  SharedDtor();
}

void CMsgClientUFSUploadFileFinished::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSUploadFileFinished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSUploadFileFinished::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSUploadFileFinished& CMsgClientUFSUploadFileFinished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSUploadFileFinished.base);
  return *internal_default_instance();
}


void CMsgClientUFSUploadFileFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSUploadFileFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSUploadFileFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSUploadFileFinished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSUploadFileFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSUploadFileFinished)
  return false;
#undef DO_
}

void CMsgClientUFSUploadFileFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSUploadFileFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bytes sha_file = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sha_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSUploadFileFinished)
}

::google::protobuf::uint8* CMsgClientUFSUploadFileFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSUploadFileFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes sha_file = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sha_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSUploadFileFinished)
  return target;
}

size_t CMsgClientUFSUploadFileFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSUploadFileFinished)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes sha_file = 2;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSUploadFileFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSUploadFileFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSUploadFileFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSUploadFileFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSUploadFileFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSUploadFileFinished)
    MergeFrom(*source);
  }
}

void CMsgClientUFSUploadFileFinished::MergeFrom(const CMsgClientUFSUploadFileFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSUploadFileFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSUploadFileFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSUploadFileFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSUploadFileFinished::CopyFrom(const CMsgClientUFSUploadFileFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSUploadFileFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSUploadFileFinished::IsInitialized() const {
  return true;
}

void CMsgClientUFSUploadFileFinished::Swap(CMsgClientUFSUploadFileFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSUploadFileFinished::InternalSwap(CMsgClientUFSUploadFileFinished* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSUploadFileFinished::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSDeleteFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSDeleteFileRequest::kAppIdFieldNumber;
const int CMsgClientUFSDeleteFileRequest::kFileNameFieldNumber;
const int CMsgClientUFSDeleteFileRequest::kIsExplicitDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSDeleteFileRequest::CMsgClientUFSDeleteFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDeleteFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSDeleteFileRequest)
}
CMsgClientUFSDeleteFileRequest::CMsgClientUFSDeleteFileRequest(const CMsgClientUFSDeleteFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_explicit_delete_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSDeleteFileRequest)
}

void CMsgClientUFSDeleteFileRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_explicit_delete_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
}

CMsgClientUFSDeleteFileRequest::~CMsgClientUFSDeleteFileRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSDeleteFileRequest)
  SharedDtor();
}

void CMsgClientUFSDeleteFileRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSDeleteFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSDeleteFileRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSDeleteFileRequest& CMsgClientUFSDeleteFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDeleteFileRequest.base);
  return *internal_default_instance();
}


void CMsgClientUFSDeleteFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSDeleteFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_explicit_delete_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSDeleteFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSDeleteFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSDeleteFileRequest.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_explicit_delete = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_explicit_delete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_explicit_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSDeleteFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSDeleteFileRequest)
  return false;
#undef DO_
}

void CMsgClientUFSDeleteFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSDeleteFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDeleteFileRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  // optional bool is_explicit_delete = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_explicit_delete(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSDeleteFileRequest)
}

::google::protobuf::uint8* CMsgClientUFSDeleteFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSDeleteFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDeleteFileRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  // optional bool is_explicit_delete = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_explicit_delete(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSDeleteFileRequest)
  return target;
}

size_t CMsgClientUFSDeleteFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSDeleteFileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional bool is_explicit_delete = 3;
    if (has_is_explicit_delete()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSDeleteFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSDeleteFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSDeleteFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSDeleteFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSDeleteFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSDeleteFileRequest)
    MergeFrom(*source);
  }
}

void CMsgClientUFSDeleteFileRequest::MergeFrom(const CMsgClientUFSDeleteFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSDeleteFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_explicit_delete_ = from.is_explicit_delete_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSDeleteFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSDeleteFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSDeleteFileRequest::CopyFrom(const CMsgClientUFSDeleteFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSDeleteFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSDeleteFileRequest::IsInitialized() const {
  return true;
}

void CMsgClientUFSDeleteFileRequest::Swap(CMsgClientUFSDeleteFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSDeleteFileRequest::InternalSwap(CMsgClientUFSDeleteFileRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(is_explicit_delete_, other->is_explicit_delete_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSDeleteFileRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSDeleteFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSDeleteFileResponse::kEresultFieldNumber;
const int CMsgClientUFSDeleteFileResponse::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSDeleteFileResponse::CMsgClientUFSDeleteFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDeleteFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSDeleteFileResponse)
}
CMsgClientUFSDeleteFileResponse::CMsgClientUFSDeleteFileResponse(const CMsgClientUFSDeleteFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSDeleteFileResponse)
}

void CMsgClientUFSDeleteFileResponse::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2;
}

CMsgClientUFSDeleteFileResponse::~CMsgClientUFSDeleteFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSDeleteFileResponse)
  SharedDtor();
}

void CMsgClientUFSDeleteFileResponse::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSDeleteFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSDeleteFileResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSDeleteFileResponse& CMsgClientUFSDeleteFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDeleteFileResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSDeleteFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSDeleteFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSDeleteFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSDeleteFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSDeleteFileResponse.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSDeleteFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSDeleteFileResponse)
  return false;
#undef DO_
}

void CMsgClientUFSDeleteFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSDeleteFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDeleteFileResponse.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSDeleteFileResponse)
}

::google::protobuf::uint8* CMsgClientUFSDeleteFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSDeleteFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDeleteFileResponse.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSDeleteFileResponse)
  return target;
}

size_t CMsgClientUFSDeleteFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSDeleteFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSDeleteFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSDeleteFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSDeleteFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSDeleteFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSDeleteFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSDeleteFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSDeleteFileResponse::MergeFrom(const CMsgClientUFSDeleteFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSDeleteFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSDeleteFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSDeleteFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSDeleteFileResponse::CopyFrom(const CMsgClientUFSDeleteFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSDeleteFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSDeleteFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSDeleteFileResponse::Swap(CMsgClientUFSDeleteFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSDeleteFileResponse::InternalSwap(CMsgClientUFSDeleteFileResponse* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSDeleteFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetFileListForApp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetFileListForApp::kAppsToQueryFieldNumber;
const int CMsgClientUFSGetFileListForApp::kSendPathPrefixesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetFileListForApp::CMsgClientUFSGetFileListForApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForApp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetFileListForApp)
}
CMsgClientUFSGetFileListForApp::CMsgClientUFSGetFileListForApp(const CMsgClientUFSGetFileListForApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_to_query_(from.apps_to_query_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  send_path_prefixes_ = from.send_path_prefixes_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetFileListForApp)
}

void CMsgClientUFSGetFileListForApp::SharedCtor() {
  send_path_prefixes_ = false;
}

CMsgClientUFSGetFileListForApp::~CMsgClientUFSGetFileListForApp() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetFileListForApp)
  SharedDtor();
}

void CMsgClientUFSGetFileListForApp::SharedDtor() {
}

void CMsgClientUFSGetFileListForApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetFileListForApp::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetFileListForApp& CMsgClientUFSGetFileListForApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForApp.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetFileListForApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetFileListForApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_to_query_.Clear();
  send_path_prefixes_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetFileListForApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetFileListForApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 apps_to_query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_apps_to_query())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_apps_to_query())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool send_path_prefixes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_send_path_prefixes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_path_prefixes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetFileListForApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetFileListForApp)
  return false;
#undef DO_
}

void CMsgClientUFSGetFileListForApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetFileListForApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 apps_to_query = 1;
  for (int i = 0, n = this->apps_to_query_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->apps_to_query(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool send_path_prefixes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->send_path_prefixes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetFileListForApp)
}

::google::protobuf::uint8* CMsgClientUFSGetFileListForApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetFileListForApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 apps_to_query = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->apps_to_query_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool send_path_prefixes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->send_path_prefixes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetFileListForApp)
  return target;
}

size_t CMsgClientUFSGetFileListForApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetFileListForApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 apps_to_query = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->apps_to_query_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->apps_to_query_size());
    total_size += data_size;
  }

  // optional bool send_path_prefixes = 2;
  if (has_send_path_prefixes()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetFileListForApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetFileListForApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetFileListForApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetFileListForApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetFileListForApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetFileListForApp)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetFileListForApp::MergeFrom(const CMsgClientUFSGetFileListForApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetFileListForApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_to_query_.MergeFrom(from.apps_to_query_);
  if (from.has_send_path_prefixes()) {
    set_send_path_prefixes(from.send_path_prefixes());
  }
}

void CMsgClientUFSGetFileListForApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetFileListForApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetFileListForApp::CopyFrom(const CMsgClientUFSGetFileListForApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetFileListForApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetFileListForApp::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetFileListForApp::Swap(CMsgClientUFSGetFileListForApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetFileListForApp::InternalSwap(CMsgClientUFSGetFileListForApp* other) {
  using std::swap;
  apps_to_query_.InternalSwap(&other->apps_to_query_);
  swap(send_path_prefixes_, other->send_path_prefixes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetFileListForApp::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetFileListForAppResponse_File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetFileListForAppResponse_File::kAppIdFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kFileNameFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kShaFileFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kTimeStampFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kRawFileSizeFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kIsExplicitDeleteFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kPlatformsToSyncFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse_File::kPathPrefixIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetFileListForAppResponse_File::CMsgClientUFSGetFileListForAppResponse_File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForAppResponse_File.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetFileListForAppResponse.File)
}
CMsgClientUFSGetFileListForAppResponse_File::CMsgClientUFSGetFileListForAppResponse_File(const CMsgClientUFSGetFileListForAppResponse_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&path_prefix_index_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(path_prefix_index_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetFileListForAppResponse.File)
}

void CMsgClientUFSGetFileListForAppResponse_File::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&path_prefix_index_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(path_prefix_index_));
}

CMsgClientUFSGetFileListForAppResponse_File::~CMsgClientUFSGetFileListForAppResponse_File() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetFileListForAppResponse.File)
  SharedDtor();
}

void CMsgClientUFSGetFileListForAppResponse_File::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetFileListForAppResponse_File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetFileListForAppResponse_File::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetFileListForAppResponse_File& CMsgClientUFSGetFileListForAppResponse_File::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForAppResponse_File.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetFileListForAppResponse_File::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetFileListForAppResponse.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&path_prefix_index_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(path_prefix_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetFileListForAppResponse_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetFileListForAppResponse.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetFileListForAppResponse.File.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 time_stamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 raw_file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_raw_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raw_file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_explicit_delete = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_explicit_delete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_explicit_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 platforms_to_sync = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_platforms_to_sync();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platforms_to_sync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 path_prefix_index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_path_prefix_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &path_prefix_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetFileListForAppResponse.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetFileListForAppResponse.File)
  return false;
#undef DO_
}

void CMsgClientUFSGetFileListForAppResponse_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetFileListForAppResponse.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetFileListForAppResponse.File.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  // optional bytes sha_file = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sha_file(), output);
  }

  // optional uint64 time_stamp = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->time_stamp(), output);
  }

  // optional uint32 raw_file_size = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->raw_file_size(), output);
  }

  // optional bool is_explicit_delete = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_explicit_delete(), output);
  }

  // optional uint32 platforms_to_sync = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->platforms_to_sync(), output);
  }

  // optional uint32 path_prefix_index = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->path_prefix_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetFileListForAppResponse.File)
}

::google::protobuf::uint8* CMsgClientUFSGetFileListForAppResponse_File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetFileListForAppResponse.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetFileListForAppResponse.File.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  // optional bytes sha_file = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sha_file(), target);
  }

  // optional uint64 time_stamp = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->time_stamp(), target);
  }

  // optional uint32 raw_file_size = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->raw_file_size(), target);
  }

  // optional bool is_explicit_delete = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_explicit_delete(), target);
  }

  // optional uint32 platforms_to_sync = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->platforms_to_sync(), target);
  }

  // optional uint32 path_prefix_index = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->path_prefix_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetFileListForAppResponse.File)
  return target;
}

size_t CMsgClientUFSGetFileListForAppResponse_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetFileListForAppResponse.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional bytes sha_file = 3;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 raw_file_size = 5;
    if (has_raw_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->raw_file_size());
    }

    // optional uint64 time_stamp = 4;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time_stamp());
    }

    // optional bool is_explicit_delete = 6;
    if (has_is_explicit_delete()) {
      total_size += 1 + 1;
    }

    // optional uint32 platforms_to_sync = 7;
    if (has_platforms_to_sync()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platforms_to_sync());
    }

    // optional uint32 path_prefix_index = 8;
    if (has_path_prefix_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->path_prefix_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetFileListForAppResponse_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetFileListForAppResponse.File)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetFileListForAppResponse_File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetFileListForAppResponse_File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetFileListForAppResponse.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetFileListForAppResponse.File)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetFileListForAppResponse_File::MergeFrom(const CMsgClientUFSGetFileListForAppResponse_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetFileListForAppResponse.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      raw_file_size_ = from.raw_file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_explicit_delete_ = from.is_explicit_delete_;
    }
    if (cached_has_bits & 0x00000040u) {
      platforms_to_sync_ = from.platforms_to_sync_;
    }
    if (cached_has_bits & 0x00000080u) {
      path_prefix_index_ = from.path_prefix_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSGetFileListForAppResponse_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetFileListForAppResponse.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetFileListForAppResponse_File::CopyFrom(const CMsgClientUFSGetFileListForAppResponse_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetFileListForAppResponse.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetFileListForAppResponse_File::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetFileListForAppResponse_File::Swap(CMsgClientUFSGetFileListForAppResponse_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetFileListForAppResponse_File::InternalSwap(CMsgClientUFSGetFileListForAppResponse_File* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(raw_file_size_, other->raw_file_size_);
  swap(time_stamp_, other->time_stamp_);
  swap(is_explicit_delete_, other->is_explicit_delete_);
  swap(platforms_to_sync_, other->platforms_to_sync_);
  swap(path_prefix_index_, other->path_prefix_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetFileListForAppResponse_File::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetFileListForAppResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetFileListForAppResponse::kFilesFieldNumber;
const int CMsgClientUFSGetFileListForAppResponse::kPathPrefixesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetFileListForAppResponse::CMsgClientUFSGetFileListForAppResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForAppResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetFileListForAppResponse)
}
CMsgClientUFSGetFileListForAppResponse::CMsgClientUFSGetFileListForAppResponse(const CMsgClientUFSGetFileListForAppResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      files_(from.files_),
      path_prefixes_(from.path_prefixes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetFileListForAppResponse)
}

void CMsgClientUFSGetFileListForAppResponse::SharedCtor() {
}

CMsgClientUFSGetFileListForAppResponse::~CMsgClientUFSGetFileListForAppResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetFileListForAppResponse)
  SharedDtor();
}

void CMsgClientUFSGetFileListForAppResponse::SharedDtor() {
}

void CMsgClientUFSGetFileListForAppResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetFileListForAppResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetFileListForAppResponse& CMsgClientUFSGetFileListForAppResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetFileListForAppResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetFileListForAppResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetFileListForAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  path_prefixes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetFileListForAppResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetFileListForAppResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientUFSGetFileListForAppResponse.File files = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string path_prefixes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path_prefixes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path_prefixes(this->path_prefixes_size() - 1).data(),
            static_cast<int>(this->path_prefixes(this->path_prefixes_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetFileListForAppResponse.path_prefixes");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetFileListForAppResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetFileListForAppResponse)
  return false;
#undef DO_
}

void CMsgClientUFSGetFileListForAppResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetFileListForAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUFSGetFileListForAppResponse.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->files(static_cast<int>(i)),
      output);
  }

  // repeated string path_prefixes = 2;
  for (int i = 0, n = this->path_prefixes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path_prefixes(i).data(), static_cast<int>(this->path_prefixes(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetFileListForAppResponse.path_prefixes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path_prefixes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetFileListForAppResponse)
}

::google::protobuf::uint8* CMsgClientUFSGetFileListForAppResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetFileListForAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientUFSGetFileListForAppResponse.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->files(static_cast<int>(i)), deterministic, target);
  }

  // repeated string path_prefixes = 2;
  for (int i = 0, n = this->path_prefixes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path_prefixes(i).data(), static_cast<int>(this->path_prefixes(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetFileListForAppResponse.path_prefixes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->path_prefixes(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetFileListForAppResponse)
  return target;
}

size_t CMsgClientUFSGetFileListForAppResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetFileListForAppResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientUFSGetFileListForAppResponse.File files = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  // repeated string path_prefixes = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->path_prefixes_size());
  for (int i = 0, n = this->path_prefixes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path_prefixes(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetFileListForAppResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetFileListForAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetFileListForAppResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetFileListForAppResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetFileListForAppResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetFileListForAppResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetFileListForAppResponse::MergeFrom(const CMsgClientUFSGetFileListForAppResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetFileListForAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  path_prefixes_.MergeFrom(from.path_prefixes_);
}

void CMsgClientUFSGetFileListForAppResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetFileListForAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetFileListForAppResponse::CopyFrom(const CMsgClientUFSGetFileListForAppResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetFileListForAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetFileListForAppResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetFileListForAppResponse::Swap(CMsgClientUFSGetFileListForAppResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetFileListForAppResponse::InternalSwap(CMsgClientUFSGetFileListForAppResponse* other) {
  using std::swap;
  CastToBase(&files_)->InternalSwap(CastToBase(&other->files_));
  path_prefixes_.InternalSwap(CastToBase(&other->path_prefixes_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetFileListForAppResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSDownloadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSDownloadRequest::kAppIdFieldNumber;
const int CMsgClientUFSDownloadRequest::kFileNameFieldNumber;
const int CMsgClientUFSDownloadRequest::kCanHandleHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSDownloadRequest::CMsgClientUFSDownloadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDownloadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSDownloadRequest)
}
CMsgClientUFSDownloadRequest::CMsgClientUFSDownloadRequest(const CMsgClientUFSDownloadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&can_handle_http_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(can_handle_http_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSDownloadRequest)
}

void CMsgClientUFSDownloadRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_handle_http_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(can_handle_http_));
}

CMsgClientUFSDownloadRequest::~CMsgClientUFSDownloadRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSDownloadRequest)
  SharedDtor();
}

void CMsgClientUFSDownloadRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSDownloadRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSDownloadRequest& CMsgClientUFSDownloadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDownloadRequest.base);
  return *internal_default_instance();
}


void CMsgClientUFSDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&can_handle_http_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(can_handle_http_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSDownloadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSDownloadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSDownloadRequest.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_handle_http = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_can_handle_http();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_handle_http_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSDownloadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSDownloadRequest)
  return false;
#undef DO_
}

void CMsgClientUFSDownloadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDownloadRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  // optional bool can_handle_http = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->can_handle_http(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSDownloadRequest)
}

::google::protobuf::uint8* CMsgClientUFSDownloadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDownloadRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  // optional bool can_handle_http = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->can_handle_http(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSDownloadRequest)
  return target;
}

size_t CMsgClientUFSDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSDownloadRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional bool can_handle_http = 3;
    if (has_can_handle_http()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSDownloadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSDownloadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSDownloadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSDownloadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSDownloadRequest)
    MergeFrom(*source);
  }
}

void CMsgClientUFSDownloadRequest::MergeFrom(const CMsgClientUFSDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      can_handle_http_ = from.can_handle_http_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSDownloadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSDownloadRequest::CopyFrom(const CMsgClientUFSDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSDownloadRequest::IsInitialized() const {
  return true;
}

void CMsgClientUFSDownloadRequest::Swap(CMsgClientUFSDownloadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSDownloadRequest::InternalSwap(CMsgClientUFSDownloadRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(can_handle_http_, other->can_handle_http_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSDownloadRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSDownloadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSDownloadResponse::kEresultFieldNumber;
const int CMsgClientUFSDownloadResponse::kAppIdFieldNumber;
const int CMsgClientUFSDownloadResponse::kFileSizeFieldNumber;
const int CMsgClientUFSDownloadResponse::kRawFileSizeFieldNumber;
const int CMsgClientUFSDownloadResponse::kShaFileFieldNumber;
const int CMsgClientUFSDownloadResponse::kTimeStampFieldNumber;
const int CMsgClientUFSDownloadResponse::kIsExplicitDeleteFieldNumber;
const int CMsgClientUFSDownloadResponse::kUseHttpFieldNumber;
const int CMsgClientUFSDownloadResponse::kHttpHostFieldNumber;
const int CMsgClientUFSDownloadResponse::kHttpUrlFieldNumber;
const int CMsgClientUFSDownloadResponse::kKvHeadersFieldNumber;
const int CMsgClientUFSDownloadResponse::kUseHttpsFieldNumber;
const int CMsgClientUFSDownloadResponse::kEncryptedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSDownloadResponse::CMsgClientUFSDownloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDownloadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSDownloadResponse)
}
CMsgClientUFSDownloadResponse::CMsgClientUFSDownloadResponse(const CMsgClientUFSDownloadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  http_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_http_host()) {
    http_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_host_);
  }
  http_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_http_url()) {
    http_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_url_);
  }
  kv_headers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_kv_headers()) {
    kv_headers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kv_headers_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSDownloadResponse)
}

void CMsgClientUFSDownloadResponse::SharedCtor() {
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kv_headers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypted_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(encrypted_));
  eresult_ = 2;
}

CMsgClientUFSDownloadResponse::~CMsgClientUFSDownloadResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSDownloadResponse)
  SharedDtor();
}

void CMsgClientUFSDownloadResponse::SharedDtor() {
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kv_headers_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSDownloadResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSDownloadResponse& CMsgClientUFSDownloadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSDownloadResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      http_host_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      http_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      kv_headers_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&raw_file_size_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(raw_file_size_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&is_explicit_delete_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&encrypted_) -
        reinterpret_cast<char*>(&is_explicit_delete_)) + sizeof(encrypted_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSDownloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSDownloadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 raw_file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_raw_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raw_file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 time_stamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_explicit_delete = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_explicit_delete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_explicit_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_http = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_use_http();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_http_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string http_host = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->http_host().data(), static_cast<int>(this->http_host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSDownloadResponse.http_host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string http_url = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->http_url().data(), static_cast<int>(this->http_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSDownloadResponse.http_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes kv_headers = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_kv_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_https = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_use_https();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_https_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool encrypted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_encrypted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encrypted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSDownloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSDownloadResponse)
  return false;
#undef DO_
}

void CMsgClientUFSDownloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 file_size = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->file_size(), output);
  }

  // optional uint32 raw_file_size = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->raw_file_size(), output);
  }

  // optional bytes sha_file = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sha_file(), output);
  }

  // optional uint64 time_stamp = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->time_stamp(), output);
  }

  // optional bool is_explicit_delete = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_explicit_delete(), output);
  }

  // optional bool use_http = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->use_http(), output);
  }

  // optional string http_host = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_host().data(), static_cast<int>(this->http_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDownloadResponse.http_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->http_host(), output);
  }

  // optional string http_url = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_url().data(), static_cast<int>(this->http_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDownloadResponse.http_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->http_url(), output);
  }

  // optional bytes kv_headers = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->kv_headers(), output);
  }

  // optional bool use_https = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->use_https(), output);
  }

  // optional bool encrypted = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->encrypted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSDownloadResponse)
}

::google::protobuf::uint8* CMsgClientUFSDownloadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 file_size = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->file_size(), target);
  }

  // optional uint32 raw_file_size = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->raw_file_size(), target);
  }

  // optional bytes sha_file = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->sha_file(), target);
  }

  // optional uint64 time_stamp = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->time_stamp(), target);
  }

  // optional bool is_explicit_delete = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_explicit_delete(), target);
  }

  // optional bool use_http = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->use_http(), target);
  }

  // optional string http_host = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_host().data(), static_cast<int>(this->http_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDownloadResponse.http_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->http_host(), target);
  }

  // optional string http_url = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_url().data(), static_cast<int>(this->http_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSDownloadResponse.http_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->http_url(), target);
  }

  // optional bytes kv_headers = 11;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->kv_headers(), target);
  }

  // optional bool use_https = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->use_https(), target);
  }

  // optional bool encrypted = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->encrypted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSDownloadResponse)
  return target;
}

size_t CMsgClientUFSDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSDownloadResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sha_file = 5;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string http_host = 9;
    if (has_http_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->http_host());
    }

    // optional string http_url = 10;
    if (has_http_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->http_url());
    }

    // optional bytes kv_headers = 11;
    if (has_kv_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->kv_headers());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 file_size = 3;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional uint64 time_stamp = 6;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time_stamp());
    }

    // optional uint32 raw_file_size = 4;
    if (has_raw_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->raw_file_size());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional bool is_explicit_delete = 7;
    if (has_is_explicit_delete()) {
      total_size += 1 + 1;
    }

    // optional bool use_http = 8;
    if (has_use_http()) {
      total_size += 1 + 1;
    }

    // optional bool use_https = 12;
    if (has_use_https()) {
      total_size += 1 + 1;
    }

    // optional bool encrypted = 13;
    if (has_encrypted()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSDownloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSDownloadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSDownloadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSDownloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSDownloadResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSDownloadResponse::MergeFrom(const CMsgClientUFSDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_http_host();
      http_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_host_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_http_url();
      http_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_kv_headers();
      kv_headers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kv_headers_);
    }
    if (cached_has_bits & 0x00000010u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000080u) {
      raw_file_size_ = from.raw_file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      is_explicit_delete_ = from.is_explicit_delete_;
    }
    if (cached_has_bits & 0x00000200u) {
      use_http_ = from.use_http_;
    }
    if (cached_has_bits & 0x00000400u) {
      use_https_ = from.use_https_;
    }
    if (cached_has_bits & 0x00000800u) {
      encrypted_ = from.encrypted_;
    }
    if (cached_has_bits & 0x00001000u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSDownloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSDownloadResponse::CopyFrom(const CMsgClientUFSDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSDownloadResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSDownloadResponse::Swap(CMsgClientUFSDownloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSDownloadResponse::InternalSwap(CMsgClientUFSDownloadResponse* other) {
  using std::swap;
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_host_.Swap(&other->http_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_url_.Swap(&other->http_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kv_headers_.Swap(&other->kv_headers_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(file_size_, other->file_size_);
  swap(time_stamp_, other->time_stamp_);
  swap(raw_file_size_, other->raw_file_size_);
  swap(is_explicit_delete_, other->is_explicit_delete_);
  swap(use_http_, other->use_http_);
  swap(use_https_, other->use_https_);
  swap(encrypted_, other->encrypted_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSDownloadResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSLoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSLoginRequest::kProtocolVersionFieldNumber;
const int CMsgClientUFSLoginRequest::kAmSessionTokenFieldNumber;
const int CMsgClientUFSLoginRequest::kAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSLoginRequest::CMsgClientUFSLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSLoginRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSLoginRequest)
}
CMsgClientUFSLoginRequest::CMsgClientUFSLoginRequest(const CMsgClientUFSLoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&am_session_token_, &from.am_session_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&protocol_version_) -
    reinterpret_cast<char*>(&am_session_token_)) + sizeof(protocol_version_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSLoginRequest)
}

void CMsgClientUFSLoginRequest::SharedCtor() {
  ::memset(&am_session_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_version_) -
      reinterpret_cast<char*>(&am_session_token_)) + sizeof(protocol_version_));
}

CMsgClientUFSLoginRequest::~CMsgClientUFSLoginRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSLoginRequest)
  SharedDtor();
}

void CMsgClientUFSLoginRequest::SharedDtor() {
}

void CMsgClientUFSLoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSLoginRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSLoginRequest& CMsgClientUFSLoginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSLoginRequest.base);
  return *internal_default_instance();
}


void CMsgClientUFSLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&am_session_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&protocol_version_) -
        reinterpret_cast<char*>(&am_session_token_)) + sizeof(protocol_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSLoginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_protocol_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 am_session_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_am_session_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &am_session_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 apps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_apps())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_apps())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSLoginRequest)
  return false;
#undef DO_
}

void CMsgClientUFSLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 protocol_version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  // optional uint64 am_session_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->am_session_token(), output);
  }

  // repeated uint32 apps = 3;
  for (int i = 0, n = this->apps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->apps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSLoginRequest)
}

::google::protobuf::uint8* CMsgClientUFSLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 protocol_version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->protocol_version(), target);
  }

  // optional uint64 am_session_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->am_session_token(), target);
  }

  // repeated uint32 apps = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->apps_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSLoginRequest)
  return target;
}

size_t CMsgClientUFSLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSLoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 apps = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->apps_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->apps_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 am_session_token = 2;
    if (has_am_session_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->am_session_token());
    }

    // optional uint32 protocol_version = 1;
    if (has_protocol_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protocol_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSLoginRequest)
    MergeFrom(*source);
  }
}

void CMsgClientUFSLoginRequest::MergeFrom(const CMsgClientUFSLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      am_session_token_ = from.am_session_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      protocol_version_ = from.protocol_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSLoginRequest::CopyFrom(const CMsgClientUFSLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSLoginRequest::IsInitialized() const {
  return true;
}

void CMsgClientUFSLoginRequest::Swap(CMsgClientUFSLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSLoginRequest::InternalSwap(CMsgClientUFSLoginRequest* other) {
  using std::swap;
  apps_.InternalSwap(&other->apps_);
  swap(am_session_token_, other->am_session_token_);
  swap(protocol_version_, other->protocol_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSLoginRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSLoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSLoginResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSLoginResponse::CMsgClientUFSLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSLoginResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSLoginResponse)
}
CMsgClientUFSLoginResponse::CMsgClientUFSLoginResponse(const CMsgClientUFSLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSLoginResponse)
}

void CMsgClientUFSLoginResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUFSLoginResponse::~CMsgClientUFSLoginResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSLoginResponse)
  SharedDtor();
}

void CMsgClientUFSLoginResponse::SharedDtor() {
}

void CMsgClientUFSLoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSLoginResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSLoginResponse& CMsgClientUFSLoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSLoginResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSLoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSLoginResponse)
  return false;
#undef DO_
}

void CMsgClientUFSLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSLoginResponse)
}

::google::protobuf::uint8* CMsgClientUFSLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSLoginResponse)
  return target;
}

size_t CMsgClientUFSLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSLoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSLoginResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSLoginResponse::MergeFrom(const CMsgClientUFSLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUFSLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSLoginResponse::CopyFrom(const CMsgClientUFSLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSLoginResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSLoginResponse::Swap(CMsgClientUFSLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSLoginResponse::InternalSwap(CMsgClientUFSLoginResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSLoginResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestEncryptedAppTicket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestEncryptedAppTicket::kAppIdFieldNumber;
const int CMsgClientRequestEncryptedAppTicket::kUserdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestEncryptedAppTicket::CMsgClientRequestEncryptedAppTicket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestEncryptedAppTicket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestEncryptedAppTicket)
}
CMsgClientRequestEncryptedAppTicket::CMsgClientRequestEncryptedAppTicket(const CMsgClientRequestEncryptedAppTicket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userdata()) {
    userdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userdata_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestEncryptedAppTicket)
}

void CMsgClientRequestEncryptedAppTicket::SharedCtor() {
  userdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientRequestEncryptedAppTicket::~CMsgClientRequestEncryptedAppTicket() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestEncryptedAppTicket)
  SharedDtor();
}

void CMsgClientRequestEncryptedAppTicket::SharedDtor() {
  userdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestEncryptedAppTicket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestEncryptedAppTicket::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestEncryptedAppTicket& CMsgClientRequestEncryptedAppTicket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestEncryptedAppTicket.base);
  return *internal_default_instance();
}


void CMsgClientRequestEncryptedAppTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestEncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userdata_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestEncryptedAppTicket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestEncryptedAppTicket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes userdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestEncryptedAppTicket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestEncryptedAppTicket)
  return false;
#undef DO_
}

void CMsgClientRequestEncryptedAppTicket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestEncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional bytes userdata = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->userdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestEncryptedAppTicket)
}

::google::protobuf::uint8* CMsgClientRequestEncryptedAppTicket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestEncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional bytes userdata = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->userdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestEncryptedAppTicket)
  return target;
}

size_t CMsgClientRequestEncryptedAppTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestEncryptedAppTicket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes userdata = 2;
    if (has_userdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->userdata());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestEncryptedAppTicket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestEncryptedAppTicket)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestEncryptedAppTicket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestEncryptedAppTicket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestEncryptedAppTicket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestEncryptedAppTicket)
    MergeFrom(*source);
  }
}

void CMsgClientRequestEncryptedAppTicket::MergeFrom(const CMsgClientRequestEncryptedAppTicket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestEncryptedAppTicket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userdata();
      userdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestEncryptedAppTicket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestEncryptedAppTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestEncryptedAppTicket::CopyFrom(const CMsgClientRequestEncryptedAppTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestEncryptedAppTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestEncryptedAppTicket::IsInitialized() const {
  return true;
}

void CMsgClientRequestEncryptedAppTicket::Swap(CMsgClientRequestEncryptedAppTicket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestEncryptedAppTicket::InternalSwap(CMsgClientRequestEncryptedAppTicket* other) {
  using std::swap;
  userdata_.Swap(&other->userdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestEncryptedAppTicket::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestEncryptedAppTicketResponse::InitAsDefaultInstance() {
  ::_CMsgClientRequestEncryptedAppTicketResponse_default_instance_._instance.get_mutable()->encrypted_app_ticket_ = const_cast< ::EncryptedAppTicket*>(
      ::EncryptedAppTicket::internal_default_instance());
}
void CMsgClientRequestEncryptedAppTicketResponse::clear_encrypted_app_ticket() {
  if (encrypted_app_ticket_ != NULL) encrypted_app_ticket_->Clear();
  clear_has_encrypted_app_ticket();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestEncryptedAppTicketResponse::kAppIdFieldNumber;
const int CMsgClientRequestEncryptedAppTicketResponse::kEresultFieldNumber;
const int CMsgClientRequestEncryptedAppTicketResponse::kEncryptedAppTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestEncryptedAppTicketResponse::CMsgClientRequestEncryptedAppTicketResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestEncryptedAppTicketResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestEncryptedAppTicketResponse)
}
CMsgClientRequestEncryptedAppTicketResponse::CMsgClientRequestEncryptedAppTicketResponse(const CMsgClientRequestEncryptedAppTicketResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_encrypted_app_ticket()) {
    encrypted_app_ticket_ = new ::EncryptedAppTicket(*from.encrypted_app_ticket_);
  } else {
    encrypted_app_ticket_ = NULL;
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestEncryptedAppTicketResponse)
}

void CMsgClientRequestEncryptedAppTicketResponse::SharedCtor() {
  ::memset(&encrypted_app_ticket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&encrypted_app_ticket_)) + sizeof(app_id_));
  eresult_ = 2;
}

CMsgClientRequestEncryptedAppTicketResponse::~CMsgClientRequestEncryptedAppTicketResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestEncryptedAppTicketResponse)
  SharedDtor();
}

void CMsgClientRequestEncryptedAppTicketResponse::SharedDtor() {
  if (this != internal_default_instance()) delete encrypted_app_ticket_;
}

void CMsgClientRequestEncryptedAppTicketResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestEncryptedAppTicketResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestEncryptedAppTicketResponse& CMsgClientRequestEncryptedAppTicketResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientRequestEncryptedAppTicketResponse.base);
  return *internal_default_instance();
}


void CMsgClientRequestEncryptedAppTicketResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestEncryptedAppTicketResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(encrypted_app_ticket_ != NULL);
    encrypted_app_ticket_->Clear();
  }
  if (cached_has_bits & 6u) {
    app_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestEncryptedAppTicketResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestEncryptedAppTicketResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EncryptedAppTicket encrypted_app_ticket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_encrypted_app_ticket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestEncryptedAppTicketResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestEncryptedAppTicketResponse)
  return false;
#undef DO_
}

void CMsgClientRequestEncryptedAppTicketResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestEncryptedAppTicketResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eresult(), output);
  }

  // optional .EncryptedAppTicket encrypted_app_ticket = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_encrypted_app_ticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestEncryptedAppTicketResponse)
}

::google::protobuf::uint8* CMsgClientRequestEncryptedAppTicketResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestEncryptedAppTicketResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eresult(), target);
  }

  // optional .EncryptedAppTicket encrypted_app_ticket = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_encrypted_app_ticket(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestEncryptedAppTicketResponse)
  return target;
}

size_t CMsgClientRequestEncryptedAppTicketResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestEncryptedAppTicketResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .EncryptedAppTicket encrypted_app_ticket = 3;
    if (has_encrypted_app_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *encrypted_app_ticket_);
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestEncryptedAppTicketResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestEncryptedAppTicketResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestEncryptedAppTicketResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestEncryptedAppTicketResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestEncryptedAppTicketResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestEncryptedAppTicketResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestEncryptedAppTicketResponse::MergeFrom(const CMsgClientRequestEncryptedAppTicketResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestEncryptedAppTicketResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_encrypted_app_ticket()->::EncryptedAppTicket::MergeFrom(from.encrypted_app_ticket());
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestEncryptedAppTicketResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestEncryptedAppTicketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestEncryptedAppTicketResponse::CopyFrom(const CMsgClientRequestEncryptedAppTicketResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestEncryptedAppTicketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestEncryptedAppTicketResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestEncryptedAppTicketResponse::Swap(CMsgClientRequestEncryptedAppTicketResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestEncryptedAppTicketResponse::InternalSwap(CMsgClientRequestEncryptedAppTicketResponse* other) {
  using std::swap;
  swap(encrypted_app_ticket_, other->encrypted_app_ticket_);
  swap(app_id_, other->app_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestEncryptedAppTicketResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWalletInfoUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWalletInfoUpdate::kHasWalletFieldNumber;
const int CMsgClientWalletInfoUpdate::kBalanceFieldNumber;
const int CMsgClientWalletInfoUpdate::kCurrencyFieldNumber;
const int CMsgClientWalletInfoUpdate::kBalanceDelayedFieldNumber;
const int CMsgClientWalletInfoUpdate::kBalance64FieldNumber;
const int CMsgClientWalletInfoUpdate::kBalance64DelayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWalletInfoUpdate::CMsgClientWalletInfoUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientWalletInfoUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWalletInfoUpdate)
}
CMsgClientWalletInfoUpdate::CMsgClientWalletInfoUpdate(const CMsgClientWalletInfoUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&has_wallet_, &from.has_wallet_,
    static_cast<size_t>(reinterpret_cast<char*>(&balance64_delayed_) -
    reinterpret_cast<char*>(&has_wallet_)) + sizeof(balance64_delayed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWalletInfoUpdate)
}

void CMsgClientWalletInfoUpdate::SharedCtor() {
  ::memset(&has_wallet_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balance64_delayed_) -
      reinterpret_cast<char*>(&has_wallet_)) + sizeof(balance64_delayed_));
}

CMsgClientWalletInfoUpdate::~CMsgClientWalletInfoUpdate() {
  // @@protoc_insertion_point(destructor:CMsgClientWalletInfoUpdate)
  SharedDtor();
}

void CMsgClientWalletInfoUpdate::SharedDtor() {
}

void CMsgClientWalletInfoUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientWalletInfoUpdate::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWalletInfoUpdate& CMsgClientWalletInfoUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientWalletInfoUpdate.base);
  return *internal_default_instance();
}


void CMsgClientWalletInfoUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWalletInfoUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&has_wallet_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&balance64_delayed_) -
        reinterpret_cast<char*>(&has_wallet_)) + sizeof(balance64_delayed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWalletInfoUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWalletInfoUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool has_wallet = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_has_wallet();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_wallet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 currency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 balance_delayed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_balance_delayed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_delayed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 balance64 = 5 [(.php_output_always_number) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_balance64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &balance64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 balance64_delayed = 6 [(.php_output_always_number) = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_balance64_delayed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &balance64_delayed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWalletInfoUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWalletInfoUpdate)
  return false;
#undef DO_
}

void CMsgClientWalletInfoUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWalletInfoUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool has_wallet = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->has_wallet(), output);
  }

  // optional int32 balance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->balance(), output);
  }

  // optional int32 currency = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->currency(), output);
  }

  // optional int32 balance_delayed = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->balance_delayed(), output);
  }

  // optional int64 balance64 = 5 [(.php_output_always_number) = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->balance64(), output);
  }

  // optional int64 balance64_delayed = 6 [(.php_output_always_number) = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->balance64_delayed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWalletInfoUpdate)
}

::google::protobuf::uint8* CMsgClientWalletInfoUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWalletInfoUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool has_wallet = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->has_wallet(), target);
  }

  // optional int32 balance = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->balance(), target);
  }

  // optional int32 currency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->currency(), target);
  }

  // optional int32 balance_delayed = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->balance_delayed(), target);
  }

  // optional int64 balance64 = 5 [(.php_output_always_number) = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->balance64(), target);
  }

  // optional int64 balance64_delayed = 6 [(.php_output_always_number) = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->balance64_delayed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWalletInfoUpdate)
  return target;
}

size_t CMsgClientWalletInfoUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWalletInfoUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bool has_wallet = 1;
    if (has_has_wallet()) {
      total_size += 1 + 1;
    }

    // optional int32 balance = 2;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->balance());
    }

    // optional int32 currency = 3;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // optional int32 balance_delayed = 4;
    if (has_balance_delayed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->balance_delayed());
    }

    // optional int64 balance64 = 5 [(.php_output_always_number) = true];
    if (has_balance64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->balance64());
    }

    // optional int64 balance64_delayed = 6 [(.php_output_always_number) = true];
    if (has_balance64_delayed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->balance64_delayed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWalletInfoUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWalletInfoUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWalletInfoUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWalletInfoUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWalletInfoUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWalletInfoUpdate)
    MergeFrom(*source);
  }
}

void CMsgClientWalletInfoUpdate::MergeFrom(const CMsgClientWalletInfoUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWalletInfoUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      has_wallet_ = from.has_wallet_;
    }
    if (cached_has_bits & 0x00000002u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000004u) {
      currency_ = from.currency_;
    }
    if (cached_has_bits & 0x00000008u) {
      balance_delayed_ = from.balance_delayed_;
    }
    if (cached_has_bits & 0x00000010u) {
      balance64_ = from.balance64_;
    }
    if (cached_has_bits & 0x00000020u) {
      balance64_delayed_ = from.balance64_delayed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWalletInfoUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWalletInfoUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWalletInfoUpdate::CopyFrom(const CMsgClientWalletInfoUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWalletInfoUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWalletInfoUpdate::IsInitialized() const {
  return true;
}

void CMsgClientWalletInfoUpdate::Swap(CMsgClientWalletInfoUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWalletInfoUpdate::InternalSwap(CMsgClientWalletInfoUpdate* other) {
  using std::swap;
  swap(has_wallet_, other->has_wallet_);
  swap(balance_, other->balance_);
  swap(currency_, other->currency_);
  swap(balance_delayed_, other->balance_delayed_);
  swap(balance64_, other->balance64_);
  swap(balance64_delayed_, other->balance64_delayed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientWalletInfoUpdate::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoUpdate::kLastChangenumberFieldNumber;
const int CMsgClientAppInfoUpdate::kSendChangelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoUpdate::CMsgClientAppInfoUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoUpdate)
}
CMsgClientAppInfoUpdate::CMsgClientAppInfoUpdate(const CMsgClientAppInfoUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_changenumber_, &from.last_changenumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&send_changelist_) -
    reinterpret_cast<char*>(&last_changenumber_)) + sizeof(send_changelist_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoUpdate)
}

void CMsgClientAppInfoUpdate::SharedCtor() {
  ::memset(&last_changenumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&send_changelist_) -
      reinterpret_cast<char*>(&last_changenumber_)) + sizeof(send_changelist_));
}

CMsgClientAppInfoUpdate::~CMsgClientAppInfoUpdate() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoUpdate)
  SharedDtor();
}

void CMsgClientAppInfoUpdate::SharedDtor() {
}

void CMsgClientAppInfoUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoUpdate::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoUpdate& CMsgClientAppInfoUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoUpdate.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&last_changenumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&send_changelist_) -
        reinterpret_cast<char*>(&last_changenumber_)) + sizeof(send_changelist_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 last_changenumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_last_changenumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_changenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool send_changelist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_send_changelist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_changelist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoUpdate)
  return false;
#undef DO_
}

void CMsgClientAppInfoUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 last_changenumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->last_changenumber(), output);
  }

  // optional bool send_changelist = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->send_changelist(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoUpdate)
}

::google::protobuf::uint8* CMsgClientAppInfoUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 last_changenumber = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->last_changenumber(), target);
  }

  // optional bool send_changelist = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->send_changelist(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoUpdate)
  return target;
}

size_t CMsgClientAppInfoUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 last_changenumber = 1;
    if (has_last_changenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_changenumber());
    }

    // optional bool send_changelist = 2;
    if (has_send_changelist()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoUpdate)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoUpdate::MergeFrom(const CMsgClientAppInfoUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      last_changenumber_ = from.last_changenumber_;
    }
    if (cached_has_bits & 0x00000002u) {
      send_changelist_ = from.send_changelist_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAppInfoUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoUpdate::CopyFrom(const CMsgClientAppInfoUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoUpdate::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoUpdate::Swap(CMsgClientAppInfoUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoUpdate::InternalSwap(CMsgClientAppInfoUpdate* other) {
  using std::swap;
  swap(last_changenumber_, other->last_changenumber_);
  swap(send_changelist_, other->send_changelist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoUpdate::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoChanges::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoChanges::kCurrentChangeNumberFieldNumber;
const int CMsgClientAppInfoChanges::kForceFullUpdateFieldNumber;
const int CMsgClientAppInfoChanges::kAppIDsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoChanges::CMsgClientAppInfoChanges()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoChanges.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoChanges)
}
CMsgClientAppInfoChanges::CMsgClientAppInfoChanges(const CMsgClientAppInfoChanges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      appids_(from.appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current_change_number_, &from.current_change_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_full_update_) -
    reinterpret_cast<char*>(&current_change_number_)) + sizeof(force_full_update_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoChanges)
}

void CMsgClientAppInfoChanges::SharedCtor() {
  ::memset(&current_change_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_full_update_) -
      reinterpret_cast<char*>(&current_change_number_)) + sizeof(force_full_update_));
}

CMsgClientAppInfoChanges::~CMsgClientAppInfoChanges() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoChanges)
  SharedDtor();
}

void CMsgClientAppInfoChanges::SharedDtor() {
}

void CMsgClientAppInfoChanges::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoChanges::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoChanges& CMsgClientAppInfoChanges::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoChanges.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoChanges::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoChanges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&current_change_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&force_full_update_) -
        reinterpret_cast<char*>(&current_change_number_)) + sizeof(force_full_update_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoChanges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoChanges)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 current_change_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_current_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_full_update = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_force_full_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_full_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 appIDs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_appids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoChanges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoChanges)
  return false;
#undef DO_
}

void CMsgClientAppInfoChanges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoChanges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 current_change_number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->current_change_number(), output);
  }

  // optional bool force_full_update = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->force_full_update(), output);
  }

  // repeated uint32 appIDs = 3;
  for (int i = 0, n = this->appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoChanges)
}

::google::protobuf::uint8* CMsgClientAppInfoChanges::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoChanges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 current_change_number = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->current_change_number(), target);
  }

  // optional bool force_full_update = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->force_full_update(), target);
  }

  // repeated uint32 appIDs = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoChanges)
  return target;
}

size_t CMsgClientAppInfoChanges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoChanges)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 appIDs = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->appids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 current_change_number = 1;
    if (has_current_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current_change_number());
    }

    // optional bool force_full_update = 2;
    if (has_force_full_update()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoChanges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoChanges)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoChanges* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoChanges>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoChanges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoChanges)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoChanges::MergeFrom(const CMsgClientAppInfoChanges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoChanges)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appids_.MergeFrom(from.appids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      current_change_number_ = from.current_change_number_;
    }
    if (cached_has_bits & 0x00000002u) {
      force_full_update_ = from.force_full_update_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAppInfoChanges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoChanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoChanges::CopyFrom(const CMsgClientAppInfoChanges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoChanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoChanges::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoChanges::Swap(CMsgClientAppInfoChanges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoChanges::InternalSwap(CMsgClientAppInfoChanges* other) {
  using std::swap;
  appids_.InternalSwap(&other->appids_);
  swap(current_change_number_, other->current_change_number_);
  swap(force_full_update_, other->force_full_update_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoChanges::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoRequest_App::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoRequest_App::kAppIdFieldNumber;
const int CMsgClientAppInfoRequest_App::kSectionFlagsFieldNumber;
const int CMsgClientAppInfoRequest_App::kSectionCRCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoRequest_App::CMsgClientAppInfoRequest_App()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoRequest_App.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoRequest.App)
}
CMsgClientAppInfoRequest_App::CMsgClientAppInfoRequest_App(const CMsgClientAppInfoRequest_App& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      section_crc_(from.section_crc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&section_flags_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(section_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoRequest.App)
}

void CMsgClientAppInfoRequest_App::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&section_flags_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(section_flags_));
}

CMsgClientAppInfoRequest_App::~CMsgClientAppInfoRequest_App() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoRequest.App)
  SharedDtor();
}

void CMsgClientAppInfoRequest_App::SharedDtor() {
}

void CMsgClientAppInfoRequest_App::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoRequest_App::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoRequest_App& CMsgClientAppInfoRequest_App::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoRequest_App.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoRequest_App::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoRequest.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  section_crc_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&section_flags_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(section_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoRequest_App::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoRequest.App)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 section_flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_section_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 section_CRC = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_section_crc())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_section_crc())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoRequest.App)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoRequest.App)
  return false;
#undef DO_
}

void CMsgClientAppInfoRequest_App::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoRequest.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 section_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->section_flags(), output);
  }

  // repeated uint32 section_CRC = 3;
  for (int i = 0, n = this->section_crc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->section_crc(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoRequest.App)
}

::google::protobuf::uint8* CMsgClientAppInfoRequest_App::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoRequest.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 section_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->section_flags(), target);
  }

  // repeated uint32 section_CRC = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->section_crc_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoRequest.App)
  return target;
}

size_t CMsgClientAppInfoRequest_App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoRequest.App)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 section_CRC = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->section_crc_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->section_crc_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 section_flags = 2;
    if (has_section_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->section_flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoRequest_App::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoRequest.App)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoRequest_App* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoRequest_App>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoRequest.App)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoRequest.App)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoRequest_App::MergeFrom(const CMsgClientAppInfoRequest_App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoRequest.App)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  section_crc_.MergeFrom(from.section_crc_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      section_flags_ = from.section_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAppInfoRequest_App::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoRequest.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoRequest_App::CopyFrom(const CMsgClientAppInfoRequest_App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoRequest.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoRequest_App::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoRequest_App::Swap(CMsgClientAppInfoRequest_App* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoRequest_App::InternalSwap(CMsgClientAppInfoRequest_App* other) {
  using std::swap;
  section_crc_.InternalSwap(&other->section_crc_);
  swap(app_id_, other->app_id_);
  swap(section_flags_, other->section_flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoRequest_App::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoRequest::kAppsFieldNumber;
const int CMsgClientAppInfoRequest::kSupportsBatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoRequest::CMsgClientAppInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoRequest)
}
CMsgClientAppInfoRequest::CMsgClientAppInfoRequest(const CMsgClientAppInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  supports_batches_ = from.supports_batches_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoRequest)
}

void CMsgClientAppInfoRequest::SharedCtor() {
  supports_batches_ = false;
}

CMsgClientAppInfoRequest::~CMsgClientAppInfoRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoRequest)
  SharedDtor();
}

void CMsgClientAppInfoRequest::SharedDtor() {
}

void CMsgClientAppInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoRequest& CMsgClientAppInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoRequest.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  supports_batches_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientAppInfoRequest.App apps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool supports_batches = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_supports_batches();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &supports_batches_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoRequest)
  return false;
#undef DO_
}

void CMsgClientAppInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAppInfoRequest.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->apps(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool supports_batches = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->supports_batches(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoRequest)
}

::google::protobuf::uint8* CMsgClientAppInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAppInfoRequest.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->apps(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool supports_batches = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->supports_batches(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoRequest)
  return target;
}

size_t CMsgClientAppInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAppInfoRequest.App apps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  // optional bool supports_batches = 2 [default = false];
  if (has_supports_batches()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoRequest)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoRequest::MergeFrom(const CMsgClientAppInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  if (from.has_supports_batches()) {
    set_supports_batches(from.supports_batches());
  }
}

void CMsgClientAppInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoRequest::CopyFrom(const CMsgClientAppInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoRequest::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoRequest::Swap(CMsgClientAppInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoRequest::InternalSwap(CMsgClientAppInfoRequest* other) {
  using std::swap;
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  swap(supports_batches_, other->supports_batches_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoResponse_App_Section::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoResponse_App_Section::kSectionIdFieldNumber;
const int CMsgClientAppInfoResponse_App_Section::kSectionKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoResponse_App_Section::CMsgClientAppInfoResponse_App_Section()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse_App_Section.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoResponse.App.Section)
}
CMsgClientAppInfoResponse_App_Section::CMsgClientAppInfoResponse_App_Section(const CMsgClientAppInfoResponse_App_Section& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  section_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_section_kv()) {
    section_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.section_kv_);
  }
  section_id_ = from.section_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoResponse.App.Section)
}

void CMsgClientAppInfoResponse_App_Section::SharedCtor() {
  section_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  section_id_ = 0u;
}

CMsgClientAppInfoResponse_App_Section::~CMsgClientAppInfoResponse_App_Section() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoResponse.App.Section)
  SharedDtor();
}

void CMsgClientAppInfoResponse_App_Section::SharedDtor() {
  section_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAppInfoResponse_App_Section::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoResponse_App_Section::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoResponse_App_Section& CMsgClientAppInfoResponse_App_Section::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse_App_Section.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoResponse_App_Section::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoResponse.App.Section)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    section_kv_.ClearNonDefaultToEmptyNoArena();
  }
  section_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoResponse_App_Section::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoResponse.App.Section)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 section_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_section_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes section_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_section_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoResponse.App.Section)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoResponse.App.Section)
  return false;
#undef DO_
}

void CMsgClientAppInfoResponse_App_Section::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoResponse.App.Section)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 section_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->section_id(), output);
  }

  // optional bytes section_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->section_kv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoResponse.App.Section)
}

::google::protobuf::uint8* CMsgClientAppInfoResponse_App_Section::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoResponse.App.Section)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 section_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->section_id(), target);
  }

  // optional bytes section_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->section_kv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoResponse.App.Section)
  return target;
}

size_t CMsgClientAppInfoResponse_App_Section::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoResponse.App.Section)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes section_kv = 2;
    if (has_section_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->section_kv());
    }

    // optional uint32 section_id = 1;
    if (has_section_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->section_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoResponse_App_Section::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoResponse.App.Section)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoResponse_App_Section* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoResponse_App_Section>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoResponse.App.Section)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoResponse.App.Section)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoResponse_App_Section::MergeFrom(const CMsgClientAppInfoResponse_App_Section& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoResponse.App.Section)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_section_kv();
      section_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.section_kv_);
    }
    if (cached_has_bits & 0x00000002u) {
      section_id_ = from.section_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAppInfoResponse_App_Section::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoResponse.App.Section)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoResponse_App_Section::CopyFrom(const CMsgClientAppInfoResponse_App_Section& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoResponse.App.Section)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoResponse_App_Section::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoResponse_App_Section::Swap(CMsgClientAppInfoResponse_App_Section* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoResponse_App_Section::InternalSwap(CMsgClientAppInfoResponse_App_Section* other) {
  using std::swap;
  section_kv_.Swap(&other->section_kv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(section_id_, other->section_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoResponse_App_Section::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoResponse_App::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoResponse_App::kAppIdFieldNumber;
const int CMsgClientAppInfoResponse_App::kChangeNumberFieldNumber;
const int CMsgClientAppInfoResponse_App::kSectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoResponse_App::CMsgClientAppInfoResponse_App()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse_App.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoResponse.App)
}
CMsgClientAppInfoResponse_App::CMsgClientAppInfoResponse_App(const CMsgClientAppInfoResponse_App& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sections_(from.sections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&change_number_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(change_number_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoResponse.App)
}

void CMsgClientAppInfoResponse_App::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_number_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(change_number_));
}

CMsgClientAppInfoResponse_App::~CMsgClientAppInfoResponse_App() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoResponse.App)
  SharedDtor();
}

void CMsgClientAppInfoResponse_App::SharedDtor() {
}

void CMsgClientAppInfoResponse_App::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoResponse_App::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoResponse_App& CMsgClientAppInfoResponse_App::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse_App.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoResponse_App::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoResponse.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sections_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&change_number_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(change_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoResponse_App::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoResponse.App)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientAppInfoResponse.App.Section sections = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoResponse.App)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoResponse.App)
  return false;
#undef DO_
}

void CMsgClientAppInfoResponse_App::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoResponse.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_number(), output);
  }

  // repeated .CMsgClientAppInfoResponse.App.Section sections = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sections(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoResponse.App)
}

::google::protobuf::uint8* CMsgClientAppInfoResponse_App::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoResponse.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_number(), target);
  }

  // repeated .CMsgClientAppInfoResponse.App.Section sections = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sections(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoResponse.App)
  return target;
}

size_t CMsgClientAppInfoResponse_App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoResponse.App)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAppInfoResponse.App.Section sections = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sections(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 change_number = 2;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoResponse_App::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoResponse.App)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoResponse_App* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoResponse_App>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoResponse.App)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoResponse.App)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoResponse_App::MergeFrom(const CMsgClientAppInfoResponse_App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoResponse.App)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sections_.MergeFrom(from.sections_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      change_number_ = from.change_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAppInfoResponse_App::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoResponse.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoResponse_App::CopyFrom(const CMsgClientAppInfoResponse_App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoResponse.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoResponse_App::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoResponse_App::Swap(CMsgClientAppInfoResponse_App* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoResponse_App::InternalSwap(CMsgClientAppInfoResponse_App* other) {
  using std::swap;
  CastToBase(&sections_)->InternalSwap(CastToBase(&other->sections_));
  swap(app_id_, other->app_id_);
  swap(change_number_, other->change_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoResponse_App::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAppInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAppInfoResponse::kAppsFieldNumber;
const int CMsgClientAppInfoResponse::kAppsUnknownFieldNumber;
const int CMsgClientAppInfoResponse::kAppsPendingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAppInfoResponse::CMsgClientAppInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAppInfoResponse)
}
CMsgClientAppInfoResponse::CMsgClientAppInfoResponse(const CMsgClientAppInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_(from.apps_),
      apps_unknown_(from.apps_unknown_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apps_pending_ = from.apps_pending_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAppInfoResponse)
}

void CMsgClientAppInfoResponse::SharedCtor() {
  apps_pending_ = 0u;
}

CMsgClientAppInfoResponse::~CMsgClientAppInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientAppInfoResponse)
  SharedDtor();
}

void CMsgClientAppInfoResponse::SharedDtor() {
}

void CMsgClientAppInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAppInfoResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAppInfoResponse& CMsgClientAppInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAppInfoResponse.base);
  return *internal_default_instance();
}


void CMsgClientAppInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  apps_unknown_.Clear();
  apps_pending_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAppInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAppInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientAppInfoResponse.App apps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 apps_unknown = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_apps_unknown())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_apps_unknown())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 apps_pending = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_apps_pending();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apps_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAppInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAppInfoResponse)
  return false;
#undef DO_
}

void CMsgClientAppInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAppInfoResponse.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->apps(static_cast<int>(i)),
      output);
  }

  // repeated uint32 apps_unknown = 2;
  for (int i = 0, n = this->apps_unknown_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->apps_unknown(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 apps_pending = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->apps_pending(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAppInfoResponse)
}

::google::protobuf::uint8* CMsgClientAppInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAppInfoResponse.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->apps(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 apps_unknown = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->apps_unknown_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 apps_pending = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->apps_pending(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAppInfoResponse)
  return target;
}

size_t CMsgClientAppInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAppInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAppInfoResponse.App apps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  // repeated uint32 apps_unknown = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->apps_unknown_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->apps_unknown_size());
    total_size += data_size;
  }

  // optional uint32 apps_pending = 3;
  if (has_apps_pending()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apps_pending());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAppInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAppInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAppInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAppInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAppInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAppInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientAppInfoResponse::MergeFrom(const CMsgClientAppInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAppInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  apps_unknown_.MergeFrom(from.apps_unknown_);
  if (from.has_apps_pending()) {
    set_apps_pending(from.apps_pending());
  }
}

void CMsgClientAppInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAppInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAppInfoResponse::CopyFrom(const CMsgClientAppInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAppInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAppInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientAppInfoResponse::Swap(CMsgClientAppInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAppInfoResponse::InternalSwap(CMsgClientAppInfoResponse* other) {
  using std::swap;
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  apps_unknown_.InternalSwap(&other->apps_unknown_);
  swap(apps_pending_, other->apps_pending_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAppInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPackageInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPackageInfoRequest::kPackageIdsFieldNumber;
const int CMsgClientPackageInfoRequest::kMetaDataOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPackageInfoRequest::CMsgClientPackageInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPackageInfoRequest)
}
CMsgClientPackageInfoRequest::CMsgClientPackageInfoRequest(const CMsgClientPackageInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      package_ids_(from.package_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_data_only_ = from.meta_data_only_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientPackageInfoRequest)
}

void CMsgClientPackageInfoRequest::SharedCtor() {
  meta_data_only_ = false;
}

CMsgClientPackageInfoRequest::~CMsgClientPackageInfoRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientPackageInfoRequest)
  SharedDtor();
}

void CMsgClientPackageInfoRequest::SharedDtor() {
}

void CMsgClientPackageInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPackageInfoRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPackageInfoRequest& CMsgClientPackageInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoRequest.base);
  return *internal_default_instance();
}


void CMsgClientPackageInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPackageInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_ids_.Clear();
  meta_data_only_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPackageInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPackageInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 package_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_package_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_package_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool meta_data_only = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_meta_data_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &meta_data_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPackageInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPackageInfoRequest)
  return false;
#undef DO_
}

void CMsgClientPackageInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPackageInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 package_ids = 1;
  for (int i = 0, n = this->package_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->package_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool meta_data_only = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->meta_data_only(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPackageInfoRequest)
}

::google::protobuf::uint8* CMsgClientPackageInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPackageInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 package_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->package_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool meta_data_only = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->meta_data_only(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPackageInfoRequest)
  return target;
}

size_t CMsgClientPackageInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPackageInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 package_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->package_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->package_ids_size());
    total_size += data_size;
  }

  // optional bool meta_data_only = 2;
  if (has_meta_data_only()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPackageInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPackageInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPackageInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPackageInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPackageInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPackageInfoRequest)
    MergeFrom(*source);
  }
}

void CMsgClientPackageInfoRequest::MergeFrom(const CMsgClientPackageInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPackageInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  package_ids_.MergeFrom(from.package_ids_);
  if (from.has_meta_data_only()) {
    set_meta_data_only(from.meta_data_only());
  }
}

void CMsgClientPackageInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPackageInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPackageInfoRequest::CopyFrom(const CMsgClientPackageInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPackageInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPackageInfoRequest::IsInitialized() const {
  return true;
}

void CMsgClientPackageInfoRequest::Swap(CMsgClientPackageInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPackageInfoRequest::InternalSwap(CMsgClientPackageInfoRequest* other) {
  using std::swap;
  package_ids_.InternalSwap(&other->package_ids_);
  swap(meta_data_only_, other->meta_data_only_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPackageInfoRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPackageInfoResponse_Package::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPackageInfoResponse_Package::kPackageIdFieldNumber;
const int CMsgClientPackageInfoResponse_Package::kChangeNumberFieldNumber;
const int CMsgClientPackageInfoResponse_Package::kShaFieldNumber;
const int CMsgClientPackageInfoResponse_Package::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPackageInfoResponse_Package::CMsgClientPackageInfoResponse_Package()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoResponse_Package.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPackageInfoResponse.Package)
}
CMsgClientPackageInfoResponse_Package::CMsgClientPackageInfoResponse_Package(const CMsgClientPackageInfoResponse_Package& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buffer()) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&package_id_, &from.package_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&change_number_) -
    reinterpret_cast<char*>(&package_id_)) + sizeof(change_number_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPackageInfoResponse.Package)
}

void CMsgClientPackageInfoResponse_Package::SharedCtor() {
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_number_) -
      reinterpret_cast<char*>(&package_id_)) + sizeof(change_number_));
}

CMsgClientPackageInfoResponse_Package::~CMsgClientPackageInfoResponse_Package() {
  // @@protoc_insertion_point(destructor:CMsgClientPackageInfoResponse.Package)
  SharedDtor();
}

void CMsgClientPackageInfoResponse_Package::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPackageInfoResponse_Package::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPackageInfoResponse_Package::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPackageInfoResponse_Package& CMsgClientPackageInfoResponse_Package::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoResponse_Package.base);
  return *internal_default_instance();
}


void CMsgClientPackageInfoResponse_Package::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPackageInfoResponse.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      buffer_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&package_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&change_number_) -
        reinterpret_cast<char*>(&package_id_)) + sizeof(change_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPackageInfoResponse_Package::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPackageInfoResponse.Package)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes buffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPackageInfoResponse.Package)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPackageInfoResponse.Package)
  return false;
#undef DO_
}

void CMsgClientPackageInfoResponse_Package::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPackageInfoResponse.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_number(), output);
  }

  // optional bytes sha = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sha(), output);
  }

  // optional bytes buffer = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->buffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPackageInfoResponse.Package)
}

::google::protobuf::uint8* CMsgClientPackageInfoResponse_Package::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPackageInfoResponse.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_number(), target);
  }

  // optional bytes sha = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sha(), target);
  }

  // optional bytes buffer = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->buffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPackageInfoResponse.Package)
  return target;
}

size_t CMsgClientPackageInfoResponse_Package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPackageInfoResponse.Package)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes sha = 3;
    if (has_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha());
    }

    // optional bytes buffer = 4;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

    // optional uint32 package_id = 1;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional uint32 change_number = 2;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPackageInfoResponse_Package::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPackageInfoResponse.Package)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPackageInfoResponse_Package* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPackageInfoResponse_Package>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPackageInfoResponse.Package)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPackageInfoResponse.Package)
    MergeFrom(*source);
  }
}

void CMsgClientPackageInfoResponse_Package::MergeFrom(const CMsgClientPackageInfoResponse_Package& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPackageInfoResponse.Package)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha();
      sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_buffer();
      buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
    }
    if (cached_has_bits & 0x00000004u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      change_number_ = from.change_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPackageInfoResponse_Package::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPackageInfoResponse.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPackageInfoResponse_Package::CopyFrom(const CMsgClientPackageInfoResponse_Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPackageInfoResponse.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPackageInfoResponse_Package::IsInitialized() const {
  return true;
}

void CMsgClientPackageInfoResponse_Package::Swap(CMsgClientPackageInfoResponse_Package* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPackageInfoResponse_Package::InternalSwap(CMsgClientPackageInfoResponse_Package* other) {
  using std::swap;
  sha_.Swap(&other->sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buffer_.Swap(&other->buffer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_id_, other->package_id_);
  swap(change_number_, other->change_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPackageInfoResponse_Package::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPackageInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPackageInfoResponse::kPackagesFieldNumber;
const int CMsgClientPackageInfoResponse::kPackagesUnknownFieldNumber;
const int CMsgClientPackageInfoResponse::kPackagesPendingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPackageInfoResponse::CMsgClientPackageInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPackageInfoResponse)
}
CMsgClientPackageInfoResponse::CMsgClientPackageInfoResponse(const CMsgClientPackageInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      packages_(from.packages_),
      packages_unknown_(from.packages_unknown_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packages_pending_ = from.packages_pending_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientPackageInfoResponse)
}

void CMsgClientPackageInfoResponse::SharedCtor() {
  packages_pending_ = 0u;
}

CMsgClientPackageInfoResponse::~CMsgClientPackageInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientPackageInfoResponse)
  SharedDtor();
}

void CMsgClientPackageInfoResponse::SharedDtor() {
}

void CMsgClientPackageInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPackageInfoResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPackageInfoResponse& CMsgClientPackageInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPackageInfoResponse.base);
  return *internal_default_instance();
}


void CMsgClientPackageInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPackageInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  packages_unknown_.Clear();
  packages_pending_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPackageInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPackageInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientPackageInfoResponse.Package packages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 packages_unknown = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_packages_unknown())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_packages_unknown())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 packages_pending = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_packages_pending();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packages_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPackageInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPackageInfoResponse)
  return false;
#undef DO_
}

void CMsgClientPackageInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPackageInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPackageInfoResponse.Package packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->packages(static_cast<int>(i)),
      output);
  }

  // repeated uint32 packages_unknown = 2;
  for (int i = 0, n = this->packages_unknown_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->packages_unknown(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 packages_pending = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packages_pending(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPackageInfoResponse)
}

::google::protobuf::uint8* CMsgClientPackageInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPackageInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPackageInfoResponse.Package packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->packages(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 packages_unknown = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->packages_unknown_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 packages_pending = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packages_pending(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPackageInfoResponse)
  return target;
}

size_t CMsgClientPackageInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPackageInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPackageInfoResponse.Package packages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  // repeated uint32 packages_unknown = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->packages_unknown_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->packages_unknown_size());
    total_size += data_size;
  }

  // optional uint32 packages_pending = 3;
  if (has_packages_pending()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packages_pending());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPackageInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPackageInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPackageInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPackageInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPackageInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPackageInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPackageInfoResponse::MergeFrom(const CMsgClientPackageInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPackageInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  packages_unknown_.MergeFrom(from.packages_unknown_);
  if (from.has_packages_pending()) {
    set_packages_pending(from.packages_pending());
  }
}

void CMsgClientPackageInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPackageInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPackageInfoResponse::CopyFrom(const CMsgClientPackageInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPackageInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPackageInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientPackageInfoResponse::Swap(CMsgClientPackageInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPackageInfoResponse::InternalSwap(CMsgClientPackageInfoResponse* other) {
  using std::swap;
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  packages_unknown_.InternalSwap(&other->packages_unknown_);
  swap(packages_pending_, other->packages_pending_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPackageInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSChangesSinceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSChangesSinceRequest::kSinceChangeNumberFieldNumber;
const int CMsgClientPICSChangesSinceRequest::kSendAppInfoChangesFieldNumber;
const int CMsgClientPICSChangesSinceRequest::kSendPackageInfoChangesFieldNumber;
const int CMsgClientPICSChangesSinceRequest::kNumAppInfoCachedFieldNumber;
const int CMsgClientPICSChangesSinceRequest::kNumPackageInfoCachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSChangesSinceRequest::CMsgClientPICSChangesSinceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSChangesSinceRequest)
}
CMsgClientPICSChangesSinceRequest::CMsgClientPICSChangesSinceRequest(const CMsgClientPICSChangesSinceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&since_change_number_, &from.since_change_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_package_info_cached_) -
    reinterpret_cast<char*>(&since_change_number_)) + sizeof(num_package_info_cached_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSChangesSinceRequest)
}

void CMsgClientPICSChangesSinceRequest::SharedCtor() {
  ::memset(&since_change_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_package_info_cached_) -
      reinterpret_cast<char*>(&since_change_number_)) + sizeof(num_package_info_cached_));
}

CMsgClientPICSChangesSinceRequest::~CMsgClientPICSChangesSinceRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSChangesSinceRequest)
  SharedDtor();
}

void CMsgClientPICSChangesSinceRequest::SharedDtor() {
}

void CMsgClientPICSChangesSinceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSChangesSinceRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSChangesSinceRequest& CMsgClientPICSChangesSinceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceRequest.base);
  return *internal_default_instance();
}


void CMsgClientPICSChangesSinceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSChangesSinceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&since_change_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_package_info_cached_) -
        reinterpret_cast<char*>(&since_change_number_)) + sizeof(num_package_info_cached_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSChangesSinceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSChangesSinceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 since_change_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_since_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &since_change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool send_app_info_changes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_send_app_info_changes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_app_info_changes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool send_package_info_changes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_send_package_info_changes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_package_info_changes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_app_info_cached = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num_app_info_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_app_info_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_package_info_cached = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_num_package_info_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_package_info_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSChangesSinceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSChangesSinceRequest)
  return false;
#undef DO_
}

void CMsgClientPICSChangesSinceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSChangesSinceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 since_change_number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->since_change_number(), output);
  }

  // optional bool send_app_info_changes = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->send_app_info_changes(), output);
  }

  // optional bool send_package_info_changes = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->send_package_info_changes(), output);
  }

  // optional uint32 num_app_info_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_app_info_cached(), output);
  }

  // optional uint32 num_package_info_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_package_info_cached(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSChangesSinceRequest)
}

::google::protobuf::uint8* CMsgClientPICSChangesSinceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSChangesSinceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 since_change_number = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->since_change_number(), target);
  }

  // optional bool send_app_info_changes = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->send_app_info_changes(), target);
  }

  // optional bool send_package_info_changes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->send_package_info_changes(), target);
  }

  // optional uint32 num_app_info_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_app_info_cached(), target);
  }

  // optional uint32 num_package_info_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_package_info_cached(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSChangesSinceRequest)
  return target;
}

size_t CMsgClientPICSChangesSinceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSChangesSinceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 since_change_number = 1;
    if (has_since_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->since_change_number());
    }

    // optional bool send_app_info_changes = 2;
    if (has_send_app_info_changes()) {
      total_size += 1 + 1;
    }

    // optional bool send_package_info_changes = 3;
    if (has_send_package_info_changes()) {
      total_size += 1 + 1;
    }

    // optional uint32 num_app_info_cached = 4;
    if (has_num_app_info_cached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_app_info_cached());
    }

    // optional uint32 num_package_info_cached = 5;
    if (has_num_package_info_cached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_package_info_cached());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSChangesSinceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSChangesSinceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSChangesSinceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSChangesSinceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSChangesSinceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSChangesSinceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientPICSChangesSinceRequest::MergeFrom(const CMsgClientPICSChangesSinceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSChangesSinceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      since_change_number_ = from.since_change_number_;
    }
    if (cached_has_bits & 0x00000002u) {
      send_app_info_changes_ = from.send_app_info_changes_;
    }
    if (cached_has_bits & 0x00000004u) {
      send_package_info_changes_ = from.send_package_info_changes_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_app_info_cached_ = from.num_app_info_cached_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_package_info_cached_ = from.num_package_info_cached_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSChangesSinceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSChangesSinceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSChangesSinceRequest::CopyFrom(const CMsgClientPICSChangesSinceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSChangesSinceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSChangesSinceRequest::IsInitialized() const {
  return true;
}

void CMsgClientPICSChangesSinceRequest::Swap(CMsgClientPICSChangesSinceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSChangesSinceRequest::InternalSwap(CMsgClientPICSChangesSinceRequest* other) {
  using std::swap;
  swap(since_change_number_, other->since_change_number_);
  swap(send_app_info_changes_, other->send_app_info_changes_);
  swap(send_package_info_changes_, other->send_package_info_changes_);
  swap(num_app_info_cached_, other->num_app_info_cached_);
  swap(num_package_info_cached_, other->num_package_info_cached_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSChangesSinceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSChangesSinceResponse_PackageChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSChangesSinceResponse_PackageChange::kPackageidFieldNumber;
const int CMsgClientPICSChangesSinceResponse_PackageChange::kChangeNumberFieldNumber;
const int CMsgClientPICSChangesSinceResponse_PackageChange::kNeedsTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSChangesSinceResponse_PackageChange::CMsgClientPICSChangesSinceResponse_PackageChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse_PackageChange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSChangesSinceResponse.PackageChange)
}
CMsgClientPICSChangesSinceResponse_PackageChange::CMsgClientPICSChangesSinceResponse_PackageChange(const CMsgClientPICSChangesSinceResponse_PackageChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&needs_token_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(needs_token_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSChangesSinceResponse.PackageChange)
}

void CMsgClientPICSChangesSinceResponse_PackageChange::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&needs_token_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(needs_token_));
}

CMsgClientPICSChangesSinceResponse_PackageChange::~CMsgClientPICSChangesSinceResponse_PackageChange() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSChangesSinceResponse.PackageChange)
  SharedDtor();
}

void CMsgClientPICSChangesSinceResponse_PackageChange::SharedDtor() {
}

void CMsgClientPICSChangesSinceResponse_PackageChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSChangesSinceResponse_PackageChange::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSChangesSinceResponse_PackageChange& CMsgClientPICSChangesSinceResponse_PackageChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse_PackageChange.base);
  return *internal_default_instance();
}


void CMsgClientPICSChangesSinceResponse_PackageChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&needs_token_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(needs_token_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSChangesSinceResponse_PackageChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_needs_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSChangesSinceResponse.PackageChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSChangesSinceResponse.PackageChange)
  return false;
#undef DO_
}

void CMsgClientPICSChangesSinceResponse_PackageChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packageid(), output);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_number(), output);
  }

  // optional bool needs_token = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needs_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSChangesSinceResponse.PackageChange)
}

::google::protobuf::uint8* CMsgClientPICSChangesSinceResponse_PackageChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packageid(), target);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_number(), target);
  }

  // optional bool needs_token = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needs_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSChangesSinceResponse.PackageChange)
  return target;
}

size_t CMsgClientPICSChangesSinceResponse_PackageChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 packageid = 1;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

    // optional uint32 change_number = 2;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_number());
    }

    // optional bool needs_token = 3;
    if (has_needs_token()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSChangesSinceResponse_PackageChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSChangesSinceResponse_PackageChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSChangesSinceResponse_PackageChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSChangesSinceResponse.PackageChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSChangesSinceResponse.PackageChange)
    MergeFrom(*source);
  }
}

void CMsgClientPICSChangesSinceResponse_PackageChange::MergeFrom(const CMsgClientPICSChangesSinceResponse_PackageChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      change_number_ = from.change_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      needs_token_ = from.needs_token_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSChangesSinceResponse_PackageChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSChangesSinceResponse_PackageChange::CopyFrom(const CMsgClientPICSChangesSinceResponse_PackageChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSChangesSinceResponse.PackageChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSChangesSinceResponse_PackageChange::IsInitialized() const {
  return true;
}

void CMsgClientPICSChangesSinceResponse_PackageChange::Swap(CMsgClientPICSChangesSinceResponse_PackageChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSChangesSinceResponse_PackageChange::InternalSwap(CMsgClientPICSChangesSinceResponse_PackageChange* other) {
  using std::swap;
  swap(packageid_, other->packageid_);
  swap(change_number_, other->change_number_);
  swap(needs_token_, other->needs_token_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSChangesSinceResponse_PackageChange::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSChangesSinceResponse_AppChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSChangesSinceResponse_AppChange::kAppidFieldNumber;
const int CMsgClientPICSChangesSinceResponse_AppChange::kChangeNumberFieldNumber;
const int CMsgClientPICSChangesSinceResponse_AppChange::kNeedsTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSChangesSinceResponse_AppChange::CMsgClientPICSChangesSinceResponse_AppChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse_AppChange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSChangesSinceResponse.AppChange)
}
CMsgClientPICSChangesSinceResponse_AppChange::CMsgClientPICSChangesSinceResponse_AppChange(const CMsgClientPICSChangesSinceResponse_AppChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&needs_token_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(needs_token_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSChangesSinceResponse.AppChange)
}

void CMsgClientPICSChangesSinceResponse_AppChange::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&needs_token_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(needs_token_));
}

CMsgClientPICSChangesSinceResponse_AppChange::~CMsgClientPICSChangesSinceResponse_AppChange() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSChangesSinceResponse.AppChange)
  SharedDtor();
}

void CMsgClientPICSChangesSinceResponse_AppChange::SharedDtor() {
}

void CMsgClientPICSChangesSinceResponse_AppChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSChangesSinceResponse_AppChange::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSChangesSinceResponse_AppChange& CMsgClientPICSChangesSinceResponse_AppChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse_AppChange.base);
  return *internal_default_instance();
}


void CMsgClientPICSChangesSinceResponse_AppChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSChangesSinceResponse.AppChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&needs_token_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(needs_token_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSChangesSinceResponse_AppChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSChangesSinceResponse.AppChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_needs_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSChangesSinceResponse.AppChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSChangesSinceResponse.AppChange)
  return false;
#undef DO_
}

void CMsgClientPICSChangesSinceResponse_AppChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSChangesSinceResponse.AppChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_number(), output);
  }

  // optional bool needs_token = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needs_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSChangesSinceResponse.AppChange)
}

::google::protobuf::uint8* CMsgClientPICSChangesSinceResponse_AppChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSChangesSinceResponse.AppChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_number(), target);
  }

  // optional bool needs_token = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needs_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSChangesSinceResponse.AppChange)
  return target;
}

size_t CMsgClientPICSChangesSinceResponse_AppChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSChangesSinceResponse.AppChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 change_number = 2;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_number());
    }

    // optional bool needs_token = 3;
    if (has_needs_token()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSChangesSinceResponse_AppChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSChangesSinceResponse.AppChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSChangesSinceResponse_AppChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSChangesSinceResponse_AppChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSChangesSinceResponse.AppChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSChangesSinceResponse.AppChange)
    MergeFrom(*source);
  }
}

void CMsgClientPICSChangesSinceResponse_AppChange::MergeFrom(const CMsgClientPICSChangesSinceResponse_AppChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSChangesSinceResponse.AppChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      change_number_ = from.change_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      needs_token_ = from.needs_token_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSChangesSinceResponse_AppChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSChangesSinceResponse.AppChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSChangesSinceResponse_AppChange::CopyFrom(const CMsgClientPICSChangesSinceResponse_AppChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSChangesSinceResponse.AppChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSChangesSinceResponse_AppChange::IsInitialized() const {
  return true;
}

void CMsgClientPICSChangesSinceResponse_AppChange::Swap(CMsgClientPICSChangesSinceResponse_AppChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSChangesSinceResponse_AppChange::InternalSwap(CMsgClientPICSChangesSinceResponse_AppChange* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(change_number_, other->change_number_);
  swap(needs_token_, other->needs_token_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSChangesSinceResponse_AppChange::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSChangesSinceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSChangesSinceResponse::kCurrentChangeNumberFieldNumber;
const int CMsgClientPICSChangesSinceResponse::kSinceChangeNumberFieldNumber;
const int CMsgClientPICSChangesSinceResponse::kForceFullUpdateFieldNumber;
const int CMsgClientPICSChangesSinceResponse::kPackageChangesFieldNumber;
const int CMsgClientPICSChangesSinceResponse::kAppChangesFieldNumber;
const int CMsgClientPICSChangesSinceResponse::kForceFullAppUpdateFieldNumber;
const int CMsgClientPICSChangesSinceResponse::kForceFullPackageUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSChangesSinceResponse::CMsgClientPICSChangesSinceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSChangesSinceResponse)
}
CMsgClientPICSChangesSinceResponse::CMsgClientPICSChangesSinceResponse(const CMsgClientPICSChangesSinceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      package_changes_(from.package_changes_),
      app_changes_(from.app_changes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current_change_number_, &from.current_change_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_full_package_update_) -
    reinterpret_cast<char*>(&current_change_number_)) + sizeof(force_full_package_update_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSChangesSinceResponse)
}

void CMsgClientPICSChangesSinceResponse::SharedCtor() {
  ::memset(&current_change_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_full_package_update_) -
      reinterpret_cast<char*>(&current_change_number_)) + sizeof(force_full_package_update_));
}

CMsgClientPICSChangesSinceResponse::~CMsgClientPICSChangesSinceResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSChangesSinceResponse)
  SharedDtor();
}

void CMsgClientPICSChangesSinceResponse::SharedDtor() {
}

void CMsgClientPICSChangesSinceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSChangesSinceResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSChangesSinceResponse& CMsgClientPICSChangesSinceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSChangesSinceResponse.base);
  return *internal_default_instance();
}


void CMsgClientPICSChangesSinceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSChangesSinceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_changes_.Clear();
  app_changes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&current_change_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&force_full_package_update_) -
        reinterpret_cast<char*>(&current_change_number_)) + sizeof(force_full_package_update_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSChangesSinceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSChangesSinceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 current_change_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_current_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 since_change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_since_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &since_change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_full_update = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_force_full_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_full_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPICSChangesSinceResponse.PackageChange package_changes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_package_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPICSChangesSinceResponse.AppChange app_changes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_app_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_full_app_update = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_force_full_app_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_full_app_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_full_package_update = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_force_full_package_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_full_package_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSChangesSinceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSChangesSinceResponse)
  return false;
#undef DO_
}

void CMsgClientPICSChangesSinceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSChangesSinceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 current_change_number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->current_change_number(), output);
  }

  // optional uint32 since_change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->since_change_number(), output);
  }

  // optional bool force_full_update = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->force_full_update(), output);
  }

  // repeated .CMsgClientPICSChangesSinceResponse.PackageChange package_changes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_changes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->package_changes(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgClientPICSChangesSinceResponse.AppChange app_changes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_changes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->app_changes(static_cast<int>(i)),
      output);
  }

  // optional bool force_full_app_update = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->force_full_app_update(), output);
  }

  // optional bool force_full_package_update = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->force_full_package_update(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSChangesSinceResponse)
}

::google::protobuf::uint8* CMsgClientPICSChangesSinceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSChangesSinceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 current_change_number = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->current_change_number(), target);
  }

  // optional uint32 since_change_number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->since_change_number(), target);
  }

  // optional bool force_full_update = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->force_full_update(), target);
  }

  // repeated .CMsgClientPICSChangesSinceResponse.PackageChange package_changes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_changes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->package_changes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgClientPICSChangesSinceResponse.AppChange app_changes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_changes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->app_changes(static_cast<int>(i)), deterministic, target);
  }

  // optional bool force_full_app_update = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->force_full_app_update(), target);
  }

  // optional bool force_full_package_update = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->force_full_package_update(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSChangesSinceResponse)
  return target;
}

size_t CMsgClientPICSChangesSinceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSChangesSinceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPICSChangesSinceResponse.PackageChange package_changes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->package_changes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->package_changes(static_cast<int>(i)));
    }
  }

  // repeated .CMsgClientPICSChangesSinceResponse.AppChange app_changes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->app_changes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->app_changes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 current_change_number = 1;
    if (has_current_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current_change_number());
    }

    // optional uint32 since_change_number = 2;
    if (has_since_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->since_change_number());
    }

    // optional bool force_full_update = 3;
    if (has_force_full_update()) {
      total_size += 1 + 1;
    }

    // optional bool force_full_app_update = 6;
    if (has_force_full_app_update()) {
      total_size += 1 + 1;
    }

    // optional bool force_full_package_update = 7;
    if (has_force_full_package_update()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSChangesSinceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSChangesSinceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSChangesSinceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSChangesSinceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSChangesSinceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSChangesSinceResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPICSChangesSinceResponse::MergeFrom(const CMsgClientPICSChangesSinceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSChangesSinceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  package_changes_.MergeFrom(from.package_changes_);
  app_changes_.MergeFrom(from.app_changes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      current_change_number_ = from.current_change_number_;
    }
    if (cached_has_bits & 0x00000002u) {
      since_change_number_ = from.since_change_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      force_full_update_ = from.force_full_update_;
    }
    if (cached_has_bits & 0x00000008u) {
      force_full_app_update_ = from.force_full_app_update_;
    }
    if (cached_has_bits & 0x00000010u) {
      force_full_package_update_ = from.force_full_package_update_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSChangesSinceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSChangesSinceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSChangesSinceResponse::CopyFrom(const CMsgClientPICSChangesSinceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSChangesSinceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSChangesSinceResponse::IsInitialized() const {
  return true;
}

void CMsgClientPICSChangesSinceResponse::Swap(CMsgClientPICSChangesSinceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSChangesSinceResponse::InternalSwap(CMsgClientPICSChangesSinceResponse* other) {
  using std::swap;
  CastToBase(&package_changes_)->InternalSwap(CastToBase(&other->package_changes_));
  CastToBase(&app_changes_)->InternalSwap(CastToBase(&other->app_changes_));
  swap(current_change_number_, other->current_change_number_);
  swap(since_change_number_, other->since_change_number_);
  swap(force_full_update_, other->force_full_update_);
  swap(force_full_app_update_, other->force_full_app_update_);
  swap(force_full_package_update_, other->force_full_package_update_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSChangesSinceResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSProductInfoRequest_AppInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSProductInfoRequest_AppInfo::kAppidFieldNumber;
const int CMsgClientPICSProductInfoRequest_AppInfo::kAccessTokenFieldNumber;
const int CMsgClientPICSProductInfoRequest_AppInfo::kOnlyPublicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSProductInfoRequest_AppInfo::CMsgClientPICSProductInfoRequest_AppInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest_AppInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSProductInfoRequest.AppInfo)
}
CMsgClientPICSProductInfoRequest_AppInfo::CMsgClientPICSProductInfoRequest_AppInfo(const CMsgClientPICSProductInfoRequest_AppInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&access_token_, &from.access_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&only_public_) -
    reinterpret_cast<char*>(&access_token_)) + sizeof(only_public_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSProductInfoRequest.AppInfo)
}

void CMsgClientPICSProductInfoRequest_AppInfo::SharedCtor() {
  ::memset(&access_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&only_public_) -
      reinterpret_cast<char*>(&access_token_)) + sizeof(only_public_));
}

CMsgClientPICSProductInfoRequest_AppInfo::~CMsgClientPICSProductInfoRequest_AppInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSProductInfoRequest.AppInfo)
  SharedDtor();
}

void CMsgClientPICSProductInfoRequest_AppInfo::SharedDtor() {
}

void CMsgClientPICSProductInfoRequest_AppInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSProductInfoRequest_AppInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSProductInfoRequest_AppInfo& CMsgClientPICSProductInfoRequest_AppInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest_AppInfo.base);
  return *internal_default_instance();
}


void CMsgClientPICSProductInfoRequest_AppInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSProductInfoRequest.AppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&access_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&only_public_) -
        reinterpret_cast<char*>(&access_token_)) + sizeof(only_public_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSProductInfoRequest_AppInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSProductInfoRequest.AppInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 access_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_access_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &access_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool only_public = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_only_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSProductInfoRequest.AppInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSProductInfoRequest.AppInfo)
  return false;
#undef DO_
}

void CMsgClientPICSProductInfoRequest_AppInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSProductInfoRequest.AppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->access_token(), output);
  }

  // optional bool only_public = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->only_public(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSProductInfoRequest.AppInfo)
}

::google::protobuf::uint8* CMsgClientPICSProductInfoRequest_AppInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSProductInfoRequest.AppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->access_token(), target);
  }

  // optional bool only_public = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->only_public(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSProductInfoRequest.AppInfo)
  return target;
}

size_t CMsgClientPICSProductInfoRequest_AppInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSProductInfoRequest.AppInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 access_token = 2;
    if (has_access_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->access_token());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool only_public = 3;
    if (has_only_public()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSProductInfoRequest_AppInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSProductInfoRequest.AppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSProductInfoRequest_AppInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSProductInfoRequest_AppInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSProductInfoRequest.AppInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSProductInfoRequest.AppInfo)
    MergeFrom(*source);
  }
}

void CMsgClientPICSProductInfoRequest_AppInfo::MergeFrom(const CMsgClientPICSProductInfoRequest_AppInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSProductInfoRequest.AppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      access_token_ = from.access_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      only_public_ = from.only_public_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSProductInfoRequest_AppInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSProductInfoRequest.AppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSProductInfoRequest_AppInfo::CopyFrom(const CMsgClientPICSProductInfoRequest_AppInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSProductInfoRequest.AppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSProductInfoRequest_AppInfo::IsInitialized() const {
  return true;
}

void CMsgClientPICSProductInfoRequest_AppInfo::Swap(CMsgClientPICSProductInfoRequest_AppInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSProductInfoRequest_AppInfo::InternalSwap(CMsgClientPICSProductInfoRequest_AppInfo* other) {
  using std::swap;
  swap(access_token_, other->access_token_);
  swap(appid_, other->appid_);
  swap(only_public_, other->only_public_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSProductInfoRequest_AppInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSProductInfoRequest_PackageInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSProductInfoRequest_PackageInfo::kPackageidFieldNumber;
const int CMsgClientPICSProductInfoRequest_PackageInfo::kAccessTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSProductInfoRequest_PackageInfo::CMsgClientPICSProductInfoRequest_PackageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest_PackageInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSProductInfoRequest.PackageInfo)
}
CMsgClientPICSProductInfoRequest_PackageInfo::CMsgClientPICSProductInfoRequest_PackageInfo(const CMsgClientPICSProductInfoRequest_PackageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&access_token_, &from.access_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&packageid_) -
    reinterpret_cast<char*>(&access_token_)) + sizeof(packageid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSProductInfoRequest.PackageInfo)
}

void CMsgClientPICSProductInfoRequest_PackageInfo::SharedCtor() {
  ::memset(&access_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packageid_) -
      reinterpret_cast<char*>(&access_token_)) + sizeof(packageid_));
}

CMsgClientPICSProductInfoRequest_PackageInfo::~CMsgClientPICSProductInfoRequest_PackageInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSProductInfoRequest.PackageInfo)
  SharedDtor();
}

void CMsgClientPICSProductInfoRequest_PackageInfo::SharedDtor() {
}

void CMsgClientPICSProductInfoRequest_PackageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSProductInfoRequest_PackageInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSProductInfoRequest_PackageInfo& CMsgClientPICSProductInfoRequest_PackageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest_PackageInfo.base);
  return *internal_default_instance();
}


void CMsgClientPICSProductInfoRequest_PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&access_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&packageid_) -
        reinterpret_cast<char*>(&access_token_)) + sizeof(packageid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSProductInfoRequest_PackageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 access_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_access_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &access_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSProductInfoRequest.PackageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSProductInfoRequest.PackageInfo)
  return false;
#undef DO_
}

void CMsgClientPICSProductInfoRequest_PackageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packageid(), output);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->access_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSProductInfoRequest.PackageInfo)
}

::google::protobuf::uint8* CMsgClientPICSProductInfoRequest_PackageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packageid(), target);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->access_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSProductInfoRequest.PackageInfo)
  return target;
}

size_t CMsgClientPICSProductInfoRequest_PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 access_token = 2;
    if (has_access_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->access_token());
    }

    // optional uint32 packageid = 1;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSProductInfoRequest_PackageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSProductInfoRequest_PackageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSProductInfoRequest_PackageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSProductInfoRequest.PackageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSProductInfoRequest.PackageInfo)
    MergeFrom(*source);
  }
}

void CMsgClientPICSProductInfoRequest_PackageInfo::MergeFrom(const CMsgClientPICSProductInfoRequest_PackageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      access_token_ = from.access_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      packageid_ = from.packageid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSProductInfoRequest_PackageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSProductInfoRequest_PackageInfo::CopyFrom(const CMsgClientPICSProductInfoRequest_PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSProductInfoRequest.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSProductInfoRequest_PackageInfo::IsInitialized() const {
  return true;
}

void CMsgClientPICSProductInfoRequest_PackageInfo::Swap(CMsgClientPICSProductInfoRequest_PackageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSProductInfoRequest_PackageInfo::InternalSwap(CMsgClientPICSProductInfoRequest_PackageInfo* other) {
  using std::swap;
  swap(access_token_, other->access_token_);
  swap(packageid_, other->packageid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSProductInfoRequest_PackageInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSProductInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSProductInfoRequest::kPackagesFieldNumber;
const int CMsgClientPICSProductInfoRequest::kAppsFieldNumber;
const int CMsgClientPICSProductInfoRequest::kMetaDataOnlyFieldNumber;
const int CMsgClientPICSProductInfoRequest::kNumPrevFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSProductInfoRequest::CMsgClientPICSProductInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSProductInfoRequest)
}
CMsgClientPICSProductInfoRequest::CMsgClientPICSProductInfoRequest(const CMsgClientPICSProductInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      packages_(from.packages_),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&meta_data_only_, &from.meta_data_only_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_prev_failed_) -
    reinterpret_cast<char*>(&meta_data_only_)) + sizeof(num_prev_failed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSProductInfoRequest)
}

void CMsgClientPICSProductInfoRequest::SharedCtor() {
  ::memset(&meta_data_only_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_prev_failed_) -
      reinterpret_cast<char*>(&meta_data_only_)) + sizeof(num_prev_failed_));
}

CMsgClientPICSProductInfoRequest::~CMsgClientPICSProductInfoRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSProductInfoRequest)
  SharedDtor();
}

void CMsgClientPICSProductInfoRequest::SharedDtor() {
}

void CMsgClientPICSProductInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSProductInfoRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSProductInfoRequest& CMsgClientPICSProductInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoRequest.base);
  return *internal_default_instance();
}


void CMsgClientPICSProductInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSProductInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  apps_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&meta_data_only_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_prev_failed_) -
        reinterpret_cast<char*>(&meta_data_only_)) + sizeof(num_prev_failed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSProductInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSProductInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientPICSProductInfoRequest.PackageInfo packages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPICSProductInfoRequest.AppInfo apps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool meta_data_only = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_meta_data_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &meta_data_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_prev_failed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num_prev_failed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_prev_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSProductInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSProductInfoRequest)
  return false;
#undef DO_
}

void CMsgClientPICSProductInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSProductInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPICSProductInfoRequest.PackageInfo packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->packages(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgClientPICSProductInfoRequest.AppInfo apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->apps(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool meta_data_only = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->meta_data_only(), output);
  }

  // optional uint32 num_prev_failed = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_prev_failed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSProductInfoRequest)
}

::google::protobuf::uint8* CMsgClientPICSProductInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSProductInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPICSProductInfoRequest.PackageInfo packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->packages(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgClientPICSProductInfoRequest.AppInfo apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->apps(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool meta_data_only = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->meta_data_only(), target);
  }

  // optional uint32 num_prev_failed = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_prev_failed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSProductInfoRequest)
  return target;
}

size_t CMsgClientPICSProductInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSProductInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPICSProductInfoRequest.PackageInfo packages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  // repeated .CMsgClientPICSProductInfoRequest.AppInfo apps = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool meta_data_only = 3;
    if (has_meta_data_only()) {
      total_size += 1 + 1;
    }

    // optional uint32 num_prev_failed = 4;
    if (has_num_prev_failed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_prev_failed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSProductInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSProductInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSProductInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSProductInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSProductInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSProductInfoRequest)
    MergeFrom(*source);
  }
}

void CMsgClientPICSProductInfoRequest::MergeFrom(const CMsgClientPICSProductInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSProductInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  apps_.MergeFrom(from.apps_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      meta_data_only_ = from.meta_data_only_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_prev_failed_ = from.num_prev_failed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSProductInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSProductInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSProductInfoRequest::CopyFrom(const CMsgClientPICSProductInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSProductInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSProductInfoRequest::IsInitialized() const {
  return true;
}

void CMsgClientPICSProductInfoRequest::Swap(CMsgClientPICSProductInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSProductInfoRequest::InternalSwap(CMsgClientPICSProductInfoRequest* other) {
  using std::swap;
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  swap(meta_data_only_, other->meta_data_only_);
  swap(num_prev_failed_, other->num_prev_failed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSProductInfoRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSProductInfoResponse_AppInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSProductInfoResponse_AppInfo::kAppidFieldNumber;
const int CMsgClientPICSProductInfoResponse_AppInfo::kChangeNumberFieldNumber;
const int CMsgClientPICSProductInfoResponse_AppInfo::kMissingTokenFieldNumber;
const int CMsgClientPICSProductInfoResponse_AppInfo::kShaFieldNumber;
const int CMsgClientPICSProductInfoResponse_AppInfo::kBufferFieldNumber;
const int CMsgClientPICSProductInfoResponse_AppInfo::kOnlyPublicFieldNumber;
const int CMsgClientPICSProductInfoResponse_AppInfo::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSProductInfoResponse_AppInfo::CMsgClientPICSProductInfoResponse_AppInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse_AppInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSProductInfoResponse.AppInfo)
}
CMsgClientPICSProductInfoResponse_AppInfo::CMsgClientPICSProductInfoResponse_AppInfo(const CMsgClientPICSProductInfoResponse_AppInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buffer()) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSProductInfoResponse.AppInfo)
}

void CMsgClientPICSProductInfoResponse_AppInfo::SharedCtor() {
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(size_));
}

CMsgClientPICSProductInfoResponse_AppInfo::~CMsgClientPICSProductInfoResponse_AppInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSProductInfoResponse.AppInfo)
  SharedDtor();
}

void CMsgClientPICSProductInfoResponse_AppInfo::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPICSProductInfoResponse_AppInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSProductInfoResponse_AppInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSProductInfoResponse_AppInfo& CMsgClientPICSProductInfoResponse_AppInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse_AppInfo.base);
  return *internal_default_instance();
}


void CMsgClientPICSProductInfoResponse_AppInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSProductInfoResponse.AppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      buffer_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSProductInfoResponse_AppInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSProductInfoResponse.AppInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool missing_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_missing_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &missing_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes buffer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool only_public = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_only_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSProductInfoResponse.AppInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSProductInfoResponse.AppInfo)
  return false;
#undef DO_
}

void CMsgClientPICSProductInfoResponse_AppInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSProductInfoResponse.AppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_number(), output);
  }

  // optional bool missing_token = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->missing_token(), output);
  }

  // optional bytes sha = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha(), output);
  }

  // optional bytes buffer = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->buffer(), output);
  }

  // optional bool only_public = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->only_public(), output);
  }

  // optional uint32 size = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSProductInfoResponse.AppInfo)
}

::google::protobuf::uint8* CMsgClientPICSProductInfoResponse_AppInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSProductInfoResponse.AppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_number(), target);
  }

  // optional bool missing_token = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->missing_token(), target);
  }

  // optional bytes sha = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha(), target);
  }

  // optional bytes buffer = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->buffer(), target);
  }

  // optional bool only_public = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->only_public(), target);
  }

  // optional uint32 size = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSProductInfoResponse.AppInfo)
  return target;
}

size_t CMsgClientPICSProductInfoResponse_AppInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSProductInfoResponse.AppInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes sha = 4;
    if (has_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha());
    }

    // optional bytes buffer = 5;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 change_number = 2;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_number());
    }

    // optional bool missing_token = 3;
    if (has_missing_token()) {
      total_size += 1 + 1;
    }

    // optional bool only_public = 6;
    if (has_only_public()) {
      total_size += 1 + 1;
    }

    // optional uint32 size = 7;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSProductInfoResponse_AppInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSProductInfoResponse.AppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSProductInfoResponse_AppInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSProductInfoResponse_AppInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSProductInfoResponse.AppInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSProductInfoResponse.AppInfo)
    MergeFrom(*source);
  }
}

void CMsgClientPICSProductInfoResponse_AppInfo::MergeFrom(const CMsgClientPICSProductInfoResponse_AppInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSProductInfoResponse.AppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha();
      sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_buffer();
      buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      change_number_ = from.change_number_;
    }
    if (cached_has_bits & 0x00000010u) {
      missing_token_ = from.missing_token_;
    }
    if (cached_has_bits & 0x00000020u) {
      only_public_ = from.only_public_;
    }
    if (cached_has_bits & 0x00000040u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSProductInfoResponse_AppInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSProductInfoResponse.AppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSProductInfoResponse_AppInfo::CopyFrom(const CMsgClientPICSProductInfoResponse_AppInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSProductInfoResponse.AppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSProductInfoResponse_AppInfo::IsInitialized() const {
  return true;
}

void CMsgClientPICSProductInfoResponse_AppInfo::Swap(CMsgClientPICSProductInfoResponse_AppInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSProductInfoResponse_AppInfo::InternalSwap(CMsgClientPICSProductInfoResponse_AppInfo* other) {
  using std::swap;
  sha_.Swap(&other->sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buffer_.Swap(&other->buffer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(change_number_, other->change_number_);
  swap(missing_token_, other->missing_token_);
  swap(only_public_, other->only_public_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSProductInfoResponse_AppInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSProductInfoResponse_PackageInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSProductInfoResponse_PackageInfo::kPackageidFieldNumber;
const int CMsgClientPICSProductInfoResponse_PackageInfo::kChangeNumberFieldNumber;
const int CMsgClientPICSProductInfoResponse_PackageInfo::kMissingTokenFieldNumber;
const int CMsgClientPICSProductInfoResponse_PackageInfo::kShaFieldNumber;
const int CMsgClientPICSProductInfoResponse_PackageInfo::kBufferFieldNumber;
const int CMsgClientPICSProductInfoResponse_PackageInfo::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSProductInfoResponse_PackageInfo::CMsgClientPICSProductInfoResponse_PackageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse_PackageInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSProductInfoResponse.PackageInfo)
}
CMsgClientPICSProductInfoResponse_PackageInfo::CMsgClientPICSProductInfoResponse_PackageInfo(const CMsgClientPICSProductInfoResponse_PackageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buffer()) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSProductInfoResponse.PackageInfo)
}

void CMsgClientPICSProductInfoResponse_PackageInfo::SharedCtor() {
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(size_));
}

CMsgClientPICSProductInfoResponse_PackageInfo::~CMsgClientPICSProductInfoResponse_PackageInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSProductInfoResponse.PackageInfo)
  SharedDtor();
}

void CMsgClientPICSProductInfoResponse_PackageInfo::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPICSProductInfoResponse_PackageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSProductInfoResponse_PackageInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSProductInfoResponse_PackageInfo& CMsgClientPICSProductInfoResponse_PackageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse_PackageInfo.base);
  return *internal_default_instance();
}


void CMsgClientPICSProductInfoResponse_PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      buffer_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSProductInfoResponse_PackageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool missing_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_missing_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &missing_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes buffer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSProductInfoResponse.PackageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSProductInfoResponse.PackageInfo)
  return false;
#undef DO_
}

void CMsgClientPICSProductInfoResponse_PackageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packageid(), output);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_number(), output);
  }

  // optional bool missing_token = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->missing_token(), output);
  }

  // optional bytes sha = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha(), output);
  }

  // optional bytes buffer = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->buffer(), output);
  }

  // optional uint32 size = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSProductInfoResponse.PackageInfo)
}

::google::protobuf::uint8* CMsgClientPICSProductInfoResponse_PackageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packageid(), target);
  }

  // optional uint32 change_number = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_number(), target);
  }

  // optional bool missing_token = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->missing_token(), target);
  }

  // optional bytes sha = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha(), target);
  }

  // optional bytes buffer = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->buffer(), target);
  }

  // optional uint32 size = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSProductInfoResponse.PackageInfo)
  return target;
}

size_t CMsgClientPICSProductInfoResponse_PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes sha = 4;
    if (has_sha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha());
    }

    // optional bytes buffer = 5;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

    // optional uint32 packageid = 1;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

    // optional uint32 change_number = 2;
    if (has_change_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_number());
    }

    // optional bool missing_token = 3;
    if (has_missing_token()) {
      total_size += 1 + 1;
    }

    // optional uint32 size = 6;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSProductInfoResponse_PackageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSProductInfoResponse_PackageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSProductInfoResponse_PackageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSProductInfoResponse.PackageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSProductInfoResponse.PackageInfo)
    MergeFrom(*source);
  }
}

void CMsgClientPICSProductInfoResponse_PackageInfo::MergeFrom(const CMsgClientPICSProductInfoResponse_PackageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sha();
      sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_buffer();
      buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
    }
    if (cached_has_bits & 0x00000004u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000008u) {
      change_number_ = from.change_number_;
    }
    if (cached_has_bits & 0x00000010u) {
      missing_token_ = from.missing_token_;
    }
    if (cached_has_bits & 0x00000020u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSProductInfoResponse_PackageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSProductInfoResponse_PackageInfo::CopyFrom(const CMsgClientPICSProductInfoResponse_PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSProductInfoResponse.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSProductInfoResponse_PackageInfo::IsInitialized() const {
  return true;
}

void CMsgClientPICSProductInfoResponse_PackageInfo::Swap(CMsgClientPICSProductInfoResponse_PackageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSProductInfoResponse_PackageInfo::InternalSwap(CMsgClientPICSProductInfoResponse_PackageInfo* other) {
  using std::swap;
  sha_.Swap(&other->sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buffer_.Swap(&other->buffer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(packageid_, other->packageid_);
  swap(change_number_, other->change_number_);
  swap(missing_token_, other->missing_token_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSProductInfoResponse_PackageInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSProductInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSProductInfoResponse::kAppsFieldNumber;
const int CMsgClientPICSProductInfoResponse::kUnknownAppidsFieldNumber;
const int CMsgClientPICSProductInfoResponse::kPackagesFieldNumber;
const int CMsgClientPICSProductInfoResponse::kUnknownPackageidsFieldNumber;
const int CMsgClientPICSProductInfoResponse::kMetaDataOnlyFieldNumber;
const int CMsgClientPICSProductInfoResponse::kResponsePendingFieldNumber;
const int CMsgClientPICSProductInfoResponse::kHttpMinSizeFieldNumber;
const int CMsgClientPICSProductInfoResponse::kHttpHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSProductInfoResponse::CMsgClientPICSProductInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSProductInfoResponse)
}
CMsgClientPICSProductInfoResponse::CMsgClientPICSProductInfoResponse(const CMsgClientPICSProductInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_(from.apps_),
      unknown_appids_(from.unknown_appids_),
      packages_(from.packages_),
      unknown_packageids_(from.unknown_packageids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  http_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_http_host()) {
    http_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_host_);
  }
  ::memcpy(&meta_data_only_, &from.meta_data_only_,
    static_cast<size_t>(reinterpret_cast<char*>(&http_min_size_) -
    reinterpret_cast<char*>(&meta_data_only_)) + sizeof(http_min_size_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSProductInfoResponse)
}

void CMsgClientPICSProductInfoResponse::SharedCtor() {
  http_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_data_only_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_min_size_) -
      reinterpret_cast<char*>(&meta_data_only_)) + sizeof(http_min_size_));
}

CMsgClientPICSProductInfoResponse::~CMsgClientPICSProductInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSProductInfoResponse)
  SharedDtor();
}

void CMsgClientPICSProductInfoResponse::SharedDtor() {
  http_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPICSProductInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSProductInfoResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSProductInfoResponse& CMsgClientPICSProductInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSProductInfoResponse.base);
  return *internal_default_instance();
}


void CMsgClientPICSProductInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSProductInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  unknown_appids_.Clear();
  packages_.Clear();
  unknown_packageids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    http_host_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&meta_data_only_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&http_min_size_) -
        reinterpret_cast<char*>(&meta_data_only_)) + sizeof(http_min_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSProductInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSProductInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientPICSProductInfoResponse.AppInfo apps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unknown_appids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_unknown_appids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unknown_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPICSProductInfoResponse.PackageInfo packages = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unknown_packageids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_unknown_packageids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unknown_packageids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool meta_data_only = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_meta_data_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &meta_data_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool response_pending = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_response_pending();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 http_min_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_http_min_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &http_min_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string http_host = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->http_host().data(), static_cast<int>(this->http_host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPICSProductInfoResponse.http_host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSProductInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSProductInfoResponse)
  return false;
#undef DO_
}

void CMsgClientPICSProductInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSProductInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPICSProductInfoResponse.AppInfo apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->apps(static_cast<int>(i)),
      output);
  }

  // repeated uint32 unknown_appids = 2;
  for (int i = 0, n = this->unknown_appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->unknown_appids(i), output);
  }

  // repeated .CMsgClientPICSProductInfoResponse.PackageInfo packages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->packages(static_cast<int>(i)),
      output);
  }

  // repeated uint32 unknown_packageids = 4;
  for (int i = 0, n = this->unknown_packageids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->unknown_packageids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool meta_data_only = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->meta_data_only(), output);
  }

  // optional bool response_pending = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->response_pending(), output);
  }

  // optional uint32 http_min_size = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->http_min_size(), output);
  }

  // optional string http_host = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_host().data(), static_cast<int>(this->http_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPICSProductInfoResponse.http_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->http_host(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSProductInfoResponse)
}

::google::protobuf::uint8* CMsgClientPICSProductInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSProductInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPICSProductInfoResponse.AppInfo apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->apps(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 unknown_appids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->unknown_appids_, target);

  // repeated .CMsgClientPICSProductInfoResponse.PackageInfo packages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->packages(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 unknown_packageids = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->unknown_packageids_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool meta_data_only = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->meta_data_only(), target);
  }

  // optional bool response_pending = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->response_pending(), target);
  }

  // optional uint32 http_min_size = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->http_min_size(), target);
  }

  // optional string http_host = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->http_host().data(), static_cast<int>(this->http_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPICSProductInfoResponse.http_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->http_host(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSProductInfoResponse)
  return target;
}

size_t CMsgClientPICSProductInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSProductInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPICSProductInfoResponse.AppInfo apps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  // repeated uint32 unknown_appids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unknown_appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unknown_appids_size());
    total_size += data_size;
  }

  // repeated .CMsgClientPICSProductInfoResponse.PackageInfo packages = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  // repeated uint32 unknown_packageids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unknown_packageids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unknown_packageids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string http_host = 8;
    if (has_http_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->http_host());
    }

    // optional bool meta_data_only = 5;
    if (has_meta_data_only()) {
      total_size += 1 + 1;
    }

    // optional bool response_pending = 6;
    if (has_response_pending()) {
      total_size += 1 + 1;
    }

    // optional uint32 http_min_size = 7;
    if (has_http_min_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->http_min_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSProductInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSProductInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSProductInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSProductInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSProductInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSProductInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPICSProductInfoResponse::MergeFrom(const CMsgClientPICSProductInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSProductInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  unknown_appids_.MergeFrom(from.unknown_appids_);
  packages_.MergeFrom(from.packages_);
  unknown_packageids_.MergeFrom(from.unknown_packageids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_http_host();
      http_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_host_);
    }
    if (cached_has_bits & 0x00000002u) {
      meta_data_only_ = from.meta_data_only_;
    }
    if (cached_has_bits & 0x00000004u) {
      response_pending_ = from.response_pending_;
    }
    if (cached_has_bits & 0x00000008u) {
      http_min_size_ = from.http_min_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSProductInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSProductInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSProductInfoResponse::CopyFrom(const CMsgClientPICSProductInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSProductInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSProductInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientPICSProductInfoResponse::Swap(CMsgClientPICSProductInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSProductInfoResponse::InternalSwap(CMsgClientPICSProductInfoResponse* other) {
  using std::swap;
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  unknown_appids_.InternalSwap(&other->unknown_appids_);
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  unknown_packageids_.InternalSwap(&other->unknown_packageids_);
  http_host_.Swap(&other->http_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(meta_data_only_, other->meta_data_only_);
  swap(response_pending_, other->response_pending_);
  swap(http_min_size_, other->http_min_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSProductInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSAccessTokenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSAccessTokenRequest::kPackageidsFieldNumber;
const int CMsgClientPICSAccessTokenRequest::kAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSAccessTokenRequest::CMsgClientPICSAccessTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSAccessTokenRequest)
}
CMsgClientPICSAccessTokenRequest::CMsgClientPICSAccessTokenRequest(const CMsgClientPICSAccessTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      packageids_(from.packageids_),
      appids_(from.appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSAccessTokenRequest)
}

void CMsgClientPICSAccessTokenRequest::SharedCtor() {
}

CMsgClientPICSAccessTokenRequest::~CMsgClientPICSAccessTokenRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSAccessTokenRequest)
  SharedDtor();
}

void CMsgClientPICSAccessTokenRequest::SharedDtor() {
}

void CMsgClientPICSAccessTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSAccessTokenRequest::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSAccessTokenRequest& CMsgClientPICSAccessTokenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenRequest.base);
  return *internal_default_instance();
}


void CMsgClientPICSAccessTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packageids_.Clear();
  appids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSAccessTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSAccessTokenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 packageids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_packageids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_packageids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 appids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_appids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSAccessTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSAccessTokenRequest)
  return false;
#undef DO_
}

void CMsgClientPICSAccessTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 packageids = 1;
  for (int i = 0, n = this->packageids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->packageids(i), output);
  }

  // repeated uint32 appids = 2;
  for (int i = 0, n = this->appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSAccessTokenRequest)
}

::google::protobuf::uint8* CMsgClientPICSAccessTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 packageids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->packageids_, target);

  // repeated uint32 appids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSAccessTokenRequest)
  return target;
}

size_t CMsgClientPICSAccessTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSAccessTokenRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 packageids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->packageids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->packageids_size());
    total_size += data_size;
  }

  // repeated uint32 appids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->appids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSAccessTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSAccessTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSAccessTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSAccessTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSAccessTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSAccessTokenRequest)
    MergeFrom(*source);
  }
}

void CMsgClientPICSAccessTokenRequest::MergeFrom(const CMsgClientPICSAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSAccessTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packageids_.MergeFrom(from.packageids_);
  appids_.MergeFrom(from.appids_);
}

void CMsgClientPICSAccessTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSAccessTokenRequest::CopyFrom(const CMsgClientPICSAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSAccessTokenRequest::IsInitialized() const {
  return true;
}

void CMsgClientPICSAccessTokenRequest::Swap(CMsgClientPICSAccessTokenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSAccessTokenRequest::InternalSwap(CMsgClientPICSAccessTokenRequest* other) {
  using std::swap;
  packageids_.InternalSwap(&other->packageids_);
  appids_.InternalSwap(&other->appids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSAccessTokenRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSAccessTokenResponse_PackageToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSAccessTokenResponse_PackageToken::kPackageidFieldNumber;
const int CMsgClientPICSAccessTokenResponse_PackageToken::kAccessTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSAccessTokenResponse_PackageToken::CMsgClientPICSAccessTokenResponse_PackageToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse_PackageToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSAccessTokenResponse.PackageToken)
}
CMsgClientPICSAccessTokenResponse_PackageToken::CMsgClientPICSAccessTokenResponse_PackageToken(const CMsgClientPICSAccessTokenResponse_PackageToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&access_token_, &from.access_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&packageid_) -
    reinterpret_cast<char*>(&access_token_)) + sizeof(packageid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSAccessTokenResponse.PackageToken)
}

void CMsgClientPICSAccessTokenResponse_PackageToken::SharedCtor() {
  ::memset(&access_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packageid_) -
      reinterpret_cast<char*>(&access_token_)) + sizeof(packageid_));
}

CMsgClientPICSAccessTokenResponse_PackageToken::~CMsgClientPICSAccessTokenResponse_PackageToken() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSAccessTokenResponse.PackageToken)
  SharedDtor();
}

void CMsgClientPICSAccessTokenResponse_PackageToken::SharedDtor() {
}

void CMsgClientPICSAccessTokenResponse_PackageToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSAccessTokenResponse_PackageToken::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSAccessTokenResponse_PackageToken& CMsgClientPICSAccessTokenResponse_PackageToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse_PackageToken.base);
  return *internal_default_instance();
}


void CMsgClientPICSAccessTokenResponse_PackageToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&access_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&packageid_) -
        reinterpret_cast<char*>(&access_token_)) + sizeof(packageid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSAccessTokenResponse_PackageToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 access_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_access_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &access_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSAccessTokenResponse.PackageToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSAccessTokenResponse.PackageToken)
  return false;
#undef DO_
}

void CMsgClientPICSAccessTokenResponse_PackageToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packageid(), output);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->access_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSAccessTokenResponse.PackageToken)
}

::google::protobuf::uint8* CMsgClientPICSAccessTokenResponse_PackageToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packageid(), target);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->access_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSAccessTokenResponse.PackageToken)
  return target;
}

size_t CMsgClientPICSAccessTokenResponse_PackageToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 access_token = 2;
    if (has_access_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->access_token());
    }

    // optional uint32 packageid = 1;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSAccessTokenResponse_PackageToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSAccessTokenResponse_PackageToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSAccessTokenResponse_PackageToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSAccessTokenResponse.PackageToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSAccessTokenResponse.PackageToken)
    MergeFrom(*source);
  }
}

void CMsgClientPICSAccessTokenResponse_PackageToken::MergeFrom(const CMsgClientPICSAccessTokenResponse_PackageToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      access_token_ = from.access_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      packageid_ = from.packageid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSAccessTokenResponse_PackageToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSAccessTokenResponse_PackageToken::CopyFrom(const CMsgClientPICSAccessTokenResponse_PackageToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSAccessTokenResponse.PackageToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSAccessTokenResponse_PackageToken::IsInitialized() const {
  return true;
}

void CMsgClientPICSAccessTokenResponse_PackageToken::Swap(CMsgClientPICSAccessTokenResponse_PackageToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSAccessTokenResponse_PackageToken::InternalSwap(CMsgClientPICSAccessTokenResponse_PackageToken* other) {
  using std::swap;
  swap(access_token_, other->access_token_);
  swap(packageid_, other->packageid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSAccessTokenResponse_PackageToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSAccessTokenResponse_AppToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSAccessTokenResponse_AppToken::kAppidFieldNumber;
const int CMsgClientPICSAccessTokenResponse_AppToken::kAccessTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSAccessTokenResponse_AppToken::CMsgClientPICSAccessTokenResponse_AppToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse_AppToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSAccessTokenResponse.AppToken)
}
CMsgClientPICSAccessTokenResponse_AppToken::CMsgClientPICSAccessTokenResponse_AppToken(const CMsgClientPICSAccessTokenResponse_AppToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&access_token_, &from.access_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&access_token_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSAccessTokenResponse.AppToken)
}

void CMsgClientPICSAccessTokenResponse_AppToken::SharedCtor() {
  ::memset(&access_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&access_token_)) + sizeof(appid_));
}

CMsgClientPICSAccessTokenResponse_AppToken::~CMsgClientPICSAccessTokenResponse_AppToken() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSAccessTokenResponse.AppToken)
  SharedDtor();
}

void CMsgClientPICSAccessTokenResponse_AppToken::SharedDtor() {
}

void CMsgClientPICSAccessTokenResponse_AppToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSAccessTokenResponse_AppToken::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSAccessTokenResponse_AppToken& CMsgClientPICSAccessTokenResponse_AppToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse_AppToken.base);
  return *internal_default_instance();
}


void CMsgClientPICSAccessTokenResponse_AppToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSAccessTokenResponse.AppToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&access_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&access_token_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSAccessTokenResponse_AppToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSAccessTokenResponse.AppToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 access_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_access_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &access_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSAccessTokenResponse.AppToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSAccessTokenResponse.AppToken)
  return false;
#undef DO_
}

void CMsgClientPICSAccessTokenResponse_AppToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSAccessTokenResponse.AppToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->access_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSAccessTokenResponse.AppToken)
}

::google::protobuf::uint8* CMsgClientPICSAccessTokenResponse_AppToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSAccessTokenResponse.AppToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint64 access_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->access_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSAccessTokenResponse.AppToken)
  return target;
}

size_t CMsgClientPICSAccessTokenResponse_AppToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSAccessTokenResponse.AppToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 access_token = 2;
    if (has_access_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->access_token());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSAccessTokenResponse_AppToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSAccessTokenResponse.AppToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSAccessTokenResponse_AppToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSAccessTokenResponse_AppToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSAccessTokenResponse.AppToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSAccessTokenResponse.AppToken)
    MergeFrom(*source);
  }
}

void CMsgClientPICSAccessTokenResponse_AppToken::MergeFrom(const CMsgClientPICSAccessTokenResponse_AppToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSAccessTokenResponse.AppToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      access_token_ = from.access_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPICSAccessTokenResponse_AppToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSAccessTokenResponse.AppToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSAccessTokenResponse_AppToken::CopyFrom(const CMsgClientPICSAccessTokenResponse_AppToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSAccessTokenResponse.AppToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSAccessTokenResponse_AppToken::IsInitialized() const {
  return true;
}

void CMsgClientPICSAccessTokenResponse_AppToken::Swap(CMsgClientPICSAccessTokenResponse_AppToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSAccessTokenResponse_AppToken::InternalSwap(CMsgClientPICSAccessTokenResponse_AppToken* other) {
  using std::swap;
  swap(access_token_, other->access_token_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSAccessTokenResponse_AppToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPICSAccessTokenResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPICSAccessTokenResponse::kPackageAccessTokensFieldNumber;
const int CMsgClientPICSAccessTokenResponse::kPackageDeniedTokensFieldNumber;
const int CMsgClientPICSAccessTokenResponse::kAppAccessTokensFieldNumber;
const int CMsgClientPICSAccessTokenResponse::kAppDeniedTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPICSAccessTokenResponse::CMsgClientPICSAccessTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPICSAccessTokenResponse)
}
CMsgClientPICSAccessTokenResponse::CMsgClientPICSAccessTokenResponse(const CMsgClientPICSAccessTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      package_access_tokens_(from.package_access_tokens_),
      package_denied_tokens_(from.package_denied_tokens_),
      app_access_tokens_(from.app_access_tokens_),
      app_denied_tokens_(from.app_denied_tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientPICSAccessTokenResponse)
}

void CMsgClientPICSAccessTokenResponse::SharedCtor() {
}

CMsgClientPICSAccessTokenResponse::~CMsgClientPICSAccessTokenResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientPICSAccessTokenResponse)
  SharedDtor();
}

void CMsgClientPICSAccessTokenResponse::SharedDtor() {
}

void CMsgClientPICSAccessTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPICSAccessTokenResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPICSAccessTokenResponse& CMsgClientPICSAccessTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientPICSAccessTokenResponse.base);
  return *internal_default_instance();
}


void CMsgClientPICSAccessTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPICSAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_access_tokens_.Clear();
  package_denied_tokens_.Clear();
  app_access_tokens_.Clear();
  app_denied_tokens_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPICSAccessTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPICSAccessTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientPICSAccessTokenResponse.PackageToken package_access_tokens = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_package_access_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 package_denied_tokens = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_package_denied_tokens())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_package_denied_tokens())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPICSAccessTokenResponse.AppToken app_access_tokens = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_app_access_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 app_denied_tokens = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_app_denied_tokens())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_app_denied_tokens())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPICSAccessTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPICSAccessTokenResponse)
  return false;
#undef DO_
}

void CMsgClientPICSAccessTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPICSAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPICSAccessTokenResponse.PackageToken package_access_tokens = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_access_tokens_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->package_access_tokens(static_cast<int>(i)),
      output);
  }

  // repeated uint32 package_denied_tokens = 2;
  for (int i = 0, n = this->package_denied_tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->package_denied_tokens(i), output);
  }

  // repeated .CMsgClientPICSAccessTokenResponse.AppToken app_access_tokens = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_access_tokens_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->app_access_tokens(static_cast<int>(i)),
      output);
  }

  // repeated uint32 app_denied_tokens = 4;
  for (int i = 0, n = this->app_denied_tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->app_denied_tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPICSAccessTokenResponse)
}

::google::protobuf::uint8* CMsgClientPICSAccessTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPICSAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientPICSAccessTokenResponse.PackageToken package_access_tokens = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_access_tokens_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->package_access_tokens(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 package_denied_tokens = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->package_denied_tokens_, target);

  // repeated .CMsgClientPICSAccessTokenResponse.AppToken app_access_tokens = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_access_tokens_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->app_access_tokens(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 app_denied_tokens = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->app_denied_tokens_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPICSAccessTokenResponse)
  return target;
}

size_t CMsgClientPICSAccessTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPICSAccessTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPICSAccessTokenResponse.PackageToken package_access_tokens = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->package_access_tokens_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->package_access_tokens(static_cast<int>(i)));
    }
  }

  // repeated uint32 package_denied_tokens = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->package_denied_tokens_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->package_denied_tokens_size());
    total_size += data_size;
  }

  // repeated .CMsgClientPICSAccessTokenResponse.AppToken app_access_tokens = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->app_access_tokens_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->app_access_tokens(static_cast<int>(i)));
    }
  }

  // repeated uint32 app_denied_tokens = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->app_denied_tokens_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->app_denied_tokens_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPICSAccessTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPICSAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPICSAccessTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPICSAccessTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPICSAccessTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPICSAccessTokenResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPICSAccessTokenResponse::MergeFrom(const CMsgClientPICSAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPICSAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  package_access_tokens_.MergeFrom(from.package_access_tokens_);
  package_denied_tokens_.MergeFrom(from.package_denied_tokens_);
  app_access_tokens_.MergeFrom(from.app_access_tokens_);
  app_denied_tokens_.MergeFrom(from.app_denied_tokens_);
}

void CMsgClientPICSAccessTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPICSAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPICSAccessTokenResponse::CopyFrom(const CMsgClientPICSAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPICSAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPICSAccessTokenResponse::IsInitialized() const {
  return true;
}

void CMsgClientPICSAccessTokenResponse::Swap(CMsgClientPICSAccessTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPICSAccessTokenResponse::InternalSwap(CMsgClientPICSAccessTokenResponse* other) {
  using std::swap;
  CastToBase(&package_access_tokens_)->InternalSwap(CastToBase(&other->package_access_tokens_));
  package_denied_tokens_.InternalSwap(&other->package_denied_tokens_);
  CastToBase(&app_access_tokens_)->InternalSwap(CastToBase(&other->app_access_tokens_));
  app_denied_tokens_.InternalSwap(&other->app_denied_tokens_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPICSAccessTokenResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetUGCDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetUGCDetails::kHcontentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetUGCDetails::CMsgClientUFSGetUGCDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetUGCDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetUGCDetails)
}
CMsgClientUFSGetUGCDetails::CMsgClientUFSGetUGCDetails(const CMsgClientUFSGetUGCDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hcontent_ = from.hcontent_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetUGCDetails)
}

void CMsgClientUFSGetUGCDetails::SharedCtor() {
  hcontent_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUFSGetUGCDetails::~CMsgClientUFSGetUGCDetails() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetUGCDetails)
  SharedDtor();
}

void CMsgClientUFSGetUGCDetails::SharedDtor() {
}

void CMsgClientUFSGetUGCDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetUGCDetails::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetUGCDetails& CMsgClientUFSGetUGCDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetUGCDetails.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetUGCDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetUGCDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hcontent_ = GOOGLE_ULONGLONG(18446744073709551615);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetUGCDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetUGCDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 hcontent = 1 [default = 18446744073709551615];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetUGCDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetUGCDetails)
  return false;
#undef DO_
}

void CMsgClientUFSGetUGCDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetUGCDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 hcontent = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->hcontent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetUGCDetails)
}

::google::protobuf::uint8* CMsgClientUFSGetUGCDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetUGCDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 hcontent = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->hcontent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetUGCDetails)
  return target;
}

size_t CMsgClientUFSGetUGCDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetUGCDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 hcontent = 1 [default = 18446744073709551615];
  if (has_hcontent()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetUGCDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetUGCDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetUGCDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetUGCDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetUGCDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetUGCDetails)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetUGCDetails::MergeFrom(const CMsgClientUFSGetUGCDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetUGCDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hcontent()) {
    set_hcontent(from.hcontent());
  }
}

void CMsgClientUFSGetUGCDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetUGCDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetUGCDetails::CopyFrom(const CMsgClientUFSGetUGCDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetUGCDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetUGCDetails::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetUGCDetails::Swap(CMsgClientUFSGetUGCDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetUGCDetails::InternalSwap(CMsgClientUFSGetUGCDetails* other) {
  using std::swap;
  swap(hcontent_, other->hcontent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetUGCDetails::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetUGCDetailsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetUGCDetailsResponse::kEresultFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kUrlFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kAppIdFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kFilenameFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kSteamidCreatorFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kFileSizeFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kCompressedFileSizeFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kRangecheckHostFieldNumber;
const int CMsgClientUFSGetUGCDetailsResponse::kFileEncodedSha1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetUGCDetailsResponse::CMsgClientUFSGetUGCDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetUGCDetailsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetUGCDetailsResponse)
}
CMsgClientUFSGetUGCDetailsResponse::CMsgClientUFSGetUGCDetailsResponse(const CMsgClientUFSGetUGCDetailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  rangecheck_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rangecheck_host()) {
    rangecheck_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rangecheck_host_);
  }
  file_encoded_sha1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_encoded_sha1()) {
    file_encoded_sha1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_encoded_sha1_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetUGCDetailsResponse)
}

void CMsgClientUFSGetUGCDetailsResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rangecheck_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_encoded_sha1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compressed_file_size_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(compressed_file_size_));
  eresult_ = 2;
}

CMsgClientUFSGetUGCDetailsResponse::~CMsgClientUFSGetUGCDetailsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetUGCDetailsResponse)
  SharedDtor();
}

void CMsgClientUFSGetUGCDetailsResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rangecheck_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_encoded_sha1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetUGCDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetUGCDetailsResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetUGCDetailsResponse& CMsgClientUFSGetUGCDetailsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetUGCDetailsResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetUGCDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetUGCDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      rangecheck_host_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      file_encoded_sha1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&compressed_file_size_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(compressed_file_size_));
  }
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetUGCDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetUGCDetailsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetUGCDetailsResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetUGCDetailsResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_creator = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_steamid_creator();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_creator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 compressed_file_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_compressed_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compressed_file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rangecheck_host = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rangecheck_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rangecheck_host().data(), static_cast<int>(this->rangecheck_host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetUGCDetailsResponse.rangecheck_host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_encoded_sha1 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_encoded_sha1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_encoded_sha1().data(), static_cast<int>(this->file_encoded_sha1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetUGCDetailsResponse.file_encoded_sha1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetUGCDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetUGCDetailsResponse)
  return false;
#undef DO_
}

void CMsgClientUFSGetUGCDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetUGCDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  // optional fixed64 steamid_creator = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->steamid_creator(), output);
  }

  // optional uint32 file_size = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->file_size(), output);
  }

  // optional uint32 compressed_file_size = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->compressed_file_size(), output);
  }

  // optional string rangecheck_host = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rangecheck_host().data(), static_cast<int>(this->rangecheck_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.rangecheck_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->rangecheck_host(), output);
  }

  // optional string file_encoded_sha1 = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_encoded_sha1().data(), static_cast<int>(this->file_encoded_sha1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.file_encoded_sha1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->file_encoded_sha1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetUGCDetailsResponse)
}

::google::protobuf::uint8* CMsgClientUFSGetUGCDetailsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetUGCDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  // optional fixed64 steamid_creator = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->steamid_creator(), target);
  }

  // optional uint32 file_size = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->file_size(), target);
  }

  // optional uint32 compressed_file_size = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->compressed_file_size(), target);
  }

  // optional string rangecheck_host = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rangecheck_host().data(), static_cast<int>(this->rangecheck_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.rangecheck_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->rangecheck_host(), target);
  }

  // optional string file_encoded_sha1 = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_encoded_sha1().data(), static_cast<int>(this->file_encoded_sha1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.file_encoded_sha1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->file_encoded_sha1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetUGCDetailsResponse)
  return target;
}

size_t CMsgClientUFSGetUGCDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetUGCDetailsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string filename = 4;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string rangecheck_host = 8;
    if (has_rangecheck_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rangecheck_host());
    }

    // optional string file_encoded_sha1 = 9;
    if (has_file_encoded_sha1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_encoded_sha1());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 file_size = 6;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional fixed64 steamid_creator = 5;
    if (has_steamid_creator()) {
      total_size += 1 + 8;
    }

    // optional uint32 compressed_file_size = 7;
    if (has_compressed_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->compressed_file_size());
    }

  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetUGCDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetUGCDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetUGCDetailsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetUGCDetailsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetUGCDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetUGCDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetUGCDetailsResponse::MergeFrom(const CMsgClientUFSGetUGCDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetUGCDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_rangecheck_host();
      rangecheck_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rangecheck_host_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_file_encoded_sha1();
      file_encoded_sha1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_encoded_sha1_);
    }
    if (cached_has_bits & 0x00000010u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      steamid_creator_ = from.steamid_creator_;
    }
    if (cached_has_bits & 0x00000080u) {
      compressed_file_size_ = from.compressed_file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUFSGetUGCDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetUGCDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetUGCDetailsResponse::CopyFrom(const CMsgClientUFSGetUGCDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetUGCDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetUGCDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetUGCDetailsResponse::Swap(CMsgClientUFSGetUGCDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetUGCDetailsResponse::InternalSwap(CMsgClientUFSGetUGCDetailsResponse* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rangecheck_host_.Swap(&other->rangecheck_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_encoded_sha1_.Swap(&other->file_encoded_sha1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(file_size_, other->file_size_);
  swap(steamid_creator_, other->steamid_creator_);
  swap(compressed_file_size_, other->compressed_file_size_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetUGCDetailsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetSingleFileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetSingleFileInfo::kAppIdFieldNumber;
const int CMsgClientUFSGetSingleFileInfo::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetSingleFileInfo::CMsgClientUFSGetSingleFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetSingleFileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetSingleFileInfo)
}
CMsgClientUFSGetSingleFileInfo::CMsgClientUFSGetSingleFileInfo(const CMsgClientUFSGetSingleFileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetSingleFileInfo)
}

void CMsgClientUFSGetSingleFileInfo::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientUFSGetSingleFileInfo::~CMsgClientUFSGetSingleFileInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetSingleFileInfo)
  SharedDtor();
}

void CMsgClientUFSGetSingleFileInfo::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetSingleFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetSingleFileInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetSingleFileInfo& CMsgClientUFSGetSingleFileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetSingleFileInfo.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetSingleFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetSingleFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetSingleFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetSingleFileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetSingleFileInfo.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetSingleFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetSingleFileInfo)
  return false;
#undef DO_
}

void CMsgClientUFSGetSingleFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetSingleFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetSingleFileInfo.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetSingleFileInfo)
}

::google::protobuf::uint8* CMsgClientUFSGetSingleFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetSingleFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetSingleFileInfo.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetSingleFileInfo)
  return target;
}

size_t CMsgClientUFSGetSingleFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetSingleFileInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetSingleFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetSingleFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetSingleFileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetSingleFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetSingleFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetSingleFileInfo)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetSingleFileInfo::MergeFrom(const CMsgClientUFSGetSingleFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetSingleFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSGetSingleFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetSingleFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetSingleFileInfo::CopyFrom(const CMsgClientUFSGetSingleFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetSingleFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetSingleFileInfo::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetSingleFileInfo::Swap(CMsgClientUFSGetSingleFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetSingleFileInfo::InternalSwap(CMsgClientUFSGetSingleFileInfo* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetSingleFileInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSGetSingleFileInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSGetSingleFileInfoResponse::kEresultFieldNumber;
const int CMsgClientUFSGetSingleFileInfoResponse::kAppIdFieldNumber;
const int CMsgClientUFSGetSingleFileInfoResponse::kFileNameFieldNumber;
const int CMsgClientUFSGetSingleFileInfoResponse::kShaFileFieldNumber;
const int CMsgClientUFSGetSingleFileInfoResponse::kTimeStampFieldNumber;
const int CMsgClientUFSGetSingleFileInfoResponse::kRawFileSizeFieldNumber;
const int CMsgClientUFSGetSingleFileInfoResponse::kIsExplicitDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSGetSingleFileInfoResponse::CMsgClientUFSGetSingleFileInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetSingleFileInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSGetSingleFileInfoResponse)
}
CMsgClientUFSGetSingleFileInfoResponse::CMsgClientUFSGetSingleFileInfoResponse(const CMsgClientUFSGetSingleFileInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetSingleFileInfoResponse)
}

void CMsgClientUFSGetSingleFileInfoResponse::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_explicit_delete_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
  eresult_ = 2;
}

CMsgClientUFSGetSingleFileInfoResponse::~CMsgClientUFSGetSingleFileInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetSingleFileInfoResponse)
  SharedDtor();
}

void CMsgClientUFSGetSingleFileInfoResponse::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetSingleFileInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSGetSingleFileInfoResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSGetSingleFileInfoResponse& CMsgClientUFSGetSingleFileInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSGetSingleFileInfoResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSGetSingleFileInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetSingleFileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_explicit_delete_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSGetSingleFileInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSGetSingleFileInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSGetSingleFileInfoResponse.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 time_stamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 raw_file_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_raw_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raw_file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_explicit_delete = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_explicit_delete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_explicit_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSGetSingleFileInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSGetSingleFileInfoResponse)
  return false;
#undef DO_
}

void CMsgClientUFSGetSingleFileInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSGetSingleFileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetSingleFileInfoResponse.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time_stamp(), output);
  }

  // optional uint32 raw_file_size = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->raw_file_size(), output);
  }

  // optional bool is_explicit_delete = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_explicit_delete(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSGetSingleFileInfoResponse)
}

::google::protobuf::uint8* CMsgClientUFSGetSingleFileInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetSingleFileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetSingleFileInfoResponse.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time_stamp(), target);
  }

  // optional uint32 raw_file_size = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->raw_file_size(), target);
  }

  // optional bool is_explicit_delete = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_explicit_delete(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetSingleFileInfoResponse)
  return target;
}

size_t CMsgClientUFSGetSingleFileInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetSingleFileInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string file_name = 3;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional bytes sha_file = 4;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 raw_file_size = 6;
    if (has_raw_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->raw_file_size());
    }

    // optional uint64 time_stamp = 5;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time_stamp());
    }

    // optional bool is_explicit_delete = 7;
    if (has_is_explicit_delete()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetSingleFileInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetSingleFileInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSGetSingleFileInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetSingleFileInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetSingleFileInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetSingleFileInfoResponse::MergeFrom(const CMsgClientUFSGetSingleFileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      raw_file_size_ = from.raw_file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_explicit_delete_ = from.is_explicit_delete_;
    }
    if (cached_has_bits & 0x00000040u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSGetSingleFileInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetSingleFileInfoResponse::CopyFrom(const CMsgClientUFSGetSingleFileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetSingleFileInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetSingleFileInfoResponse::Swap(CMsgClientUFSGetSingleFileInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSGetSingleFileInfoResponse::InternalSwap(CMsgClientUFSGetSingleFileInfoResponse* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(raw_file_size_, other->raw_file_size_);
  swap(time_stamp_, other->time_stamp_);
  swap(is_explicit_delete_, other->is_explicit_delete_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSGetSingleFileInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSShareFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSShareFile::kAppIdFieldNumber;
const int CMsgClientUFSShareFile::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSShareFile::CMsgClientUFSShareFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSShareFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSShareFile)
}
CMsgClientUFSShareFile::CMsgClientUFSShareFile(const CMsgClientUFSShareFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSShareFile)
}

void CMsgClientUFSShareFile::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientUFSShareFile::~CMsgClientUFSShareFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSShareFile)
  SharedDtor();
}

void CMsgClientUFSShareFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSShareFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSShareFile::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSShareFile& CMsgClientUFSShareFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSShareFile.base);
  return *internal_default_instance();
}


void CMsgClientUFSShareFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSShareFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSShareFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSShareFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientUFSShareFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSShareFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSShareFile)
  return false;
#undef DO_
}

void CMsgClientUFSShareFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSShareFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSShareFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSShareFile)
}

::google::protobuf::uint8* CMsgClientUFSShareFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSShareFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSShareFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSShareFile)
  return target;
}

size_t CMsgClientUFSShareFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSShareFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSShareFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSShareFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSShareFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSShareFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSShareFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSShareFile)
    MergeFrom(*source);
  }
}

void CMsgClientUFSShareFile::MergeFrom(const CMsgClientUFSShareFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSShareFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSShareFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSShareFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSShareFile::CopyFrom(const CMsgClientUFSShareFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSShareFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSShareFile::IsInitialized() const {
  return true;
}

void CMsgClientUFSShareFile::Swap(CMsgClientUFSShareFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSShareFile::InternalSwap(CMsgClientUFSShareFile* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSShareFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUFSShareFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUFSShareFileResponse::kEresultFieldNumber;
const int CMsgClientUFSShareFileResponse::kHcontentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUFSShareFileResponse::CMsgClientUFSShareFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSShareFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientUFSShareFileResponse)
}
CMsgClientUFSShareFileResponse::CMsgClientUFSShareFileResponse(const CMsgClientUFSShareFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&hcontent_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(hcontent_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSShareFileResponse)
}

void CMsgClientUFSShareFileResponse::SharedCtor() {
  eresult_ = 2;
  hcontent_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUFSShareFileResponse::~CMsgClientUFSShareFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSShareFileResponse)
  SharedDtor();
}

void CMsgClientUFSShareFileResponse::SharedDtor() {
}

void CMsgClientUFSShareFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientUFSShareFileResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUFSShareFileResponse& CMsgClientUFSShareFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientUFSShareFileResponse.base);
  return *internal_default_instance();
}


void CMsgClientUFSShareFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSShareFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    eresult_ = 2;
    hcontent_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUFSShareFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientUFSShareFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hcontent = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientUFSShareFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientUFSShareFileResponse)
  return false;
#undef DO_
}

void CMsgClientUFSShareFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientUFSShareFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 hcontent = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->hcontent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientUFSShareFileResponse)
}

::google::protobuf::uint8* CMsgClientUFSShareFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSShareFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 hcontent = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->hcontent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSShareFileResponse)
  return target;
}

size_t CMsgClientUFSShareFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSShareFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 hcontent = 2 [default = 18446744073709551615];
    if (has_hcontent()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSShareFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSShareFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSShareFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUFSShareFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSShareFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSShareFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSShareFileResponse::MergeFrom(const CMsgClientUFSShareFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSShareFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      hcontent_ = from.hcontent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSShareFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSShareFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSShareFileResponse::CopyFrom(const CMsgClientUFSShareFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSShareFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSShareFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSShareFileResponse::Swap(CMsgClientUFSShareFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUFSShareFileResponse::InternalSwap(CMsgClientUFSShareFileResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(hcontent_, other->hcontent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientUFSShareFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetClanOfficers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetClanOfficers::kSteamidClanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetClanOfficers::CMsgClientAMGetClanOfficers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetClanOfficers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetClanOfficers)
}
CMsgClientAMGetClanOfficers::CMsgClientAMGetClanOfficers(const CMsgClientAMGetClanOfficers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_clan_ = from.steamid_clan_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetClanOfficers)
}

void CMsgClientAMGetClanOfficers::SharedCtor() {
  steamid_clan_ = GOOGLE_ULONGLONG(0);
}

CMsgClientAMGetClanOfficers::~CMsgClientAMGetClanOfficers() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetClanOfficers)
  SharedDtor();
}

void CMsgClientAMGetClanOfficers::SharedDtor() {
}

void CMsgClientAMGetClanOfficers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetClanOfficers::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetClanOfficers& CMsgClientAMGetClanOfficers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetClanOfficers.base);
  return *internal_default_instance();
}


void CMsgClientAMGetClanOfficers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetClanOfficers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_clan_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetClanOfficers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetClanOfficers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetClanOfficers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetClanOfficers)
  return false;
#undef DO_
}

void CMsgClientAMGetClanOfficers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetClanOfficers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_clan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetClanOfficers)
}

::google::protobuf::uint8* CMsgClientAMGetClanOfficers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetClanOfficers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_clan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetClanOfficers)
  return target;
}

size_t CMsgClientAMGetClanOfficers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetClanOfficers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid_clan = 1;
  if (has_steamid_clan()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetClanOfficers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetClanOfficers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetClanOfficers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetClanOfficers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetClanOfficers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetClanOfficers)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetClanOfficers::MergeFrom(const CMsgClientAMGetClanOfficers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetClanOfficers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid_clan()) {
    set_steamid_clan(from.steamid_clan());
  }
}

void CMsgClientAMGetClanOfficers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetClanOfficers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetClanOfficers::CopyFrom(const CMsgClientAMGetClanOfficers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetClanOfficers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetClanOfficers::IsInitialized() const {
  return true;
}

void CMsgClientAMGetClanOfficers::Swap(CMsgClientAMGetClanOfficers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetClanOfficers::InternalSwap(CMsgClientAMGetClanOfficers* other) {
  using std::swap;
  swap(steamid_clan_, other->steamid_clan_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetClanOfficers::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetClanOfficersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetClanOfficersResponse::kEresultFieldNumber;
const int CMsgClientAMGetClanOfficersResponse::kSteamidClanFieldNumber;
const int CMsgClientAMGetClanOfficersResponse::kOfficerCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetClanOfficersResponse::CMsgClientAMGetClanOfficersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetClanOfficersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetClanOfficersResponse)
}
CMsgClientAMGetClanOfficersResponse::CMsgClientAMGetClanOfficersResponse(const CMsgClientAMGetClanOfficersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_clan_, &from.steamid_clan_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steamid_clan_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetClanOfficersResponse)
}

void CMsgClientAMGetClanOfficersResponse::SharedCtor() {
  ::memset(&steamid_clan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&officer_count_) -
      reinterpret_cast<char*>(&steamid_clan_)) + sizeof(officer_count_));
  eresult_ = 2;
}

CMsgClientAMGetClanOfficersResponse::~CMsgClientAMGetClanOfficersResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetClanOfficersResponse)
  SharedDtor();
}

void CMsgClientAMGetClanOfficersResponse::SharedDtor() {
}

void CMsgClientAMGetClanOfficersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetClanOfficersResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetClanOfficersResponse& CMsgClientAMGetClanOfficersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetClanOfficersResponse.base);
  return *internal_default_instance();
}


void CMsgClientAMGetClanOfficersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetClanOfficersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steamid_clan_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&officer_count_) -
        reinterpret_cast<char*>(&steamid_clan_)) + sizeof(officer_count_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetClanOfficersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetClanOfficersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_clan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamid_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 officer_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_officer_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &officer_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetClanOfficersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetClanOfficersResponse)
  return false;
#undef DO_
}

void CMsgClientAMGetClanOfficersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetClanOfficersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 steamid_clan = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid_clan(), output);
  }

  // optional int32 officer_count = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->officer_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetClanOfficersResponse)
}

::google::protobuf::uint8* CMsgClientAMGetClanOfficersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetClanOfficersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 steamid_clan = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid_clan(), target);
  }

  // optional int32 officer_count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->officer_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetClanOfficersResponse)
  return target;
}

size_t CMsgClientAMGetClanOfficersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetClanOfficersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steamid_clan = 2;
    if (has_steamid_clan()) {
      total_size += 1 + 8;
    }

    // optional int32 officer_count = 3;
    if (has_officer_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->officer_count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetClanOfficersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetClanOfficersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetClanOfficersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetClanOfficersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetClanOfficersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetClanOfficersResponse)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetClanOfficersResponse::MergeFrom(const CMsgClientAMGetClanOfficersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetClanOfficersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_clan_ = from.steamid_clan_;
    }
    if (cached_has_bits & 0x00000002u) {
      officer_count_ = from.officer_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAMGetClanOfficersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetClanOfficersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetClanOfficersResponse::CopyFrom(const CMsgClientAMGetClanOfficersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetClanOfficersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetClanOfficersResponse::IsInitialized() const {
  return true;
}

void CMsgClientAMGetClanOfficersResponse::Swap(CMsgClientAMGetClanOfficersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetClanOfficersResponse::InternalSwap(CMsgClientAMGetClanOfficersResponse* other) {
  using std::swap;
  swap(steamid_clan_, other->steamid_clan_);
  swap(officer_count_, other->officer_count_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetClanOfficersResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetPersonaNameHistory_IdInstance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetPersonaNameHistory_IdInstance::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetPersonaNameHistory_IdInstance::CMsgClientAMGetPersonaNameHistory_IdInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistory_IdInstance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetPersonaNameHistory.IdInstance)
}
CMsgClientAMGetPersonaNameHistory_IdInstance::CMsgClientAMGetPersonaNameHistory_IdInstance(const CMsgClientAMGetPersonaNameHistory_IdInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetPersonaNameHistory.IdInstance)
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::SharedCtor() {
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientAMGetPersonaNameHistory_IdInstance::~CMsgClientAMGetPersonaNameHistory_IdInstance() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetPersonaNameHistory.IdInstance)
  SharedDtor();
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::SharedDtor() {
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetPersonaNameHistory_IdInstance::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetPersonaNameHistory_IdInstance& CMsgClientAMGetPersonaNameHistory_IdInstance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistory_IdInstance.base);
  return *internal_default_instance();
}


void CMsgClientAMGetPersonaNameHistory_IdInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetPersonaNameHistory_IdInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetPersonaNameHistory.IdInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetPersonaNameHistory.IdInstance)
  return false;
#undef DO_
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetPersonaNameHistory.IdInstance)
}

::google::protobuf::uint8* CMsgClientAMGetPersonaNameHistory_IdInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetPersonaNameHistory.IdInstance)
  return target;
}

size_t CMsgClientAMGetPersonaNameHistory_IdInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetPersonaNameHistory_IdInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetPersonaNameHistory_IdInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetPersonaNameHistory.IdInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetPersonaNameHistory.IdInstance)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::MergeFrom(const CMsgClientAMGetPersonaNameHistory_IdInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::CopyFrom(const CMsgClientAMGetPersonaNameHistory_IdInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetPersonaNameHistory.IdInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetPersonaNameHistory_IdInstance::IsInitialized() const {
  return true;
}

void CMsgClientAMGetPersonaNameHistory_IdInstance::Swap(CMsgClientAMGetPersonaNameHistory_IdInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetPersonaNameHistory_IdInstance::InternalSwap(CMsgClientAMGetPersonaNameHistory_IdInstance* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetPersonaNameHistory_IdInstance::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetPersonaNameHistory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetPersonaNameHistory::kIdCountFieldNumber;
const int CMsgClientAMGetPersonaNameHistory::kIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetPersonaNameHistory::CMsgClientAMGetPersonaNameHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetPersonaNameHistory)
}
CMsgClientAMGetPersonaNameHistory::CMsgClientAMGetPersonaNameHistory(const CMsgClientAMGetPersonaNameHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_count_ = from.id_count_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetPersonaNameHistory)
}

void CMsgClientAMGetPersonaNameHistory::SharedCtor() {
  id_count_ = 0;
}

CMsgClientAMGetPersonaNameHistory::~CMsgClientAMGetPersonaNameHistory() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetPersonaNameHistory)
  SharedDtor();
}

void CMsgClientAMGetPersonaNameHistory::SharedDtor() {
}

void CMsgClientAMGetPersonaNameHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetPersonaNameHistory::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetPersonaNameHistory& CMsgClientAMGetPersonaNameHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistory.base);
  return *internal_default_instance();
}


void CMsgClientAMGetPersonaNameHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetPersonaNameHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  id_count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetPersonaNameHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetPersonaNameHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientAMGetPersonaNameHistory.IdInstance Ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetPersonaNameHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetPersonaNameHistory)
  return false;
#undef DO_
}

void CMsgClientAMGetPersonaNameHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetPersonaNameHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id_count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id_count(), output);
  }

  // repeated .CMsgClientAMGetPersonaNameHistory.IdInstance Ids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetPersonaNameHistory)
}

::google::protobuf::uint8* CMsgClientAMGetPersonaNameHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetPersonaNameHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id_count(), target);
  }

  // repeated .CMsgClientAMGetPersonaNameHistory.IdInstance Ids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ids(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetPersonaNameHistory)
  return target;
}

size_t CMsgClientAMGetPersonaNameHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetPersonaNameHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAMGetPersonaNameHistory.IdInstance Ids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ids(static_cast<int>(i)));
    }
  }

  // optional int32 id_count = 1;
  if (has_id_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetPersonaNameHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetPersonaNameHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetPersonaNameHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetPersonaNameHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetPersonaNameHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetPersonaNameHistory)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetPersonaNameHistory::MergeFrom(const CMsgClientAMGetPersonaNameHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetPersonaNameHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  if (from.has_id_count()) {
    set_id_count(from.id_count());
  }
}

void CMsgClientAMGetPersonaNameHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetPersonaNameHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetPersonaNameHistory::CopyFrom(const CMsgClientAMGetPersonaNameHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetPersonaNameHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetPersonaNameHistory::IsInitialized() const {
  return true;
}

void CMsgClientAMGetPersonaNameHistory::Swap(CMsgClientAMGetPersonaNameHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetPersonaNameHistory::InternalSwap(CMsgClientAMGetPersonaNameHistory* other) {
  using std::swap;
  CastToBase(&ids_)->InternalSwap(CastToBase(&other->ids_));
  swap(id_count_, other->id_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetPersonaNameHistory::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::kNameSinceFieldNumber;
const int CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
}
CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance(const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  name_since_ = from.name_since_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_since_ = 0u;
}

CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::~CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  SharedDtor();
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance& CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.base);
  return *internal_default_instance();
}


void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  name_since_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 name_since = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_name_since();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &name_since_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  return false;
#undef DO_
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 name_since = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->name_since(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
}

::google::protobuf::uint8* CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 name_since = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->name_since(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  return target;
}

size_t CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional fixed32 name_since = 1;
    if (has_name_since()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::MergeFrom(const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      name_since_ = from.name_since_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::CopyFrom(const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::IsInitialized() const {
  return true;
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::Swap(CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::InternalSwap(CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(name_since_, other->name_since_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::kEresultFieldNumber;
const int CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::kSteamidFieldNumber;
const int CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::kNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
}
CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance(const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::SharedCtor() {
  steamid_ = GOOGLE_ULONGLONG(0);
  eresult_ = 2;
}

CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::~CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  SharedDtor();
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::SharedDtor() {
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance& CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.base);
  return *internal_default_instance();
}


void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    steamid_ = GOOGLE_ULONGLONG(0);
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance names = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_names()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  return false;
#undef DO_
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid(), output);
  }

  // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance names = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->names_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->names(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
}

::google::protobuf::uint8* CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid(), target);
  }

  // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance names = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->names_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->names(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  return target;
}

size_t CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance names = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->names_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->names(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 2;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::MergeFrom(const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::CopyFrom(const CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::IsInitialized() const {
  return true;
}

void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::Swap(CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::InternalSwap(CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance* other) {
  using std::swap;
  CastToBase(&names_)->InternalSwap(CastToBase(&other->names_));
  swap(steamid_, other->steamid_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAMGetPersonaNameHistoryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAMGetPersonaNameHistoryResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAMGetPersonaNameHistoryResponse::CMsgClientAMGetPersonaNameHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAMGetPersonaNameHistoryResponse)
}
CMsgClientAMGetPersonaNameHistoryResponse::CMsgClientAMGetPersonaNameHistoryResponse(const CMsgClientAMGetPersonaNameHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientAMGetPersonaNameHistoryResponse)
}

void CMsgClientAMGetPersonaNameHistoryResponse::SharedCtor() {
}

CMsgClientAMGetPersonaNameHistoryResponse::~CMsgClientAMGetPersonaNameHistoryResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientAMGetPersonaNameHistoryResponse)
  SharedDtor();
}

void CMsgClientAMGetPersonaNameHistoryResponse::SharedDtor() {
}

void CMsgClientAMGetPersonaNameHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAMGetPersonaNameHistoryResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAMGetPersonaNameHistoryResponse& CMsgClientAMGetPersonaNameHistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientAMGetPersonaNameHistoryResponse.base);
  return *internal_default_instance();
}


void CMsgClientAMGetPersonaNameHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAMGetPersonaNameHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAMGetPersonaNameHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAMGetPersonaNameHistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance responses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAMGetPersonaNameHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAMGetPersonaNameHistoryResponse)
  return false;
#undef DO_
}

void CMsgClientAMGetPersonaNameHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAMGetPersonaNameHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->responses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAMGetPersonaNameHistoryResponse)
}

::google::protobuf::uint8* CMsgClientAMGetPersonaNameHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAMGetPersonaNameHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAMGetPersonaNameHistoryResponse)
  return target;
}

size_t CMsgClientAMGetPersonaNameHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAMGetPersonaNameHistoryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance responses = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAMGetPersonaNameHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAMGetPersonaNameHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAMGetPersonaNameHistoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAMGetPersonaNameHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAMGetPersonaNameHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAMGetPersonaNameHistoryResponse)
    MergeFrom(*source);
  }
}

void CMsgClientAMGetPersonaNameHistoryResponse::MergeFrom(const CMsgClientAMGetPersonaNameHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAMGetPersonaNameHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void CMsgClientAMGetPersonaNameHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAMGetPersonaNameHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAMGetPersonaNameHistoryResponse::CopyFrom(const CMsgClientAMGetPersonaNameHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAMGetPersonaNameHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAMGetPersonaNameHistoryResponse::IsInitialized() const {
  return true;
}

void CMsgClientAMGetPersonaNameHistoryResponse::Swap(CMsgClientAMGetPersonaNameHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAMGetPersonaNameHistoryResponse::InternalSwap(CMsgClientAMGetPersonaNameHistoryResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAMGetPersonaNameHistoryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeregisterWithServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeregisterWithServer::kEservertypeFieldNumber;
const int CMsgClientDeregisterWithServer::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeregisterWithServer::CMsgClientDeregisterWithServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientDeregisterWithServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDeregisterWithServer)
}
CMsgClientDeregisterWithServer::CMsgClientDeregisterWithServer(const CMsgClientDeregisterWithServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eservertype_, &from.eservertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&eservertype_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientDeregisterWithServer)
}

void CMsgClientDeregisterWithServer::SharedCtor() {
  ::memset(&eservertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&eservertype_)) + sizeof(app_id_));
}

CMsgClientDeregisterWithServer::~CMsgClientDeregisterWithServer() {
  // @@protoc_insertion_point(destructor:CMsgClientDeregisterWithServer)
  SharedDtor();
}

void CMsgClientDeregisterWithServer::SharedDtor() {
}

void CMsgClientDeregisterWithServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDeregisterWithServer::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeregisterWithServer& CMsgClientDeregisterWithServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientDeregisterWithServer.base);
  return *internal_default_instance();
}


void CMsgClientDeregisterWithServer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDeregisterWithServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&eservertype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&eservertype_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeregisterWithServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDeregisterWithServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eservertype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eservertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eservertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDeregisterWithServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDeregisterWithServer)
  return false;
#undef DO_
}

void CMsgClientDeregisterWithServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDeregisterWithServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eservertype = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eservertype(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDeregisterWithServer)
}

::google::protobuf::uint8* CMsgClientDeregisterWithServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDeregisterWithServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eservertype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eservertype(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDeregisterWithServer)
  return target;
}

size_t CMsgClientDeregisterWithServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDeregisterWithServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 eservertype = 1;
    if (has_eservertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eservertype());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeregisterWithServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDeregisterWithServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeregisterWithServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeregisterWithServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDeregisterWithServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDeregisterWithServer)
    MergeFrom(*source);
  }
}

void CMsgClientDeregisterWithServer::MergeFrom(const CMsgClientDeregisterWithServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDeregisterWithServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eservertype_ = from.eservertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeregisterWithServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDeregisterWithServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeregisterWithServer::CopyFrom(const CMsgClientDeregisterWithServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDeregisterWithServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeregisterWithServer::IsInitialized() const {
  return true;
}

void CMsgClientDeregisterWithServer::Swap(CMsgClientDeregisterWithServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeregisterWithServer::InternalSwap(CMsgClientDeregisterWithServer* other) {
  using std::swap;
  swap(eservertype_, other->eservertype_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDeregisterWithServer::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientClanState_NameInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientClanState_NameInfo::kClanNameFieldNumber;
const int CMsgClientClanState_NameInfo::kShaAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientClanState_NameInfo::CMsgClientClanState_NameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_NameInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientClanState.NameInfo)
}
CMsgClientClanState_NameInfo::CMsgClientClanState_NameInfo(const CMsgClientClanState_NameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clan_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clan_name()) {
    clan_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clan_name_);
  }
  sha_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_avatar()) {
    sha_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_avatar_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientClanState.NameInfo)
}

void CMsgClientClanState_NameInfo::SharedCtor() {
  clan_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientClanState_NameInfo::~CMsgClientClanState_NameInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientClanState.NameInfo)
  SharedDtor();
}

void CMsgClientClanState_NameInfo::SharedDtor() {
  clan_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientClanState_NameInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientClanState_NameInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientClanState_NameInfo& CMsgClientClanState_NameInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_NameInfo.base);
  return *internal_default_instance();
}


void CMsgClientClanState_NameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientClanState.NameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      clan_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_avatar_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientClanState_NameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientClanState.NameInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string clan_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clan_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clan_name().data(), static_cast<int>(this->clan_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientClanState.NameInfo.clan_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_avatar = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientClanState.NameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientClanState.NameInfo)
  return false;
#undef DO_
}

void CMsgClientClanState_NameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientClanState.NameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string clan_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clan_name().data(), static_cast<int>(this->clan_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientClanState.NameInfo.clan_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clan_name(), output);
  }

  // optional bytes sha_avatar = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sha_avatar(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientClanState.NameInfo)
}

::google::protobuf::uint8* CMsgClientClanState_NameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientClanState.NameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string clan_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clan_name().data(), static_cast<int>(this->clan_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientClanState.NameInfo.clan_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clan_name(), target);
  }

  // optional bytes sha_avatar = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sha_avatar(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientClanState.NameInfo)
  return target;
}

size_t CMsgClientClanState_NameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientClanState.NameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string clan_name = 1;
    if (has_clan_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clan_name());
    }

    // optional bytes sha_avatar = 2;
    if (has_sha_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_avatar());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientClanState_NameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientClanState.NameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientClanState_NameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientClanState_NameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientClanState.NameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientClanState.NameInfo)
    MergeFrom(*source);
  }
}

void CMsgClientClanState_NameInfo::MergeFrom(const CMsgClientClanState_NameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientClanState.NameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_clan_name();
      clan_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clan_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_avatar();
      sha_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_avatar_);
    }
  }
}

void CMsgClientClanState_NameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientClanState.NameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientClanState_NameInfo::CopyFrom(const CMsgClientClanState_NameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientClanState.NameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientClanState_NameInfo::IsInitialized() const {
  return true;
}

void CMsgClientClanState_NameInfo::Swap(CMsgClientClanState_NameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientClanState_NameInfo::InternalSwap(CMsgClientClanState_NameInfo* other) {
  using std::swap;
  clan_name_.Swap(&other->clan_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_avatar_.Swap(&other->sha_avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientClanState_NameInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientClanState_UserCounts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientClanState_UserCounts::kMembersFieldNumber;
const int CMsgClientClanState_UserCounts::kOnlineFieldNumber;
const int CMsgClientClanState_UserCounts::kChattingFieldNumber;
const int CMsgClientClanState_UserCounts::kInGameFieldNumber;
const int CMsgClientClanState_UserCounts::kChatRoomMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientClanState_UserCounts::CMsgClientClanState_UserCounts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_UserCounts.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientClanState.UserCounts)
}
CMsgClientClanState_UserCounts::CMsgClientClanState_UserCounts(const CMsgClientClanState_UserCounts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&members_, &from.members_,
    static_cast<size_t>(reinterpret_cast<char*>(&chat_room_members_) -
    reinterpret_cast<char*>(&members_)) + sizeof(chat_room_members_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientClanState.UserCounts)
}

void CMsgClientClanState_UserCounts::SharedCtor() {
  ::memset(&members_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_room_members_) -
      reinterpret_cast<char*>(&members_)) + sizeof(chat_room_members_));
}

CMsgClientClanState_UserCounts::~CMsgClientClanState_UserCounts() {
  // @@protoc_insertion_point(destructor:CMsgClientClanState.UserCounts)
  SharedDtor();
}

void CMsgClientClanState_UserCounts::SharedDtor() {
}

void CMsgClientClanState_UserCounts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientClanState_UserCounts::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientClanState_UserCounts& CMsgClientClanState_UserCounts::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_UserCounts.base);
  return *internal_default_instance();
}


void CMsgClientClanState_UserCounts::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientClanState.UserCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&members_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chat_room_members_) -
        reinterpret_cast<char*>(&members_)) + sizeof(chat_room_members_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientClanState_UserCounts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientClanState.UserCounts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 members = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 online = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 chatting = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_chatting();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chatting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 in_game = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_in_game();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 chat_room_members = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_chat_room_members();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chat_room_members_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientClanState.UserCounts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientClanState.UserCounts)
  return false;
#undef DO_
}

void CMsgClientClanState_UserCounts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientClanState.UserCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 members = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->members(), output);
  }

  // optional uint32 online = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->online(), output);
  }

  // optional uint32 chatting = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->chatting(), output);
  }

  // optional uint32 in_game = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->in_game(), output);
  }

  // optional uint32 chat_room_members = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->chat_room_members(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientClanState.UserCounts)
}

::google::protobuf::uint8* CMsgClientClanState_UserCounts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientClanState.UserCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 members = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->members(), target);
  }

  // optional uint32 online = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->online(), target);
  }

  // optional uint32 chatting = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->chatting(), target);
  }

  // optional uint32 in_game = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->in_game(), target);
  }

  // optional uint32 chat_room_members = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->chat_room_members(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientClanState.UserCounts)
  return target;
}

size_t CMsgClientClanState_UserCounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientClanState.UserCounts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 members = 1;
    if (has_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->members());
    }

    // optional uint32 online = 2;
    if (has_online()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->online());
    }

    // optional uint32 chatting = 3;
    if (has_chatting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chatting());
    }

    // optional uint32 in_game = 4;
    if (has_in_game()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->in_game());
    }

    // optional uint32 chat_room_members = 5;
    if (has_chat_room_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chat_room_members());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientClanState_UserCounts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientClanState.UserCounts)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientClanState_UserCounts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientClanState_UserCounts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientClanState.UserCounts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientClanState.UserCounts)
    MergeFrom(*source);
  }
}

void CMsgClientClanState_UserCounts::MergeFrom(const CMsgClientClanState_UserCounts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientClanState.UserCounts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      members_ = from.members_;
    }
    if (cached_has_bits & 0x00000002u) {
      online_ = from.online_;
    }
    if (cached_has_bits & 0x00000004u) {
      chatting_ = from.chatting_;
    }
    if (cached_has_bits & 0x00000008u) {
      in_game_ = from.in_game_;
    }
    if (cached_has_bits & 0x00000010u) {
      chat_room_members_ = from.chat_room_members_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientClanState_UserCounts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientClanState.UserCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientClanState_UserCounts::CopyFrom(const CMsgClientClanState_UserCounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientClanState.UserCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientClanState_UserCounts::IsInitialized() const {
  return true;
}

void CMsgClientClanState_UserCounts::Swap(CMsgClientClanState_UserCounts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientClanState_UserCounts::InternalSwap(CMsgClientClanState_UserCounts* other) {
  using std::swap;
  swap(members_, other->members_);
  swap(online_, other->online_);
  swap(chatting_, other->chatting_);
  swap(in_game_, other->in_game_);
  swap(chat_room_members_, other->chat_room_members_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientClanState_UserCounts::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientClanState_Event::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientClanState_Event::kGidFieldNumber;
const int CMsgClientClanState_Event::kEventTimeFieldNumber;
const int CMsgClientClanState_Event::kHeadlineFieldNumber;
const int CMsgClientClanState_Event::kGameIdFieldNumber;
const int CMsgClientClanState_Event::kJustPostedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientClanState_Event::CMsgClientClanState_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientClanState.Event)
}
CMsgClientClanState_Event::CMsgClientClanState_Event(const CMsgClientClanState_Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  headline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headline()) {
    headline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headline_);
  }
  ::memcpy(&gid_, &from.gid_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&gid_)) + sizeof(game_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientClanState.Event)
}

void CMsgClientClanState_Event::SharedCtor() {
  headline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_id_) -
      reinterpret_cast<char*>(&gid_)) + sizeof(game_id_));
}

CMsgClientClanState_Event::~CMsgClientClanState_Event() {
  // @@protoc_insertion_point(destructor:CMsgClientClanState.Event)
  SharedDtor();
}

void CMsgClientClanState_Event::SharedDtor() {
  headline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientClanState_Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientClanState_Event::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientClanState_Event& CMsgClientClanState_Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState_Event.base);
  return *internal_default_instance();
}


void CMsgClientClanState_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientClanState.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    headline_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&gid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_id_) -
        reinterpret_cast<char*>(&gid_)) + sizeof(game_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientClanState_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientClanState.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 gid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_event_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headline = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headline().data(), static_cast<int>(this->headline().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientClanState.Event.headline");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool just_posted = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_just_posted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &just_posted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientClanState.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientClanState.Event)
  return false;
#undef DO_
}

void CMsgClientClanState_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientClanState.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 gid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->gid(), output);
  }

  // optional uint32 event_time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->event_time(), output);
  }

  // optional string headline = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headline().data(), static_cast<int>(this->headline().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientClanState.Event.headline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->headline(), output);
  }

  // optional fixed64 game_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->game_id(), output);
  }

  // optional bool just_posted = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->just_posted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientClanState.Event)
}

::google::protobuf::uint8* CMsgClientClanState_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientClanState.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 gid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->gid(), target);
  }

  // optional uint32 event_time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->event_time(), target);
  }

  // optional string headline = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headline().data(), static_cast<int>(this->headline().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientClanState.Event.headline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->headline(), target);
  }

  // optional fixed64 game_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->game_id(), target);
  }

  // optional bool just_posted = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->just_posted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientClanState.Event)
  return target;
}

size_t CMsgClientClanState_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientClanState.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string headline = 3;
    if (has_headline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headline());
    }

    // optional fixed64 gid = 1;
    if (has_gid()) {
      total_size += 1 + 8;
    }

    // optional uint32 event_time = 2;
    if (has_event_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_time());
    }

    // optional bool just_posted = 5;
    if (has_just_posted()) {
      total_size += 1 + 1;
    }

    // optional fixed64 game_id = 4;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientClanState_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientClanState.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientClanState_Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientClanState_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientClanState.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientClanState.Event)
    MergeFrom(*source);
  }
}

void CMsgClientClanState_Event::MergeFrom(const CMsgClientClanState_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientClanState.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_headline();
      headline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headline_);
    }
    if (cached_has_bits & 0x00000002u) {
      gid_ = from.gid_;
    }
    if (cached_has_bits & 0x00000004u) {
      event_time_ = from.event_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      just_posted_ = from.just_posted_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_id_ = from.game_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientClanState_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientClanState.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientClanState_Event::CopyFrom(const CMsgClientClanState_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientClanState.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientClanState_Event::IsInitialized() const {
  return true;
}

void CMsgClientClanState_Event::Swap(CMsgClientClanState_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientClanState_Event::InternalSwap(CMsgClientClanState_Event* other) {
  using std::swap;
  headline_.Swap(&other->headline_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gid_, other->gid_);
  swap(event_time_, other->event_time_);
  swap(just_posted_, other->just_posted_);
  swap(game_id_, other->game_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientClanState_Event::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientClanState::InitAsDefaultInstance() {
  ::_CMsgClientClanState_default_instance_._instance.get_mutable()->name_info_ = const_cast< ::CMsgClientClanState_NameInfo*>(
      ::CMsgClientClanState_NameInfo::internal_default_instance());
  ::_CMsgClientClanState_default_instance_._instance.get_mutable()->user_counts_ = const_cast< ::CMsgClientClanState_UserCounts*>(
      ::CMsgClientClanState_UserCounts::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientClanState::kSteamidClanFieldNumber;
const int CMsgClientClanState::kClanAccountFlagsFieldNumber;
const int CMsgClientClanState::kNameInfoFieldNumber;
const int CMsgClientClanState::kUserCountsFieldNumber;
const int CMsgClientClanState::kEventsFieldNumber;
const int CMsgClientClanState::kAnnouncementsFieldNumber;
const int CMsgClientClanState::kChatRoomPrivateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientClanState::CMsgClientClanState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientClanState)
}
CMsgClientClanState::CMsgClientClanState(const CMsgClientClanState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      events_(from.events_),
      announcements_(from.announcements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name_info()) {
    name_info_ = new ::CMsgClientClanState_NameInfo(*from.name_info_);
  } else {
    name_info_ = NULL;
  }
  if (from.has_user_counts()) {
    user_counts_ = new ::CMsgClientClanState_UserCounts(*from.user_counts_);
  } else {
    user_counts_ = NULL;
  }
  ::memcpy(&steamid_clan_, &from.steamid_clan_,
    static_cast<size_t>(reinterpret_cast<char*>(&chat_room_private_) -
    reinterpret_cast<char*>(&steamid_clan_)) + sizeof(chat_room_private_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientClanState)
}

void CMsgClientClanState::SharedCtor() {
  ::memset(&name_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_room_private_) -
      reinterpret_cast<char*>(&name_info_)) + sizeof(chat_room_private_));
}

CMsgClientClanState::~CMsgClientClanState() {
  // @@protoc_insertion_point(destructor:CMsgClientClanState)
  SharedDtor();
}

void CMsgClientClanState::SharedDtor() {
  if (this != internal_default_instance()) delete name_info_;
  if (this != internal_default_instance()) delete user_counts_;
}

void CMsgClientClanState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientClanState::descriptor() {
  ::protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientClanState& CMsgClientClanState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_2eproto::scc_info_CMsgClientClanState.base);
  return *internal_default_instance();
}


void CMsgClientClanState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientClanState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  announcements_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(name_info_ != NULL);
      name_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(user_counts_ != NULL);
      user_counts_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&steamid_clan_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chat_room_private_) -
        reinterpret_cast<char*>(&steamid_clan_)) + sizeof(chat_room_private_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientClanState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientClanState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 clan_account_flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_clan_account_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clan_account_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgClientClanState.NameInfo name_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgClientClanState.UserCounts user_counts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientClanState.Event events = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientClanState.Event announcements = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_announcements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat_room_private = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_chat_room_private();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_room_private_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientClanState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientClanState)
  return false;
#undef DO_
}

void CMsgClientClanState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientClanState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_clan = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_clan(), output);
  }

  // optional uint32 clan_account_flags = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clan_account_flags(), output);
  }

  // optional .CMsgClientClanState.NameInfo name_info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_name_info(), output);
  }

  // optional .CMsgClientClanState.UserCounts user_counts = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_user_counts(), output);
  }

  // repeated .CMsgClientClanState.Event events = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->events(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgClientClanState.Event announcements = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->announcements_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->announcements(static_cast<int>(i)),
      output);
  }

  // optional bool chat_room_private = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->chat_room_private(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientClanState)
}

::google::protobuf::uint8* CMsgClientClanState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientClanState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_clan = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_clan(), target);
  }

  // optional uint32 clan_account_flags = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clan_account_flags(), target);
  }

  // optional .CMsgClientClanState.NameInfo name_info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_name_info(), deterministic, target);
  }

  // optional .CMsgClientClanState.UserCounts user_counts = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_user_counts(), deterministic, target);
  }

  // repeated .CMsgClientClanState.Event events = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->events(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgClientClanState.Event announcements = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->announcements_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->announcements(static_cast<int>(i)), deterministic, target);
  }

  // optional bool chat_room_private = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->chat_room_private(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientClanState)
  return target;
}

size_t CMsgClientClanState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientClanState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientClanState.Event events = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // repeated .CMsgClientClanState.Event announcements = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->announcements_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->announcements(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgClientClanState.NameInfo name_info = 4;
    if (has_name_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *name_info_);
    }

    // optional .CMsgClientClanState.UserCounts user_counts = 5;
    if (has_user_counts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *user_counts_);
    }

    // optional fixed64 steamid_clan = 1;
    if (has_steamid_clan()) {
      total_size += 1 + 8;
    }

    // optional uint32 clan_account_flags = 3;
    if (has_clan_account_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clan_account_flags());
    }

    // optional bool chat_room_private = 8;
    if (has_chat_room_private()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientClanState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientClanState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientClanState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientClanState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientClanState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientClanState)
    MergeFrom(*source);
  }
}

void CMsgClientClanState::MergeFrom(const CMsgClientClanState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientClanState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  announcements_.MergeFrom(from.announcements_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_name_info()->::CMsgClientClanState_NameInfo::MergeFrom(from.name_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_user_counts()->::CMsgClientClanState_UserCounts::MergeFrom(from.user_counts());
    }
    if (cached_has_bits & 0x00000004u) {
      steamid_clan_ = from.steamid_clan_;
    }
    if (cached_has_bits & 0x00000008u) {
      clan_account_flags_ = from.clan_account_flags_;
    }
    if (cached_has_bits & 0x00000010u) {
      chat_room_private_ = from.chat_room_private_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientClanState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientClanState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientClanState::CopyFrom(const CMsgClientClanState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientClanState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientClanState::IsInitialized() const {
  return true;
}

void CMsgClientClanState::Swap(CMsgClientClanState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientClanState::InternalSwap(CMsgClientClanState* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  CastToBase(&announcements_)->InternalSwap(CastToBase(&other->announcements_));
  swap(name_info_, other->name_info_);
  swap(user_counts_, other->user_counts_);
  swap(steamid_clan_, other->steamid_clan_);
  swap(clan_account_flags_, other->clan_account_flags_);
  swap(chat_room_private_, other->chat_room_private_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientClanState::GetMetadata() const {
  protobuf_steammessages_5fclientserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUDSP2PSessionStarted* Arena::CreateMaybeMessage< ::CMsgClientUDSP2PSessionStarted >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUDSP2PSessionStarted >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUDSP2PSessionEnded* Arena::CreateMaybeMessage< ::CMsgClientUDSP2PSessionEnded >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUDSP2PSessionEnded >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRegisterAuthTicketWithCM* Arena::CreateMaybeMessage< ::CMsgClientRegisterAuthTicketWithCM >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRegisterAuthTicketWithCM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientTicketAuthComplete* Arena::CreateMaybeMessage< ::CMsgClientTicketAuthComplete >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientTicketAuthComplete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCMList* Arena::CreateMaybeMessage< ::CMsgClientCMList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCMList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientP2PConnectionInfo* Arena::CreateMaybeMessage< ::CMsgClientP2PConnectionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientP2PConnectionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientP2PConnectionFailInfo* Arena::CreateMaybeMessage< ::CMsgClientP2PConnectionFailInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientP2PConnectionFailInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientNetworkingCertRequest* Arena::CreateMaybeMessage< ::CMsgClientNetworkingCertRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientNetworkingCertRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientNetworkingCertReply* Arena::CreateMaybeMessage< ::CMsgClientNetworkingCertReply >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientNetworkingCertReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetAppOwnershipTicket* Arena::CreateMaybeMessage< ::CMsgClientGetAppOwnershipTicket >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetAppOwnershipTicket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetAppOwnershipTicketResponse* Arena::CreateMaybeMessage< ::CMsgClientGetAppOwnershipTicketResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetAppOwnershipTicketResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSessionToken* Arena::CreateMaybeMessage< ::CMsgClientSessionToken >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSessionToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGameConnectTokens* Arena::CreateMaybeMessage< ::CMsgClientGameConnectTokens >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGameConnectTokens >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSServerType* Arena::CreateMaybeMessage< ::CMsgGSServerType >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSServerType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSStatusReply* Arena::CreateMaybeMessage< ::CMsgGSStatusReply >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSStatusReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSPlayerList_Player* Arena::CreateMaybeMessage< ::CMsgGSPlayerList_Player >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSPlayerList_Player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSPlayerList* Arena::CreateMaybeMessage< ::CMsgGSPlayerList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSPlayerList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSUserPlaying* Arena::CreateMaybeMessage< ::CMsgGSUserPlaying >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSUserPlaying >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSDisconnectNotice* Arena::CreateMaybeMessage< ::CMsgGSDisconnectNotice >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSDisconnectNotice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGamesPlayed_GamePlayed* Arena::CreateMaybeMessage< ::CMsgClientGamesPlayed_GamePlayed >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGamesPlayed_GamePlayed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGamesPlayed* Arena::CreateMaybeMessage< ::CMsgClientGamesPlayed >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGamesPlayed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSApprove* Arena::CreateMaybeMessage< ::CMsgGSApprove >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSApprove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSDeny* Arena::CreateMaybeMessage< ::CMsgGSDeny >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSDeny >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGSKick* Arena::CreateMaybeMessage< ::CMsgGSKick >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGSKick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAuthList* Arena::CreateMaybeMessage< ::CMsgClientAuthList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAuthList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAuthListAck* Arena::CreateMaybeMessage< ::CMsgClientAuthListAck >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAuthListAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLicenseList_License* Arena::CreateMaybeMessage< ::CMsgClientLicenseList_License >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLicenseList_License >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLicenseList* Arena::CreateMaybeMessage< ::CMsgClientLicenseList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLicenseList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSSetScore* Arena::CreateMaybeMessage< ::CMsgClientLBSSetScore >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSSetScore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSSetScoreResponse* Arena::CreateMaybeMessage< ::CMsgClientLBSSetScoreResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSSetScoreResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSSetUGC* Arena::CreateMaybeMessage< ::CMsgClientLBSSetUGC >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSSetUGC >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSSetUGCResponse* Arena::CreateMaybeMessage< ::CMsgClientLBSSetUGCResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSSetUGCResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSFindOrCreateLB* Arena::CreateMaybeMessage< ::CMsgClientLBSFindOrCreateLB >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSFindOrCreateLB >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSFindOrCreateLBResponse* Arena::CreateMaybeMessage< ::CMsgClientLBSFindOrCreateLBResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSFindOrCreateLBResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSGetLBEntries* Arena::CreateMaybeMessage< ::CMsgClientLBSGetLBEntries >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSGetLBEntries >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSGetLBEntriesResponse_Entry* Arena::CreateMaybeMessage< ::CMsgClientLBSGetLBEntriesResponse_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSGetLBEntriesResponse_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientLBSGetLBEntriesResponse* Arena::CreateMaybeMessage< ::CMsgClientLBSGetLBEntriesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientLBSGetLBEntriesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData* Arena::CreateMaybeMessage< ::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppMinutesPlayedData_AppMinutesPlayedData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppMinutesPlayedData* Arena::CreateMaybeMessage< ::CMsgClientAppMinutesPlayedData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppMinutesPlayedData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientIsLimitedAccount* Arena::CreateMaybeMessage< ::CMsgClientIsLimitedAccount >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientIsLimitedAccount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServerList_Server* Arena::CreateMaybeMessage< ::CMsgClientServerList_Server >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServerList_Server >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServerList* Arena::CreateMaybeMessage< ::CMsgClientServerList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServerList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestedClientStats_StatsToSend* Arena::CreateMaybeMessage< ::CMsgClientRequestedClientStats_StatsToSend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestedClientStats_StatsToSend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestedClientStats* Arena::CreateMaybeMessage< ::CMsgClientRequestedClientStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestedClientStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStat2_StatDetail* Arena::CreateMaybeMessage< ::CMsgClientStat2_StatDetail >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStat2_StatDetail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStat2* Arena::CreateMaybeMessage< ::CMsgClientStat2 >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStat2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSCreateLobby* Arena::CreateMaybeMessage< ::CMsgClientMMSCreateLobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSCreateLobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSCreateLobbyResponse* Arena::CreateMaybeMessage< ::CMsgClientMMSCreateLobbyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSCreateLobbyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSJoinLobby* Arena::CreateMaybeMessage< ::CMsgClientMMSJoinLobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSJoinLobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSJoinLobbyResponse_Member* Arena::CreateMaybeMessage< ::CMsgClientMMSJoinLobbyResponse_Member >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSJoinLobbyResponse_Member >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSJoinLobbyResponse* Arena::CreateMaybeMessage< ::CMsgClientMMSJoinLobbyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSJoinLobbyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSLeaveLobby* Arena::CreateMaybeMessage< ::CMsgClientMMSLeaveLobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSLeaveLobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSLeaveLobbyResponse* Arena::CreateMaybeMessage< ::CMsgClientMMSLeaveLobbyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSLeaveLobbyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSGetLobbyList_Filter* Arena::CreateMaybeMessage< ::CMsgClientMMSGetLobbyList_Filter >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSGetLobbyList_Filter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSGetLobbyList* Arena::CreateMaybeMessage< ::CMsgClientMMSGetLobbyList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSGetLobbyList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSGetLobbyListResponse_Lobby* Arena::CreateMaybeMessage< ::CMsgClientMMSGetLobbyListResponse_Lobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSGetLobbyListResponse_Lobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSGetLobbyListResponse* Arena::CreateMaybeMessage< ::CMsgClientMMSGetLobbyListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSGetLobbyListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSetLobbyData* Arena::CreateMaybeMessage< ::CMsgClientMMSSetLobbyData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSetLobbyData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSetLobbyDataResponse* Arena::CreateMaybeMessage< ::CMsgClientMMSSetLobbyDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSetLobbyDataResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSGetLobbyData* Arena::CreateMaybeMessage< ::CMsgClientMMSGetLobbyData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSGetLobbyData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSLobbyData_Member* Arena::CreateMaybeMessage< ::CMsgClientMMSLobbyData_Member >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSLobbyData_Member >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSLobbyData* Arena::CreateMaybeMessage< ::CMsgClientMMSLobbyData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSLobbyData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSendLobbyChatMsg* Arena::CreateMaybeMessage< ::CMsgClientMMSSendLobbyChatMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSendLobbyChatMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSLobbyChatMsg* Arena::CreateMaybeMessage< ::CMsgClientMMSLobbyChatMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSLobbyChatMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSetLobbyOwner* Arena::CreateMaybeMessage< ::CMsgClientMMSSetLobbyOwner >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSetLobbyOwner >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSetLobbyOwnerResponse* Arena::CreateMaybeMessage< ::CMsgClientMMSSetLobbyOwnerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSetLobbyOwnerResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSetLobbyLinked* Arena::CreateMaybeMessage< ::CMsgClientMMSSetLobbyLinked >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSetLobbyLinked >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSSetLobbyGameServer* Arena::CreateMaybeMessage< ::CMsgClientMMSSetLobbyGameServer >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSSetLobbyGameServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSLobbyGameServerSet* Arena::CreateMaybeMessage< ::CMsgClientMMSLobbyGameServerSet >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSLobbyGameServerSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSUserJoinedLobby* Arena::CreateMaybeMessage< ::CMsgClientMMSUserJoinedLobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSUserJoinedLobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSUserLeftLobby* Arena::CreateMaybeMessage< ::CMsgClientMMSUserLeftLobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSUserLeftLobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientMMSInviteToLobby* Arena::CreateMaybeMessage< ::CMsgClientMMSInviteToLobby >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientMMSInviteToLobby >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientInviteToGame* Arena::CreateMaybeMessage< ::CMsgClientInviteToGame >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientInviteToGame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientChatInvite* Arena::CreateMaybeMessage< ::CMsgClientChatInvite >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientChatInvite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientConnectionStats_Stats_Logon* Arena::CreateMaybeMessage< ::CMsgClientConnectionStats_Stats_Logon >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientConnectionStats_Stats_Logon >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientConnectionStats_Stats_UDP* Arena::CreateMaybeMessage< ::CMsgClientConnectionStats_Stats_UDP >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientConnectionStats_Stats_UDP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientConnectionStats_Stats_VConn* Arena::CreateMaybeMessage< ::CMsgClientConnectionStats_Stats_VConn >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientConnectionStats_Stats_VConn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientConnectionStats* Arena::CreateMaybeMessage< ::CMsgClientConnectionStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientConnectionStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServersAvailable_Server_Types_Available* Arena::CreateMaybeMessage< ::CMsgClientServersAvailable_Server_Types_Available >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServersAvailable_Server_Types_Available >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientServersAvailable* Arena::CreateMaybeMessage< ::CMsgClientServersAvailable >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientServersAvailable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetUserStats* Arena::CreateMaybeMessage< ::CMsgClientGetUserStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetUserStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetUserStatsResponse_Stats* Arena::CreateMaybeMessage< ::CMsgClientGetUserStatsResponse_Stats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetUserStatsResponse_Stats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetUserStatsResponse_Achievement_Blocks* Arena::CreateMaybeMessage< ::CMsgClientGetUserStatsResponse_Achievement_Blocks >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetUserStatsResponse_Achievement_Blocks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetUserStatsResponse* Arena::CreateMaybeMessage< ::CMsgClientGetUserStatsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetUserStatsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* Arena::CreateMaybeMessage< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStoreUserStatsResponse* Arena::CreateMaybeMessage< ::CMsgClientStoreUserStatsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStoreUserStatsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStoreUserStats2_Stats* Arena::CreateMaybeMessage< ::CMsgClientStoreUserStats2_Stats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStoreUserStats2_Stats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStoreUserStats2* Arena::CreateMaybeMessage< ::CMsgClientStoreUserStats2 >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStoreUserStats2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStatsUpdated_Updated_Stats* Arena::CreateMaybeMessage< ::CMsgClientStatsUpdated_Updated_Stats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStatsUpdated_Updated_Stats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStatsUpdated* Arena::CreateMaybeMessage< ::CMsgClientStatsUpdated >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStatsUpdated >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStoreUserStats_Stats_To_Store* Arena::CreateMaybeMessage< ::CMsgClientStoreUserStats_Stats_To_Store >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStoreUserStats_Stats_To_Store >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientStoreUserStats* Arena::CreateMaybeMessage< ::CMsgClientStoreUserStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientStoreUserStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientDetails* Arena::CreateMaybeMessage< ::CMsgClientGetClientDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientReportOverlayDetourFailure* Arena::CreateMaybeMessage< ::CMsgClientReportOverlayDetourFailure >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientReportOverlayDetourFailure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientDetailsResponse_Game* Arena::CreateMaybeMessage< ::CMsgClientGetClientDetailsResponse_Game >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientDetailsResponse_Game >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientDetailsResponse* Arena::CreateMaybeMessage< ::CMsgClientGetClientDetailsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientDetailsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientAppList* Arena::CreateMaybeMessage< ::CMsgClientGetClientAppList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientAppList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientAppListResponse_App_DLC* Arena::CreateMaybeMessage< ::CMsgClientGetClientAppListResponse_App_DLC >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientAppListResponse_App_DLC >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientAppListResponse_App* Arena::CreateMaybeMessage< ::CMsgClientGetClientAppListResponse_App >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientAppListResponse_App >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetClientAppListResponse* Arena::CreateMaybeMessage< ::CMsgClientGetClientAppListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetClientAppListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientInstallClientApp* Arena::CreateMaybeMessage< ::CMsgClientInstallClientApp >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientInstallClientApp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientInstallClientAppResponse* Arena::CreateMaybeMessage< ::CMsgClientInstallClientAppResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientInstallClientAppResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUninstallClientApp* Arena::CreateMaybeMessage< ::CMsgClientUninstallClientApp >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUninstallClientApp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUninstallClientAppResponse* Arena::CreateMaybeMessage< ::CMsgClientUninstallClientAppResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUninstallClientAppResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSetClientAppUpdateState* Arena::CreateMaybeMessage< ::CMsgClientSetClientAppUpdateState >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSetClientAppUpdateState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSetClientAppUpdateStateResponse* Arena::CreateMaybeMessage< ::CMsgClientSetClientAppUpdateStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSetClientAppUpdateStateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadFileRequest* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadCommit_File* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadCommit_File >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadCommit_File >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadCommit* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadCommit >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadCommit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadCommitResponse_File* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadCommitResponse_File >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadCommitResponse_File >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadCommitResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadCommitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadCommitResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSFileChunk* Arena::CreateMaybeMessage< ::CMsgClientUFSFileChunk >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSFileChunk >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSTransferHeartbeat* Arena::CreateMaybeMessage< ::CMsgClientUFSTransferHeartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSTransferHeartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSUploadFileFinished* Arena::CreateMaybeMessage< ::CMsgClientUFSUploadFileFinished >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSUploadFileFinished >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSDeleteFileRequest* Arena::CreateMaybeMessage< ::CMsgClientUFSDeleteFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSDeleteFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSDeleteFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSDeleteFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSDeleteFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetFileListForApp* Arena::CreateMaybeMessage< ::CMsgClientUFSGetFileListForApp >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetFileListForApp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetFileListForAppResponse_File* Arena::CreateMaybeMessage< ::CMsgClientUFSGetFileListForAppResponse_File >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetFileListForAppResponse_File >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetFileListForAppResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSGetFileListForAppResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetFileListForAppResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSDownloadRequest* Arena::CreateMaybeMessage< ::CMsgClientUFSDownloadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSDownloadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSDownloadResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSDownloadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSDownloadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSLoginRequest* Arena::CreateMaybeMessage< ::CMsgClientUFSLoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSLoginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSLoginResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSLoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSLoginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestEncryptedAppTicket* Arena::CreateMaybeMessage< ::CMsgClientRequestEncryptedAppTicket >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestEncryptedAppTicket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestEncryptedAppTicketResponse* Arena::CreateMaybeMessage< ::CMsgClientRequestEncryptedAppTicketResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestEncryptedAppTicketResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientWalletInfoUpdate* Arena::CreateMaybeMessage< ::CMsgClientWalletInfoUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientWalletInfoUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoUpdate* Arena::CreateMaybeMessage< ::CMsgClientAppInfoUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoChanges* Arena::CreateMaybeMessage< ::CMsgClientAppInfoChanges >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoChanges >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoRequest_App* Arena::CreateMaybeMessage< ::CMsgClientAppInfoRequest_App >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoRequest_App >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoRequest* Arena::CreateMaybeMessage< ::CMsgClientAppInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoResponse_App_Section* Arena::CreateMaybeMessage< ::CMsgClientAppInfoResponse_App_Section >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoResponse_App_Section >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoResponse_App* Arena::CreateMaybeMessage< ::CMsgClientAppInfoResponse_App >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoResponse_App >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAppInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientAppInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAppInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPackageInfoRequest* Arena::CreateMaybeMessage< ::CMsgClientPackageInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPackageInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPackageInfoResponse_Package* Arena::CreateMaybeMessage< ::CMsgClientPackageInfoResponse_Package >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPackageInfoResponse_Package >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPackageInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientPackageInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPackageInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSChangesSinceRequest* Arena::CreateMaybeMessage< ::CMsgClientPICSChangesSinceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSChangesSinceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSChangesSinceResponse_PackageChange* Arena::CreateMaybeMessage< ::CMsgClientPICSChangesSinceResponse_PackageChange >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSChangesSinceResponse_PackageChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSChangesSinceResponse_AppChange* Arena::CreateMaybeMessage< ::CMsgClientPICSChangesSinceResponse_AppChange >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSChangesSinceResponse_AppChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSChangesSinceResponse* Arena::CreateMaybeMessage< ::CMsgClientPICSChangesSinceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSChangesSinceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSProductInfoRequest_AppInfo* Arena::CreateMaybeMessage< ::CMsgClientPICSProductInfoRequest_AppInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSProductInfoRequest_AppInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSProductInfoRequest_PackageInfo* Arena::CreateMaybeMessage< ::CMsgClientPICSProductInfoRequest_PackageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSProductInfoRequest_PackageInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSProductInfoRequest* Arena::CreateMaybeMessage< ::CMsgClientPICSProductInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSProductInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSProductInfoResponse_AppInfo* Arena::CreateMaybeMessage< ::CMsgClientPICSProductInfoResponse_AppInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSProductInfoResponse_AppInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSProductInfoResponse_PackageInfo* Arena::CreateMaybeMessage< ::CMsgClientPICSProductInfoResponse_PackageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSProductInfoResponse_PackageInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSProductInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientPICSProductInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSProductInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSAccessTokenRequest* Arena::CreateMaybeMessage< ::CMsgClientPICSAccessTokenRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSAccessTokenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSAccessTokenResponse_PackageToken* Arena::CreateMaybeMessage< ::CMsgClientPICSAccessTokenResponse_PackageToken >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSAccessTokenResponse_PackageToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSAccessTokenResponse_AppToken* Arena::CreateMaybeMessage< ::CMsgClientPICSAccessTokenResponse_AppToken >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSAccessTokenResponse_AppToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPICSAccessTokenResponse* Arena::CreateMaybeMessage< ::CMsgClientPICSAccessTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPICSAccessTokenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetUGCDetails* Arena::CreateMaybeMessage< ::CMsgClientUFSGetUGCDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetUGCDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetUGCDetailsResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSGetUGCDetailsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetUGCDetailsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetSingleFileInfo* Arena::CreateMaybeMessage< ::CMsgClientUFSGetSingleFileInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetSingleFileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSGetSingleFileInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSGetSingleFileInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSGetSingleFileInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSShareFile* Arena::CreateMaybeMessage< ::CMsgClientUFSShareFile >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSShareFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientUFSShareFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSShareFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientUFSShareFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetClanOfficers* Arena::CreateMaybeMessage< ::CMsgClientAMGetClanOfficers >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetClanOfficers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetClanOfficersResponse* Arena::CreateMaybeMessage< ::CMsgClientAMGetClanOfficersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetClanOfficersResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetPersonaNameHistory_IdInstance* Arena::CreateMaybeMessage< ::CMsgClientAMGetPersonaNameHistory_IdInstance >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetPersonaNameHistory_IdInstance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetPersonaNameHistory* Arena::CreateMaybeMessage< ::CMsgClientAMGetPersonaNameHistory >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetPersonaNameHistory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance* Arena::CreateMaybeMessage< ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance* Arena::CreateMaybeMessage< ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAMGetPersonaNameHistoryResponse* Arena::CreateMaybeMessage< ::CMsgClientAMGetPersonaNameHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAMGetPersonaNameHistoryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDeregisterWithServer* Arena::CreateMaybeMessage< ::CMsgClientDeregisterWithServer >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDeregisterWithServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientClanState_NameInfo* Arena::CreateMaybeMessage< ::CMsgClientClanState_NameInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientClanState_NameInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientClanState_UserCounts* Arena::CreateMaybeMessage< ::CMsgClientClanState_UserCounts >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientClanState_UserCounts >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientClanState_Event* Arena::CreateMaybeMessage< ::CMsgClientClanState_Event >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientClanState_Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientClanState* Arena::CreateMaybeMessage< ::CMsgClientClanState >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientClanState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
