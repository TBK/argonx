// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_virtualcontroller.proto

#include "steammessages_virtualcontroller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fvirtualcontroller_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerConfig_Control;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_AxisButtonControl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_JoyButtonControl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_JoyPadControl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_JoyStickControl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_MacroButtonControl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_TrackpadControl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerConfig_ActionSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerLayout;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerLayouts;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fvirtualcontroller_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_CVirtualControllerElement;
}  // namespace protobuf_steammessages_5fvirtualcontroller_2eproto
class CVirtualControllerElement_JoyStickControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement_JoyStickControl>
      _instance;
} _CVirtualControllerElement_JoyStickControl_default_instance_;
class CVirtualControllerElement_JoyButtonControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement_JoyButtonControl>
      _instance;
} _CVirtualControllerElement_JoyButtonControl_default_instance_;
class CVirtualControllerElement_JoyPadControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement_JoyPadControl>
      _instance;
} _CVirtualControllerElement_JoyPadControl_default_instance_;
class CVirtualControllerElement_MacroButtonControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement_MacroButtonControl>
      _instance;
} _CVirtualControllerElement_MacroButtonControl_default_instance_;
class CVirtualControllerElement_TrackpadControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement_TrackpadControl>
      _instance;
} _CVirtualControllerElement_TrackpadControl_default_instance_;
class CVirtualControllerElement_AxisButtonControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement_AxisButtonControl>
      _instance;
} _CVirtualControllerElement_AxisButtonControl_default_instance_;
class CVirtualControllerElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerElement>
      _instance;
  const ::CVirtualControllerElement_JoyStickControl* joy_stick_;
  const ::CVirtualControllerElement_JoyButtonControl* joy_button_;
  const ::CVirtualControllerElement_JoyPadControl* joy_pad_;
  const ::CVirtualControllerElement_MacroButtonControl* macro_button_;
  const ::CVirtualControllerElement_TrackpadControl* trackpad_;
  const ::CVirtualControllerElement_AxisButtonControl* axis_button_;
} _CVirtualControllerElement_default_instance_;
class CVirtualControllerLayoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerLayout>
      _instance;
} _CVirtualControllerLayout_default_instance_;
class CVirtualControllerLayoutsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerLayouts>
      _instance;
} _CVirtualControllerLayouts_default_instance_;
class CVirtualControllerConfig_ControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerConfig_Control>
      _instance;
} _CVirtualControllerConfig_Control_default_instance_;
class CVirtualControllerConfig_ActionSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerConfig_ActionSet>
      _instance;
} _CVirtualControllerConfig_ActionSet_default_instance_;
class CVirtualControllerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerConfig>
      _instance;
} _CVirtualControllerConfig_default_instance_;
class CVirtualControllerLayoutPackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVirtualControllerLayoutPackage>
      _instance;
} _CVirtualControllerLayoutPackage_default_instance_;
namespace protobuf_steammessages_5fvirtualcontroller_2eproto {
static void InitDefaultsCVirtualControllerElement_JoyStickControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_JoyStickControl_default_instance_;
    new (ptr) ::CVirtualControllerElement_JoyStickControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement_JoyStickControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_JoyStickControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerElement_JoyStickControl}, {}};

static void InitDefaultsCVirtualControllerElement_JoyButtonControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_JoyButtonControl_default_instance_;
    new (ptr) ::CVirtualControllerElement_JoyButtonControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement_JoyButtonControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_JoyButtonControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerElement_JoyButtonControl}, {}};

static void InitDefaultsCVirtualControllerElement_JoyPadControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_JoyPadControl_default_instance_;
    new (ptr) ::CVirtualControllerElement_JoyPadControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement_JoyPadControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_JoyPadControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerElement_JoyPadControl}, {}};

static void InitDefaultsCVirtualControllerElement_MacroButtonControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_MacroButtonControl_default_instance_;
    new (ptr) ::CVirtualControllerElement_MacroButtonControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement_MacroButtonControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_MacroButtonControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerElement_MacroButtonControl}, {}};

static void InitDefaultsCVirtualControllerElement_TrackpadControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_TrackpadControl_default_instance_;
    new (ptr) ::CVirtualControllerElement_TrackpadControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement_TrackpadControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_TrackpadControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerElement_TrackpadControl}, {}};

static void InitDefaultsCVirtualControllerElement_AxisButtonControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_AxisButtonControl_default_instance_;
    new (ptr) ::CVirtualControllerElement_AxisButtonControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement_AxisButtonControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerElement_AxisButtonControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerElement_AxisButtonControl}, {}};

static void InitDefaultsCVirtualControllerElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerElement_default_instance_;
    new (ptr) ::CVirtualControllerElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerElement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_CVirtualControllerElement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsCVirtualControllerElement}, {
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyStickControl.base,
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyButtonControl.base,
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyPadControl.base,
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_MacroButtonControl.base,
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_TrackpadControl.base,
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_AxisButtonControl.base,}};

static void InitDefaultsCVirtualControllerLayout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerLayout_default_instance_;
    new (ptr) ::CVirtualControllerLayout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerLayout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerLayout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCVirtualControllerLayout}, {
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement.base,}};

static void InitDefaultsCVirtualControllerLayouts() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerLayouts_default_instance_;
    new (ptr) ::CVirtualControllerLayouts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerLayouts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerLayouts =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCVirtualControllerLayouts}, {
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayout.base,}};

static void InitDefaultsCVirtualControllerConfig_Control() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerConfig_Control_default_instance_;
    new (ptr) ::CVirtualControllerConfig_Control();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerConfig_Control::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CVirtualControllerConfig_Control =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCVirtualControllerConfig_Control}, {}};

static void InitDefaultsCVirtualControllerConfig_ActionSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerConfig_ActionSet_default_instance_;
    new (ptr) ::CVirtualControllerConfig_ActionSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerConfig_ActionSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerConfig_ActionSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCVirtualControllerConfig_ActionSet}, {
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig_Control.base,}};

static void InitDefaultsCVirtualControllerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerConfig_default_instance_;
    new (ptr) ::CVirtualControllerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CVirtualControllerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCVirtualControllerConfig}, {
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig_ActionSet.base,}};

static void InitDefaultsCVirtualControllerLayoutPackage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CVirtualControllerLayoutPackage_default_instance_;
    new (ptr) ::CVirtualControllerLayoutPackage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CVirtualControllerLayoutPackage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CVirtualControllerLayoutPackage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCVirtualControllerLayoutPackage}, {
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig.base,
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayouts.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement_JoyStickControl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement_JoyButtonControl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement_JoyPadControl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement_MacroButtonControl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement_TrackpadControl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement_AxisButtonControl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerElement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerLayout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerLayouts.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerConfig_Control.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerConfig_ActionSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CVirtualControllerLayoutPackage.base);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, x_axis_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, y_axis_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, x_axis_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyStickControl, y_axis_range_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyButtonControl, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyButtonControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyButtonControl, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyButtonControl, button_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, up_button_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, down_button_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, left_button_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_JoyPadControl, right_button_id_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_MacroButtonControl, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_MacroButtonControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_MacroButtonControl, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_MacroButtonControl, button_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_TrackpadControl, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_TrackpadControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_TrackpadControl, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_TrackpadControl, x_axis_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_TrackpadControl, y_axis_range_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_AxisButtonControl, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_AxisButtonControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_AxisButtonControl, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_AxisButtonControl, axis_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement_AxisButtonControl, axis_pressed_value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, x_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, y_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, height_),
  offsetof(::CVirtualControllerElementDefaultTypeInternal, joy_stick_),
  offsetof(::CVirtualControllerElementDefaultTypeInternal, joy_button_),
  offsetof(::CVirtualControllerElementDefaultTypeInternal, joy_pad_),
  offsetof(::CVirtualControllerElementDefaultTypeInternal, macro_button_),
  offsetof(::CVirtualControllerElementDefaultTypeInternal, trackpad_),
  offsetof(::CVirtualControllerElementDefaultTypeInternal, axis_button_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerElement, control_),
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayout, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayout, layout_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayout, elements_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayouts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayouts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayouts, layouts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, input_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, input_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, input_element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, output_gamepad_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, output_keyboard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, output_mouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, icon_foreground_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_Control, icon_background_),
  0,
  1,
  4,
  5,
  6,
  7,
  8,
  9,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_ActionSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_ActionSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_ActionSet, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_ActionSet, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_ActionSet, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig_ActionSet, controls_),
  1,
  2,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerConfig, actionsets_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayoutPackage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayoutPackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayoutPackage, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayoutPackage, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayoutPackage, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CVirtualControllerLayoutPackage, layouts_),
  2,
  3,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::CVirtualControllerElement_JoyStickControl)},
  { 15, 22, sizeof(::CVirtualControllerElement_JoyButtonControl)},
  { 24, 34, sizeof(::CVirtualControllerElement_JoyPadControl)},
  { 39, 46, sizeof(::CVirtualControllerElement_MacroButtonControl)},
  { 48, 56, sizeof(::CVirtualControllerElement_TrackpadControl)},
  { 59, 67, sizeof(::CVirtualControllerElement_AxisButtonControl)},
  { 70, 86, sizeof(::CVirtualControllerElement)},
  { 96, 103, sizeof(::CVirtualControllerLayout)},
  { 105, 111, sizeof(::CVirtualControllerLayouts)},
  { 112, 127, sizeof(::CVirtualControllerConfig_Control)},
  { 137, 146, sizeof(::CVirtualControllerConfig_ActionSet)},
  { 150, 157, sizeof(::CVirtualControllerConfig)},
  { 159, 168, sizeof(::CVirtualControllerLayoutPackage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_JoyStickControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_JoyButtonControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_JoyPadControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_MacroButtonControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_TrackpadControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_AxisButtonControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerLayout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerLayouts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerConfig_Control_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerConfig_ActionSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CVirtualControllerLayoutPackage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_virtualcontroller.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%steammessages_virtualcontroller.proto\""
      "\372\007\n\031CVirtualControllerElement\022\022\n\nx_posit"
      "ion\030\001 \001(\r\022\022\n\ny_position\030\002 \001(\r\022\r\n\005width\030\003"
      " \001(\r\022\016\n\006height\030\004 \001(\r\022\?\n\tjoy_stick\030\005 \001(\0132"
      "*.CVirtualControllerElement.JoyStickCont"
      "rolH\000\022A\n\njoy_button\030\006 \001(\0132+.CVirtualCont"
      "rollerElement.JoyButtonControlH\000\022;\n\007joy_"
      "pad\030\007 \001(\0132(.CVirtualControllerElement.Jo"
      "yPadControlH\000\022E\n\014macro_button\030\010 \001(\0132-.CV"
      "irtualControllerElement.MacroButtonContr"
      "olH\000\022>\n\010trackpad\030\t \001(\0132*.CVirtualControl"
      "lerElement.TrackpadControlH\000\022C\n\013axis_but"
      "ton\030\n \001(\0132,.CVirtualControllerElement.Ax"
      "isButtonControlH\000\032r\n\017JoyStickControl\022\r\n\005"
      "label\030\001 \001(\t\022\021\n\tx_axis_id\030\002 \001(\r\022\021\n\ty_axis"
      "_id\030\003 \001(\r\022\024\n\014x_axis_range\030\004 \001(\r\022\024\n\014y_axi"
      "s_range\030\005 \001(\r\0324\n\020JoyButtonControl\022\r\n\005lab"
      "el\030\001 \001(\t\022\021\n\tbutton_id\030\002 \001(\r\032}\n\rJoyPadCon"
      "trol\022\r\n\005label\030\001 \001(\t\022\024\n\014up_button_id\030\002 \001("
      "\r\022\026\n\016down_button_id\030\003 \001(\r\022\026\n\016left_button"
      "_id\030\004 \001(\r\022\027\n\017right_button_id\030\005 \001(\r\0326\n\022Ma"
      "croButtonControl\022\r\n\005label\030\001 \001(\t\022\021\n\tbutto"
      "n_id\030\002 \001(\r\032L\n\017TrackpadControl\022\r\n\005label\030\001"
      " \001(\t\022\024\n\014x_axis_range\030\002 \001(\r\022\024\n\014y_axis_ran"
      "ge\030\003 \001(\r\032O\n\021AxisButtonControl\022\r\n\005label\030\001"
      " \001(\t\022\017\n\007axis_id\030\002 \001(\r\022\032\n\022axis_pressed_va"
      "lue\030\003 \001(\rB\t\n\007control\"\223\001\n\030CVirtualControl"
      "lerLayout\022I\n\013layout_type\030\001 \001(\0162\026.EContro"
      "llerLayoutType:\034k_EControllerLayoutTypeP"
      "hone\022,\n\010elements\030\002 \003(\0132\032.CVirtualControl"
      "lerElement\"G\n\031CVirtualControllerLayouts\022"
      "*\n\007layouts\030\001 \003(\0132\031.CVirtualControllerLay"
      "out\"\262\003\n\030CVirtualControllerConfig\022\014\n\004name"
      "\030\001 \001(\t\0227\n\nactionsets\030\002 \003(\0132#.CVirtualCon"
      "trollerConfig.ActionSet\032\337\001\n\007Control\022\014\n\004n"
      "ame\030\001 \001(\t\022\014\n\004icon\030\002 \001(\t\022\024\n\014input_source\030"
      "\003 \001(\005\022\022\n\ninput_mode\030\004 \001(\005\022\025\n\rinput_eleme"
      "nt\030\005 \001(\005\022\026\n\016output_gamepad\030\006 \001(\005\022\027\n\017outp"
      "ut_keyboard\030\007 \001(\005\022\024\n\014output_mouse\030\010 \001(\005\022"
      "\027\n\017icon_foreground\030\t \001(\t\022\027\n\017icon_backgro"
      "und\030\n \001(\t\032m\n\tActionSet\022\n\n\002id\030\001 \001(\005\022\021\n\tpa"
      "rent_id\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\0223\n\010controls\030"
      "\004 \003(\0132!.CVirtualControllerConfig.Control"
      "\"\232\001\n\037CVirtualControllerLayoutPackage\022\r\n\005"
      "appid\030\001 \001(\r\022\020\n\010revision\030\002 \001(\r\022)\n\006config\030"
      "\003 \001(\0132\031.CVirtualControllerConfig\022+\n\007layo"
      "uts\030\004 \001(\0132\032.CVirtualControllerLayouts*\\\n"
      "\025EControllerLayoutType\022 \n\034k_EControllerL"
      "ayoutTypePhone\020\000\022!\n\035k_EControllerLayoutT"
      "ypeTablet\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1971);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_virtualcontroller.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fvirtualcontroller_2eproto
const ::google::protobuf::EnumDescriptor* EControllerLayoutType_descriptor() {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_enum_descriptors[0];
}
bool EControllerLayoutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CVirtualControllerElement_JoyStickControl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement_JoyStickControl::kLabelFieldNumber;
const int CVirtualControllerElement_JoyStickControl::kXAxisIdFieldNumber;
const int CVirtualControllerElement_JoyStickControl::kYAxisIdFieldNumber;
const int CVirtualControllerElement_JoyStickControl::kXAxisRangeFieldNumber;
const int CVirtualControllerElement_JoyStickControl::kYAxisRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement_JoyStickControl::CVirtualControllerElement_JoyStickControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyStickControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement.JoyStickControl)
}
CVirtualControllerElement_JoyStickControl::CVirtualControllerElement_JoyStickControl(const CVirtualControllerElement_JoyStickControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&x_axis_id_, &from.x_axis_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_axis_range_) -
    reinterpret_cast<char*>(&x_axis_id_)) + sizeof(y_axis_range_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement.JoyStickControl)
}

void CVirtualControllerElement_JoyStickControl::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_axis_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_axis_range_) -
      reinterpret_cast<char*>(&x_axis_id_)) + sizeof(y_axis_range_));
}

CVirtualControllerElement_JoyStickControl::~CVirtualControllerElement_JoyStickControl() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement.JoyStickControl)
  SharedDtor();
}

void CVirtualControllerElement_JoyStickControl::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerElement_JoyStickControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement_JoyStickControl::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement_JoyStickControl& CVirtualControllerElement_JoyStickControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyStickControl.base);
  return *internal_default_instance();
}


void CVirtualControllerElement_JoyStickControl::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement.JoyStickControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    label_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&x_axis_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_axis_range_) -
        reinterpret_cast<char*>(&x_axis_id_)) + sizeof(y_axis_range_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement_JoyStickControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement.JoyStickControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerElement.JoyStickControl.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x_axis_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x_axis_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_axis_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y_axis_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y_axis_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_axis_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x_axis_range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_x_axis_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_axis_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y_axis_range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_y_axis_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_axis_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement.JoyStickControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement.JoyStickControl)
  return false;
#undef DO_
}

void CVirtualControllerElement_JoyStickControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement.JoyStickControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.JoyStickControl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 x_axis_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x_axis_id(), output);
  }

  // optional uint32 y_axis_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y_axis_id(), output);
  }

  // optional uint32 x_axis_range = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->x_axis_range(), output);
  }

  // optional uint32 y_axis_range = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->y_axis_range(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement.JoyStickControl)
}

::google::protobuf::uint8* CVirtualControllerElement_JoyStickControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement.JoyStickControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.JoyStickControl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 x_axis_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x_axis_id(), target);
  }

  // optional uint32 y_axis_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y_axis_id(), target);
  }

  // optional uint32 x_axis_range = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->x_axis_range(), target);
  }

  // optional uint32 y_axis_range = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->y_axis_range(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement.JoyStickControl)
  return target;
}

size_t CVirtualControllerElement_JoyStickControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement.JoyStickControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 x_axis_id = 2;
    if (has_x_axis_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_axis_id());
    }

    // optional uint32 y_axis_id = 3;
    if (has_y_axis_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y_axis_id());
    }

    // optional uint32 x_axis_range = 4;
    if (has_x_axis_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_axis_range());
    }

    // optional uint32 y_axis_range = 5;
    if (has_y_axis_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y_axis_range());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement_JoyStickControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement.JoyStickControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement_JoyStickControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement_JoyStickControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement.JoyStickControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement.JoyStickControl)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement_JoyStickControl::MergeFrom(const CVirtualControllerElement_JoyStickControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement.JoyStickControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_axis_id_ = from.x_axis_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_axis_id_ = from.y_axis_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      x_axis_range_ = from.x_axis_range_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_axis_range_ = from.y_axis_range_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerElement_JoyStickControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement.JoyStickControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement_JoyStickControl::CopyFrom(const CVirtualControllerElement_JoyStickControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement.JoyStickControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement_JoyStickControl::IsInitialized() const {
  return true;
}

void CVirtualControllerElement_JoyStickControl::Swap(CVirtualControllerElement_JoyStickControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement_JoyStickControl::InternalSwap(CVirtualControllerElement_JoyStickControl* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_axis_id_, other->x_axis_id_);
  swap(y_axis_id_, other->y_axis_id_);
  swap(x_axis_range_, other->x_axis_range_);
  swap(y_axis_range_, other->y_axis_range_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement_JoyStickControl::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerElement_JoyButtonControl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement_JoyButtonControl::kLabelFieldNumber;
const int CVirtualControllerElement_JoyButtonControl::kButtonIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement_JoyButtonControl::CVirtualControllerElement_JoyButtonControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyButtonControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement.JoyButtonControl)
}
CVirtualControllerElement_JoyButtonControl::CVirtualControllerElement_JoyButtonControl(const CVirtualControllerElement_JoyButtonControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  button_id_ = from.button_id_;
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement.JoyButtonControl)
}

void CVirtualControllerElement_JoyButtonControl::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  button_id_ = 0u;
}

CVirtualControllerElement_JoyButtonControl::~CVirtualControllerElement_JoyButtonControl() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement.JoyButtonControl)
  SharedDtor();
}

void CVirtualControllerElement_JoyButtonControl::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerElement_JoyButtonControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement_JoyButtonControl::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement_JoyButtonControl& CVirtualControllerElement_JoyButtonControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyButtonControl.base);
  return *internal_default_instance();
}


void CVirtualControllerElement_JoyButtonControl::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement.JoyButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    label_.ClearNonDefaultToEmptyNoArena();
  }
  button_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement_JoyButtonControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement.JoyButtonControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerElement.JoyButtonControl.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 button_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_button_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &button_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement.JoyButtonControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement.JoyButtonControl)
  return false;
#undef DO_
}

void CVirtualControllerElement_JoyButtonControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement.JoyButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.JoyButtonControl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 button_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->button_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement.JoyButtonControl)
}

::google::protobuf::uint8* CVirtualControllerElement_JoyButtonControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement.JoyButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.JoyButtonControl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 button_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->button_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement.JoyButtonControl)
  return target;
}

size_t CVirtualControllerElement_JoyButtonControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement.JoyButtonControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 button_id = 2;
    if (has_button_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->button_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement_JoyButtonControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement.JoyButtonControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement_JoyButtonControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement_JoyButtonControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement.JoyButtonControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement.JoyButtonControl)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement_JoyButtonControl::MergeFrom(const CVirtualControllerElement_JoyButtonControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement.JoyButtonControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      button_id_ = from.button_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerElement_JoyButtonControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement.JoyButtonControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement_JoyButtonControl::CopyFrom(const CVirtualControllerElement_JoyButtonControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement.JoyButtonControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement_JoyButtonControl::IsInitialized() const {
  return true;
}

void CVirtualControllerElement_JoyButtonControl::Swap(CVirtualControllerElement_JoyButtonControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement_JoyButtonControl::InternalSwap(CVirtualControllerElement_JoyButtonControl* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(button_id_, other->button_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement_JoyButtonControl::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerElement_JoyPadControl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement_JoyPadControl::kLabelFieldNumber;
const int CVirtualControllerElement_JoyPadControl::kUpButtonIdFieldNumber;
const int CVirtualControllerElement_JoyPadControl::kDownButtonIdFieldNumber;
const int CVirtualControllerElement_JoyPadControl::kLeftButtonIdFieldNumber;
const int CVirtualControllerElement_JoyPadControl::kRightButtonIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement_JoyPadControl::CVirtualControllerElement_JoyPadControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyPadControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement.JoyPadControl)
}
CVirtualControllerElement_JoyPadControl::CVirtualControllerElement_JoyPadControl(const CVirtualControllerElement_JoyPadControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&up_button_id_, &from.up_button_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_button_id_) -
    reinterpret_cast<char*>(&up_button_id_)) + sizeof(right_button_id_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement.JoyPadControl)
}

void CVirtualControllerElement_JoyPadControl::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&up_button_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_button_id_) -
      reinterpret_cast<char*>(&up_button_id_)) + sizeof(right_button_id_));
}

CVirtualControllerElement_JoyPadControl::~CVirtualControllerElement_JoyPadControl() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement.JoyPadControl)
  SharedDtor();
}

void CVirtualControllerElement_JoyPadControl::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerElement_JoyPadControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement_JoyPadControl::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement_JoyPadControl& CVirtualControllerElement_JoyPadControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_JoyPadControl.base);
  return *internal_default_instance();
}


void CVirtualControllerElement_JoyPadControl::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement.JoyPadControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    label_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&up_button_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&right_button_id_) -
        reinterpret_cast<char*>(&up_button_id_)) + sizeof(right_button_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement_JoyPadControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement.JoyPadControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerElement.JoyPadControl.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 up_button_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_up_button_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &up_button_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 down_button_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_down_button_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &down_button_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 left_button_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_left_button_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_button_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 right_button_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_right_button_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &right_button_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement.JoyPadControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement.JoyPadControl)
  return false;
#undef DO_
}

void CVirtualControllerElement_JoyPadControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement.JoyPadControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.JoyPadControl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 up_button_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->up_button_id(), output);
  }

  // optional uint32 down_button_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->down_button_id(), output);
  }

  // optional uint32 left_button_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->left_button_id(), output);
  }

  // optional uint32 right_button_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->right_button_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement.JoyPadControl)
}

::google::protobuf::uint8* CVirtualControllerElement_JoyPadControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement.JoyPadControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.JoyPadControl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 up_button_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->up_button_id(), target);
  }

  // optional uint32 down_button_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->down_button_id(), target);
  }

  // optional uint32 left_button_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->left_button_id(), target);
  }

  // optional uint32 right_button_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->right_button_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement.JoyPadControl)
  return target;
}

size_t CVirtualControllerElement_JoyPadControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement.JoyPadControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 up_button_id = 2;
    if (has_up_button_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->up_button_id());
    }

    // optional uint32 down_button_id = 3;
    if (has_down_button_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->down_button_id());
    }

    // optional uint32 left_button_id = 4;
    if (has_left_button_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->left_button_id());
    }

    // optional uint32 right_button_id = 5;
    if (has_right_button_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->right_button_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement_JoyPadControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement.JoyPadControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement_JoyPadControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement_JoyPadControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement.JoyPadControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement.JoyPadControl)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement_JoyPadControl::MergeFrom(const CVirtualControllerElement_JoyPadControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement.JoyPadControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      up_button_id_ = from.up_button_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      down_button_id_ = from.down_button_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      left_button_id_ = from.left_button_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      right_button_id_ = from.right_button_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerElement_JoyPadControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement.JoyPadControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement_JoyPadControl::CopyFrom(const CVirtualControllerElement_JoyPadControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement.JoyPadControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement_JoyPadControl::IsInitialized() const {
  return true;
}

void CVirtualControllerElement_JoyPadControl::Swap(CVirtualControllerElement_JoyPadControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement_JoyPadControl::InternalSwap(CVirtualControllerElement_JoyPadControl* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(up_button_id_, other->up_button_id_);
  swap(down_button_id_, other->down_button_id_);
  swap(left_button_id_, other->left_button_id_);
  swap(right_button_id_, other->right_button_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement_JoyPadControl::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerElement_MacroButtonControl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement_MacroButtonControl::kLabelFieldNumber;
const int CVirtualControllerElement_MacroButtonControl::kButtonIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement_MacroButtonControl::CVirtualControllerElement_MacroButtonControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_MacroButtonControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement.MacroButtonControl)
}
CVirtualControllerElement_MacroButtonControl::CVirtualControllerElement_MacroButtonControl(const CVirtualControllerElement_MacroButtonControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  button_id_ = from.button_id_;
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement.MacroButtonControl)
}

void CVirtualControllerElement_MacroButtonControl::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  button_id_ = 0u;
}

CVirtualControllerElement_MacroButtonControl::~CVirtualControllerElement_MacroButtonControl() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement.MacroButtonControl)
  SharedDtor();
}

void CVirtualControllerElement_MacroButtonControl::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerElement_MacroButtonControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement_MacroButtonControl::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement_MacroButtonControl& CVirtualControllerElement_MacroButtonControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_MacroButtonControl.base);
  return *internal_default_instance();
}


void CVirtualControllerElement_MacroButtonControl::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement.MacroButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    label_.ClearNonDefaultToEmptyNoArena();
  }
  button_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement_MacroButtonControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement.MacroButtonControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerElement.MacroButtonControl.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 button_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_button_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &button_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement.MacroButtonControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement.MacroButtonControl)
  return false;
#undef DO_
}

void CVirtualControllerElement_MacroButtonControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement.MacroButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.MacroButtonControl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 button_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->button_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement.MacroButtonControl)
}

::google::protobuf::uint8* CVirtualControllerElement_MacroButtonControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement.MacroButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.MacroButtonControl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 button_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->button_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement.MacroButtonControl)
  return target;
}

size_t CVirtualControllerElement_MacroButtonControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement.MacroButtonControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 button_id = 2;
    if (has_button_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->button_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement_MacroButtonControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement.MacroButtonControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement_MacroButtonControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement_MacroButtonControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement.MacroButtonControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement.MacroButtonControl)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement_MacroButtonControl::MergeFrom(const CVirtualControllerElement_MacroButtonControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement.MacroButtonControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      button_id_ = from.button_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerElement_MacroButtonControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement.MacroButtonControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement_MacroButtonControl::CopyFrom(const CVirtualControllerElement_MacroButtonControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement.MacroButtonControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement_MacroButtonControl::IsInitialized() const {
  return true;
}

void CVirtualControllerElement_MacroButtonControl::Swap(CVirtualControllerElement_MacroButtonControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement_MacroButtonControl::InternalSwap(CVirtualControllerElement_MacroButtonControl* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(button_id_, other->button_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement_MacroButtonControl::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerElement_TrackpadControl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement_TrackpadControl::kLabelFieldNumber;
const int CVirtualControllerElement_TrackpadControl::kXAxisRangeFieldNumber;
const int CVirtualControllerElement_TrackpadControl::kYAxisRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement_TrackpadControl::CVirtualControllerElement_TrackpadControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_TrackpadControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement.TrackpadControl)
}
CVirtualControllerElement_TrackpadControl::CVirtualControllerElement_TrackpadControl(const CVirtualControllerElement_TrackpadControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&x_axis_range_, &from.x_axis_range_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_axis_range_) -
    reinterpret_cast<char*>(&x_axis_range_)) + sizeof(y_axis_range_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement.TrackpadControl)
}

void CVirtualControllerElement_TrackpadControl::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_axis_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_axis_range_) -
      reinterpret_cast<char*>(&x_axis_range_)) + sizeof(y_axis_range_));
}

CVirtualControllerElement_TrackpadControl::~CVirtualControllerElement_TrackpadControl() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement.TrackpadControl)
  SharedDtor();
}

void CVirtualControllerElement_TrackpadControl::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerElement_TrackpadControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement_TrackpadControl::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement_TrackpadControl& CVirtualControllerElement_TrackpadControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_TrackpadControl.base);
  return *internal_default_instance();
}


void CVirtualControllerElement_TrackpadControl::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement.TrackpadControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    label_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&x_axis_range_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_axis_range_) -
        reinterpret_cast<char*>(&x_axis_range_)) + sizeof(y_axis_range_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement_TrackpadControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement.TrackpadControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerElement.TrackpadControl.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x_axis_range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x_axis_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_axis_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y_axis_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y_axis_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_axis_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement.TrackpadControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement.TrackpadControl)
  return false;
#undef DO_
}

void CVirtualControllerElement_TrackpadControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement.TrackpadControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.TrackpadControl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 x_axis_range = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x_axis_range(), output);
  }

  // optional uint32 y_axis_range = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y_axis_range(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement.TrackpadControl)
}

::google::protobuf::uint8* CVirtualControllerElement_TrackpadControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement.TrackpadControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.TrackpadControl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 x_axis_range = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x_axis_range(), target);
  }

  // optional uint32 y_axis_range = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y_axis_range(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement.TrackpadControl)
  return target;
}

size_t CVirtualControllerElement_TrackpadControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement.TrackpadControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 x_axis_range = 2;
    if (has_x_axis_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_axis_range());
    }

    // optional uint32 y_axis_range = 3;
    if (has_y_axis_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y_axis_range());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement_TrackpadControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement.TrackpadControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement_TrackpadControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement_TrackpadControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement.TrackpadControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement.TrackpadControl)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement_TrackpadControl::MergeFrom(const CVirtualControllerElement_TrackpadControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement.TrackpadControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_axis_range_ = from.x_axis_range_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_axis_range_ = from.y_axis_range_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerElement_TrackpadControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement.TrackpadControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement_TrackpadControl::CopyFrom(const CVirtualControllerElement_TrackpadControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement.TrackpadControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement_TrackpadControl::IsInitialized() const {
  return true;
}

void CVirtualControllerElement_TrackpadControl::Swap(CVirtualControllerElement_TrackpadControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement_TrackpadControl::InternalSwap(CVirtualControllerElement_TrackpadControl* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_axis_range_, other->x_axis_range_);
  swap(y_axis_range_, other->y_axis_range_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement_TrackpadControl::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerElement_AxisButtonControl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement_AxisButtonControl::kLabelFieldNumber;
const int CVirtualControllerElement_AxisButtonControl::kAxisIdFieldNumber;
const int CVirtualControllerElement_AxisButtonControl::kAxisPressedValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement_AxisButtonControl::CVirtualControllerElement_AxisButtonControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_AxisButtonControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement.AxisButtonControl)
}
CVirtualControllerElement_AxisButtonControl::CVirtualControllerElement_AxisButtonControl(const CVirtualControllerElement_AxisButtonControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&axis_id_, &from.axis_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&axis_pressed_value_) -
    reinterpret_cast<char*>(&axis_id_)) + sizeof(axis_pressed_value_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement.AxisButtonControl)
}

void CVirtualControllerElement_AxisButtonControl::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&axis_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_pressed_value_) -
      reinterpret_cast<char*>(&axis_id_)) + sizeof(axis_pressed_value_));
}

CVirtualControllerElement_AxisButtonControl::~CVirtualControllerElement_AxisButtonControl() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement.AxisButtonControl)
  SharedDtor();
}

void CVirtualControllerElement_AxisButtonControl::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerElement_AxisButtonControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement_AxisButtonControl::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement_AxisButtonControl& CVirtualControllerElement_AxisButtonControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement_AxisButtonControl.base);
  return *internal_default_instance();
}


void CVirtualControllerElement_AxisButtonControl::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement.AxisButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    label_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&axis_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&axis_pressed_value_) -
        reinterpret_cast<char*>(&axis_id_)) + sizeof(axis_pressed_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement_AxisButtonControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement.AxisButtonControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerElement.AxisButtonControl.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 axis_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_axis_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &axis_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 axis_pressed_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_axis_pressed_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &axis_pressed_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement.AxisButtonControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement.AxisButtonControl)
  return false;
#undef DO_
}

void CVirtualControllerElement_AxisButtonControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement.AxisButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.AxisButtonControl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional uint32 axis_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->axis_id(), output);
  }

  // optional uint32 axis_pressed_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->axis_pressed_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement.AxisButtonControl)
}

::google::protobuf::uint8* CVirtualControllerElement_AxisButtonControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement.AxisButtonControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerElement.AxisButtonControl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional uint32 axis_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->axis_id(), target);
  }

  // optional uint32 axis_pressed_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->axis_pressed_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement.AxisButtonControl)
  return target;
}

size_t CVirtualControllerElement_AxisButtonControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement.AxisButtonControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 axis_id = 2;
    if (has_axis_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->axis_id());
    }

    // optional uint32 axis_pressed_value = 3;
    if (has_axis_pressed_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->axis_pressed_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement_AxisButtonControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement.AxisButtonControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement_AxisButtonControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement_AxisButtonControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement.AxisButtonControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement.AxisButtonControl)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement_AxisButtonControl::MergeFrom(const CVirtualControllerElement_AxisButtonControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement.AxisButtonControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      axis_id_ = from.axis_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      axis_pressed_value_ = from.axis_pressed_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerElement_AxisButtonControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement.AxisButtonControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement_AxisButtonControl::CopyFrom(const CVirtualControllerElement_AxisButtonControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement.AxisButtonControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement_AxisButtonControl::IsInitialized() const {
  return true;
}

void CVirtualControllerElement_AxisButtonControl::Swap(CVirtualControllerElement_AxisButtonControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement_AxisButtonControl::InternalSwap(CVirtualControllerElement_AxisButtonControl* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(axis_id_, other->axis_id_);
  swap(axis_pressed_value_, other->axis_pressed_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement_AxisButtonControl::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerElement::InitAsDefaultInstance() {
  ::_CVirtualControllerElement_default_instance_.joy_stick_ = const_cast< ::CVirtualControllerElement_JoyStickControl*>(
      ::CVirtualControllerElement_JoyStickControl::internal_default_instance());
  ::_CVirtualControllerElement_default_instance_.joy_button_ = const_cast< ::CVirtualControllerElement_JoyButtonControl*>(
      ::CVirtualControllerElement_JoyButtonControl::internal_default_instance());
  ::_CVirtualControllerElement_default_instance_.joy_pad_ = const_cast< ::CVirtualControllerElement_JoyPadControl*>(
      ::CVirtualControllerElement_JoyPadControl::internal_default_instance());
  ::_CVirtualControllerElement_default_instance_.macro_button_ = const_cast< ::CVirtualControllerElement_MacroButtonControl*>(
      ::CVirtualControllerElement_MacroButtonControl::internal_default_instance());
  ::_CVirtualControllerElement_default_instance_.trackpad_ = const_cast< ::CVirtualControllerElement_TrackpadControl*>(
      ::CVirtualControllerElement_TrackpadControl::internal_default_instance());
  ::_CVirtualControllerElement_default_instance_.axis_button_ = const_cast< ::CVirtualControllerElement_AxisButtonControl*>(
      ::CVirtualControllerElement_AxisButtonControl::internal_default_instance());
}
void CVirtualControllerElement::set_allocated_joy_stick(::CVirtualControllerElement_JoyStickControl* joy_stick) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_control();
  if (joy_stick) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      joy_stick = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, joy_stick, submessage_arena);
    }
    set_has_joy_stick();
    control_.joy_stick_ = joy_stick;
  }
  // @@protoc_insertion_point(field_set_allocated:CVirtualControllerElement.joy_stick)
}
void CVirtualControllerElement::set_allocated_joy_button(::CVirtualControllerElement_JoyButtonControl* joy_button) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_control();
  if (joy_button) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      joy_button = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, joy_button, submessage_arena);
    }
    set_has_joy_button();
    control_.joy_button_ = joy_button;
  }
  // @@protoc_insertion_point(field_set_allocated:CVirtualControllerElement.joy_button)
}
void CVirtualControllerElement::set_allocated_joy_pad(::CVirtualControllerElement_JoyPadControl* joy_pad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_control();
  if (joy_pad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      joy_pad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, joy_pad, submessage_arena);
    }
    set_has_joy_pad();
    control_.joy_pad_ = joy_pad;
  }
  // @@protoc_insertion_point(field_set_allocated:CVirtualControllerElement.joy_pad)
}
void CVirtualControllerElement::set_allocated_macro_button(::CVirtualControllerElement_MacroButtonControl* macro_button) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_control();
  if (macro_button) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      macro_button = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, macro_button, submessage_arena);
    }
    set_has_macro_button();
    control_.macro_button_ = macro_button;
  }
  // @@protoc_insertion_point(field_set_allocated:CVirtualControllerElement.macro_button)
}
void CVirtualControllerElement::set_allocated_trackpad(::CVirtualControllerElement_TrackpadControl* trackpad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_control();
  if (trackpad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trackpad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trackpad, submessage_arena);
    }
    set_has_trackpad();
    control_.trackpad_ = trackpad;
  }
  // @@protoc_insertion_point(field_set_allocated:CVirtualControllerElement.trackpad)
}
void CVirtualControllerElement::set_allocated_axis_button(::CVirtualControllerElement_AxisButtonControl* axis_button) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_control();
  if (axis_button) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      axis_button = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, axis_button, submessage_arena);
    }
    set_has_axis_button();
    control_.axis_button_ = axis_button;
  }
  // @@protoc_insertion_point(field_set_allocated:CVirtualControllerElement.axis_button)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerElement::kXPositionFieldNumber;
const int CVirtualControllerElement::kYPositionFieldNumber;
const int CVirtualControllerElement::kWidthFieldNumber;
const int CVirtualControllerElement::kHeightFieldNumber;
const int CVirtualControllerElement::kJoyStickFieldNumber;
const int CVirtualControllerElement::kJoyButtonFieldNumber;
const int CVirtualControllerElement::kJoyPadFieldNumber;
const int CVirtualControllerElement::kMacroButtonFieldNumber;
const int CVirtualControllerElement::kTrackpadFieldNumber;
const int CVirtualControllerElement::kAxisButtonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerElement::CVirtualControllerElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerElement)
}
CVirtualControllerElement::CVirtualControllerElement(const CVirtualControllerElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_position_, &from.x_position_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&x_position_)) + sizeof(height_));
  clear_has_control();
  switch (from.control_case()) {
    case kJoyStick: {
      mutable_joy_stick()->::CVirtualControllerElement_JoyStickControl::MergeFrom(from.joy_stick());
      break;
    }
    case kJoyButton: {
      mutable_joy_button()->::CVirtualControllerElement_JoyButtonControl::MergeFrom(from.joy_button());
      break;
    }
    case kJoyPad: {
      mutable_joy_pad()->::CVirtualControllerElement_JoyPadControl::MergeFrom(from.joy_pad());
      break;
    }
    case kMacroButton: {
      mutable_macro_button()->::CVirtualControllerElement_MacroButtonControl::MergeFrom(from.macro_button());
      break;
    }
    case kTrackpad: {
      mutable_trackpad()->::CVirtualControllerElement_TrackpadControl::MergeFrom(from.trackpad());
      break;
    }
    case kAxisButton: {
      mutable_axis_button()->::CVirtualControllerElement_AxisButtonControl::MergeFrom(from.axis_button());
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerElement)
}

void CVirtualControllerElement::SharedCtor() {
  ::memset(&x_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&x_position_)) + sizeof(height_));
  clear_has_control();
}

CVirtualControllerElement::~CVirtualControllerElement() {
  // @@protoc_insertion_point(destructor:CVirtualControllerElement)
  SharedDtor();
}

void CVirtualControllerElement::SharedDtor() {
  if (has_control()) {
    clear_control();
  }
}

void CVirtualControllerElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerElement::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerElement& CVirtualControllerElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerElement.base);
  return *internal_default_instance();
}


void CVirtualControllerElement::clear_control() {
// @@protoc_insertion_point(one_of_clear_start:CVirtualControllerElement)
  switch (control_case()) {
    case kJoyStick: {
      delete control_.joy_stick_;
      break;
    }
    case kJoyButton: {
      delete control_.joy_button_;
      break;
    }
    case kJoyPad: {
      delete control_.joy_pad_;
      break;
    }
    case kMacroButton: {
      delete control_.macro_button_;
      break;
    }
    case kTrackpad: {
      delete control_.trackpad_;
      break;
    }
    case kAxisButton: {
      delete control_.axis_button_;
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTROL_NOT_SET;
}


void CVirtualControllerElement::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&x_position_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&x_position_)) + sizeof(height_));
  }
  clear_control();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x_position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerElement.JoyStickControl joy_stick = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_joy_stick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerElement.JoyButtonControl joy_button = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_joy_button()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerElement.JoyPadControl joy_pad = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_joy_pad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerElement.MacroButtonControl macro_button = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_macro_button()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerElement.TrackpadControl trackpad = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trackpad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerElement.AxisButtonControl axis_button = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis_button()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerElement)
  return false;
#undef DO_
}

void CVirtualControllerElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x_position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x_position(), output);
  }

  // optional uint32 y_position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y_position(), output);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width(), output);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  switch (control_case()) {
    case kJoyStick:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_joy_stick(), output);
      break;
    case kJoyButton:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_joy_button(), output);
      break;
    case kJoyPad:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_joy_pad(), output);
      break;
    case kMacroButton:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_macro_button(), output);
      break;
    case kTrackpad:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, this->_internal_trackpad(), output);
      break;
    case kAxisButton:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_axis_button(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerElement)
}

::google::protobuf::uint8* CVirtualControllerElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x_position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x_position(), target);
  }

  // optional uint32 y_position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y_position(), target);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width(), target);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  switch (control_case()) {
    case kJoyStick:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_joy_stick(), deterministic, target);
      break;
    case kJoyButton:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_joy_button(), deterministic, target);
      break;
    case kJoyPad:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_joy_pad(), deterministic, target);
      break;
    case kMacroButton:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_macro_button(), deterministic, target);
      break;
    case kTrackpad:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          9, this->_internal_trackpad(), deterministic, target);
      break;
    case kAxisButton:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          10, this->_internal_axis_button(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerElement)
  return target;
}

size_t CVirtualControllerElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerElement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 x_position = 1;
    if (has_x_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_position());
    }

    // optional uint32 y_position = 2;
    if (has_y_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y_position());
    }

    // optional uint32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  switch (control_case()) {
    // optional .CVirtualControllerElement.JoyStickControl joy_stick = 5;
    case kJoyStick: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_.joy_stick_);
      break;
    }
    // optional .CVirtualControllerElement.JoyButtonControl joy_button = 6;
    case kJoyButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_.joy_button_);
      break;
    }
    // optional .CVirtualControllerElement.JoyPadControl joy_pad = 7;
    case kJoyPad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_.joy_pad_);
      break;
    }
    // optional .CVirtualControllerElement.MacroButtonControl macro_button = 8;
    case kMacroButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_.macro_button_);
      break;
    }
    // optional .CVirtualControllerElement.TrackpadControl trackpad = 9;
    case kTrackpad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_.trackpad_);
      break;
    }
    // optional .CVirtualControllerElement.AxisButtonControl axis_button = 10;
    case kAxisButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_.axis_button_);
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerElement)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerElement)
    MergeFrom(*source);
  }
}

void CVirtualControllerElement::MergeFrom(const CVirtualControllerElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_position_ = from.x_position_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_position_ = from.y_position_;
    }
    if (cached_has_bits & 0x00000004u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.control_case()) {
    case kJoyStick: {
      mutable_joy_stick()->::CVirtualControllerElement_JoyStickControl::MergeFrom(from.joy_stick());
      break;
    }
    case kJoyButton: {
      mutable_joy_button()->::CVirtualControllerElement_JoyButtonControl::MergeFrom(from.joy_button());
      break;
    }
    case kJoyPad: {
      mutable_joy_pad()->::CVirtualControllerElement_JoyPadControl::MergeFrom(from.joy_pad());
      break;
    }
    case kMacroButton: {
      mutable_macro_button()->::CVirtualControllerElement_MacroButtonControl::MergeFrom(from.macro_button());
      break;
    }
    case kTrackpad: {
      mutable_trackpad()->::CVirtualControllerElement_TrackpadControl::MergeFrom(from.trackpad());
      break;
    }
    case kAxisButton: {
      mutable_axis_button()->::CVirtualControllerElement_AxisButtonControl::MergeFrom(from.axis_button());
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
}

void CVirtualControllerElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerElement::CopyFrom(const CVirtualControllerElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerElement::IsInitialized() const {
  return true;
}

void CVirtualControllerElement::Swap(CVirtualControllerElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerElement::InternalSwap(CVirtualControllerElement* other) {
  using std::swap;
  swap(x_position_, other->x_position_);
  swap(y_position_, other->y_position_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(control_, other->control_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerElement::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerLayout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerLayout::kLayoutTypeFieldNumber;
const int CVirtualControllerLayout::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerLayout::CVirtualControllerLayout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerLayout)
}
CVirtualControllerLayout::CVirtualControllerLayout(const CVirtualControllerLayout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  layout_type_ = from.layout_type_;
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerLayout)
}

void CVirtualControllerLayout::SharedCtor() {
  layout_type_ = 0;
}

CVirtualControllerLayout::~CVirtualControllerLayout() {
  // @@protoc_insertion_point(destructor:CVirtualControllerLayout)
  SharedDtor();
}

void CVirtualControllerLayout::SharedDtor() {
}

void CVirtualControllerLayout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerLayout::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerLayout& CVirtualControllerLayout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayout.base);
  return *internal_default_instance();
}


void CVirtualControllerLayout::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerLayout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  layout_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerLayout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerLayout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EControllerLayoutType layout_type = 1 [default = k_EControllerLayoutTypePhone];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EControllerLayoutType_IsValid(value)) {
            set_layout_type(static_cast< ::EControllerLayoutType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CVirtualControllerElement elements = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerLayout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerLayout)
  return false;
#undef DO_
}

void CVirtualControllerLayout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerLayout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EControllerLayoutType layout_type = 1 [default = k_EControllerLayoutTypePhone];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->layout_type(), output);
  }

  // repeated .CVirtualControllerElement elements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->elements(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerLayout)
}

::google::protobuf::uint8* CVirtualControllerLayout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerLayout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EControllerLayoutType layout_type = 1 [default = k_EControllerLayoutTypePhone];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->layout_type(), target);
  }

  // repeated .CVirtualControllerElement elements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->elements(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerLayout)
  return target;
}

size_t CVirtualControllerLayout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerLayout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CVirtualControllerElement elements = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->elements_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elements(static_cast<int>(i)));
    }
  }

  // optional .EControllerLayoutType layout_type = 1 [default = k_EControllerLayoutTypePhone];
  if (has_layout_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->layout_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerLayout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerLayout)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerLayout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerLayout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerLayout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerLayout)
    MergeFrom(*source);
  }
}

void CVirtualControllerLayout::MergeFrom(const CVirtualControllerLayout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerLayout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
  if (from.has_layout_type()) {
    set_layout_type(from.layout_type());
  }
}

void CVirtualControllerLayout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerLayout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerLayout::CopyFrom(const CVirtualControllerLayout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerLayout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerLayout::IsInitialized() const {
  return true;
}

void CVirtualControllerLayout::Swap(CVirtualControllerLayout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerLayout::InternalSwap(CVirtualControllerLayout* other) {
  using std::swap;
  CastToBase(&elements_)->InternalSwap(CastToBase(&other->elements_));
  swap(layout_type_, other->layout_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerLayout::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerLayouts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerLayouts::kLayoutsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerLayouts::CVirtualControllerLayouts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayouts.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerLayouts)
}
CVirtualControllerLayouts::CVirtualControllerLayouts(const CVirtualControllerLayouts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      layouts_(from.layouts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerLayouts)
}

void CVirtualControllerLayouts::SharedCtor() {
}

CVirtualControllerLayouts::~CVirtualControllerLayouts() {
  // @@protoc_insertion_point(destructor:CVirtualControllerLayouts)
  SharedDtor();
}

void CVirtualControllerLayouts::SharedDtor() {
}

void CVirtualControllerLayouts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerLayouts::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerLayouts& CVirtualControllerLayouts::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayouts.base);
  return *internal_default_instance();
}


void CVirtualControllerLayouts::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerLayouts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layouts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerLayouts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerLayouts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CVirtualControllerLayout layouts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_layouts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerLayouts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerLayouts)
  return false;
#undef DO_
}

void CVirtualControllerLayouts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerLayouts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CVirtualControllerLayout layouts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layouts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->layouts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerLayouts)
}

::google::protobuf::uint8* CVirtualControllerLayouts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerLayouts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CVirtualControllerLayout layouts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layouts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->layouts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerLayouts)
  return target;
}

size_t CVirtualControllerLayouts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerLayouts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CVirtualControllerLayout layouts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->layouts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->layouts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerLayouts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerLayouts)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerLayouts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerLayouts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerLayouts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerLayouts)
    MergeFrom(*source);
  }
}

void CVirtualControllerLayouts::MergeFrom(const CVirtualControllerLayouts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerLayouts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layouts_.MergeFrom(from.layouts_);
}

void CVirtualControllerLayouts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerLayouts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerLayouts::CopyFrom(const CVirtualControllerLayouts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerLayouts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerLayouts::IsInitialized() const {
  return true;
}

void CVirtualControllerLayouts::Swap(CVirtualControllerLayouts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerLayouts::InternalSwap(CVirtualControllerLayouts* other) {
  using std::swap;
  CastToBase(&layouts_)->InternalSwap(CastToBase(&other->layouts_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerLayouts::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerConfig_Control::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerConfig_Control::kNameFieldNumber;
const int CVirtualControllerConfig_Control::kIconFieldNumber;
const int CVirtualControllerConfig_Control::kInputSourceFieldNumber;
const int CVirtualControllerConfig_Control::kInputModeFieldNumber;
const int CVirtualControllerConfig_Control::kInputElementFieldNumber;
const int CVirtualControllerConfig_Control::kOutputGamepadFieldNumber;
const int CVirtualControllerConfig_Control::kOutputKeyboardFieldNumber;
const int CVirtualControllerConfig_Control::kOutputMouseFieldNumber;
const int CVirtualControllerConfig_Control::kIconForegroundFieldNumber;
const int CVirtualControllerConfig_Control::kIconBackgroundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerConfig_Control::CVirtualControllerConfig_Control()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig_Control.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerConfig.Control)
}
CVirtualControllerConfig_Control::CVirtualControllerConfig_Control(const CVirtualControllerConfig_Control& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon()) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  icon_foreground_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon_foreground()) {
    icon_foreground_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_foreground_);
  }
  icon_background_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon_background()) {
    icon_background_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_background_);
  }
  ::memcpy(&input_source_, &from.input_source_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_mouse_) -
    reinterpret_cast<char*>(&input_source_)) + sizeof(output_mouse_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerConfig.Control)
}

void CVirtualControllerConfig_Control::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_foreground_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_background_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_mouse_) -
      reinterpret_cast<char*>(&input_source_)) + sizeof(output_mouse_));
}

CVirtualControllerConfig_Control::~CVirtualControllerConfig_Control() {
  // @@protoc_insertion_point(destructor:CVirtualControllerConfig.Control)
  SharedDtor();
}

void CVirtualControllerConfig_Control::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_foreground_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_background_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerConfig_Control::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerConfig_Control::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerConfig_Control& CVirtualControllerConfig_Control::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig_Control.base);
  return *internal_default_instance();
}


void CVirtualControllerConfig_Control::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerConfig.Control)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      icon_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      icon_foreground_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      icon_background_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&input_source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&output_gamepad_) -
        reinterpret_cast<char*>(&input_source_)) + sizeof(output_gamepad_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&output_keyboard_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&output_mouse_) -
        reinterpret_cast<char*>(&output_keyboard_)) + sizeof(output_mouse_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerConfig_Control::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerConfig.Control)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerConfig.Control.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerConfig.Control.icon");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 input_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_input_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &input_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 input_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_input_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &input_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 input_element = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_input_element();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &input_element_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 output_gamepad = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_output_gamepad();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_gamepad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 output_keyboard = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_output_keyboard();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_keyboard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 output_mouse = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_output_mouse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_mouse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon_foreground = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_foreground()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_foreground().data(), static_cast<int>(this->icon_foreground().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerConfig.Control.icon_foreground");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon_background = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_background()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_background().data(), static_cast<int>(this->icon_background().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerConfig.Control.icon_background");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerConfig.Control)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerConfig.Control)
  return false;
#undef DO_
}

void CVirtualControllerConfig_Control::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerConfig.Control)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string icon = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->icon(), output);
  }

  // optional int32 input_source = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->input_source(), output);
  }

  // optional int32 input_mode = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->input_mode(), output);
  }

  // optional int32 input_element = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->input_element(), output);
  }

  // optional int32 output_gamepad = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->output_gamepad(), output);
  }

  // optional int32 output_keyboard = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->output_keyboard(), output);
  }

  // optional int32 output_mouse = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->output_mouse(), output);
  }

  // optional string icon_foreground = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_foreground().data(), static_cast<int>(this->icon_foreground().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.icon_foreground");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->icon_foreground(), output);
  }

  // optional string icon_background = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_background().data(), static_cast<int>(this->icon_background().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.icon_background");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->icon_background(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerConfig.Control)
}

::google::protobuf::uint8* CVirtualControllerConfig_Control::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerConfig.Control)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string icon = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->icon(), target);
  }

  // optional int32 input_source = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->input_source(), target);
  }

  // optional int32 input_mode = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->input_mode(), target);
  }

  // optional int32 input_element = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->input_element(), target);
  }

  // optional int32 output_gamepad = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->output_gamepad(), target);
  }

  // optional int32 output_keyboard = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->output_keyboard(), target);
  }

  // optional int32 output_mouse = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->output_mouse(), target);
  }

  // optional string icon_foreground = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_foreground().data(), static_cast<int>(this->icon_foreground().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.icon_foreground");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->icon_foreground(), target);
  }

  // optional string icon_background = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_background().data(), static_cast<int>(this->icon_background().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.Control.icon_background");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->icon_background(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerConfig.Control)
  return target;
}

size_t CVirtualControllerConfig_Control::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerConfig.Control)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string icon = 2;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

    // optional string icon_foreground = 9;
    if (has_icon_foreground()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_foreground());
    }

    // optional string icon_background = 10;
    if (has_icon_background()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_background());
    }

    // optional int32 input_source = 3;
    if (has_input_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->input_source());
    }

    // optional int32 input_mode = 4;
    if (has_input_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->input_mode());
    }

    // optional int32 input_element = 5;
    if (has_input_element()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->input_element());
    }

    // optional int32 output_gamepad = 6;
    if (has_output_gamepad()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->output_gamepad());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 output_keyboard = 7;
    if (has_output_keyboard()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->output_keyboard());
    }

    // optional int32 output_mouse = 8;
    if (has_output_mouse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->output_mouse());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerConfig_Control::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerConfig.Control)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerConfig_Control* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerConfig_Control>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerConfig.Control)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerConfig.Control)
    MergeFrom(*source);
  }
}

void CVirtualControllerConfig_Control::MergeFrom(const CVirtualControllerConfig_Control& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerConfig.Control)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon_foreground();
      icon_foreground_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_foreground_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_icon_background();
      icon_background_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_background_);
    }
    if (cached_has_bits & 0x00000010u) {
      input_source_ = from.input_source_;
    }
    if (cached_has_bits & 0x00000020u) {
      input_mode_ = from.input_mode_;
    }
    if (cached_has_bits & 0x00000040u) {
      input_element_ = from.input_element_;
    }
    if (cached_has_bits & 0x00000080u) {
      output_gamepad_ = from.output_gamepad_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      output_keyboard_ = from.output_keyboard_;
    }
    if (cached_has_bits & 0x00000200u) {
      output_mouse_ = from.output_mouse_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerConfig_Control::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerConfig.Control)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerConfig_Control::CopyFrom(const CVirtualControllerConfig_Control& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerConfig.Control)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerConfig_Control::IsInitialized() const {
  return true;
}

void CVirtualControllerConfig_Control::Swap(CVirtualControllerConfig_Control* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerConfig_Control::InternalSwap(CVirtualControllerConfig_Control* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_.Swap(&other->icon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_foreground_.Swap(&other->icon_foreground_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_background_.Swap(&other->icon_background_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_source_, other->input_source_);
  swap(input_mode_, other->input_mode_);
  swap(input_element_, other->input_element_);
  swap(output_gamepad_, other->output_gamepad_);
  swap(output_keyboard_, other->output_keyboard_);
  swap(output_mouse_, other->output_mouse_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerConfig_Control::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerConfig_ActionSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerConfig_ActionSet::kIdFieldNumber;
const int CVirtualControllerConfig_ActionSet::kParentIdFieldNumber;
const int CVirtualControllerConfig_ActionSet::kNameFieldNumber;
const int CVirtualControllerConfig_ActionSet::kControlsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerConfig_ActionSet::CVirtualControllerConfig_ActionSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig_ActionSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerConfig.ActionSet)
}
CVirtualControllerConfig_ActionSet::CVirtualControllerConfig_ActionSet(const CVirtualControllerConfig_ActionSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      controls_(from.controls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(parent_id_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerConfig.ActionSet)
}

void CVirtualControllerConfig_ActionSet::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(parent_id_));
}

CVirtualControllerConfig_ActionSet::~CVirtualControllerConfig_ActionSet() {
  // @@protoc_insertion_point(destructor:CVirtualControllerConfig.ActionSet)
  SharedDtor();
}

void CVirtualControllerConfig_ActionSet::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerConfig_ActionSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerConfig_ActionSet::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerConfig_ActionSet& CVirtualControllerConfig_ActionSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig_ActionSet.base);
  return *internal_default_instance();
}


void CVirtualControllerConfig_ActionSet::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerConfig.ActionSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  controls_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&parent_id_) -
        reinterpret_cast<char*>(&id_)) + sizeof(parent_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerConfig_ActionSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerConfig.ActionSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 parent_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_parent_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerConfig.ActionSet.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CVirtualControllerConfig.Control controls = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_controls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerConfig.ActionSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerConfig.ActionSet)
  return false;
#undef DO_
}

void CVirtualControllerConfig_ActionSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerConfig.ActionSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 parent_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parent_id(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.ActionSet.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .CVirtualControllerConfig.Control controls = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->controls_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->controls(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerConfig.ActionSet)
}

::google::protobuf::uint8* CVirtualControllerConfig_ActionSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerConfig.ActionSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 parent_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parent_id(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.ActionSet.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .CVirtualControllerConfig.Control controls = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->controls_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->controls(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerConfig.ActionSet)
  return target;
}

size_t CVirtualControllerConfig_ActionSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerConfig.ActionSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CVirtualControllerConfig.Control controls = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->controls_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->controls(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 parent_id = 2;
    if (has_parent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parent_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerConfig_ActionSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerConfig.ActionSet)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerConfig_ActionSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerConfig_ActionSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerConfig.ActionSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerConfig.ActionSet)
    MergeFrom(*source);
  }
}

void CVirtualControllerConfig_ActionSet::MergeFrom(const CVirtualControllerConfig_ActionSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerConfig.ActionSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  controls_.MergeFrom(from.controls_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      parent_id_ = from.parent_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerConfig_ActionSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerConfig.ActionSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerConfig_ActionSet::CopyFrom(const CVirtualControllerConfig_ActionSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerConfig.ActionSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerConfig_ActionSet::IsInitialized() const {
  return true;
}

void CVirtualControllerConfig_ActionSet::Swap(CVirtualControllerConfig_ActionSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerConfig_ActionSet::InternalSwap(CVirtualControllerConfig_ActionSet* other) {
  using std::swap;
  CastToBase(&controls_)->InternalSwap(CastToBase(&other->controls_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(parent_id_, other->parent_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerConfig_ActionSet::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerConfig::kNameFieldNumber;
const int CVirtualControllerConfig::kActionsetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerConfig::CVirtualControllerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerConfig)
}
CVirtualControllerConfig::CVirtualControllerConfig(const CVirtualControllerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      actionsets_(from.actionsets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerConfig)
}

void CVirtualControllerConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CVirtualControllerConfig::~CVirtualControllerConfig() {
  // @@protoc_insertion_point(destructor:CVirtualControllerConfig)
  SharedDtor();
}

void CVirtualControllerConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVirtualControllerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerConfig::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerConfig& CVirtualControllerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerConfig.base);
  return *internal_default_instance();
}


void CVirtualControllerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionsets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CVirtualControllerConfig.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CVirtualControllerConfig.ActionSet actionsets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actionsets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerConfig)
  return false;
#undef DO_
}

void CVirtualControllerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .CVirtualControllerConfig.ActionSet actionsets = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actionsets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->actionsets(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerConfig)
}

::google::protobuf::uint8* CVirtualControllerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CVirtualControllerConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .CVirtualControllerConfig.ActionSet actionsets = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actionsets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->actionsets(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerConfig)
  return target;
}

size_t CVirtualControllerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CVirtualControllerConfig.ActionSet actionsets = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->actionsets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actionsets(static_cast<int>(i)));
    }
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerConfig)
    MergeFrom(*source);
  }
}

void CVirtualControllerConfig::MergeFrom(const CVirtualControllerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionsets_.MergeFrom(from.actionsets_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CVirtualControllerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerConfig::CopyFrom(const CVirtualControllerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerConfig::IsInitialized() const {
  return true;
}

void CVirtualControllerConfig::Swap(CVirtualControllerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerConfig::InternalSwap(CVirtualControllerConfig* other) {
  using std::swap;
  CastToBase(&actionsets_)->InternalSwap(CastToBase(&other->actionsets_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerConfig::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CVirtualControllerLayoutPackage::InitAsDefaultInstance() {
  ::_CVirtualControllerLayoutPackage_default_instance_._instance.get_mutable()->config_ = const_cast< ::CVirtualControllerConfig*>(
      ::CVirtualControllerConfig::internal_default_instance());
  ::_CVirtualControllerLayoutPackage_default_instance_._instance.get_mutable()->layouts_ = const_cast< ::CVirtualControllerLayouts*>(
      ::CVirtualControllerLayouts::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVirtualControllerLayoutPackage::kAppidFieldNumber;
const int CVirtualControllerLayoutPackage::kRevisionFieldNumber;
const int CVirtualControllerLayoutPackage::kConfigFieldNumber;
const int CVirtualControllerLayoutPackage::kLayoutsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVirtualControllerLayoutPackage::CVirtualControllerLayoutPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayoutPackage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CVirtualControllerLayoutPackage)
}
CVirtualControllerLayoutPackage::CVirtualControllerLayoutPackage(const CVirtualControllerLayoutPackage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::CVirtualControllerConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_layouts()) {
    layouts_ = new ::CVirtualControllerLayouts(*from.layouts_);
  } else {
    layouts_ = NULL;
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&revision_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(revision_));
  // @@protoc_insertion_point(copy_constructor:CVirtualControllerLayoutPackage)
}

void CVirtualControllerLayoutPackage::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&revision_) -
      reinterpret_cast<char*>(&config_)) + sizeof(revision_));
}

CVirtualControllerLayoutPackage::~CVirtualControllerLayoutPackage() {
  // @@protoc_insertion_point(destructor:CVirtualControllerLayoutPackage)
  SharedDtor();
}

void CVirtualControllerLayoutPackage::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete layouts_;
}

void CVirtualControllerLayoutPackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CVirtualControllerLayoutPackage::descriptor() {
  ::protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVirtualControllerLayoutPackage& CVirtualControllerLayoutPackage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fvirtualcontroller_2eproto::scc_info_CVirtualControllerLayoutPackage.base);
  return *internal_default_instance();
}


void CVirtualControllerLayoutPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:CVirtualControllerLayoutPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(config_ != NULL);
      config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(layouts_ != NULL);
      layouts_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&revision_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(revision_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CVirtualControllerLayoutPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CVirtualControllerLayoutPackage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 revision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_revision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerConfig config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CVirtualControllerLayouts layouts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_layouts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CVirtualControllerLayoutPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CVirtualControllerLayoutPackage)
  return false;
#undef DO_
}

void CVirtualControllerLayoutPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CVirtualControllerLayoutPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 revision = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->revision(), output);
  }

  // optional .CVirtualControllerConfig config = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_config(), output);
  }

  // optional .CVirtualControllerLayouts layouts = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_layouts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CVirtualControllerLayoutPackage)
}

::google::protobuf::uint8* CVirtualControllerLayoutPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CVirtualControllerLayoutPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 revision = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->revision(), target);
  }

  // optional .CVirtualControllerConfig config = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_config(), deterministic, target);
  }

  // optional .CVirtualControllerLayouts layouts = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_layouts(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVirtualControllerLayoutPackage)
  return target;
}

size_t CVirtualControllerLayoutPackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CVirtualControllerLayoutPackage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CVirtualControllerConfig config = 3;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *config_);
    }

    // optional .CVirtualControllerLayouts layouts = 4;
    if (has_layouts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *layouts_);
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 revision = 2;
    if (has_revision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->revision());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVirtualControllerLayoutPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CVirtualControllerLayoutPackage)
  GOOGLE_DCHECK_NE(&from, this);
  const CVirtualControllerLayoutPackage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVirtualControllerLayoutPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CVirtualControllerLayoutPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CVirtualControllerLayoutPackage)
    MergeFrom(*source);
  }
}

void CVirtualControllerLayoutPackage::MergeFrom(const CVirtualControllerLayoutPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CVirtualControllerLayoutPackage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_config()->::CVirtualControllerConfig::MergeFrom(from.config());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_layouts()->::CVirtualControllerLayouts::MergeFrom(from.layouts());
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      revision_ = from.revision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CVirtualControllerLayoutPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CVirtualControllerLayoutPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVirtualControllerLayoutPackage::CopyFrom(const CVirtualControllerLayoutPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVirtualControllerLayoutPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVirtualControllerLayoutPackage::IsInitialized() const {
  return true;
}

void CVirtualControllerLayoutPackage::Swap(CVirtualControllerLayoutPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVirtualControllerLayoutPackage::InternalSwap(CVirtualControllerLayoutPackage* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(layouts_, other->layouts_);
  swap(appid_, other->appid_);
  swap(revision_, other->revision_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CVirtualControllerLayoutPackage::GetMetadata() const {
  protobuf_steammessages_5fvirtualcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fvirtualcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement_JoyStickControl* Arena::CreateMaybeMessage< ::CVirtualControllerElement_JoyStickControl >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement_JoyStickControl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement_JoyButtonControl* Arena::CreateMaybeMessage< ::CVirtualControllerElement_JoyButtonControl >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement_JoyButtonControl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement_JoyPadControl* Arena::CreateMaybeMessage< ::CVirtualControllerElement_JoyPadControl >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement_JoyPadControl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement_MacroButtonControl* Arena::CreateMaybeMessage< ::CVirtualControllerElement_MacroButtonControl >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement_MacroButtonControl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement_TrackpadControl* Arena::CreateMaybeMessage< ::CVirtualControllerElement_TrackpadControl >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement_TrackpadControl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement_AxisButtonControl* Arena::CreateMaybeMessage< ::CVirtualControllerElement_AxisButtonControl >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement_AxisButtonControl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerElement* Arena::CreateMaybeMessage< ::CVirtualControllerElement >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerLayout* Arena::CreateMaybeMessage< ::CVirtualControllerLayout >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerLayout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerLayouts* Arena::CreateMaybeMessage< ::CVirtualControllerLayouts >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerLayouts >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerConfig_Control* Arena::CreateMaybeMessage< ::CVirtualControllerConfig_Control >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerConfig_Control >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerConfig_ActionSet* Arena::CreateMaybeMessage< ::CVirtualControllerConfig_ActionSet >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerConfig_ActionSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerConfig* Arena::CreateMaybeMessage< ::CVirtualControllerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CVirtualControllerLayoutPackage* Arena::CreateMaybeMessage< ::CVirtualControllerLayoutPackage >(Arena* arena) {
  return Arena::CreateInternal< ::CVirtualControllerLayoutPackage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
