// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_econ.steamclient.proto

#include "steammessages_econ.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fecon_2esteamclient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fecon_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CEconItem_Action;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fecon_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CEconItem_DescriptionLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fecon_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CEconItem_Tag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fecon_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_GetAssetClassInfo_Request_Class;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fecon_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CEconItem_Description;
}  // namespace protobuf_steammessages_5fecon_2esteamclient_2eproto
class CEcon_GetTradeOfferAccessToken_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_GetTradeOfferAccessToken_Request>
      _instance;
} _CEcon_GetTradeOfferAccessToken_Request_default_instance_;
class CEcon_GetTradeOfferAccessToken_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_GetTradeOfferAccessToken_Response>
      _instance;
} _CEcon_GetTradeOfferAccessToken_Response_default_instance_;
class CEcon_ClientGetItemShopOverlayAuthURL_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_ClientGetItemShopOverlayAuthURL_Request>
      _instance;
} _CEcon_ClientGetItemShopOverlayAuthURL_Request_default_instance_;
class CEcon_ClientGetItemShopOverlayAuthURL_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_ClientGetItemShopOverlayAuthURL_Response>
      _instance;
} _CEcon_ClientGetItemShopOverlayAuthURL_Response_default_instance_;
class CEcon_GetAssetClassInfo_Request_ClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_GetAssetClassInfo_Request_Class>
      _instance;
} _CEcon_GetAssetClassInfo_Request_Class_default_instance_;
class CEcon_GetAssetClassInfo_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_GetAssetClassInfo_Request>
      _instance;
} _CEcon_GetAssetClassInfo_Request_default_instance_;
class CEconItem_DescriptionLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEconItem_DescriptionLine>
      _instance;
} _CEconItem_DescriptionLine_default_instance_;
class CEconItem_ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEconItem_Action>
      _instance;
} _CEconItem_Action_default_instance_;
class CEconItem_DescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEconItem_Description>
      _instance;
} _CEconItem_Description_default_instance_;
class CEconItem_TagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEconItem_Tag>
      _instance;
} _CEconItem_Tag_default_instance_;
class CEcon_GetAssetClassInfo_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_GetAssetClassInfo_Response>
      _instance;
} _CEcon_GetAssetClassInfo_Response_default_instance_;
namespace protobuf_steammessages_5fecon_2esteamclient_2eproto {
static void InitDefaultsCEcon_GetTradeOfferAccessToken_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_GetTradeOfferAccessToken_Request_default_instance_;
    new (ptr) ::CEcon_GetTradeOfferAccessToken_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_GetTradeOfferAccessToken_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_GetTradeOfferAccessToken_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_GetTradeOfferAccessToken_Request}, {}};

static void InitDefaultsCEcon_GetTradeOfferAccessToken_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_GetTradeOfferAccessToken_Response_default_instance_;
    new (ptr) ::CEcon_GetTradeOfferAccessToken_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_GetTradeOfferAccessToken_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_GetTradeOfferAccessToken_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_GetTradeOfferAccessToken_Response}, {}};

static void InitDefaultsCEcon_ClientGetItemShopOverlayAuthURL_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_ClientGetItemShopOverlayAuthURL_Request_default_instance_;
    new (ptr) ::CEcon_ClientGetItemShopOverlayAuthURL_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_ClientGetItemShopOverlayAuthURL_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_ClientGetItemShopOverlayAuthURL_Request}, {}};

static void InitDefaultsCEcon_ClientGetItemShopOverlayAuthURL_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_ClientGetItemShopOverlayAuthURL_Response_default_instance_;
    new (ptr) ::CEcon_ClientGetItemShopOverlayAuthURL_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_ClientGetItemShopOverlayAuthURL_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_ClientGetItemShopOverlayAuthURL_Response}, {}};

static void InitDefaultsCEcon_GetAssetClassInfo_Request_Class() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_GetAssetClassInfo_Request_Class_default_instance_;
    new (ptr) ::CEcon_GetAssetClassInfo_Request_Class();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_GetAssetClassInfo_Request_Class::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_GetAssetClassInfo_Request_Class =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_GetAssetClassInfo_Request_Class}, {}};

static void InitDefaultsCEcon_GetAssetClassInfo_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_GetAssetClassInfo_Request_default_instance_;
    new (ptr) ::CEcon_GetAssetClassInfo_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_GetAssetClassInfo_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CEcon_GetAssetClassInfo_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCEcon_GetAssetClassInfo_Request}, {
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Request_Class.base,}};

static void InitDefaultsCEconItem_DescriptionLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEconItem_DescriptionLine_default_instance_;
    new (ptr) ::CEconItem_DescriptionLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEconItem_DescriptionLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEconItem_DescriptionLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEconItem_DescriptionLine}, {}};

static void InitDefaultsCEconItem_Action() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEconItem_Action_default_instance_;
    new (ptr) ::CEconItem_Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEconItem_Action::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEconItem_Action =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEconItem_Action}, {}};

static void InitDefaultsCEconItem_Description() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEconItem_Description_default_instance_;
    new (ptr) ::CEconItem_Description();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEconItem_Description::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CEconItem_Description =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCEconItem_Description}, {
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_DescriptionLine.base,
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Action.base,
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Tag.base,}};

static void InitDefaultsCEconItem_Tag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEconItem_Tag_default_instance_;
    new (ptr) ::CEconItem_Tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEconItem_Tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEconItem_Tag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEconItem_Tag}, {}};

static void InitDefaultsCEcon_GetAssetClassInfo_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEcon_GetAssetClassInfo_Response_default_instance_;
    new (ptr) ::CEcon_GetAssetClassInfo_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEcon_GetAssetClassInfo_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CEcon_GetAssetClassInfo_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCEcon_GetAssetClassInfo_Response}, {
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Description.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_GetTradeOfferAccessToken_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_GetTradeOfferAccessToken_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_GetAssetClassInfo_Request_Class.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_GetAssetClassInfo_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEconItem_DescriptionLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEconItem_Action.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEconItem_Description.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEconItem_Tag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_GetAssetClassInfo_Response.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetTradeOfferAccessToken_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetTradeOfferAccessToken_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetTradeOfferAccessToken_Request, generate_new_token_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetTradeOfferAccessToken_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetTradeOfferAccessToken_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetTradeOfferAccessToken_Response, trade_offer_access_token_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_ClientGetItemShopOverlayAuthURL_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_ClientGetItemShopOverlayAuthURL_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_ClientGetItemShopOverlayAuthURL_Request, return_url_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_ClientGetItemShopOverlayAuthURL_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_ClientGetItemShopOverlayAuthURL_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_ClientGetItemShopOverlayAuthURL_Response, url_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request_Class, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request_Class, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request_Class, classid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request_Class, instanceid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Request, classes_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_DescriptionLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_DescriptionLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_DescriptionLine, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_DescriptionLine, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_DescriptionLine, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_DescriptionLine, label_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Action, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Action, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Action, name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, classid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, background_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, icon_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, icon_url_large_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, descriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, tradable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, owner_descriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, owner_actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, fraudwarnings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, name_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_hash_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_fee_app_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, contained_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, commodity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_tradable_restriction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, market_marketable_restriction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, marketable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Description, item_expiration_),
  13,
  11,
  12,
  14,
  0,
  1,
  2,
  ~0u,
  15,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  4,
  5,
  6,
  7,
  8,
  20,
  10,
  ~0u,
  16,
  18,
  19,
  17,
  ~0u,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, internal_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, localized_category_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, localized_tag_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEconItem_Tag, color_),
  5,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEcon_GetAssetClassInfo_Response, descriptions_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CEcon_GetTradeOfferAccessToken_Request)},
  { 7, 13, sizeof(::CEcon_GetTradeOfferAccessToken_Response)},
  { 14, 20, sizeof(::CEcon_ClientGetItemShopOverlayAuthURL_Request)},
  { 21, 27, sizeof(::CEcon_ClientGetItemShopOverlayAuthURL_Response)},
  { 28, 35, sizeof(::CEcon_GetAssetClassInfo_Request_Class)},
  { 37, 45, sizeof(::CEcon_GetAssetClassInfo_Request)},
  { 48, 57, sizeof(::CEconItem_DescriptionLine)},
  { 61, 68, sizeof(::CEconItem_Action)},
  { 70, 103, sizeof(::CEconItem_Description)},
  { 131, 142, sizeof(::CEconItem_Tag)},
  { 148, 154, sizeof(::CEcon_GetAssetClassInfo_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_GetTradeOfferAccessToken_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_GetTradeOfferAccessToken_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_ClientGetItemShopOverlayAuthURL_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_ClientGetItemShopOverlayAuthURL_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_GetAssetClassInfo_Request_Class_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_GetAssetClassInfo_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEconItem_DescriptionLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEconItem_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEconItem_Description_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEconItem_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEcon_GetAssetClassInfo_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_econ.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$steammessages_econ.steamclient.proto\032,"
      "steammessages_unified_base.steamclient.p"
      "roto\"D\n&CEcon_GetTradeOfferAccessToken_R"
      "equest\022\032\n\022generate_new_token\030\001 \001(\010\"K\n\'CE"
      "con_GetTradeOfferAccessToken_Response\022 \n"
      "\030trade_offer_access_token\030\001 \001(\t\"C\n-CEcon"
      "_ClientGetItemShopOverlayAuthURL_Request"
      "\022\022\n\nreturn_url\030\001 \001(\t\"=\n.CEcon_ClientGetI"
      "temShopOverlayAuthURL_Response\022\013\n\003url\030\001 "
      "\001(\t\"\251\001\n\037CEcon_GetAssetClassInfo_Request\022"
      "\020\n\010language\030\001 \001(\t\022\r\n\005appid\030\002 \001(\r\0227\n\007clas"
      "ses\030\003 \003(\0132&.CEcon_GetAssetClassInfo_Requ"
      "est.Class\032,\n\005Class\022\017\n\007classid\030\001 \001(\004\022\022\n\ni"
      "nstanceid\030\002 \001(\004\"V\n\031CEconItem_Description"
      "Line\022\014\n\004type\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\r\n\005col"
      "or\030\003 \001(\t\022\r\n\005label\030\004 \001(\t\".\n\020CEconItem_Act"
      "ion\022\014\n\004link\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"\222\006\n\025CEco"
      "nItem_Description\022\r\n\005appid\030\001 \001(\005\022\017\n\007clas"
      "sid\030\002 \001(\004\022\022\n\ninstanceid\030\003 \001(\004\022\020\n\010currenc"
      "y\030\004 \001(\010\022\030\n\020background_color\030\005 \001(\t\022\020\n\010ico"
      "n_url\030\006 \001(\t\022\026\n\016icon_url_large\030\007 \001(\t\0220\n\014d"
      "escriptions\030\010 \003(\0132\032.CEconItem_Descriptio"
      "nLine\022\020\n\010tradable\030\t \001(\010\022\"\n\007actions\030\n \003(\013"
      "2\021.CEconItem_Action\0226\n\022owner_description"
      "s\030\013 \003(\0132\032.CEconItem_DescriptionLine\022(\n\ro"
      "wner_actions\030\014 \003(\0132\021.CEconItem_Action\022\025\n"
      "\rfraudwarnings\030\r \003(\t\022\014\n\004name\030\016 \001(\t\022\022\n\nna"
      "me_color\030\017 \001(\t\022\014\n\004type\030\020 \001(\t\022\023\n\013market_n"
      "ame\030\021 \001(\t\022\030\n\020market_hash_name\030\022 \001(\t\022\022\n\nm"
      "arket_fee\030\023 \001(\t\022\026\n\016market_fee_app\030\034 \001(\005\022"
      ".\n\016contained_item\030\024 \001(\0132\026.CEconItem_Desc"
      "ription\022)\n\016market_actions\030\025 \003(\0132\021.CEconI"
      "tem_Action\022\021\n\tcommodity\030\026 \001(\010\022#\n\033market_"
      "tradable_restriction\030\027 \001(\005\022%\n\035market_mar"
      "ketable_restriction\030\030 \001(\005\022\022\n\nmarketable\030"
      "\031 \001(\010\022\034\n\004tags\030\032 \003(\0132\016.CEconItem_Tag\022\027\n\017i"
      "tem_expiration\030\033 \001(\t\"\230\003\n\rCEconItem_Tag\0221"
      "\n\005appid\030\001 \001(\rB\"\202\265\030\036The app that contains"
      " the item\022J\n\010category\030\002 \001(\tB8\202\265\0304The int"
      "ernal name of the category the tag belon"
      "gs to\0227\n\rinternal_name\030\003 \001(\tB \202\265\030\034The in"
      "ternal name of the tag\022G\n\027localized_cate"
      "gory_name\030\004 \001(\tB&\202\265\030\"The localized name "
      "of the category\022=\n\022localized_tag_name\030\005 "
      "\001(\tB!\202\265\030\035The localized name of the tag\022G"
      "\n\005color\030\006 \001(\tB8\202\265\0304The color to use when"
      " displaying the tag to the user\"P\n CEcon"
      "_GetAssetClassInfo_Response\022,\n\014descripti"
      "ons\030\001 \003(\0132\026.CEconItem_Description2\342\004\n\004Ec"
      "on\022\232\001\n\030GetTradeOfferAccessToken\022\'.CEcon_"
      "GetTradeOfferAccessToken_Request\032(.CEcon"
      "_GetTradeOfferAccessToken_Response\"+\202\265\030\'"
      "Get the user\'s trade offer access token\022"
      "\331\001\n\037ClientGetItemShopOverlayAuthURL\022..CE"
      "con_ClientGetItemShopOverlayAuthURL_Requ"
      "est\032/.CEcon_ClientGetItemShopOverlayAuth"
      "URL_Response\"U\202\265\030QGenerates a URL which "
      "sets a secure cookie for in-game-browser"
      " itemshop purchases\022\237\001\n\021GetAssetClassInf"
      "o\022 .CEcon_GetAssetClassInfo_Request\032!.CE"
      "con_GetAssetClassInfo_Response\"E\202\265\030ARetu"
      "rns description information about the pa"
      "ssed in asset classes\032\?\202\265\030;A service tha"
      "t provides communication with the econ s"
      "erversB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2571);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_econ.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fecon_2esteamclient_2eproto

// ===================================================================

void CEcon_GetTradeOfferAccessToken_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_GetTradeOfferAccessToken_Request::kGenerateNewTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_GetTradeOfferAccessToken_Request::CEcon_GetTradeOfferAccessToken_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetTradeOfferAccessToken_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_GetTradeOfferAccessToken_Request)
}
CEcon_GetTradeOfferAccessToken_Request::CEcon_GetTradeOfferAccessToken_Request(const CEcon_GetTradeOfferAccessToken_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  generate_new_token_ = from.generate_new_token_;
  // @@protoc_insertion_point(copy_constructor:CEcon_GetTradeOfferAccessToken_Request)
}

void CEcon_GetTradeOfferAccessToken_Request::SharedCtor() {
  generate_new_token_ = false;
}

CEcon_GetTradeOfferAccessToken_Request::~CEcon_GetTradeOfferAccessToken_Request() {
  // @@protoc_insertion_point(destructor:CEcon_GetTradeOfferAccessToken_Request)
  SharedDtor();
}

void CEcon_GetTradeOfferAccessToken_Request::SharedDtor() {
}

void CEcon_GetTradeOfferAccessToken_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_GetTradeOfferAccessToken_Request::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_GetTradeOfferAccessToken_Request& CEcon_GetTradeOfferAccessToken_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetTradeOfferAccessToken_Request.base);
  return *internal_default_instance();
}


void CEcon_GetTradeOfferAccessToken_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_GetTradeOfferAccessToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generate_new_token_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_GetTradeOfferAccessToken_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_GetTradeOfferAccessToken_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool generate_new_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_generate_new_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generate_new_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_GetTradeOfferAccessToken_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_GetTradeOfferAccessToken_Request)
  return false;
#undef DO_
}

void CEcon_GetTradeOfferAccessToken_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_GetTradeOfferAccessToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool generate_new_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->generate_new_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_GetTradeOfferAccessToken_Request)
}

::google::protobuf::uint8* CEcon_GetTradeOfferAccessToken_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_GetTradeOfferAccessToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool generate_new_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->generate_new_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_GetTradeOfferAccessToken_Request)
  return target;
}

size_t CEcon_GetTradeOfferAccessToken_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_GetTradeOfferAccessToken_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool generate_new_token = 1;
  if (has_generate_new_token()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_GetTradeOfferAccessToken_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_GetTradeOfferAccessToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_GetTradeOfferAccessToken_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_GetTradeOfferAccessToken_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_GetTradeOfferAccessToken_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_GetTradeOfferAccessToken_Request)
    MergeFrom(*source);
  }
}

void CEcon_GetTradeOfferAccessToken_Request::MergeFrom(const CEcon_GetTradeOfferAccessToken_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_GetTradeOfferAccessToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_generate_new_token()) {
    set_generate_new_token(from.generate_new_token());
  }
}

void CEcon_GetTradeOfferAccessToken_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_GetTradeOfferAccessToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_GetTradeOfferAccessToken_Request::CopyFrom(const CEcon_GetTradeOfferAccessToken_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_GetTradeOfferAccessToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_GetTradeOfferAccessToken_Request::IsInitialized() const {
  return true;
}

void CEcon_GetTradeOfferAccessToken_Request::Swap(CEcon_GetTradeOfferAccessToken_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_GetTradeOfferAccessToken_Request::InternalSwap(CEcon_GetTradeOfferAccessToken_Request* other) {
  using std::swap;
  swap(generate_new_token_, other->generate_new_token_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_GetTradeOfferAccessToken_Request::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEcon_GetTradeOfferAccessToken_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_GetTradeOfferAccessToken_Response::kTradeOfferAccessTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_GetTradeOfferAccessToken_Response::CEcon_GetTradeOfferAccessToken_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetTradeOfferAccessToken_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_GetTradeOfferAccessToken_Response)
}
CEcon_GetTradeOfferAccessToken_Response::CEcon_GetTradeOfferAccessToken_Response(const CEcon_GetTradeOfferAccessToken_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trade_offer_access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trade_offer_access_token()) {
    trade_offer_access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_offer_access_token_);
  }
  // @@protoc_insertion_point(copy_constructor:CEcon_GetTradeOfferAccessToken_Response)
}

void CEcon_GetTradeOfferAccessToken_Response::SharedCtor() {
  trade_offer_access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CEcon_GetTradeOfferAccessToken_Response::~CEcon_GetTradeOfferAccessToken_Response() {
  // @@protoc_insertion_point(destructor:CEcon_GetTradeOfferAccessToken_Response)
  SharedDtor();
}

void CEcon_GetTradeOfferAccessToken_Response::SharedDtor() {
  trade_offer_access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEcon_GetTradeOfferAccessToken_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_GetTradeOfferAccessToken_Response::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_GetTradeOfferAccessToken_Response& CEcon_GetTradeOfferAccessToken_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetTradeOfferAccessToken_Response.base);
  return *internal_default_instance();
}


void CEcon_GetTradeOfferAccessToken_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_GetTradeOfferAccessToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    trade_offer_access_token_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_GetTradeOfferAccessToken_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_GetTradeOfferAccessToken_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string trade_offer_access_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_offer_access_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trade_offer_access_token().data(), static_cast<int>(this->trade_offer_access_token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEcon_GetTradeOfferAccessToken_Response.trade_offer_access_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_GetTradeOfferAccessToken_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_GetTradeOfferAccessToken_Response)
  return false;
#undef DO_
}

void CEcon_GetTradeOfferAccessToken_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_GetTradeOfferAccessToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string trade_offer_access_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trade_offer_access_token().data(), static_cast<int>(this->trade_offer_access_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_GetTradeOfferAccessToken_Response.trade_offer_access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trade_offer_access_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_GetTradeOfferAccessToken_Response)
}

::google::protobuf::uint8* CEcon_GetTradeOfferAccessToken_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_GetTradeOfferAccessToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string trade_offer_access_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trade_offer_access_token().data(), static_cast<int>(this->trade_offer_access_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_GetTradeOfferAccessToken_Response.trade_offer_access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trade_offer_access_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_GetTradeOfferAccessToken_Response)
  return target;
}

size_t CEcon_GetTradeOfferAccessToken_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_GetTradeOfferAccessToken_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string trade_offer_access_token = 1;
  if (has_trade_offer_access_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_offer_access_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_GetTradeOfferAccessToken_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_GetTradeOfferAccessToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_GetTradeOfferAccessToken_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_GetTradeOfferAccessToken_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_GetTradeOfferAccessToken_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_GetTradeOfferAccessToken_Response)
    MergeFrom(*source);
  }
}

void CEcon_GetTradeOfferAccessToken_Response::MergeFrom(const CEcon_GetTradeOfferAccessToken_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_GetTradeOfferAccessToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_trade_offer_access_token()) {
    set_has_trade_offer_access_token();
    trade_offer_access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_offer_access_token_);
  }
}

void CEcon_GetTradeOfferAccessToken_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_GetTradeOfferAccessToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_GetTradeOfferAccessToken_Response::CopyFrom(const CEcon_GetTradeOfferAccessToken_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_GetTradeOfferAccessToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_GetTradeOfferAccessToken_Response::IsInitialized() const {
  return true;
}

void CEcon_GetTradeOfferAccessToken_Response::Swap(CEcon_GetTradeOfferAccessToken_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_GetTradeOfferAccessToken_Response::InternalSwap(CEcon_GetTradeOfferAccessToken_Response* other) {
  using std::swap;
  trade_offer_access_token_.Swap(&other->trade_offer_access_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_GetTradeOfferAccessToken_Response::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEcon_ClientGetItemShopOverlayAuthURL_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_ClientGetItemShopOverlayAuthURL_Request::kReturnUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_ClientGetItemShopOverlayAuthURL_Request::CEcon_ClientGetItemShopOverlayAuthURL_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_ClientGetItemShopOverlayAuthURL_Request)
}
CEcon_ClientGetItemShopOverlayAuthURL_Request::CEcon_ClientGetItemShopOverlayAuthURL_Request(const CEcon_ClientGetItemShopOverlayAuthURL_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  return_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_return_url()) {
    return_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_url_);
  }
  // @@protoc_insertion_point(copy_constructor:CEcon_ClientGetItemShopOverlayAuthURL_Request)
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::SharedCtor() {
  return_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CEcon_ClientGetItemShopOverlayAuthURL_Request::~CEcon_ClientGetItemShopOverlayAuthURL_Request() {
  // @@protoc_insertion_point(destructor:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  SharedDtor();
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::SharedDtor() {
  return_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_ClientGetItemShopOverlayAuthURL_Request::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_ClientGetItemShopOverlayAuthURL_Request& CEcon_ClientGetItemShopOverlayAuthURL_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Request.base);
  return *internal_default_instance();
}


void CEcon_ClientGetItemShopOverlayAuthURL_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    return_url_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_ClientGetItemShopOverlayAuthURL_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string return_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->return_url().data(), static_cast<int>(this->return_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEcon_ClientGetItemShopOverlayAuthURL_Request.return_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  return false;
#undef DO_
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string return_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->return_url().data(), static_cast<int>(this->return_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_ClientGetItemShopOverlayAuthURL_Request.return_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->return_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_ClientGetItemShopOverlayAuthURL_Request)
}

::google::protobuf::uint8* CEcon_ClientGetItemShopOverlayAuthURL_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string return_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->return_url().data(), static_cast<int>(this->return_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_ClientGetItemShopOverlayAuthURL_Request.return_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->return_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  return target;
}

size_t CEcon_ClientGetItemShopOverlayAuthURL_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string return_url = 1;
  if (has_return_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_ClientGetItemShopOverlayAuthURL_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_ClientGetItemShopOverlayAuthURL_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_ClientGetItemShopOverlayAuthURL_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_ClientGetItemShopOverlayAuthURL_Request)
    MergeFrom(*source);
  }
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::MergeFrom(const CEcon_ClientGetItemShopOverlayAuthURL_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_return_url()) {
    set_has_return_url();
    return_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_url_);
  }
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::CopyFrom(const CEcon_ClientGetItemShopOverlayAuthURL_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_ClientGetItemShopOverlayAuthURL_Request::IsInitialized() const {
  return true;
}

void CEcon_ClientGetItemShopOverlayAuthURL_Request::Swap(CEcon_ClientGetItemShopOverlayAuthURL_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_ClientGetItemShopOverlayAuthURL_Request::InternalSwap(CEcon_ClientGetItemShopOverlayAuthURL_Request* other) {
  using std::swap;
  return_url_.Swap(&other->return_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_ClientGetItemShopOverlayAuthURL_Request::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEcon_ClientGetItemShopOverlayAuthURL_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_ClientGetItemShopOverlayAuthURL_Response::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_ClientGetItemShopOverlayAuthURL_Response::CEcon_ClientGetItemShopOverlayAuthURL_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_ClientGetItemShopOverlayAuthURL_Response)
}
CEcon_ClientGetItemShopOverlayAuthURL_Response::CEcon_ClientGetItemShopOverlayAuthURL_Response(const CEcon_ClientGetItemShopOverlayAuthURL_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:CEcon_ClientGetItemShopOverlayAuthURL_Response)
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CEcon_ClientGetItemShopOverlayAuthURL_Response::~CEcon_ClientGetItemShopOverlayAuthURL_Response() {
  // @@protoc_insertion_point(destructor:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  SharedDtor();
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_ClientGetItemShopOverlayAuthURL_Response::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_ClientGetItemShopOverlayAuthURL_Response& CEcon_ClientGetItemShopOverlayAuthURL_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_ClientGetItemShopOverlayAuthURL_Response.base);
  return *internal_default_instance();
}


void CEcon_ClientGetItemShopOverlayAuthURL_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_ClientGetItemShopOverlayAuthURL_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEcon_ClientGetItemShopOverlayAuthURL_Response.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  return false;
#undef DO_
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_ClientGetItemShopOverlayAuthURL_Response.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_ClientGetItemShopOverlayAuthURL_Response)
}

::google::protobuf::uint8* CEcon_ClientGetItemShopOverlayAuthURL_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_ClientGetItemShopOverlayAuthURL_Response.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  return target;
}

size_t CEcon_ClientGetItemShopOverlayAuthURL_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string url = 1;
  if (has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_ClientGetItemShopOverlayAuthURL_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_ClientGetItemShopOverlayAuthURL_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_ClientGetItemShopOverlayAuthURL_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_ClientGetItemShopOverlayAuthURL_Response)
    MergeFrom(*source);
  }
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::MergeFrom(const CEcon_ClientGetItemShopOverlayAuthURL_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_url()) {
    set_has_url();
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::CopyFrom(const CEcon_ClientGetItemShopOverlayAuthURL_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_ClientGetItemShopOverlayAuthURL_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_ClientGetItemShopOverlayAuthURL_Response::IsInitialized() const {
  return true;
}

void CEcon_ClientGetItemShopOverlayAuthURL_Response::Swap(CEcon_ClientGetItemShopOverlayAuthURL_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_ClientGetItemShopOverlayAuthURL_Response::InternalSwap(CEcon_ClientGetItemShopOverlayAuthURL_Response* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_ClientGetItemShopOverlayAuthURL_Response::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEcon_GetAssetClassInfo_Request_Class::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_GetAssetClassInfo_Request_Class::kClassidFieldNumber;
const int CEcon_GetAssetClassInfo_Request_Class::kInstanceidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_GetAssetClassInfo_Request_Class::CEcon_GetAssetClassInfo_Request_Class()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Request_Class.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_GetAssetClassInfo_Request.Class)
}
CEcon_GetAssetClassInfo_Request_Class::CEcon_GetAssetClassInfo_Request_Class(const CEcon_GetAssetClassInfo_Request_Class& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&classid_, &from.classid_,
    static_cast<size_t>(reinterpret_cast<char*>(&instanceid_) -
    reinterpret_cast<char*>(&classid_)) + sizeof(instanceid_));
  // @@protoc_insertion_point(copy_constructor:CEcon_GetAssetClassInfo_Request.Class)
}

void CEcon_GetAssetClassInfo_Request_Class::SharedCtor() {
  ::memset(&classid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&classid_)) + sizeof(instanceid_));
}

CEcon_GetAssetClassInfo_Request_Class::~CEcon_GetAssetClassInfo_Request_Class() {
  // @@protoc_insertion_point(destructor:CEcon_GetAssetClassInfo_Request.Class)
  SharedDtor();
}

void CEcon_GetAssetClassInfo_Request_Class::SharedDtor() {
}

void CEcon_GetAssetClassInfo_Request_Class::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_GetAssetClassInfo_Request_Class::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_GetAssetClassInfo_Request_Class& CEcon_GetAssetClassInfo_Request_Class::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Request_Class.base);
  return *internal_default_instance();
}


void CEcon_GetAssetClassInfo_Request_Class::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_GetAssetClassInfo_Request.Class)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&classid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&instanceid_) -
        reinterpret_cast<char*>(&classid_)) + sizeof(instanceid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_GetAssetClassInfo_Request_Class::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_GetAssetClassInfo_Request.Class)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 classid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_classid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &classid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 instanceid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_GetAssetClassInfo_Request.Class)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_GetAssetClassInfo_Request.Class)
  return false;
#undef DO_
}

void CEcon_GetAssetClassInfo_Request_Class::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_GetAssetClassInfo_Request.Class)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 classid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->classid(), output);
  }

  // optional uint64 instanceid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->instanceid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_GetAssetClassInfo_Request.Class)
}

::google::protobuf::uint8* CEcon_GetAssetClassInfo_Request_Class::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_GetAssetClassInfo_Request.Class)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 classid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->classid(), target);
  }

  // optional uint64 instanceid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->instanceid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_GetAssetClassInfo_Request.Class)
  return target;
}

size_t CEcon_GetAssetClassInfo_Request_Class::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_GetAssetClassInfo_Request.Class)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 classid = 1;
    if (has_classid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->classid());
    }

    // optional uint64 instanceid = 2;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->instanceid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_GetAssetClassInfo_Request_Class::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_GetAssetClassInfo_Request.Class)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_GetAssetClassInfo_Request_Class* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_GetAssetClassInfo_Request_Class>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_GetAssetClassInfo_Request.Class)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_GetAssetClassInfo_Request.Class)
    MergeFrom(*source);
  }
}

void CEcon_GetAssetClassInfo_Request_Class::MergeFrom(const CEcon_GetAssetClassInfo_Request_Class& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_GetAssetClassInfo_Request.Class)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      classid_ = from.classid_;
    }
    if (cached_has_bits & 0x00000002u) {
      instanceid_ = from.instanceid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEcon_GetAssetClassInfo_Request_Class::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_GetAssetClassInfo_Request.Class)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_GetAssetClassInfo_Request_Class::CopyFrom(const CEcon_GetAssetClassInfo_Request_Class& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_GetAssetClassInfo_Request.Class)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_GetAssetClassInfo_Request_Class::IsInitialized() const {
  return true;
}

void CEcon_GetAssetClassInfo_Request_Class::Swap(CEcon_GetAssetClassInfo_Request_Class* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_GetAssetClassInfo_Request_Class::InternalSwap(CEcon_GetAssetClassInfo_Request_Class* other) {
  using std::swap;
  swap(classid_, other->classid_);
  swap(instanceid_, other->instanceid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_GetAssetClassInfo_Request_Class::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEcon_GetAssetClassInfo_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_GetAssetClassInfo_Request::kLanguageFieldNumber;
const int CEcon_GetAssetClassInfo_Request::kAppidFieldNumber;
const int CEcon_GetAssetClassInfo_Request::kClassesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_GetAssetClassInfo_Request::CEcon_GetAssetClassInfo_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_GetAssetClassInfo_Request)
}
CEcon_GetAssetClassInfo_Request::CEcon_GetAssetClassInfo_Request(const CEcon_GetAssetClassInfo_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      classes_(from.classes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CEcon_GetAssetClassInfo_Request)
}

void CEcon_GetAssetClassInfo_Request::SharedCtor() {
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CEcon_GetAssetClassInfo_Request::~CEcon_GetAssetClassInfo_Request() {
  // @@protoc_insertion_point(destructor:CEcon_GetAssetClassInfo_Request)
  SharedDtor();
}

void CEcon_GetAssetClassInfo_Request::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEcon_GetAssetClassInfo_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_GetAssetClassInfo_Request::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_GetAssetClassInfo_Request& CEcon_GetAssetClassInfo_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Request.base);
  return *internal_default_instance();
}


void CEcon_GetAssetClassInfo_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_GetAssetClassInfo_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    language_.ClearNonDefaultToEmptyNoArena();
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_GetAssetClassInfo_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_GetAssetClassInfo_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEcon_GetAssetClassInfo_Request.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEcon_GetAssetClassInfo_Request.Class classes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_classes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_GetAssetClassInfo_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_GetAssetClassInfo_Request)
  return false;
#undef DO_
}

void CEcon_GetAssetClassInfo_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_GetAssetClassInfo_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_GetAssetClassInfo_Request.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // repeated .CEcon_GetAssetClassInfo_Request.Class classes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->classes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_GetAssetClassInfo_Request)
}

::google::protobuf::uint8* CEcon_GetAssetClassInfo_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_GetAssetClassInfo_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEcon_GetAssetClassInfo_Request.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // repeated .CEcon_GetAssetClassInfo_Request.Class classes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->classes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_GetAssetClassInfo_Request)
  return target;
}

size_t CEcon_GetAssetClassInfo_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_GetAssetClassInfo_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CEcon_GetAssetClassInfo_Request.Class classes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->classes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->classes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string language = 1;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_GetAssetClassInfo_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_GetAssetClassInfo_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_GetAssetClassInfo_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_GetAssetClassInfo_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_GetAssetClassInfo_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_GetAssetClassInfo_Request)
    MergeFrom(*source);
  }
}

void CEcon_GetAssetClassInfo_Request::MergeFrom(const CEcon_GetAssetClassInfo_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_GetAssetClassInfo_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  classes_.MergeFrom(from.classes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEcon_GetAssetClassInfo_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_GetAssetClassInfo_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_GetAssetClassInfo_Request::CopyFrom(const CEcon_GetAssetClassInfo_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_GetAssetClassInfo_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_GetAssetClassInfo_Request::IsInitialized() const {
  return true;
}

void CEcon_GetAssetClassInfo_Request::Swap(CEcon_GetAssetClassInfo_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_GetAssetClassInfo_Request::InternalSwap(CEcon_GetAssetClassInfo_Request* other) {
  using std::swap;
  CastToBase(&classes_)->InternalSwap(CastToBase(&other->classes_));
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_GetAssetClassInfo_Request::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEconItem_DescriptionLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEconItem_DescriptionLine::kTypeFieldNumber;
const int CEconItem_DescriptionLine::kValueFieldNumber;
const int CEconItem_DescriptionLine::kColorFieldNumber;
const int CEconItem_DescriptionLine::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEconItem_DescriptionLine::CEconItem_DescriptionLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_DescriptionLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEconItem_DescriptionLine)
}
CEconItem_DescriptionLine::CEconItem_DescriptionLine(const CEconItem_DescriptionLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_color()) {
    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:CEconItem_DescriptionLine)
}

void CEconItem_DescriptionLine::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CEconItem_DescriptionLine::~CEconItem_DescriptionLine() {
  // @@protoc_insertion_point(destructor:CEconItem_DescriptionLine)
  SharedDtor();
}

void CEconItem_DescriptionLine::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEconItem_DescriptionLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEconItem_DescriptionLine::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEconItem_DescriptionLine& CEconItem_DescriptionLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_DescriptionLine.base);
  return *internal_default_instance();
}


void CEconItem_DescriptionLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CEconItem_DescriptionLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      color_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEconItem_DescriptionLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEconItem_DescriptionLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_DescriptionLine.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_DescriptionLine.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string color = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_DescriptionLine.color");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_DescriptionLine.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEconItem_DescriptionLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEconItem_DescriptionLine)
  return false;
#undef DO_
}

void CEconItem_DescriptionLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEconItem_DescriptionLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // optional string color = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->color(), output);
  }

  // optional string label = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->label(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEconItem_DescriptionLine)
}

::google::protobuf::uint8* CEconItem_DescriptionLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEconItem_DescriptionLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // optional string color = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->color(), target);
  }

  // optional string label = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_DescriptionLine.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->label(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEconItem_DescriptionLine)
  return target;
}

size_t CEconItem_DescriptionLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEconItem_DescriptionLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional string color = 3;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }

    // optional string label = 4;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEconItem_DescriptionLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEconItem_DescriptionLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CEconItem_DescriptionLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEconItem_DescriptionLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEconItem_DescriptionLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEconItem_DescriptionLine)
    MergeFrom(*source);
  }
}

void CEconItem_DescriptionLine::MergeFrom(const CEconItem_DescriptionLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEconItem_DescriptionLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_color();
      color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
  }
}

void CEconItem_DescriptionLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEconItem_DescriptionLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEconItem_DescriptionLine::CopyFrom(const CEconItem_DescriptionLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEconItem_DescriptionLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEconItem_DescriptionLine::IsInitialized() const {
  return true;
}

void CEconItem_DescriptionLine::Swap(CEconItem_DescriptionLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEconItem_DescriptionLine::InternalSwap(CEconItem_DescriptionLine* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  color_.Swap(&other->color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEconItem_DescriptionLine::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEconItem_Action::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEconItem_Action::kLinkFieldNumber;
const int CEconItem_Action::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEconItem_Action::CEconItem_Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Action.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEconItem_Action)
}
CEconItem_Action::CEconItem_Action(const CEconItem_Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:CEconItem_Action)
}

void CEconItem_Action::SharedCtor() {
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CEconItem_Action::~CEconItem_Action() {
  // @@protoc_insertion_point(destructor:CEconItem_Action)
  SharedDtor();
}

void CEconItem_Action::SharedDtor() {
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEconItem_Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEconItem_Action::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEconItem_Action& CEconItem_Action::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Action.base);
  return *internal_default_instance();
}


void CEconItem_Action::Clear() {
// @@protoc_insertion_point(message_clear_start:CEconItem_Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      link_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEconItem_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEconItem_Action)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string link = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), static_cast<int>(this->link().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Action.link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Action.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEconItem_Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEconItem_Action)
  return false;
#undef DO_
}

void CEconItem_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEconItem_Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string link = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Action.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->link(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Action.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEconItem_Action)
}

::google::protobuf::uint8* CEconItem_Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEconItem_Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string link = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Action.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->link(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Action.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEconItem_Action)
  return target;
}

size_t CEconItem_Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEconItem_Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string link = 1;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEconItem_Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEconItem_Action)
  GOOGLE_DCHECK_NE(&from, this);
  const CEconItem_Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEconItem_Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEconItem_Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEconItem_Action)
    MergeFrom(*source);
  }
}

void CEconItem_Action::MergeFrom(const CEconItem_Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEconItem_Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_link();
      link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
}

void CEconItem_Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEconItem_Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEconItem_Action::CopyFrom(const CEconItem_Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEconItem_Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEconItem_Action::IsInitialized() const {
  return true;
}

void CEconItem_Action::Swap(CEconItem_Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEconItem_Action::InternalSwap(CEconItem_Action* other) {
  using std::swap;
  link_.Swap(&other->link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEconItem_Action::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEconItem_Description::InitAsDefaultInstance() {
  ::_CEconItem_Description_default_instance_._instance.get_mutable()->contained_item_ = const_cast< ::CEconItem_Description*>(
      ::CEconItem_Description::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEconItem_Description::kAppidFieldNumber;
const int CEconItem_Description::kClassidFieldNumber;
const int CEconItem_Description::kInstanceidFieldNumber;
const int CEconItem_Description::kCurrencyFieldNumber;
const int CEconItem_Description::kBackgroundColorFieldNumber;
const int CEconItem_Description::kIconUrlFieldNumber;
const int CEconItem_Description::kIconUrlLargeFieldNumber;
const int CEconItem_Description::kDescriptionsFieldNumber;
const int CEconItem_Description::kTradableFieldNumber;
const int CEconItem_Description::kActionsFieldNumber;
const int CEconItem_Description::kOwnerDescriptionsFieldNumber;
const int CEconItem_Description::kOwnerActionsFieldNumber;
const int CEconItem_Description::kFraudwarningsFieldNumber;
const int CEconItem_Description::kNameFieldNumber;
const int CEconItem_Description::kNameColorFieldNumber;
const int CEconItem_Description::kTypeFieldNumber;
const int CEconItem_Description::kMarketNameFieldNumber;
const int CEconItem_Description::kMarketHashNameFieldNumber;
const int CEconItem_Description::kMarketFeeFieldNumber;
const int CEconItem_Description::kMarketFeeAppFieldNumber;
const int CEconItem_Description::kContainedItemFieldNumber;
const int CEconItem_Description::kMarketActionsFieldNumber;
const int CEconItem_Description::kCommodityFieldNumber;
const int CEconItem_Description::kMarketTradableRestrictionFieldNumber;
const int CEconItem_Description::kMarketMarketableRestrictionFieldNumber;
const int CEconItem_Description::kMarketableFieldNumber;
const int CEconItem_Description::kTagsFieldNumber;
const int CEconItem_Description::kItemExpirationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEconItem_Description::CEconItem_Description()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Description.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEconItem_Description)
}
CEconItem_Description::CEconItem_Description(const CEconItem_Description& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      descriptions_(from.descriptions_),
      actions_(from.actions_),
      owner_descriptions_(from.owner_descriptions_),
      owner_actions_(from.owner_actions_),
      fraudwarnings_(from.fraudwarnings_),
      market_actions_(from.market_actions_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  background_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_background_color()) {
    background_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_color_);
  }
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon_url()) {
    icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
  }
  icon_url_large_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon_url_large()) {
    icon_url_large_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_large_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  name_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name_color()) {
    name_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_color_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  market_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_market_name()) {
    market_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_name_);
  }
  market_hash_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_market_hash_name()) {
    market_hash_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_hash_name_);
  }
  market_fee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_market_fee()) {
    market_fee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_fee_);
  }
  item_expiration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_expiration()) {
    item_expiration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_expiration_);
  }
  if (from.has_contained_item()) {
    contained_item_ = new ::CEconItem_Description(*from.contained_item_);
  } else {
    contained_item_ = NULL;
  }
  ::memcpy(&classid_, &from.classid_,
    static_cast<size_t>(reinterpret_cast<char*>(&market_fee_app_) -
    reinterpret_cast<char*>(&classid_)) + sizeof(market_fee_app_));
  // @@protoc_insertion_point(copy_constructor:CEconItem_Description)
}

void CEconItem_Description::SharedCtor() {
  background_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_large_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_hash_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_fee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_expiration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&contained_item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&market_fee_app_) -
      reinterpret_cast<char*>(&contained_item_)) + sizeof(market_fee_app_));
}

CEconItem_Description::~CEconItem_Description() {
  // @@protoc_insertion_point(destructor:CEconItem_Description)
  SharedDtor();
}

void CEconItem_Description::SharedDtor() {
  background_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_large_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_hash_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_fee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_expiration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contained_item_;
}

void CEconItem_Description::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEconItem_Description::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEconItem_Description& CEconItem_Description::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Description.base);
  return *internal_default_instance();
}


void CEconItem_Description::Clear() {
// @@protoc_insertion_point(message_clear_start:CEconItem_Description)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptions_.Clear();
  actions_.Clear();
  owner_descriptions_.Clear();
  owner_actions_.Clear();
  fraudwarnings_.Clear();
  market_actions_.Clear();
  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      background_color_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      icon_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      icon_url_large_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      name_color_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      market_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      market_hash_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      market_fee_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      item_expiration_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(contained_item_ != NULL);
      contained_item_->Clear();
    }
  }
  if (cached_has_bits & 63488u) {
    ::memset(&classid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tradable_) -
        reinterpret_cast<char*>(&classid_)) + sizeof(tradable_));
  }
  if (cached_has_bits & 2031616u) {
    ::memset(&commodity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&market_fee_app_) -
        reinterpret_cast<char*>(&commodity_)) + sizeof(market_fee_app_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEconItem_Description::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEconItem_Description)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 classid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_classid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &classid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 instanceid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool currency = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string background_color = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background_color()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->background_color().data(), static_cast<int>(this->background_color().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.background_color");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_url().data(), static_cast<int>(this->icon_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.icon_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon_url_large = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_url_large()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_url_large().data(), static_cast<int>(this->icon_url_large().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.icon_url_large");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEconItem_DescriptionLine descriptions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_descriptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool tradable = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_tradable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tradable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEconItem_Action actions = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEconItem_DescriptionLine owner_descriptions = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_owner_descriptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEconItem_Action owner_actions = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_owner_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fraudwarnings = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fraudwarnings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fraudwarnings(this->fraudwarnings_size() - 1).data(),
            static_cast<int>(this->fraudwarnings(this->fraudwarnings_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.fraudwarnings");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name_color = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_color()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name_color().data(), static_cast<int>(this->name_color().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.name_color");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string market_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->market_name().data(), static_cast<int>(this->market_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.market_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string market_hash_name = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market_hash_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->market_hash_name().data(), static_cast<int>(this->market_hash_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.market_hash_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string market_fee = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market_fee()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->market_fee().data(), static_cast<int>(this->market_fee().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.market_fee");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CEconItem_Description contained_item = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contained_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEconItem_Action market_actions = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_market_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool commodity = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_commodity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &commodity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 market_tradable_restriction = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_market_tradable_restriction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_tradable_restriction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 market_marketable_restriction = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_market_marketable_restriction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_marketable_restriction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool marketable = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_marketable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &marketable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CEconItem_Tag tags = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string item_expiration = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_expiration()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_expiration().data(), static_cast<int>(this->item_expiration().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Description.item_expiration");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 market_fee_app = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_market_fee_app();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_fee_app_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEconItem_Description)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEconItem_Description)
  return false;
#undef DO_
}

void CEconItem_Description::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEconItem_Description)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 appid = 1;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->appid(), output);
  }

  // optional uint64 classid = 2;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->classid(), output);
  }

  // optional uint64 instanceid = 3;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->instanceid(), output);
  }

  // optional bool currency = 4;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->currency(), output);
  }

  // optional string background_color = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_color().data(), static_cast<int>(this->background_color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.background_color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->background_color(), output);
  }

  // optional string icon_url = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_url().data(), static_cast<int>(this->icon_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.icon_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->icon_url(), output);
  }

  // optional string icon_url_large = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_url_large().data(), static_cast<int>(this->icon_url_large().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.icon_url_large");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->icon_url_large(), output);
  }

  // repeated .CEconItem_DescriptionLine descriptions = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->descriptions(static_cast<int>(i)),
      output);
  }

  // optional bool tradable = 9;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->tradable(), output);
  }

  // repeated .CEconItem_Action actions = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->actions(static_cast<int>(i)),
      output);
  }

  // repeated .CEconItem_DescriptionLine owner_descriptions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->owner_descriptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->owner_descriptions(static_cast<int>(i)),
      output);
  }

  // repeated .CEconItem_Action owner_actions = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->owner_actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->owner_actions(static_cast<int>(i)),
      output);
  }

  // repeated string fraudwarnings = 13;
  for (int i = 0, n = this->fraudwarnings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fraudwarnings(i).data(), static_cast<int>(this->fraudwarnings(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.fraudwarnings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->fraudwarnings(i), output);
  }

  // optional string name = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->name(), output);
  }

  // optional string name_color = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_color().data(), static_cast<int>(this->name_color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.name_color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->name_color(), output);
  }

  // optional string type = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->type(), output);
  }

  // optional string market_name = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market_name().data(), static_cast<int>(this->market_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.market_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->market_name(), output);
  }

  // optional string market_hash_name = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market_hash_name().data(), static_cast<int>(this->market_hash_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.market_hash_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->market_hash_name(), output);
  }

  // optional string market_fee = 19;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market_fee().data(), static_cast<int>(this->market_fee().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.market_fee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->market_fee(), output);
  }

  // optional .CEconItem_Description contained_item = 20;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_contained_item(), output);
  }

  // repeated .CEconItem_Action market_actions = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->market_actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->market_actions(static_cast<int>(i)),
      output);
  }

  // optional bool commodity = 22;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->commodity(), output);
  }

  // optional int32 market_tradable_restriction = 23;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->market_tradable_restriction(), output);
  }

  // optional int32 market_marketable_restriction = 24;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->market_marketable_restriction(), output);
  }

  // optional bool marketable = 25;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->marketable(), output);
  }

  // repeated .CEconItem_Tag tags = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26,
      this->tags(static_cast<int>(i)),
      output);
  }

  // optional string item_expiration = 27;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_expiration().data(), static_cast<int>(this->item_expiration().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.item_expiration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->item_expiration(), output);
  }

  // optional int32 market_fee_app = 28;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->market_fee_app(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEconItem_Description)
}

::google::protobuf::uint8* CEconItem_Description::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEconItem_Description)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 appid = 1;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->appid(), target);
  }

  // optional uint64 classid = 2;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->classid(), target);
  }

  // optional uint64 instanceid = 3;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->instanceid(), target);
  }

  // optional bool currency = 4;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->currency(), target);
  }

  // optional string background_color = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_color().data(), static_cast<int>(this->background_color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.background_color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->background_color(), target);
  }

  // optional string icon_url = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_url().data(), static_cast<int>(this->icon_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.icon_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->icon_url(), target);
  }

  // optional string icon_url_large = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_url_large().data(), static_cast<int>(this->icon_url_large().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.icon_url_large");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->icon_url_large(), target);
  }

  // repeated .CEconItem_DescriptionLine descriptions = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->descriptions(static_cast<int>(i)), deterministic, target);
  }

  // optional bool tradable = 9;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->tradable(), target);
  }

  // repeated .CEconItem_Action actions = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->actions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CEconItem_DescriptionLine owner_descriptions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->owner_descriptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->owner_descriptions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CEconItem_Action owner_actions = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->owner_actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->owner_actions(static_cast<int>(i)), deterministic, target);
  }

  // repeated string fraudwarnings = 13;
  for (int i = 0, n = this->fraudwarnings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fraudwarnings(i).data(), static_cast<int>(this->fraudwarnings(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.fraudwarnings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->fraudwarnings(i), target);
  }

  // optional string name = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->name(), target);
  }

  // optional string name_color = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_color().data(), static_cast<int>(this->name_color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.name_color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->name_color(), target);
  }

  // optional string type = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->type(), target);
  }

  // optional string market_name = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market_name().data(), static_cast<int>(this->market_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.market_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->market_name(), target);
  }

  // optional string market_hash_name = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market_hash_name().data(), static_cast<int>(this->market_hash_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.market_hash_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->market_hash_name(), target);
  }

  // optional string market_fee = 19;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market_fee().data(), static_cast<int>(this->market_fee().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.market_fee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->market_fee(), target);
  }

  // optional .CEconItem_Description contained_item = 20;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_contained_item(), deterministic, target);
  }

  // repeated .CEconItem_Action market_actions = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->market_actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->market_actions(static_cast<int>(i)), deterministic, target);
  }

  // optional bool commodity = 22;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->commodity(), target);
  }

  // optional int32 market_tradable_restriction = 23;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->market_tradable_restriction(), target);
  }

  // optional int32 market_marketable_restriction = 24;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->market_marketable_restriction(), target);
  }

  // optional bool marketable = 25;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->marketable(), target);
  }

  // repeated .CEconItem_Tag tags = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->tags(static_cast<int>(i)), deterministic, target);
  }

  // optional string item_expiration = 27;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_expiration().data(), static_cast<int>(this->item_expiration().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Description.item_expiration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->item_expiration(), target);
  }

  // optional int32 market_fee_app = 28;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->market_fee_app(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEconItem_Description)
  return target;
}

size_t CEconItem_Description::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEconItem_Description)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CEconItem_DescriptionLine descriptions = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptions(static_cast<int>(i)));
    }
  }

  // repeated .CEconItem_Action actions = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  // repeated .CEconItem_DescriptionLine owner_descriptions = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->owner_descriptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->owner_descriptions(static_cast<int>(i)));
    }
  }

  // repeated .CEconItem_Action owner_actions = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->owner_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->owner_actions(static_cast<int>(i)));
    }
  }

  // repeated string fraudwarnings = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fraudwarnings_size());
  for (int i = 0, n = this->fraudwarnings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fraudwarnings(i));
  }

  // repeated .CEconItem_Action market_actions = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->market_actions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->market_actions(static_cast<int>(i)));
    }
  }

  // repeated .CEconItem_Tag tags = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string background_color = 5;
    if (has_background_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background_color());
    }

    // optional string icon_url = 6;
    if (has_icon_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_url());
    }

    // optional string icon_url_large = 7;
    if (has_icon_url_large()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_url_large());
    }

    // optional string name = 14;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string name_color = 15;
    if (has_name_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name_color());
    }

    // optional string type = 16;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string market_name = 17;
    if (has_market_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->market_name());
    }

    // optional string market_hash_name = 18;
    if (has_market_hash_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->market_hash_name());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string market_fee = 19;
    if (has_market_fee()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->market_fee());
    }

    // optional string item_expiration = 27;
    if (has_item_expiration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_expiration());
    }

    // optional .CEconItem_Description contained_item = 20;
    if (has_contained_item()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *contained_item_);
    }

    // optional uint64 classid = 2;
    if (has_classid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->classid());
    }

    // optional uint64 instanceid = 3;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->instanceid());
    }

    // optional int32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

    // optional bool currency = 4;
    if (has_currency()) {
      total_size += 1 + 1;
    }

    // optional bool tradable = 9;
    if (has_tradable()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional bool commodity = 22;
    if (has_commodity()) {
      total_size += 2 + 1;
    }

    // optional bool marketable = 25;
    if (has_marketable()) {
      total_size += 2 + 1;
    }

    // optional int32 market_tradable_restriction = 23;
    if (has_market_tradable_restriction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market_tradable_restriction());
    }

    // optional int32 market_marketable_restriction = 24;
    if (has_market_marketable_restriction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market_marketable_restriction());
    }

    // optional int32 market_fee_app = 28;
    if (has_market_fee_app()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market_fee_app());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEconItem_Description::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEconItem_Description)
  GOOGLE_DCHECK_NE(&from, this);
  const CEconItem_Description* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEconItem_Description>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEconItem_Description)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEconItem_Description)
    MergeFrom(*source);
  }
}

void CEconItem_Description::MergeFrom(const CEconItem_Description& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEconItem_Description)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptions_.MergeFrom(from.descriptions_);
  actions_.MergeFrom(from.actions_);
  owner_descriptions_.MergeFrom(from.owner_descriptions_);
  owner_actions_.MergeFrom(from.owner_actions_);
  fraudwarnings_.MergeFrom(from.fraudwarnings_);
  market_actions_.MergeFrom(from.market_actions_);
  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_background_color();
      background_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_color_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_icon_url();
      icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon_url_large();
      icon_url_large_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_large_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_name_color();
      name_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_color_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_market_name();
      market_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_name_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_market_hash_name();
      market_hash_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_hash_name_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_market_fee();
      market_fee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_fee_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_item_expiration();
      item_expiration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_expiration_);
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_contained_item()->::CEconItem_Description::MergeFrom(from.contained_item());
    }
    if (cached_has_bits & 0x00000800u) {
      classid_ = from.classid_;
    }
    if (cached_has_bits & 0x00001000u) {
      instanceid_ = from.instanceid_;
    }
    if (cached_has_bits & 0x00002000u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00004000u) {
      currency_ = from.currency_;
    }
    if (cached_has_bits & 0x00008000u) {
      tradable_ = from.tradable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      commodity_ = from.commodity_;
    }
    if (cached_has_bits & 0x00020000u) {
      marketable_ = from.marketable_;
    }
    if (cached_has_bits & 0x00040000u) {
      market_tradable_restriction_ = from.market_tradable_restriction_;
    }
    if (cached_has_bits & 0x00080000u) {
      market_marketable_restriction_ = from.market_marketable_restriction_;
    }
    if (cached_has_bits & 0x00100000u) {
      market_fee_app_ = from.market_fee_app_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEconItem_Description::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEconItem_Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEconItem_Description::CopyFrom(const CEconItem_Description& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEconItem_Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEconItem_Description::IsInitialized() const {
  return true;
}

void CEconItem_Description::Swap(CEconItem_Description* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEconItem_Description::InternalSwap(CEconItem_Description* other) {
  using std::swap;
  CastToBase(&descriptions_)->InternalSwap(CastToBase(&other->descriptions_));
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
  CastToBase(&owner_descriptions_)->InternalSwap(CastToBase(&other->owner_descriptions_));
  CastToBase(&owner_actions_)->InternalSwap(CastToBase(&other->owner_actions_));
  fraudwarnings_.InternalSwap(CastToBase(&other->fraudwarnings_));
  CastToBase(&market_actions_)->InternalSwap(CastToBase(&other->market_actions_));
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  background_color_.Swap(&other->background_color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_url_.Swap(&other->icon_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_url_large_.Swap(&other->icon_url_large_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_color_.Swap(&other->name_color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  market_name_.Swap(&other->market_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  market_hash_name_.Swap(&other->market_hash_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  market_fee_.Swap(&other->market_fee_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  item_expiration_.Swap(&other->item_expiration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contained_item_, other->contained_item_);
  swap(classid_, other->classid_);
  swap(instanceid_, other->instanceid_);
  swap(appid_, other->appid_);
  swap(currency_, other->currency_);
  swap(tradable_, other->tradable_);
  swap(commodity_, other->commodity_);
  swap(marketable_, other->marketable_);
  swap(market_tradable_restriction_, other->market_tradable_restriction_);
  swap(market_marketable_restriction_, other->market_marketable_restriction_);
  swap(market_fee_app_, other->market_fee_app_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEconItem_Description::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEconItem_Tag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEconItem_Tag::kAppidFieldNumber;
const int CEconItem_Tag::kCategoryFieldNumber;
const int CEconItem_Tag::kInternalNameFieldNumber;
const int CEconItem_Tag::kLocalizedCategoryNameFieldNumber;
const int CEconItem_Tag::kLocalizedTagNameFieldNumber;
const int CEconItem_Tag::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEconItem_Tag::CEconItem_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Tag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEconItem_Tag)
}
CEconItem_Tag::CEconItem_Tag(const CEconItem_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category()) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  internal_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_internal_name()) {
    internal_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_name_);
  }
  localized_category_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localized_category_name()) {
    localized_category_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localized_category_name_);
  }
  localized_tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localized_tag_name()) {
    localized_tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localized_tag_name_);
  }
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_color()) {
    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CEconItem_Tag)
}

void CEconItem_Tag::SharedCtor() {
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localized_category_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localized_tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CEconItem_Tag::~CEconItem_Tag() {
  // @@protoc_insertion_point(destructor:CEconItem_Tag)
  SharedDtor();
}

void CEconItem_Tag::SharedDtor() {
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localized_category_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localized_tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CEconItem_Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEconItem_Tag::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEconItem_Tag& CEconItem_Tag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEconItem_Tag.base);
  return *internal_default_instance();
}


void CEconItem_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:CEconItem_Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      category_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      internal_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      localized_category_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      localized_tag_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      color_.ClearNonDefaultToEmptyNoArena();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEconItem_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEconItem_Tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1 [(.description) = "The app that contains the item"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category = 2 [(.description) = "The internal name of the category the tag belongs to"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Tag.category");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string internal_name = 3 [(.description) = "The internal name of the tag"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->internal_name().data(), static_cast<int>(this->internal_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Tag.internal_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localized_category_name = 4 [(.description) = "The localized name of the category"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localized_category_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localized_category_name().data(), static_cast<int>(this->localized_category_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Tag.localized_category_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localized_tag_name = 5 [(.description) = "The localized name of the tag"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localized_tag_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localized_tag_name().data(), static_cast<int>(this->localized_tag_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Tag.localized_tag_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string color = 6 [(.description) = "The color to use when displaying the tag to the user"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CEconItem_Tag.color");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEconItem_Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEconItem_Tag)
  return false;
#undef DO_
}

void CEconItem_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEconItem_Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1 [(.description) = "The app that contains the item"];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string category = 2 [(.description) = "The internal name of the category the tag belongs to"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->category(), output);
  }

  // optional string internal_name = 3 [(.description) = "The internal name of the tag"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_name().data(), static_cast<int>(this->internal_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.internal_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->internal_name(), output);
  }

  // optional string localized_category_name = 4 [(.description) = "The localized name of the category"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localized_category_name().data(), static_cast<int>(this->localized_category_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.localized_category_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->localized_category_name(), output);
  }

  // optional string localized_tag_name = 5 [(.description) = "The localized name of the tag"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localized_tag_name().data(), static_cast<int>(this->localized_tag_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.localized_tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->localized_tag_name(), output);
  }

  // optional string color = 6 [(.description) = "The color to use when displaying the tag to the user"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEconItem_Tag)
}

::google::protobuf::uint8* CEconItem_Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEconItem_Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1 [(.description) = "The app that contains the item"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string category = 2 [(.description) = "The internal name of the category the tag belongs to"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->category(), target);
  }

  // optional string internal_name = 3 [(.description) = "The internal name of the tag"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_name().data(), static_cast<int>(this->internal_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.internal_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->internal_name(), target);
  }

  // optional string localized_category_name = 4 [(.description) = "The localized name of the category"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localized_category_name().data(), static_cast<int>(this->localized_category_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.localized_category_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->localized_category_name(), target);
  }

  // optional string localized_tag_name = 5 [(.description) = "The localized name of the tag"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localized_tag_name().data(), static_cast<int>(this->localized_tag_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.localized_tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->localized_tag_name(), target);
  }

  // optional string color = 6 [(.description) = "The color to use when displaying the tag to the user"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CEconItem_Tag.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEconItem_Tag)
  return target;
}

size_t CEconItem_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEconItem_Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string category = 2 [(.description) = "The internal name of the category the tag belongs to"];
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

    // optional string internal_name = 3 [(.description) = "The internal name of the tag"];
    if (has_internal_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->internal_name());
    }

    // optional string localized_category_name = 4 [(.description) = "The localized name of the category"];
    if (has_localized_category_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localized_category_name());
    }

    // optional string localized_tag_name = 5 [(.description) = "The localized name of the tag"];
    if (has_localized_tag_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localized_tag_name());
    }

    // optional string color = 6 [(.description) = "The color to use when displaying the tag to the user"];
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }

    // optional uint32 appid = 1 [(.description) = "The app that contains the item"];
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEconItem_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEconItem_Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const CEconItem_Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEconItem_Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEconItem_Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEconItem_Tag)
    MergeFrom(*source);
  }
}

void CEconItem_Tag::MergeFrom(const CEconItem_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEconItem_Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_category();
      category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_internal_name();
      internal_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_localized_category_name();
      localized_category_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localized_category_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_localized_tag_name();
      localized_tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localized_tag_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_color();
      color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEconItem_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEconItem_Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEconItem_Tag::CopyFrom(const CEconItem_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEconItem_Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEconItem_Tag::IsInitialized() const {
  return true;
}

void CEconItem_Tag::Swap(CEconItem_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEconItem_Tag::InternalSwap(CEconItem_Tag* other) {
  using std::swap;
  category_.Swap(&other->category_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  internal_name_.Swap(&other->internal_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localized_category_name_.Swap(&other->localized_category_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localized_tag_name_.Swap(&other->localized_tag_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  color_.Swap(&other->color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEconItem_Tag::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEcon_GetAssetClassInfo_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_GetAssetClassInfo_Response::kDescriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_GetAssetClassInfo_Response::CEcon_GetAssetClassInfo_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEcon_GetAssetClassInfo_Response)
}
CEcon_GetAssetClassInfo_Response::CEcon_GetAssetClassInfo_Response(const CEcon_GetAssetClassInfo_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      descriptions_(from.descriptions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CEcon_GetAssetClassInfo_Response)
}

void CEcon_GetAssetClassInfo_Response::SharedCtor() {
}

CEcon_GetAssetClassInfo_Response::~CEcon_GetAssetClassInfo_Response() {
  // @@protoc_insertion_point(destructor:CEcon_GetAssetClassInfo_Response)
  SharedDtor();
}

void CEcon_GetAssetClassInfo_Response::SharedDtor() {
}

void CEcon_GetAssetClassInfo_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEcon_GetAssetClassInfo_Response::descriptor() {
  ::protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEcon_GetAssetClassInfo_Response& CEcon_GetAssetClassInfo_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fecon_2esteamclient_2eproto::scc_info_CEcon_GetAssetClassInfo_Response.base);
  return *internal_default_instance();
}


void CEcon_GetAssetClassInfo_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CEcon_GetAssetClassInfo_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptions_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEcon_GetAssetClassInfo_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEcon_GetAssetClassInfo_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CEconItem_Description descriptions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_descriptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEcon_GetAssetClassInfo_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEcon_GetAssetClassInfo_Response)
  return false;
#undef DO_
}

void CEcon_GetAssetClassInfo_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEcon_GetAssetClassInfo_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CEconItem_Description descriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->descriptions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEcon_GetAssetClassInfo_Response)
}

::google::protobuf::uint8* CEcon_GetAssetClassInfo_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEcon_GetAssetClassInfo_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CEconItem_Description descriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->descriptions(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEcon_GetAssetClassInfo_Response)
  return target;
}

size_t CEcon_GetAssetClassInfo_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEcon_GetAssetClassInfo_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CEconItem_Description descriptions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_GetAssetClassInfo_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEcon_GetAssetClassInfo_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_GetAssetClassInfo_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEcon_GetAssetClassInfo_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEcon_GetAssetClassInfo_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEcon_GetAssetClassInfo_Response)
    MergeFrom(*source);
  }
}

void CEcon_GetAssetClassInfo_Response::MergeFrom(const CEcon_GetAssetClassInfo_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEcon_GetAssetClassInfo_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptions_.MergeFrom(from.descriptions_);
}

void CEcon_GetAssetClassInfo_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEcon_GetAssetClassInfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_GetAssetClassInfo_Response::CopyFrom(const CEcon_GetAssetClassInfo_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEcon_GetAssetClassInfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_GetAssetClassInfo_Response::IsInitialized() const {
  return true;
}

void CEcon_GetAssetClassInfo_Response::Swap(CEcon_GetAssetClassInfo_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_GetAssetClassInfo_Response::InternalSwap(CEcon_GetAssetClassInfo_Response* other) {
  using std::swap;
  CastToBase(&descriptions_)->InternalSwap(CastToBase(&other->descriptions_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEcon_GetAssetClassInfo_Response::GetMetadata() const {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Econ::~Econ() {}

const ::google::protobuf::ServiceDescriptor* Econ::descriptor() {
  protobuf_steammessages_5fecon_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Econ::GetDescriptor() {
  return descriptor();
}

void Econ::GetTradeOfferAccessToken(::google::protobuf::RpcController* controller,
                         const ::CEcon_GetTradeOfferAccessToken_Request*,
                         ::CEcon_GetTradeOfferAccessToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTradeOfferAccessToken() not implemented.");
  done->Run();
}

void Econ::ClientGetItemShopOverlayAuthURL(::google::protobuf::RpcController* controller,
                         const ::CEcon_ClientGetItemShopOverlayAuthURL_Request*,
                         ::CEcon_ClientGetItemShopOverlayAuthURL_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ClientGetItemShopOverlayAuthURL() not implemented.");
  done->Run();
}

void Econ::GetAssetClassInfo(::google::protobuf::RpcController* controller,
                         const ::CEcon_GetAssetClassInfo_Request*,
                         ::CEcon_GetAssetClassInfo_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetAssetClassInfo() not implemented.");
  done->Run();
}

void Econ::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fecon_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      GetTradeOfferAccessToken(controller,
             ::google::protobuf::down_cast<const ::CEcon_GetTradeOfferAccessToken_Request*>(request),
             ::google::protobuf::down_cast< ::CEcon_GetTradeOfferAccessToken_Response*>(response),
             done);
      break;
    case 1:
      ClientGetItemShopOverlayAuthURL(controller,
             ::google::protobuf::down_cast<const ::CEcon_ClientGetItemShopOverlayAuthURL_Request*>(request),
             ::google::protobuf::down_cast< ::CEcon_ClientGetItemShopOverlayAuthURL_Response*>(response),
             done);
      break;
    case 2:
      GetAssetClassInfo(controller,
             ::google::protobuf::down_cast<const ::CEcon_GetAssetClassInfo_Request*>(request),
             ::google::protobuf::down_cast< ::CEcon_GetAssetClassInfo_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Econ::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CEcon_GetTradeOfferAccessToken_Request::default_instance();
    case 1:
      return ::CEcon_ClientGetItemShopOverlayAuthURL_Request::default_instance();
    case 2:
      return ::CEcon_GetAssetClassInfo_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Econ::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CEcon_GetTradeOfferAccessToken_Response::default_instance();
    case 1:
      return ::CEcon_ClientGetItemShopOverlayAuthURL_Response::default_instance();
    case 2:
      return ::CEcon_GetAssetClassInfo_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Econ_Stub::Econ_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Econ_Stub::Econ_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Econ_Stub::~Econ_Stub() {
  if (owns_channel_) delete channel_;
}

void Econ_Stub::GetTradeOfferAccessToken(::google::protobuf::RpcController* controller,
                              const ::CEcon_GetTradeOfferAccessToken_Request* request,
                              ::CEcon_GetTradeOfferAccessToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Econ_Stub::ClientGetItemShopOverlayAuthURL(::google::protobuf::RpcController* controller,
                              const ::CEcon_ClientGetItemShopOverlayAuthURL_Request* request,
                              ::CEcon_ClientGetItemShopOverlayAuthURL_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Econ_Stub::GetAssetClassInfo(::google::protobuf::RpcController* controller,
                              const ::CEcon_GetAssetClassInfo_Request* request,
                              ::CEcon_GetAssetClassInfo_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_GetTradeOfferAccessToken_Request* Arena::CreateMaybeMessage< ::CEcon_GetTradeOfferAccessToken_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_GetTradeOfferAccessToken_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_GetTradeOfferAccessToken_Response* Arena::CreateMaybeMessage< ::CEcon_GetTradeOfferAccessToken_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_GetTradeOfferAccessToken_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_ClientGetItemShopOverlayAuthURL_Request* Arena::CreateMaybeMessage< ::CEcon_ClientGetItemShopOverlayAuthURL_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_ClientGetItemShopOverlayAuthURL_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_ClientGetItemShopOverlayAuthURL_Response* Arena::CreateMaybeMessage< ::CEcon_ClientGetItemShopOverlayAuthURL_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_ClientGetItemShopOverlayAuthURL_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_GetAssetClassInfo_Request_Class* Arena::CreateMaybeMessage< ::CEcon_GetAssetClassInfo_Request_Class >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_GetAssetClassInfo_Request_Class >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_GetAssetClassInfo_Request* Arena::CreateMaybeMessage< ::CEcon_GetAssetClassInfo_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_GetAssetClassInfo_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEconItem_DescriptionLine* Arena::CreateMaybeMessage< ::CEconItem_DescriptionLine >(Arena* arena) {
  return Arena::CreateInternal< ::CEconItem_DescriptionLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEconItem_Action* Arena::CreateMaybeMessage< ::CEconItem_Action >(Arena* arena) {
  return Arena::CreateInternal< ::CEconItem_Action >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEconItem_Description* Arena::CreateMaybeMessage< ::CEconItem_Description >(Arena* arena) {
  return Arena::CreateInternal< ::CEconItem_Description >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEconItem_Tag* Arena::CreateMaybeMessage< ::CEconItem_Tag >(Arena* arena) {
  return Arena::CreateInternal< ::CEconItem_Tag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEcon_GetAssetClassInfo_Response* Arena::CreateMaybeMessage< ::CEcon_GetAssetClassInfo_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CEcon_GetAssetClassInfo_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
