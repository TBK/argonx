// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_remoteclient_discovery.proto

#include "steammessages_remoteclient_discovery.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteClientBroadcastStatus_User;
}  // namespace protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto
class CMsgRemoteClientBroadcastHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteClientBroadcastHeader>
      _instance;
} _CMsgRemoteClientBroadcastHeader_default_instance_;
class CMsgRemoteClientBroadcastStatus_UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteClientBroadcastStatus_User>
      _instance;
} _CMsgRemoteClientBroadcastStatus_User_default_instance_;
class CMsgRemoteClientBroadcastStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteClientBroadcastStatus>
      _instance;
} _CMsgRemoteClientBroadcastStatus_default_instance_;
class CMsgRemoteClientBroadcastDiscoveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteClientBroadcastDiscovery>
      _instance;
} _CMsgRemoteClientBroadcastDiscovery_default_instance_;
class CMsgRemoteClientBroadcastClientIDDeconflictDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteClientBroadcastClientIDDeconflict>
      _instance;
} _CMsgRemoteClientBroadcastClientIDDeconflict_default_instance_;
class CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_TicketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket>
      _instance;
} _CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket_default_instance_;
class CMsgRemoteDeviceAuthorizationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceAuthorizationRequest>
      _instance;
} _CMsgRemoteDeviceAuthorizationRequest_default_instance_;
class CMsgRemoteDeviceAuthorizationCancelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceAuthorizationCancelRequest>
      _instance;
} _CMsgRemoteDeviceAuthorizationCancelRequest_default_instance_;
class CMsgRemoteDeviceAuthorizationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceAuthorizationResponse>
      _instance;
} _CMsgRemoteDeviceAuthorizationResponse_default_instance_;
class CMsgRemoteDeviceStreamingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceStreamingRequest>
      _instance;
} _CMsgRemoteDeviceStreamingRequest_default_instance_;
class CMsgRemoteDeviceStreamingCancelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceStreamingCancelRequest>
      _instance;
} _CMsgRemoteDeviceStreamingCancelRequest_default_instance_;
class CMsgRemoteDeviceStreamingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceStreamingResponse>
      _instance;
} _CMsgRemoteDeviceStreamingResponse_default_instance_;
class CMsgRemoteDeviceProofRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceProofRequest>
      _instance;
} _CMsgRemoteDeviceProofRequest_default_instance_;
class CMsgRemoteDeviceProofResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRemoteDeviceProofResponse>
      _instance;
} _CMsgRemoteDeviceProofResponse_default_instance_;
namespace protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto {
static void InitDefaultsCMsgRemoteClientBroadcastHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteClientBroadcastHeader_default_instance_;
    new (ptr) ::CMsgRemoteClientBroadcastHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteClientBroadcastHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteClientBroadcastHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteClientBroadcastHeader}, {}};

static void InitDefaultsCMsgRemoteClientBroadcastStatus_User() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteClientBroadcastStatus_User_default_instance_;
    new (ptr) ::CMsgRemoteClientBroadcastStatus_User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteClientBroadcastStatus_User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteClientBroadcastStatus_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteClientBroadcastStatus_User}, {}};

static void InitDefaultsCMsgRemoteClientBroadcastStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteClientBroadcastStatus_default_instance_;
    new (ptr) ::CMsgRemoteClientBroadcastStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteClientBroadcastStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgRemoteClientBroadcastStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgRemoteClientBroadcastStatus}, {
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastStatus_User.base,}};

static void InitDefaultsCMsgRemoteClientBroadcastDiscovery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteClientBroadcastDiscovery_default_instance_;
    new (ptr) ::CMsgRemoteClientBroadcastDiscovery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteClientBroadcastDiscovery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteClientBroadcastDiscovery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteClientBroadcastDiscovery}, {}};

static void InitDefaultsCMsgRemoteClientBroadcastClientIDDeconflict() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteClientBroadcastClientIDDeconflict_default_instance_;
    new (ptr) ::CMsgRemoteClientBroadcastClientIDDeconflict();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteClientBroadcastClientIDDeconflict::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteClientBroadcastClientIDDeconflict =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteClientBroadcastClientIDDeconflict}, {}};

static void InitDefaultsCMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket_default_instance_;
    new (ptr) ::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket}, {}};

static void InitDefaultsCMsgRemoteDeviceAuthorizationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceAuthorizationRequest_default_instance_;
    new (ptr) ::CMsgRemoteDeviceAuthorizationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceAuthorizationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceAuthorizationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceAuthorizationRequest}, {}};

static void InitDefaultsCMsgRemoteDeviceAuthorizationCancelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceAuthorizationCancelRequest_default_instance_;
    new (ptr) ::CMsgRemoteDeviceAuthorizationCancelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceAuthorizationCancelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceAuthorizationCancelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceAuthorizationCancelRequest}, {}};

static void InitDefaultsCMsgRemoteDeviceAuthorizationResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceAuthorizationResponse_default_instance_;
    new (ptr) ::CMsgRemoteDeviceAuthorizationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceAuthorizationResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceAuthorizationResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceAuthorizationResponse}, {}};

static void InitDefaultsCMsgRemoteDeviceStreamingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceStreamingRequest_default_instance_;
    new (ptr) ::CMsgRemoteDeviceStreamingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceStreamingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceStreamingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceStreamingRequest}, {}};

static void InitDefaultsCMsgRemoteDeviceStreamingCancelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceStreamingCancelRequest_default_instance_;
    new (ptr) ::CMsgRemoteDeviceStreamingCancelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceStreamingCancelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceStreamingCancelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceStreamingCancelRequest}, {}};

static void InitDefaultsCMsgRemoteDeviceStreamingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceStreamingResponse_default_instance_;
    new (ptr) ::CMsgRemoteDeviceStreamingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceStreamingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceStreamingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceStreamingResponse}, {}};

static void InitDefaultsCMsgRemoteDeviceProofRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceProofRequest_default_instance_;
    new (ptr) ::CMsgRemoteDeviceProofRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceProofRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceProofRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceProofRequest}, {}};

static void InitDefaultsCMsgRemoteDeviceProofResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRemoteDeviceProofResponse_default_instance_;
    new (ptr) ::CMsgRemoteDeviceProofResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRemoteDeviceProofResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRemoteDeviceProofResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRemoteDeviceProofResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteClientBroadcastHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteClientBroadcastStatus_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteClientBroadcastStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteClientBroadcastDiscovery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteClientBroadcastClientIDDeconflict.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceAuthorizationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceAuthorizationCancelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceAuthorizationResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceStreamingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceStreamingCancelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceStreamingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceProofRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRemoteDeviceProofResponse.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastHeader, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastHeader, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastHeader, instance_id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus_User, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus_User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus_User, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus_User, auth_key_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, min_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, connect_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, enabled_services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, ostype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, is64bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, euniverse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, screen_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, games_running_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, mac_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, download_lan_peer_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, broadcasting_active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, vr_active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastStatus, content_cache_port_),
  1,
  2,
  3,
  0,
  4,
  5,
  8,
  ~0u,
  6,
  7,
  9,
  10,
  ~0u,
  12,
  11,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastDiscovery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastDiscovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastDiscovery, seq_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastDiscovery, client_ids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastClientIDDeconflict, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastClientIDDeconflict, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteClientBroadcastClientIDDeconflict, client_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, device_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, device_serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket, device_provisioning_id_),
  0,
  5,
  1,
  6,
  7,
  2,
  3,
  4,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest, device_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationRequest, encrypted_request_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationCancelRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceAuthorizationResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, maximum_resolution_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, maximum_resolution_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, audio_channel_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, device_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, stream_desktop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, device_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, enable_video_streaming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, enable_audio_streaming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, enable_input_streaming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingRequest, network_test_),
  3,
  4,
  5,
  8,
  0,
  6,
  1,
  2,
  9,
  10,
  11,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingCancelRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingCancelRequest, request_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, encrypted_session_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceStreamingResponse, virtualhere_licensed_device_count_obsolete_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceProofRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceProofRequest, challenge_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceProofResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRemoteDeviceProofResponse, response_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::CMsgRemoteClientBroadcastHeader)},
  { 11, 18, sizeof(::CMsgRemoteClientBroadcastStatus_User)},
  { 20, 42, sizeof(::CMsgRemoteClientBroadcastStatus)},
  { 59, 66, sizeof(::CMsgRemoteClientBroadcastDiscovery)},
  { 68, 74, sizeof(::CMsgRemoteClientBroadcastClientIDDeconflict)},
  { 75, 89, sizeof(::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket)},
  { 98, 106, sizeof(::CMsgRemoteDeviceAuthorizationRequest)},
  { 109, 114, sizeof(::CMsgRemoteDeviceAuthorizationCancelRequest)},
  { 114, 120, sizeof(::CMsgRemoteDeviceAuthorizationResponse)},
  { 121, 138, sizeof(::CMsgRemoteDeviceStreamingRequest)},
  { 150, 156, sizeof(::CMsgRemoteDeviceStreamingCancelRequest)},
  { 157, 167, sizeof(::CMsgRemoteDeviceStreamingResponse)},
  { 172, 178, sizeof(::CMsgRemoteDeviceProofRequest)},
  { 179, 185, sizeof(::CMsgRemoteDeviceProofResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteClientBroadcastHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteClientBroadcastStatus_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteClientBroadcastStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteClientBroadcastDiscovery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteClientBroadcastClientIDDeconflict_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceAuthorizationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceAuthorizationCancelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceAuthorizationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceStreamingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceStreamingCancelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceStreamingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceProofRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRemoteDeviceProofResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_remoteclient_discovery.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*steammessages_remoteclient_discovery.p"
      "roto\"\235\001\n\037CMsgRemoteClientBroadcastHeader"
      "\022\021\n\tclient_id\030\001 \001(\004\022R\n\010msg_type\030\002 \001(\0162\032."
      "ERemoteClientBroadcastMsg:$k_ERemoteClie"
      "ntBroadcastMsgDiscovery\022\023\n\013instance_id\030\003"
      " \001(\004\"\360\003\n\037CMsgRemoteClientBroadcastStatus"
      "\022\017\n\007version\030\001 \001(\005\022\023\n\013min_version\030\002 \001(\005\022\024"
      "\n\014connect_port\030\003 \001(\r\022\020\n\010hostname\030\004 \001(\t\022\030"
      "\n\020enabled_services\030\006 \001(\r\022\021\n\006ostype\030\007 \001(\005"
      ":\0010\022\026\n\007is64bit\030\010 \001(\010:\005false\0224\n\005users\030\t \003"
      "(\0132%.CMsgRemoteClientBroadcastStatus.Use"
      "r\022\021\n\teuniverse\030\013 \001(\005\022\021\n\ttimestamp\030\014 \001(\r\022"
      "\025\n\rscreen_locked\030\r \001(\010\022\025\n\rgames_running\030"
      "\016 \001(\010\022\025\n\rmac_addresses\030\017 \003(\t\022\037\n\027download"
      "_lan_peer_group\030\020 \001(\r\022\033\n\023broadcasting_ac"
      "tive\030\021 \001(\010\022\021\n\tvr_active\030\022 \001(\010\022\032\n\022content"
      "_cache_port\030\023 \001(\r\032,\n\004User\022\017\n\007steamid\030\001 \001"
      "(\006\022\023\n\013auth_key_id\030\002 \001(\r\"I\n\"CMsgRemoteCli"
      "entBroadcastDiscovery\022\017\n\007seq_num\030\001 \001(\r\022\022"
      "\n\nclient_ids\030\002 \003(\004\"A\n+CMsgRemoteClientBr"
      "oadcastClientIDDeconflict\022\022\n\nclient_ids\030"
      "\002 \003(\004\"\317\003\n$CMsgRemoteDeviceAuthorizationR"
      "equest\022\024\n\014device_token\030\001 \002(\014\022\023\n\013device_n"
      "ame\030\002 \001(\t\022\031\n\021encrypted_request\030\003 \002(\014\032\247\002\n"
      "\021CKeyEscrow_Ticket\022\020\n\010password\030\001 \001(\014\022\022\n\n"
      "identifier\030\002 \001(\004\022\017\n\007payload\030\003 \001(\014\022\021\n\ttim"
      "estamp\030\004 \001(\r\022f\n\005usage\030\005 \001(\01625.CMsgRemote"
      "DeviceAuthorizationRequest.EKeyEscrowUsa"
      "ge: k_EKeyEscrowUsageStreamingDevice\022\023\n\013"
      "device_name\030\006 \001(\t\022\024\n\014device_model\030\007 \001(\t\022"
      "\025\n\rdevice_serial\030\010 \001(\t\022\036\n\026device_provisi"
      "oning_id\030\t \001(\r\"7\n\017EKeyEscrowUsage\022$\n k_E"
      "KeyEscrowUsageStreamingDevice\020\000\",\n*CMsgR"
      "emoteDeviceAuthorizationCancelRequest\"\177\n"
      "%CMsgRemoteDeviceAuthorizationResponse\022V"
      "\n\006result\030\001 \002(\0162!.ERemoteDeviceAuthorizat"
      "ionResult:#k_ERemoteDeviceAuthorizationS"
      "uccess\"\355\002\n CMsgRemoteDeviceStreamingRequ"
      "est\022\022\n\nrequest_id\030\001 \002(\r\022\034\n\024maximum_resol"
      "ution_x\030\002 \001(\005\022\034\n\024maximum_resolution_y\030\003 "
      "\001(\005\022\036\n\023audio_channel_count\030\004 \001(\005:\0012\022\026\n\016d"
      "evice_version\030\005 \001(\t\022\026\n\016stream_desktop\030\006 "
      "\001(\010\022\024\n\014device_token\030\007 \001(\014\022\013\n\003pin\030\010 \001(\014\022$"
      "\n\026enable_video_streaming\030\t \001(\010:\004true\022$\n\026"
      "enable_audio_streaming\030\n \001(\010:\004true\022$\n\026en"
      "able_input_streaming\030\013 \001(\010:\004true\022\024\n\014netw"
      "ork_test\030\014 \001(\010\"<\n&CMsgRemoteDeviceStream"
      "ingCancelRequest\022\022\n\nrequest_id\030\001 \002(\r\"\350\001\n"
      "!CMsgRemoteDeviceStreamingResponse\022\022\n\nre"
      "quest_id\030\001 \002(\r\022N\n\006result\030\002 \002(\0162\035.ERemote"
      "DeviceStreamingResult:\037k_ERemoteDeviceSt"
      "reamingSuccess\022\014\n\004port\030\003 \001(\r\022\035\n\025encrypte"
      "d_session_key\030\004 \001(\014\0222\n*virtualhere_licen"
      "sed_device_count_OBSOLETE\030\005 \001(\005\"1\n\034CMsgR"
      "emoteDeviceProofRequest\022\021\n\tchallenge\030\001 \002"
      "(\014\"1\n\035CMsgRemoteDeviceProofResponse\022\020\n\010r"
      "esponse\030\001 \002(\014*\202\004\n\031ERemoteClientBroadcast"
      "Msg\022(\n$k_ERemoteClientBroadcastMsgDiscov"
      "ery\020\000\022%\n!k_ERemoteClientBroadcastMsgStat"
      "us\020\001\022&\n\"k_ERemoteClientBroadcastMsgOffli"
      "ne\020\002\022\'\n#k_ERemoteDeviceAuthorizationRequ"
      "est\020\003\022(\n$k_ERemoteDeviceAuthorizationRes"
      "ponse\020\004\022#\n\037k_ERemoteDeviceStreamingReque"
      "st\020\005\022$\n k_ERemoteDeviceStreamingResponse"
      "\020\006\022\037\n\033k_ERemoteDeviceProofRequest\020\007\022 \n\034k"
      "_ERemoteDeviceProofResponse\020\010\022-\n)k_ERemo"
      "teDeviceAuthorizationCancelRequest\020\t\022)\n%"
      "k_ERemoteDeviceStreamingCancelRequest\020\n\022"
      "1\n-k_ERemoteClientBroadcastMsgClientIDDe"
      "conflict\020\013*\327\001\n\024ERemoteClientService\022\036\n\032k"
      "_ERemoteClientServiceNone\020\000\022\'\n#k_ERemote"
      "ClientServiceRemoteControl\020\001\022\'\n#k_ERemot"
      "eClientServiceGameStreaming\020\002\022%\n!k_ERemo"
      "teClientServiceSiteLicense\020\004\022&\n\"k_ERemot"
      "eClientServiceContentCache\020\010*\227\003\n ERemote"
      "DeviceAuthorizationResult\022\'\n#k_ERemoteDe"
      "viceAuthorizationSuccess\020\000\022&\n\"k_ERemoteD"
      "eviceAuthorizationDenied\020\001\022+\n\'k_ERemoteD"
      "eviceAuthorizationNotLoggedIn\020\002\022\'\n#k_ERe"
      "moteDeviceAuthorizationOffline\020\003\022$\n k_ER"
      "emoteDeviceAuthorizationBusy\020\004\022*\n&k_ERem"
      "oteDeviceAuthorizationInProgress\020\005\022(\n$k_"
      "ERemoteDeviceAuthorizationTimedOut\020\006\022&\n\""
      "k_ERemoteDeviceAuthorizationFailed\020\007\022(\n$"
      "k_ERemoteDeviceAuthorizationCanceled\020\010*\201"
      "\004\n\034ERemoteDeviceStreamingResult\022#\n\037k_ERe"
      "moteDeviceStreamingSuccess\020\000\022(\n$k_ERemot"
      "eDeviceStreamingUnauthorized\020\001\022(\n$k_ERem"
      "oteDeviceStreamingScreenLocked\020\002\022\"\n\036k_ER"
      "emoteDeviceStreamingFailed\020\003\022 \n\034k_ERemot"
      "eDeviceStreamingBusy\020\004\022&\n\"k_ERemoteDevic"
      "eStreamingInProgress\020\005\022$\n k_ERemoteDevic"
      "eStreamingCanceled\020\006\022/\n+k_ERemoteDeviceS"
      "treamingDriversNotInstalled\020\007\022$\n k_ERemo"
      "teDeviceStreamingDisabled\020\010\022.\n*k_ERemote"
      "DeviceStreamingBroadcastingActive\020\t\022$\n k"
      "_ERemoteDeviceStreamingVRActive\020\n\022\'\n#k_E"
      "RemoteDeviceStreamingPINRequired\020\013B\002H\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3918);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_remoteclient_discovery.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto
const ::google::protobuf::EnumDescriptor* CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage_descriptor() {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_enum_descriptors[0];
}
bool CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage CMsgRemoteDeviceAuthorizationRequest::k_EKeyEscrowUsageStreamingDevice;
const CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage CMsgRemoteDeviceAuthorizationRequest::EKeyEscrowUsage_MIN;
const CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage CMsgRemoteDeviceAuthorizationRequest::EKeyEscrowUsage_MAX;
const int CMsgRemoteDeviceAuthorizationRequest::EKeyEscrowUsage_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ERemoteClientBroadcastMsg_descriptor() {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_enum_descriptors[1];
}
bool ERemoteClientBroadcastMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERemoteClientService_descriptor() {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_enum_descriptors[2];
}
bool ERemoteClientService_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERemoteDeviceAuthorizationResult_descriptor() {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_enum_descriptors[3];
}
bool ERemoteDeviceAuthorizationResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERemoteDeviceStreamingResult_descriptor() {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_enum_descriptors[4];
}
bool ERemoteDeviceStreamingResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgRemoteClientBroadcastHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteClientBroadcastHeader::kClientIdFieldNumber;
const int CMsgRemoteClientBroadcastHeader::kMsgTypeFieldNumber;
const int CMsgRemoteClientBroadcastHeader::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteClientBroadcastHeader::CMsgRemoteClientBroadcastHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteClientBroadcastHeader)
}
CMsgRemoteClientBroadcastHeader::CMsgRemoteClientBroadcastHeader(const CMsgRemoteClientBroadcastHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_id_, &from.client_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&client_id_)) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteClientBroadcastHeader)
}

void CMsgRemoteClientBroadcastHeader::SharedCtor() {
  ::memset(&client_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&client_id_)) + sizeof(msg_type_));
}

CMsgRemoteClientBroadcastHeader::~CMsgRemoteClientBroadcastHeader() {
  // @@protoc_insertion_point(destructor:CMsgRemoteClientBroadcastHeader)
  SharedDtor();
}

void CMsgRemoteClientBroadcastHeader::SharedDtor() {
}

void CMsgRemoteClientBroadcastHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteClientBroadcastHeader::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteClientBroadcastHeader& CMsgRemoteClientBroadcastHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastHeader.base);
  return *internal_default_instance();
}


void CMsgRemoteClientBroadcastHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteClientBroadcastHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&client_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msg_type_) -
        reinterpret_cast<char*>(&client_id_)) + sizeof(msg_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteClientBroadcastHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteClientBroadcastHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_client_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ERemoteClientBroadcastMsg msg_type = 2 [default = k_ERemoteClientBroadcastMsgDiscovery];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ERemoteClientBroadcastMsg_IsValid(value)) {
            set_msg_type(static_cast< ::ERemoteClientBroadcastMsg >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 instance_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_instance_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteClientBroadcastHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteClientBroadcastHeader)
  return false;
#undef DO_
}

void CMsgRemoteClientBroadcastHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteClientBroadcastHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->client_id(), output);
  }

  // optional .ERemoteClientBroadcastMsg msg_type = 2 [default = k_ERemoteClientBroadcastMsgDiscovery];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msg_type(), output);
  }

  // optional uint64 instance_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->instance_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteClientBroadcastHeader)
}

::google::protobuf::uint8* CMsgRemoteClientBroadcastHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteClientBroadcastHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->client_id(), target);
  }

  // optional .ERemoteClientBroadcastMsg msg_type = 2 [default = k_ERemoteClientBroadcastMsgDiscovery];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msg_type(), target);
  }

  // optional uint64 instance_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->instance_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteClientBroadcastHeader)
  return target;
}

size_t CMsgRemoteClientBroadcastHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteClientBroadcastHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 client_id = 1;
    if (has_client_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->client_id());
    }

    // optional uint64 instance_id = 3;
    if (has_instance_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->instance_id());
    }

    // optional .ERemoteClientBroadcastMsg msg_type = 2 [default = k_ERemoteClientBroadcastMsgDiscovery];
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteClientBroadcastHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteClientBroadcastHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteClientBroadcastHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteClientBroadcastHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteClientBroadcastHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteClientBroadcastHeader)
    MergeFrom(*source);
  }
}

void CMsgRemoteClientBroadcastHeader::MergeFrom(const CMsgRemoteClientBroadcastHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteClientBroadcastHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      client_id_ = from.client_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      instance_id_ = from.instance_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRemoteClientBroadcastHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteClientBroadcastHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteClientBroadcastHeader::CopyFrom(const CMsgRemoteClientBroadcastHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteClientBroadcastHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteClientBroadcastHeader::IsInitialized() const {
  return true;
}

void CMsgRemoteClientBroadcastHeader::Swap(CMsgRemoteClientBroadcastHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteClientBroadcastHeader::InternalSwap(CMsgRemoteClientBroadcastHeader* other) {
  using std::swap;
  swap(client_id_, other->client_id_);
  swap(instance_id_, other->instance_id_);
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteClientBroadcastHeader::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteClientBroadcastStatus_User::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteClientBroadcastStatus_User::kSteamidFieldNumber;
const int CMsgRemoteClientBroadcastStatus_User::kAuthKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteClientBroadcastStatus_User::CMsgRemoteClientBroadcastStatus_User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastStatus_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteClientBroadcastStatus.User)
}
CMsgRemoteClientBroadcastStatus_User::CMsgRemoteClientBroadcastStatus_User(const CMsgRemoteClientBroadcastStatus_User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_key_id_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(auth_key_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteClientBroadcastStatus.User)
}

void CMsgRemoteClientBroadcastStatus_User::SharedCtor() {
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_key_id_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(auth_key_id_));
}

CMsgRemoteClientBroadcastStatus_User::~CMsgRemoteClientBroadcastStatus_User() {
  // @@protoc_insertion_point(destructor:CMsgRemoteClientBroadcastStatus.User)
  SharedDtor();
}

void CMsgRemoteClientBroadcastStatus_User::SharedDtor() {
}

void CMsgRemoteClientBroadcastStatus_User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteClientBroadcastStatus_User::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteClientBroadcastStatus_User& CMsgRemoteClientBroadcastStatus_User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastStatus_User.base);
  return *internal_default_instance();
}


void CMsgRemoteClientBroadcastStatus_User::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteClientBroadcastStatus.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_key_id_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(auth_key_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteClientBroadcastStatus_User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteClientBroadcastStatus.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_key_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_auth_key_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteClientBroadcastStatus.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteClientBroadcastStatus.User)
  return false;
#undef DO_
}

void CMsgRemoteClientBroadcastStatus_User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteClientBroadcastStatus.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 auth_key_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->auth_key_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteClientBroadcastStatus.User)
}

::google::protobuf::uint8* CMsgRemoteClientBroadcastStatus_User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteClientBroadcastStatus.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 auth_key_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->auth_key_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteClientBroadcastStatus.User)
  return target;
}

size_t CMsgRemoteClientBroadcastStatus_User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteClientBroadcastStatus.User)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 auth_key_id = 2;
    if (has_auth_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_key_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteClientBroadcastStatus_User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteClientBroadcastStatus.User)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteClientBroadcastStatus_User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteClientBroadcastStatus_User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteClientBroadcastStatus.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteClientBroadcastStatus.User)
    MergeFrom(*source);
  }
}

void CMsgRemoteClientBroadcastStatus_User::MergeFrom(const CMsgRemoteClientBroadcastStatus_User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteClientBroadcastStatus.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      auth_key_id_ = from.auth_key_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRemoteClientBroadcastStatus_User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteClientBroadcastStatus.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteClientBroadcastStatus_User::CopyFrom(const CMsgRemoteClientBroadcastStatus_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteClientBroadcastStatus.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteClientBroadcastStatus_User::IsInitialized() const {
  return true;
}

void CMsgRemoteClientBroadcastStatus_User::Swap(CMsgRemoteClientBroadcastStatus_User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteClientBroadcastStatus_User::InternalSwap(CMsgRemoteClientBroadcastStatus_User* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(auth_key_id_, other->auth_key_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteClientBroadcastStatus_User::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteClientBroadcastStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteClientBroadcastStatus::kVersionFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kMinVersionFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kConnectPortFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kHostnameFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kEnabledServicesFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kOstypeFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kIs64BitFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kUsersFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kEuniverseFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kTimestampFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kScreenLockedFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kGamesRunningFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kMacAddressesFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kDownloadLanPeerGroupFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kBroadcastingActiveFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kVrActiveFieldNumber;
const int CMsgRemoteClientBroadcastStatus::kContentCachePortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteClientBroadcastStatus::CMsgRemoteClientBroadcastStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteClientBroadcastStatus)
}
CMsgRemoteClientBroadcastStatus::CMsgRemoteClientBroadcastStatus(const CMsgRemoteClientBroadcastStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      users_(from.users_),
      mac_addresses_(from.mac_addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&content_cache_port_) -
    reinterpret_cast<char*>(&version_)) + sizeof(content_cache_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteClientBroadcastStatus)
}

void CMsgRemoteClientBroadcastStatus::SharedCtor() {
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_cache_port_) -
      reinterpret_cast<char*>(&version_)) + sizeof(content_cache_port_));
}

CMsgRemoteClientBroadcastStatus::~CMsgRemoteClientBroadcastStatus() {
  // @@protoc_insertion_point(destructor:CMsgRemoteClientBroadcastStatus)
  SharedDtor();
}

void CMsgRemoteClientBroadcastStatus::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteClientBroadcastStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteClientBroadcastStatus::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteClientBroadcastStatus& CMsgRemoteClientBroadcastStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastStatus.base);
  return *internal_default_instance();
}


void CMsgRemoteClientBroadcastStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteClientBroadcastStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  mac_addresses_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    hostname_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&version_)) + sizeof(timestamp_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&is64bit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&content_cache_port_) -
        reinterpret_cast<char*>(&is64bit_)) + sizeof(content_cache_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteClientBroadcastStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteClientBroadcastStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_min_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 connect_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_connect_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connect_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hostname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteClientBroadcastStatus.hostname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 enabled_services = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_enabled_services();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enabled_services_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ostype = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_ostype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ostype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is64bit = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_is64bit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is64bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgRemoteClientBroadcastStatus.User users = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 euniverse = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_euniverse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &euniverse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool screen_locked = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_screen_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &screen_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool games_running = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_games_running();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &games_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mac_addresses = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mac_addresses()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac_addresses(this->mac_addresses_size() - 1).data(),
            static_cast<int>(this->mac_addresses(this->mac_addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteClientBroadcastStatus.mac_addresses");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_lan_peer_group = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_download_lan_peer_group();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_lan_peer_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool broadcasting_active = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_broadcasting_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &broadcasting_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vr_active = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_vr_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vr_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 content_cache_port = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_content_cache_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_cache_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteClientBroadcastStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteClientBroadcastStatus)
  return false;
#undef DO_
}

void CMsgRemoteClientBroadcastStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteClientBroadcastStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional int32 min_version = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_version(), output);
  }

  // optional uint32 connect_port = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->connect_port(), output);
  }

  // optional string hostname = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteClientBroadcastStatus.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hostname(), output);
  }

  // optional uint32 enabled_services = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->enabled_services(), output);
  }

  // optional int32 ostype = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ostype(), output);
  }

  // optional bool is64bit = 8 [default = false];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is64bit(), output);
  }

  // repeated .CMsgRemoteClientBroadcastStatus.User users = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->users(static_cast<int>(i)),
      output);
  }

  // optional int32 euniverse = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->euniverse(), output);
  }

  // optional uint32 timestamp = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->timestamp(), output);
  }

  // optional bool screen_locked = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->screen_locked(), output);
  }

  // optional bool games_running = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->games_running(), output);
  }

  // repeated string mac_addresses = 15;
  for (int i = 0, n = this->mac_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_addresses(i).data(), static_cast<int>(this->mac_addresses(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteClientBroadcastStatus.mac_addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->mac_addresses(i), output);
  }

  // optional uint32 download_lan_peer_group = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->download_lan_peer_group(), output);
  }

  // optional bool broadcasting_active = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->broadcasting_active(), output);
  }

  // optional bool vr_active = 18;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->vr_active(), output);
  }

  // optional uint32 content_cache_port = 19;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->content_cache_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteClientBroadcastStatus)
}

::google::protobuf::uint8* CMsgRemoteClientBroadcastStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteClientBroadcastStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional int32 min_version = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_version(), target);
  }

  // optional uint32 connect_port = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->connect_port(), target);
  }

  // optional string hostname = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteClientBroadcastStatus.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hostname(), target);
  }

  // optional uint32 enabled_services = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->enabled_services(), target);
  }

  // optional int32 ostype = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ostype(), target);
  }

  // optional bool is64bit = 8 [default = false];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is64bit(), target);
  }

  // repeated .CMsgRemoteClientBroadcastStatus.User users = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->users(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 euniverse = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->euniverse(), target);
  }

  // optional uint32 timestamp = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->timestamp(), target);
  }

  // optional bool screen_locked = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->screen_locked(), target);
  }

  // optional bool games_running = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->games_running(), target);
  }

  // repeated string mac_addresses = 15;
  for (int i = 0, n = this->mac_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_addresses(i).data(), static_cast<int>(this->mac_addresses(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteClientBroadcastStatus.mac_addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->mac_addresses(i), target);
  }

  // optional uint32 download_lan_peer_group = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->download_lan_peer_group(), target);
  }

  // optional bool broadcasting_active = 17;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->broadcasting_active(), target);
  }

  // optional bool vr_active = 18;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->vr_active(), target);
  }

  // optional uint32 content_cache_port = 19;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->content_cache_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteClientBroadcastStatus)
  return target;
}

size_t CMsgRemoteClientBroadcastStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteClientBroadcastStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgRemoteClientBroadcastStatus.User users = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // repeated string mac_addresses = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mac_addresses_size());
  for (int i = 0, n = this->mac_addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mac_addresses(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string hostname = 4;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int32 min_version = 2;
    if (has_min_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_version());
    }

    // optional uint32 connect_port = 3;
    if (has_connect_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connect_port());
    }

    // optional uint32 enabled_services = 6;
    if (has_enabled_services()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enabled_services());
    }

    // optional int32 ostype = 7 [default = 0];
    if (has_ostype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ostype());
    }

    // optional int32 euniverse = 11;
    if (has_euniverse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->euniverse());
    }

    // optional uint32 timestamp = 12;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional bool is64bit = 8 [default = false];
    if (has_is64bit()) {
      total_size += 1 + 1;
    }

    // optional bool screen_locked = 13;
    if (has_screen_locked()) {
      total_size += 1 + 1;
    }

    // optional bool games_running = 14;
    if (has_games_running()) {
      total_size += 1 + 1;
    }

    // optional bool broadcasting_active = 17;
    if (has_broadcasting_active()) {
      total_size += 2 + 1;
    }

    // optional uint32 download_lan_peer_group = 16;
    if (has_download_lan_peer_group()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_lan_peer_group());
    }

    // optional bool vr_active = 18;
    if (has_vr_active()) {
      total_size += 2 + 1;
    }

    // optional uint32 content_cache_port = 19;
    if (has_content_cache_port()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->content_cache_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteClientBroadcastStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteClientBroadcastStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteClientBroadcastStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteClientBroadcastStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteClientBroadcastStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteClientBroadcastStatus)
    MergeFrom(*source);
  }
}

void CMsgRemoteClientBroadcastStatus::MergeFrom(const CMsgRemoteClientBroadcastStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteClientBroadcastStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  mac_addresses_.MergeFrom(from.mac_addresses_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      min_version_ = from.min_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      connect_port_ = from.connect_port_;
    }
    if (cached_has_bits & 0x00000010u) {
      enabled_services_ = from.enabled_services_;
    }
    if (cached_has_bits & 0x00000020u) {
      ostype_ = from.ostype_;
    }
    if (cached_has_bits & 0x00000040u) {
      euniverse_ = from.euniverse_;
    }
    if (cached_has_bits & 0x00000080u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      is64bit_ = from.is64bit_;
    }
    if (cached_has_bits & 0x00000200u) {
      screen_locked_ = from.screen_locked_;
    }
    if (cached_has_bits & 0x00000400u) {
      games_running_ = from.games_running_;
    }
    if (cached_has_bits & 0x00000800u) {
      broadcasting_active_ = from.broadcasting_active_;
    }
    if (cached_has_bits & 0x00001000u) {
      download_lan_peer_group_ = from.download_lan_peer_group_;
    }
    if (cached_has_bits & 0x00002000u) {
      vr_active_ = from.vr_active_;
    }
    if (cached_has_bits & 0x00004000u) {
      content_cache_port_ = from.content_cache_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRemoteClientBroadcastStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteClientBroadcastStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteClientBroadcastStatus::CopyFrom(const CMsgRemoteClientBroadcastStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteClientBroadcastStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteClientBroadcastStatus::IsInitialized() const {
  return true;
}

void CMsgRemoteClientBroadcastStatus::Swap(CMsgRemoteClientBroadcastStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteClientBroadcastStatus::InternalSwap(CMsgRemoteClientBroadcastStatus* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  mac_addresses_.InternalSwap(CastToBase(&other->mac_addresses_));
  hostname_.Swap(&other->hostname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(min_version_, other->min_version_);
  swap(connect_port_, other->connect_port_);
  swap(enabled_services_, other->enabled_services_);
  swap(ostype_, other->ostype_);
  swap(euniverse_, other->euniverse_);
  swap(timestamp_, other->timestamp_);
  swap(is64bit_, other->is64bit_);
  swap(screen_locked_, other->screen_locked_);
  swap(games_running_, other->games_running_);
  swap(broadcasting_active_, other->broadcasting_active_);
  swap(download_lan_peer_group_, other->download_lan_peer_group_);
  swap(vr_active_, other->vr_active_);
  swap(content_cache_port_, other->content_cache_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteClientBroadcastStatus::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteClientBroadcastDiscovery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteClientBroadcastDiscovery::kSeqNumFieldNumber;
const int CMsgRemoteClientBroadcastDiscovery::kClientIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteClientBroadcastDiscovery::CMsgRemoteClientBroadcastDiscovery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastDiscovery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteClientBroadcastDiscovery)
}
CMsgRemoteClientBroadcastDiscovery::CMsgRemoteClientBroadcastDiscovery(const CMsgRemoteClientBroadcastDiscovery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      client_ids_(from.client_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seq_num_ = from.seq_num_;
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteClientBroadcastDiscovery)
}

void CMsgRemoteClientBroadcastDiscovery::SharedCtor() {
  seq_num_ = 0u;
}

CMsgRemoteClientBroadcastDiscovery::~CMsgRemoteClientBroadcastDiscovery() {
  // @@protoc_insertion_point(destructor:CMsgRemoteClientBroadcastDiscovery)
  SharedDtor();
}

void CMsgRemoteClientBroadcastDiscovery::SharedDtor() {
}

void CMsgRemoteClientBroadcastDiscovery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteClientBroadcastDiscovery::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteClientBroadcastDiscovery& CMsgRemoteClientBroadcastDiscovery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastDiscovery.base);
  return *internal_default_instance();
}


void CMsgRemoteClientBroadcastDiscovery::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteClientBroadcastDiscovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_ids_.Clear();
  seq_num_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteClientBroadcastDiscovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteClientBroadcastDiscovery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 seq_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seq_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 client_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_client_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_client_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteClientBroadcastDiscovery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteClientBroadcastDiscovery)
  return false;
#undef DO_
}

void CMsgRemoteClientBroadcastDiscovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteClientBroadcastDiscovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 seq_num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq_num(), output);
  }

  // repeated uint64 client_ids = 2;
  for (int i = 0, n = this->client_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->client_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteClientBroadcastDiscovery)
}

::google::protobuf::uint8* CMsgRemoteClientBroadcastDiscovery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteClientBroadcastDiscovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 seq_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seq_num(), target);
  }

  // repeated uint64 client_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->client_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteClientBroadcastDiscovery)
  return target;
}

size_t CMsgRemoteClientBroadcastDiscovery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteClientBroadcastDiscovery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 client_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->client_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->client_ids_size());
    total_size += data_size;
  }

  // optional uint32 seq_num = 1;
  if (has_seq_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteClientBroadcastDiscovery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteClientBroadcastDiscovery)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteClientBroadcastDiscovery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteClientBroadcastDiscovery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteClientBroadcastDiscovery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteClientBroadcastDiscovery)
    MergeFrom(*source);
  }
}

void CMsgRemoteClientBroadcastDiscovery::MergeFrom(const CMsgRemoteClientBroadcastDiscovery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteClientBroadcastDiscovery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_ids_.MergeFrom(from.client_ids_);
  if (from.has_seq_num()) {
    set_seq_num(from.seq_num());
  }
}

void CMsgRemoteClientBroadcastDiscovery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteClientBroadcastDiscovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteClientBroadcastDiscovery::CopyFrom(const CMsgRemoteClientBroadcastDiscovery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteClientBroadcastDiscovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteClientBroadcastDiscovery::IsInitialized() const {
  return true;
}

void CMsgRemoteClientBroadcastDiscovery::Swap(CMsgRemoteClientBroadcastDiscovery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteClientBroadcastDiscovery::InternalSwap(CMsgRemoteClientBroadcastDiscovery* other) {
  using std::swap;
  client_ids_.InternalSwap(&other->client_ids_);
  swap(seq_num_, other->seq_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteClientBroadcastDiscovery::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteClientBroadcastClientIDDeconflict::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteClientBroadcastClientIDDeconflict::kClientIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteClientBroadcastClientIDDeconflict::CMsgRemoteClientBroadcastClientIDDeconflict()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastClientIDDeconflict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteClientBroadcastClientIDDeconflict)
}
CMsgRemoteClientBroadcastClientIDDeconflict::CMsgRemoteClientBroadcastClientIDDeconflict(const CMsgRemoteClientBroadcastClientIDDeconflict& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      client_ids_(from.client_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteClientBroadcastClientIDDeconflict)
}

void CMsgRemoteClientBroadcastClientIDDeconflict::SharedCtor() {
}

CMsgRemoteClientBroadcastClientIDDeconflict::~CMsgRemoteClientBroadcastClientIDDeconflict() {
  // @@protoc_insertion_point(destructor:CMsgRemoteClientBroadcastClientIDDeconflict)
  SharedDtor();
}

void CMsgRemoteClientBroadcastClientIDDeconflict::SharedDtor() {
}

void CMsgRemoteClientBroadcastClientIDDeconflict::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteClientBroadcastClientIDDeconflict::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteClientBroadcastClientIDDeconflict& CMsgRemoteClientBroadcastClientIDDeconflict::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteClientBroadcastClientIDDeconflict.base);
  return *internal_default_instance();
}


void CMsgRemoteClientBroadcastClientIDDeconflict::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteClientBroadcastClientIDDeconflict::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 client_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_client_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_client_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteClientBroadcastClientIDDeconflict)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteClientBroadcastClientIDDeconflict)
  return false;
#undef DO_
}

void CMsgRemoteClientBroadcastClientIDDeconflict::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 client_ids = 2;
  for (int i = 0, n = this->client_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->client_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteClientBroadcastClientIDDeconflict)
}

::google::protobuf::uint8* CMsgRemoteClientBroadcastClientIDDeconflict::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 client_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->client_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteClientBroadcastClientIDDeconflict)
  return target;
}

size_t CMsgRemoteClientBroadcastClientIDDeconflict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 client_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->client_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->client_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteClientBroadcastClientIDDeconflict::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteClientBroadcastClientIDDeconflict* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteClientBroadcastClientIDDeconflict>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteClientBroadcastClientIDDeconflict)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteClientBroadcastClientIDDeconflict)
    MergeFrom(*source);
  }
}

void CMsgRemoteClientBroadcastClientIDDeconflict::MergeFrom(const CMsgRemoteClientBroadcastClientIDDeconflict& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_ids_.MergeFrom(from.client_ids_);
}

void CMsgRemoteClientBroadcastClientIDDeconflict::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteClientBroadcastClientIDDeconflict::CopyFrom(const CMsgRemoteClientBroadcastClientIDDeconflict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteClientBroadcastClientIDDeconflict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteClientBroadcastClientIDDeconflict::IsInitialized() const {
  return true;
}

void CMsgRemoteClientBroadcastClientIDDeconflict::Swap(CMsgRemoteClientBroadcastClientIDDeconflict* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteClientBroadcastClientIDDeconflict::InternalSwap(CMsgRemoteClientBroadcastClientIDDeconflict* other) {
  using std::swap;
  client_ids_.InternalSwap(&other->client_ids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteClientBroadcastClientIDDeconflict::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kPasswordFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kIdentifierFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kPayloadFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kTimestampFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kUsageFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kDeviceNameFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kDeviceModelFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kDeviceSerialFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::kDeviceProvisioningIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
}
CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket(const CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_model()) {
    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  device_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_serial()) {
    device_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_serial_);
  }
  ::memcpy(&identifier_, &from.identifier_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_provisioning_id_) -
    reinterpret_cast<char*>(&identifier_)) + sizeof(device_provisioning_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&identifier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_provisioning_id_) -
      reinterpret_cast<char*>(&identifier_)) + sizeof(device_provisioning_id_));
}

CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::~CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  SharedDtor();
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket& CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      payload_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      device_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      device_model_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      device_serial_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&identifier_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usage_) -
        reinterpret_cast<char*>(&identifier_)) + sizeof(usage_));
  }
  device_provisioning_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 identifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_identifier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage usage = 5 [default = k_EKeyEscrowUsageStreamingDevice];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage_IsValid(value)) {
            set_usage(static_cast< ::CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_model = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_model().data(), static_cast<int>(this->device_model().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_serial = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_serial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_serial().data(), static_cast<int>(this->device_serial().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_serial");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 device_provisioning_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_device_provisioning_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_provisioning_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  return false;
#undef DO_
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->password(), output);
  }

  // optional uint64 identifier = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->identifier(), output);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->payload(), output);
  }

  // optional uint32 timestamp = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->timestamp(), output);
  }

  // optional .CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage usage = 5 [default = k_EKeyEscrowUsageStreamingDevice];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->usage(), output);
  }

  // optional string device_name = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device_name(), output);
  }

  // optional string device_model = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_model().data(), static_cast<int>(this->device_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->device_model(), output);
  }

  // optional string device_serial = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_serial().data(), static_cast<int>(this->device_serial().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_serial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->device_serial(), output);
  }

  // optional uint32 device_provisioning_id = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->device_provisioning_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
}

::google::protobuf::uint8* CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes password = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->password(), target);
  }

  // optional uint64 identifier = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->identifier(), target);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->payload(), target);
  }

  // optional uint32 timestamp = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->timestamp(), target);
  }

  // optional .CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage usage = 5 [default = k_EKeyEscrowUsageStreamingDevice];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->usage(), target);
  }

  // optional string device_name = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device_name(), target);
  }

  // optional string device_model = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_model().data(), static_cast<int>(this->device_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->device_model(), target);
  }

  // optional string device_serial = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_serial().data(), static_cast<int>(this->device_serial().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.device_serial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->device_serial(), target);
  }

  // optional uint32 device_provisioning_id = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->device_provisioning_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  return target;
}

size_t CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->password());
    }

    // optional bytes payload = 3;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }

    // optional string device_name = 6;
    if (has_device_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_name());
    }

    // optional string device_model = 7;
    if (has_device_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_model());
    }

    // optional string device_serial = 8;
    if (has_device_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_serial());
    }

    // optional uint64 identifier = 2;
    if (has_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->identifier());
    }

    // optional uint32 timestamp = 4;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional .CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage usage = 5 [default = k_EKeyEscrowUsageStreamingDevice];
    if (has_usage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->usage());
    }

  }
  // optional uint32 device_provisioning_id = 9;
  if (has_device_provisioning_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_provisioning_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::MergeFrom(const CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_device_name();
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_device_model();
      device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_device_serial();
      device_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_serial_);
    }
    if (cached_has_bits & 0x00000020u) {
      identifier_ = from.identifier_;
    }
    if (cached_has_bits & 0x00000040u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000080u) {
      usage_ = from.usage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_device_provisioning_id(from.device_provisioning_id());
  }
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::CopyFrom(const CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::IsInitialized() const {
  return true;
}

void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::Swap(CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::InternalSwap(CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket* other) {
  using std::swap;
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_model_.Swap(&other->device_model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_serial_.Swap(&other->device_serial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(identifier_, other->identifier_);
  swap(timestamp_, other->timestamp_);
  swap(usage_, other->usage_);
  swap(device_provisioning_id_, other->device_provisioning_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceAuthorizationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceAuthorizationRequest::kDeviceTokenFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest::kDeviceNameFieldNumber;
const int CMsgRemoteDeviceAuthorizationRequest::kEncryptedRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceAuthorizationRequest::CMsgRemoteDeviceAuthorizationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceAuthorizationRequest)
}
CMsgRemoteDeviceAuthorizationRequest::CMsgRemoteDeviceAuthorizationRequest(const CMsgRemoteDeviceAuthorizationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_token()) {
    device_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_token_);
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  encrypted_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encrypted_request()) {
    encrypted_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_request_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceAuthorizationRequest)
}

void CMsgRemoteDeviceAuthorizationRequest::SharedCtor() {
  device_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgRemoteDeviceAuthorizationRequest::~CMsgRemoteDeviceAuthorizationRequest() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceAuthorizationRequest)
  SharedDtor();
}

void CMsgRemoteDeviceAuthorizationRequest::SharedDtor() {
  device_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteDeviceAuthorizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceAuthorizationRequest::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceAuthorizationRequest& CMsgRemoteDeviceAuthorizationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationRequest.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceAuthorizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      device_token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      device_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      encrypted_request_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceAuthorizationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceAuthorizationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes device_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_device_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteDeviceAuthorizationRequest.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes encrypted_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encrypted_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceAuthorizationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceAuthorizationRequest)
  return false;
#undef DO_
}

void CMsgRemoteDeviceAuthorizationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes device_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->device_token(), output);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_name(), output);
  }

  // required bytes encrypted_request = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->encrypted_request(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceAuthorizationRequest)
}

::google::protobuf::uint8* CMsgRemoteDeviceAuthorizationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes device_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->device_token(), target);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceAuthorizationRequest.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_name(), target);
  }

  // required bytes encrypted_request = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->encrypted_request(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceAuthorizationRequest)
  return target;
}

size_t CMsgRemoteDeviceAuthorizationRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgRemoteDeviceAuthorizationRequest)
  size_t total_size = 0;

  if (has_device_token()) {
    // required bytes device_token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->device_token());
  }

  if (has_encrypted_request()) {
    // required bytes encrypted_request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->encrypted_request());
  }

  return total_size;
}
size_t CMsgRemoteDeviceAuthorizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceAuthorizationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required bytes device_token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->device_token());

    // required bytes encrypted_request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->encrypted_request());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string device_name = 2;
  if (has_device_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceAuthorizationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceAuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceAuthorizationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceAuthorizationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceAuthorizationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceAuthorizationRequest)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceAuthorizationRequest::MergeFrom(const CMsgRemoteDeviceAuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceAuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_token();
      device_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_token_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_device_name();
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_encrypted_request();
      encrypted_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_request_);
    }
  }
}

void CMsgRemoteDeviceAuthorizationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceAuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceAuthorizationRequest::CopyFrom(const CMsgRemoteDeviceAuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceAuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceAuthorizationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void CMsgRemoteDeviceAuthorizationRequest::Swap(CMsgRemoteDeviceAuthorizationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceAuthorizationRequest::InternalSwap(CMsgRemoteDeviceAuthorizationRequest* other) {
  using std::swap;
  device_token_.Swap(&other->device_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  encrypted_request_.Swap(&other->encrypted_request_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceAuthorizationRequest::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceAuthorizationCancelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceAuthorizationCancelRequest::CMsgRemoteDeviceAuthorizationCancelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationCancelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceAuthorizationCancelRequest)
}
CMsgRemoteDeviceAuthorizationCancelRequest::CMsgRemoteDeviceAuthorizationCancelRequest(const CMsgRemoteDeviceAuthorizationCancelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceAuthorizationCancelRequest)
}

void CMsgRemoteDeviceAuthorizationCancelRequest::SharedCtor() {
}

CMsgRemoteDeviceAuthorizationCancelRequest::~CMsgRemoteDeviceAuthorizationCancelRequest() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceAuthorizationCancelRequest)
  SharedDtor();
}

void CMsgRemoteDeviceAuthorizationCancelRequest::SharedDtor() {
}

void CMsgRemoteDeviceAuthorizationCancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceAuthorizationCancelRequest::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceAuthorizationCancelRequest& CMsgRemoteDeviceAuthorizationCancelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationCancelRequest.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceAuthorizationCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceAuthorizationCancelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceAuthorizationCancelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceAuthorizationCancelRequest)
  return false;
#undef DO_
}

void CMsgRemoteDeviceAuthorizationCancelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceAuthorizationCancelRequest)
}

::google::protobuf::uint8* CMsgRemoteDeviceAuthorizationCancelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceAuthorizationCancelRequest)
  return target;
}

size_t CMsgRemoteDeviceAuthorizationCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceAuthorizationCancelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceAuthorizationCancelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceAuthorizationCancelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceAuthorizationCancelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceAuthorizationCancelRequest)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceAuthorizationCancelRequest::MergeFrom(const CMsgRemoteDeviceAuthorizationCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgRemoteDeviceAuthorizationCancelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceAuthorizationCancelRequest::CopyFrom(const CMsgRemoteDeviceAuthorizationCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceAuthorizationCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceAuthorizationCancelRequest::IsInitialized() const {
  return true;
}

void CMsgRemoteDeviceAuthorizationCancelRequest::Swap(CMsgRemoteDeviceAuthorizationCancelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceAuthorizationCancelRequest::InternalSwap(CMsgRemoteDeviceAuthorizationCancelRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceAuthorizationCancelRequest::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceAuthorizationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceAuthorizationResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceAuthorizationResponse::CMsgRemoteDeviceAuthorizationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceAuthorizationResponse)
}
CMsgRemoteDeviceAuthorizationResponse::CMsgRemoteDeviceAuthorizationResponse(const CMsgRemoteDeviceAuthorizationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceAuthorizationResponse)
}

void CMsgRemoteDeviceAuthorizationResponse::SharedCtor() {
  result_ = 0;
}

CMsgRemoteDeviceAuthorizationResponse::~CMsgRemoteDeviceAuthorizationResponse() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceAuthorizationResponse)
  SharedDtor();
}

void CMsgRemoteDeviceAuthorizationResponse::SharedDtor() {
}

void CMsgRemoteDeviceAuthorizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceAuthorizationResponse::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceAuthorizationResponse& CMsgRemoteDeviceAuthorizationResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceAuthorizationResponse.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceAuthorizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceAuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceAuthorizationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceAuthorizationResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ERemoteDeviceAuthorizationResult result = 1 [default = k_ERemoteDeviceAuthorizationSuccess];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ERemoteDeviceAuthorizationResult_IsValid(value)) {
            set_result(static_cast< ::ERemoteDeviceAuthorizationResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceAuthorizationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceAuthorizationResponse)
  return false;
#undef DO_
}

void CMsgRemoteDeviceAuthorizationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceAuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ERemoteDeviceAuthorizationResult result = 1 [default = k_ERemoteDeviceAuthorizationSuccess];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceAuthorizationResponse)
}

::google::protobuf::uint8* CMsgRemoteDeviceAuthorizationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceAuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ERemoteDeviceAuthorizationResult result = 1 [default = k_ERemoteDeviceAuthorizationSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceAuthorizationResponse)
  return target;
}

size_t CMsgRemoteDeviceAuthorizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceAuthorizationResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ERemoteDeviceAuthorizationResult result = 1 [default = k_ERemoteDeviceAuthorizationSuccess];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceAuthorizationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceAuthorizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceAuthorizationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceAuthorizationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceAuthorizationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceAuthorizationResponse)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceAuthorizationResponse::MergeFrom(const CMsgRemoteDeviceAuthorizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceAuthorizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgRemoteDeviceAuthorizationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceAuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceAuthorizationResponse::CopyFrom(const CMsgRemoteDeviceAuthorizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceAuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceAuthorizationResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgRemoteDeviceAuthorizationResponse::Swap(CMsgRemoteDeviceAuthorizationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceAuthorizationResponse::InternalSwap(CMsgRemoteDeviceAuthorizationResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceAuthorizationResponse::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceStreamingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceStreamingRequest::kRequestIdFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kMaximumResolutionXFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kMaximumResolutionYFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kAudioChannelCountFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kDeviceVersionFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kStreamDesktopFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kDeviceTokenFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kPinFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kEnableVideoStreamingFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kEnableAudioStreamingFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kEnableInputStreamingFieldNumber;
const int CMsgRemoteDeviceStreamingRequest::kNetworkTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceStreamingRequest::CMsgRemoteDeviceStreamingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceStreamingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceStreamingRequest)
}
CMsgRemoteDeviceStreamingRequest::CMsgRemoteDeviceStreamingRequest(const CMsgRemoteDeviceStreamingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_version()) {
    device_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_version_);
  }
  device_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_token()) {
    device_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_token_);
  }
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pin()) {
    pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_input_streaming_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(enable_input_streaming_));
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceStreamingRequest)
}

void CMsgRemoteDeviceStreamingRequest::SharedCtor() {
  device_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_test_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(network_test_));
  audio_channel_count_ = 2;
  enable_video_streaming_ = true;
  enable_audio_streaming_ = true;
  enable_input_streaming_ = true;
}

CMsgRemoteDeviceStreamingRequest::~CMsgRemoteDeviceStreamingRequest() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceStreamingRequest)
  SharedDtor();
}

void CMsgRemoteDeviceStreamingRequest::SharedDtor() {
  device_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteDeviceStreamingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceStreamingRequest::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceStreamingRequest& CMsgRemoteDeviceStreamingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceStreamingRequest.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      device_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      device_token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pin_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&network_test_) -
        reinterpret_cast<char*>(&request_id_)) + sizeof(network_test_));
  }
  if (cached_has_bits & 3840u) {
    audio_channel_count_ = 2;
    enable_video_streaming_ = true;
    enable_audio_streaming_ = true;
    enable_input_streaming_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceStreamingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceStreamingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 maximum_resolution_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_maximum_resolution_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maximum_resolution_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 maximum_resolution_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_maximum_resolution_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maximum_resolution_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 audio_channel_count = 4 [default = 2];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_audio_channel_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &audio_channel_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_version().data(), static_cast<int>(this->device_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgRemoteDeviceStreamingRequest.device_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool stream_desktop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_stream_desktop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stream_desktop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes device_token = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_device_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_video_streaming = 9 [default = true];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_enable_video_streaming();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_video_streaming_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_audio_streaming = 10 [default = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_enable_audio_streaming();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_audio_streaming_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_input_streaming = 11 [default = true];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_enable_input_streaming();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_input_streaming_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool network_test = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_network_test();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &network_test_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceStreamingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceStreamingRequest)
  return false;
#undef DO_
}

void CMsgRemoteDeviceStreamingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 request_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_id(), output);
  }

  // optional int32 maximum_resolution_x = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maximum_resolution_x(), output);
  }

  // optional int32 maximum_resolution_y = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maximum_resolution_y(), output);
  }

  // optional int32 audio_channel_count = 4 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->audio_channel_count(), output);
  }

  // optional string device_version = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_version().data(), static_cast<int>(this->device_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceStreamingRequest.device_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_version(), output);
  }

  // optional bool stream_desktop = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->stream_desktop(), output);
  }

  // optional bytes device_token = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->device_token(), output);
  }

  // optional bytes pin = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->pin(), output);
  }

  // optional bool enable_video_streaming = 9 [default = true];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enable_video_streaming(), output);
  }

  // optional bool enable_audio_streaming = 10 [default = true];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->enable_audio_streaming(), output);
  }

  // optional bool enable_input_streaming = 11 [default = true];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->enable_input_streaming(), output);
  }

  // optional bool network_test = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->network_test(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceStreamingRequest)
}

::google::protobuf::uint8* CMsgRemoteDeviceStreamingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 request_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_id(), target);
  }

  // optional int32 maximum_resolution_x = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maximum_resolution_x(), target);
  }

  // optional int32 maximum_resolution_y = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maximum_resolution_y(), target);
  }

  // optional int32 audio_channel_count = 4 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->audio_channel_count(), target);
  }

  // optional string device_version = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_version().data(), static_cast<int>(this->device_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgRemoteDeviceStreamingRequest.device_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_version(), target);
  }

  // optional bool stream_desktop = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->stream_desktop(), target);
  }

  // optional bytes device_token = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->device_token(), target);
  }

  // optional bytes pin = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->pin(), target);
  }

  // optional bool enable_video_streaming = 9 [default = true];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->enable_video_streaming(), target);
  }

  // optional bool enable_audio_streaming = 10 [default = true];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->enable_audio_streaming(), target);
  }

  // optional bool enable_input_streaming = 11 [default = true];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->enable_input_streaming(), target);
  }

  // optional bool network_test = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->network_test(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceStreamingRequest)
  return target;
}

size_t CMsgRemoteDeviceStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceStreamingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 request_id = 1;
  if (has_request_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->request_id());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string device_version = 5;
    if (has_device_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_version());
    }

    // optional bytes device_token = 7;
    if (has_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->device_token());
    }

    // optional bytes pin = 8;
    if (has_pin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pin());
    }

  }
  if (_has_bits_[0 / 32] & 240u) {
    // optional int32 maximum_resolution_x = 2;
    if (has_maximum_resolution_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maximum_resolution_x());
    }

    // optional int32 maximum_resolution_y = 3;
    if (has_maximum_resolution_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maximum_resolution_y());
    }

    // optional bool stream_desktop = 6;
    if (has_stream_desktop()) {
      total_size += 1 + 1;
    }

    // optional bool network_test = 12;
    if (has_network_test()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional int32 audio_channel_count = 4 [default = 2];
    if (has_audio_channel_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->audio_channel_count());
    }

    // optional bool enable_video_streaming = 9 [default = true];
    if (has_enable_video_streaming()) {
      total_size += 1 + 1;
    }

    // optional bool enable_audio_streaming = 10 [default = true];
    if (has_enable_audio_streaming()) {
      total_size += 1 + 1;
    }

    // optional bool enable_input_streaming = 11 [default = true];
    if (has_enable_input_streaming()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceStreamingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceStreamingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceStreamingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceStreamingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceStreamingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceStreamingRequest)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceStreamingRequest::MergeFrom(const CMsgRemoteDeviceStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceStreamingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_version();
      device_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_version_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_device_token();
      device_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_token_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_pin();
      pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
    }
    if (cached_has_bits & 0x00000008u) {
      request_id_ = from.request_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      maximum_resolution_x_ = from.maximum_resolution_x_;
    }
    if (cached_has_bits & 0x00000020u) {
      maximum_resolution_y_ = from.maximum_resolution_y_;
    }
    if (cached_has_bits & 0x00000040u) {
      stream_desktop_ = from.stream_desktop_;
    }
    if (cached_has_bits & 0x00000080u) {
      network_test_ = from.network_test_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      audio_channel_count_ = from.audio_channel_count_;
    }
    if (cached_has_bits & 0x00000200u) {
      enable_video_streaming_ = from.enable_video_streaming_;
    }
    if (cached_has_bits & 0x00000400u) {
      enable_audio_streaming_ = from.enable_audio_streaming_;
    }
    if (cached_has_bits & 0x00000800u) {
      enable_input_streaming_ = from.enable_input_streaming_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRemoteDeviceStreamingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceStreamingRequest::CopyFrom(const CMsgRemoteDeviceStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceStreamingRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void CMsgRemoteDeviceStreamingRequest::Swap(CMsgRemoteDeviceStreamingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceStreamingRequest::InternalSwap(CMsgRemoteDeviceStreamingRequest* other) {
  using std::swap;
  device_version_.Swap(&other->device_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_token_.Swap(&other->device_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pin_.Swap(&other->pin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_id_, other->request_id_);
  swap(maximum_resolution_x_, other->maximum_resolution_x_);
  swap(maximum_resolution_y_, other->maximum_resolution_y_);
  swap(stream_desktop_, other->stream_desktop_);
  swap(network_test_, other->network_test_);
  swap(audio_channel_count_, other->audio_channel_count_);
  swap(enable_video_streaming_, other->enable_video_streaming_);
  swap(enable_audio_streaming_, other->enable_audio_streaming_);
  swap(enable_input_streaming_, other->enable_input_streaming_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceStreamingRequest::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceStreamingCancelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceStreamingCancelRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceStreamingCancelRequest::CMsgRemoteDeviceStreamingCancelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceStreamingCancelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceStreamingCancelRequest)
}
CMsgRemoteDeviceStreamingCancelRequest::CMsgRemoteDeviceStreamingCancelRequest(const CMsgRemoteDeviceStreamingCancelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceStreamingCancelRequest)
}

void CMsgRemoteDeviceStreamingCancelRequest::SharedCtor() {
  request_id_ = 0u;
}

CMsgRemoteDeviceStreamingCancelRequest::~CMsgRemoteDeviceStreamingCancelRequest() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceStreamingCancelRequest)
  SharedDtor();
}

void CMsgRemoteDeviceStreamingCancelRequest::SharedDtor() {
}

void CMsgRemoteDeviceStreamingCancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceStreamingCancelRequest::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceStreamingCancelRequest& CMsgRemoteDeviceStreamingCancelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceStreamingCancelRequest.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceStreamingCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceStreamingCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceStreamingCancelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceStreamingCancelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceStreamingCancelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceStreamingCancelRequest)
  return false;
#undef DO_
}

void CMsgRemoteDeviceStreamingCancelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceStreamingCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 request_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceStreamingCancelRequest)
}

::google::protobuf::uint8* CMsgRemoteDeviceStreamingCancelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceStreamingCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 request_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceStreamingCancelRequest)
  return target;
}

size_t CMsgRemoteDeviceStreamingCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceStreamingCancelRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 request_id = 1;
  if (has_request_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->request_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceStreamingCancelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceStreamingCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceStreamingCancelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceStreamingCancelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceStreamingCancelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceStreamingCancelRequest)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceStreamingCancelRequest::MergeFrom(const CMsgRemoteDeviceStreamingCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceStreamingCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_request_id()) {
    set_request_id(from.request_id());
  }
}

void CMsgRemoteDeviceStreamingCancelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceStreamingCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceStreamingCancelRequest::CopyFrom(const CMsgRemoteDeviceStreamingCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceStreamingCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceStreamingCancelRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgRemoteDeviceStreamingCancelRequest::Swap(CMsgRemoteDeviceStreamingCancelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceStreamingCancelRequest::InternalSwap(CMsgRemoteDeviceStreamingCancelRequest* other) {
  using std::swap;
  swap(request_id_, other->request_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceStreamingCancelRequest::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceStreamingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceStreamingResponse::kRequestIdFieldNumber;
const int CMsgRemoteDeviceStreamingResponse::kResultFieldNumber;
const int CMsgRemoteDeviceStreamingResponse::kPortFieldNumber;
const int CMsgRemoteDeviceStreamingResponse::kEncryptedSessionKeyFieldNumber;
const int CMsgRemoteDeviceStreamingResponse::kVirtualhereLicensedDeviceCountOBSOLETEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceStreamingResponse::CMsgRemoteDeviceStreamingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceStreamingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceStreamingResponse)
}
CMsgRemoteDeviceStreamingResponse::CMsgRemoteDeviceStreamingResponse(const CMsgRemoteDeviceStreamingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encrypted_session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encrypted_session_key()) {
    encrypted_session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_session_key_);
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&virtualhere_licensed_device_count_obsolete_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(virtualhere_licensed_device_count_obsolete_));
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceStreamingResponse)
}

void CMsgRemoteDeviceStreamingResponse::SharedCtor() {
  encrypted_session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&virtualhere_licensed_device_count_obsolete_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(virtualhere_licensed_device_count_obsolete_));
}

CMsgRemoteDeviceStreamingResponse::~CMsgRemoteDeviceStreamingResponse() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceStreamingResponse)
  SharedDtor();
}

void CMsgRemoteDeviceStreamingResponse::SharedDtor() {
  encrypted_session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteDeviceStreamingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceStreamingResponse::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceStreamingResponse& CMsgRemoteDeviceStreamingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceStreamingResponse.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    encrypted_session_key_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&virtualhere_licensed_device_count_obsolete_) -
        reinterpret_cast<char*>(&request_id_)) + sizeof(virtualhere_licensed_device_count_obsolete_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceStreamingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceStreamingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ERemoteDeviceStreamingResult result = 2 [default = k_ERemoteDeviceStreamingSuccess];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ERemoteDeviceStreamingResult_IsValid(value)) {
            set_result(static_cast< ::ERemoteDeviceStreamingResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encrypted_session_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encrypted_session_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 virtualhere_licensed_device_count_OBSOLETE = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_virtualhere_licensed_device_count_obsolete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &virtualhere_licensed_device_count_obsolete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceStreamingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceStreamingResponse)
  return false;
#undef DO_
}

void CMsgRemoteDeviceStreamingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 request_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_id(), output);
  }

  // required .ERemoteDeviceStreamingResult result = 2 [default = k_ERemoteDeviceStreamingSuccess];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional uint32 port = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // optional bytes encrypted_session_key = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->encrypted_session_key(), output);
  }

  // optional int32 virtualhere_licensed_device_count_OBSOLETE = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->virtualhere_licensed_device_count_obsolete(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceStreamingResponse)
}

::google::protobuf::uint8* CMsgRemoteDeviceStreamingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 request_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_id(), target);
  }

  // required .ERemoteDeviceStreamingResult result = 2 [default = k_ERemoteDeviceStreamingSuccess];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional uint32 port = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // optional bytes encrypted_session_key = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->encrypted_session_key(), target);
  }

  // optional int32 virtualhere_licensed_device_count_OBSOLETE = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->virtualhere_licensed_device_count_obsolete(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceStreamingResponse)
  return target;
}

size_t CMsgRemoteDeviceStreamingResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgRemoteDeviceStreamingResponse)
  size_t total_size = 0;

  if (has_request_id()) {
    // required uint32 request_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->request_id());
  }

  if (has_result()) {
    // required .ERemoteDeviceStreamingResult result = 2 [default = k_ERemoteDeviceStreamingSuccess];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  return total_size;
}
size_t CMsgRemoteDeviceStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceStreamingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 request_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->request_id());

    // required .ERemoteDeviceStreamingResult result = 2 [default = k_ERemoteDeviceStreamingSuccess];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes encrypted_session_key = 4;
  if (has_encrypted_session_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->encrypted_session_key());
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 port = 3;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

    // optional int32 virtualhere_licensed_device_count_OBSOLETE = 5;
    if (has_virtualhere_licensed_device_count_obsolete()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->virtualhere_licensed_device_count_obsolete());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceStreamingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceStreamingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceStreamingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceStreamingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceStreamingResponse)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceStreamingResponse::MergeFrom(const CMsgRemoteDeviceStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_encrypted_session_key();
      encrypted_session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_session_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      request_id_ = from.request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000008u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000010u) {
      virtualhere_licensed_device_count_obsolete_ = from.virtualhere_licensed_device_count_obsolete_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRemoteDeviceStreamingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceStreamingResponse::CopyFrom(const CMsgRemoteDeviceStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceStreamingResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void CMsgRemoteDeviceStreamingResponse::Swap(CMsgRemoteDeviceStreamingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceStreamingResponse::InternalSwap(CMsgRemoteDeviceStreamingResponse* other) {
  using std::swap;
  encrypted_session_key_.Swap(&other->encrypted_session_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_id_, other->request_id_);
  swap(result_, other->result_);
  swap(port_, other->port_);
  swap(virtualhere_licensed_device_count_obsolete_, other->virtualhere_licensed_device_count_obsolete_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceStreamingResponse::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceProofRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceProofRequest::kChallengeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceProofRequest::CMsgRemoteDeviceProofRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceProofRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceProofRequest)
}
CMsgRemoteDeviceProofRequest::CMsgRemoteDeviceProofRequest(const CMsgRemoteDeviceProofRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  challenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_challenge()) {
    challenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.challenge_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceProofRequest)
}

void CMsgRemoteDeviceProofRequest::SharedCtor() {
  challenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgRemoteDeviceProofRequest::~CMsgRemoteDeviceProofRequest() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceProofRequest)
  SharedDtor();
}

void CMsgRemoteDeviceProofRequest::SharedDtor() {
  challenge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteDeviceProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceProofRequest::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceProofRequest& CMsgRemoteDeviceProofRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceProofRequest.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    challenge_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceProofRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceProofRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes challenge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_challenge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceProofRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceProofRequest)
  return false;
#undef DO_
}

void CMsgRemoteDeviceProofRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes challenge = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->challenge(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceProofRequest)
}

::google::protobuf::uint8* CMsgRemoteDeviceProofRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes challenge = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->challenge(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceProofRequest)
  return target;
}

size_t CMsgRemoteDeviceProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceProofRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes challenge = 1;
  if (has_challenge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->challenge());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceProofRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceProofRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceProofRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceProofRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceProofRequest)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceProofRequest::MergeFrom(const CMsgRemoteDeviceProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_challenge()) {
    set_has_challenge();
    challenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.challenge_);
  }
}

void CMsgRemoteDeviceProofRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceProofRequest::CopyFrom(const CMsgRemoteDeviceProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceProofRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgRemoteDeviceProofRequest::Swap(CMsgRemoteDeviceProofRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceProofRequest::InternalSwap(CMsgRemoteDeviceProofRequest* other) {
  using std::swap;
  challenge_.Swap(&other->challenge_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceProofRequest::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRemoteDeviceProofResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRemoteDeviceProofResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRemoteDeviceProofResponse::CMsgRemoteDeviceProofResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceProofResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRemoteDeviceProofResponse)
}
CMsgRemoteDeviceProofResponse::CMsgRemoteDeviceProofResponse(const CMsgRemoteDeviceProofResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_response()) {
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgRemoteDeviceProofResponse)
}

void CMsgRemoteDeviceProofResponse::SharedCtor() {
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgRemoteDeviceProofResponse::~CMsgRemoteDeviceProofResponse() {
  // @@protoc_insertion_point(destructor:CMsgRemoteDeviceProofResponse)
  SharedDtor();
}

void CMsgRemoteDeviceProofResponse::SharedDtor() {
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRemoteDeviceProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRemoteDeviceProofResponse::descriptor() {
  ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRemoteDeviceProofResponse& CMsgRemoteDeviceProofResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::scc_info_CMsgRemoteDeviceProofResponse.base);
  return *internal_default_instance();
}


void CMsgRemoteDeviceProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoteDeviceProofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    response_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRemoteDeviceProofResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRemoteDeviceProofResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRemoteDeviceProofResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRemoteDeviceProofResponse)
  return false;
#undef DO_
}

void CMsgRemoteDeviceProofResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRemoteDeviceProofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRemoteDeviceProofResponse)
}

::google::protobuf::uint8* CMsgRemoteDeviceProofResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoteDeviceProofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes response = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoteDeviceProofResponse)
  return target;
}

size_t CMsgRemoteDeviceProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoteDeviceProofResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes response = 1;
  if (has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRemoteDeviceProofResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRemoteDeviceProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRemoteDeviceProofResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRemoteDeviceProofResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRemoteDeviceProofResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRemoteDeviceProofResponse)
    MergeFrom(*source);
  }
}

void CMsgRemoteDeviceProofResponse::MergeFrom(const CMsgRemoteDeviceProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoteDeviceProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_response()) {
    set_has_response();
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
}

void CMsgRemoteDeviceProofResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRemoteDeviceProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRemoteDeviceProofResponse::CopyFrom(const CMsgRemoteDeviceProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoteDeviceProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRemoteDeviceProofResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgRemoteDeviceProofResponse::Swap(CMsgRemoteDeviceProofResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRemoteDeviceProofResponse::InternalSwap(CMsgRemoteDeviceProofResponse* other) {
  using std::swap;
  response_.Swap(&other->response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRemoteDeviceProofResponse::GetMetadata() const {
  protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fremoteclient_5fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteClientBroadcastHeader* Arena::CreateMaybeMessage< ::CMsgRemoteClientBroadcastHeader >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteClientBroadcastHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteClientBroadcastStatus_User* Arena::CreateMaybeMessage< ::CMsgRemoteClientBroadcastStatus_User >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteClientBroadcastStatus_User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteClientBroadcastStatus* Arena::CreateMaybeMessage< ::CMsgRemoteClientBroadcastStatus >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteClientBroadcastStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteClientBroadcastDiscovery* Arena::CreateMaybeMessage< ::CMsgRemoteClientBroadcastDiscovery >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteClientBroadcastDiscovery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteClientBroadcastClientIDDeconflict* Arena::CreateMaybeMessage< ::CMsgRemoteClientBroadcastClientIDDeconflict >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteClientBroadcastClientIDDeconflict >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceAuthorizationRequest* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceAuthorizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceAuthorizationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceAuthorizationCancelRequest* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceAuthorizationCancelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceAuthorizationCancelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceAuthorizationResponse* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceAuthorizationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceAuthorizationResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceStreamingRequest* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceStreamingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceStreamingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceStreamingCancelRequest* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceStreamingCancelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceStreamingCancelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceStreamingResponse* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceStreamingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceStreamingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceProofRequest* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceProofRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceProofRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRemoteDeviceProofResponse* Arena::CreateMaybeMessage< ::CMsgRemoteDeviceProofResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRemoteDeviceProofResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
