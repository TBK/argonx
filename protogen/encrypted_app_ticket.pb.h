// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encrypted_app_ticket.proto

#ifndef PROTOBUF_INCLUDED_encrypted_5fapp_5fticket_2eproto
#define PROTOBUF_INCLUDED_encrypted_5fapp_5fticket_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_encrypted_5fapp_5fticket_2eproto 

namespace protobuf_encrypted_5fapp_5fticket_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_encrypted_5fapp_5fticket_2eproto
class EncryptedAppTicket;
class EncryptedAppTicketDefaultTypeInternal;
extern EncryptedAppTicketDefaultTypeInternal _EncryptedAppTicket_default_instance_;
namespace google {
namespace protobuf {
template<> ::EncryptedAppTicket* Arena::CreateMaybeMessage<::EncryptedAppTicket>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class EncryptedAppTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EncryptedAppTicket) */ {
 public:
  EncryptedAppTicket();
  virtual ~EncryptedAppTicket();

  EncryptedAppTicket(const EncryptedAppTicket& from);

  inline EncryptedAppTicket& operator=(const EncryptedAppTicket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptedAppTicket(EncryptedAppTicket&& from) noexcept
    : EncryptedAppTicket() {
    *this = ::std::move(from);
  }

  inline EncryptedAppTicket& operator=(EncryptedAppTicket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptedAppTicket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptedAppTicket* internal_default_instance() {
    return reinterpret_cast<const EncryptedAppTicket*>(
               &_EncryptedAppTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EncryptedAppTicket* other);
  friend void swap(EncryptedAppTicket& a, EncryptedAppTicket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptedAppTicket* New() const final {
    return CreateMaybeMessage<EncryptedAppTicket>(NULL);
  }

  EncryptedAppTicket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptedAppTicket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptedAppTicket& from);
  void MergeFrom(const EncryptedAppTicket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptedAppTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes encrypted_ticket = 5;
  bool has_encrypted_ticket() const;
  void clear_encrypted_ticket();
  static const int kEncryptedTicketFieldNumber = 5;
  const ::std::string& encrypted_ticket() const;
  void set_encrypted_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_encrypted_ticket(::std::string&& value);
  #endif
  void set_encrypted_ticket(const char* value);
  void set_encrypted_ticket(const void* value, size_t size);
  ::std::string* mutable_encrypted_ticket();
  ::std::string* release_encrypted_ticket();
  void set_allocated_encrypted_ticket(::std::string* encrypted_ticket);

  // optional uint32 ticket_version_no = 1;
  bool has_ticket_version_no() const;
  void clear_ticket_version_no();
  static const int kTicketVersionNoFieldNumber = 1;
  ::google::protobuf::uint32 ticket_version_no() const;
  void set_ticket_version_no(::google::protobuf::uint32 value);

  // optional uint32 crc_encryptedticket = 2;
  bool has_crc_encryptedticket() const;
  void clear_crc_encryptedticket();
  static const int kCrcEncryptedticketFieldNumber = 2;
  ::google::protobuf::uint32 crc_encryptedticket() const;
  void set_crc_encryptedticket(::google::protobuf::uint32 value);

  // optional uint32 cb_encrypteduserdata = 3;
  bool has_cb_encrypteduserdata() const;
  void clear_cb_encrypteduserdata();
  static const int kCbEncrypteduserdataFieldNumber = 3;
  ::google::protobuf::uint32 cb_encrypteduserdata() const;
  void set_cb_encrypteduserdata(::google::protobuf::uint32 value);

  // optional uint32 cb_encrypted_appownershipticket = 4;
  bool has_cb_encrypted_appownershipticket() const;
  void clear_cb_encrypted_appownershipticket();
  static const int kCbEncryptedAppownershipticketFieldNumber = 4;
  ::google::protobuf::uint32 cb_encrypted_appownershipticket() const;
  void set_cb_encrypted_appownershipticket(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EncryptedAppTicket)
 private:
  void set_has_ticket_version_no();
  void clear_has_ticket_version_no();
  void set_has_crc_encryptedticket();
  void clear_has_crc_encryptedticket();
  void set_has_cb_encrypteduserdata();
  void clear_has_cb_encrypteduserdata();
  void set_has_cb_encrypted_appownershipticket();
  void clear_has_cb_encrypted_appownershipticket();
  void set_has_encrypted_ticket();
  void clear_has_encrypted_ticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_ticket_;
  ::google::protobuf::uint32 ticket_version_no_;
  ::google::protobuf::uint32 crc_encryptedticket_;
  ::google::protobuf::uint32 cb_encrypteduserdata_;
  ::google::protobuf::uint32 cb_encrypted_appownershipticket_;
  friend struct ::protobuf_encrypted_5fapp_5fticket_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EncryptedAppTicket

// optional uint32 ticket_version_no = 1;
inline bool EncryptedAppTicket::has_ticket_version_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EncryptedAppTicket::set_has_ticket_version_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EncryptedAppTicket::clear_has_ticket_version_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EncryptedAppTicket::clear_ticket_version_no() {
  ticket_version_no_ = 0u;
  clear_has_ticket_version_no();
}
inline ::google::protobuf::uint32 EncryptedAppTicket::ticket_version_no() const {
  // @@protoc_insertion_point(field_get:EncryptedAppTicket.ticket_version_no)
  return ticket_version_no_;
}
inline void EncryptedAppTicket::set_ticket_version_no(::google::protobuf::uint32 value) {
  set_has_ticket_version_no();
  ticket_version_no_ = value;
  // @@protoc_insertion_point(field_set:EncryptedAppTicket.ticket_version_no)
}

// optional uint32 crc_encryptedticket = 2;
inline bool EncryptedAppTicket::has_crc_encryptedticket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EncryptedAppTicket::set_has_crc_encryptedticket() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EncryptedAppTicket::clear_has_crc_encryptedticket() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EncryptedAppTicket::clear_crc_encryptedticket() {
  crc_encryptedticket_ = 0u;
  clear_has_crc_encryptedticket();
}
inline ::google::protobuf::uint32 EncryptedAppTicket::crc_encryptedticket() const {
  // @@protoc_insertion_point(field_get:EncryptedAppTicket.crc_encryptedticket)
  return crc_encryptedticket_;
}
inline void EncryptedAppTicket::set_crc_encryptedticket(::google::protobuf::uint32 value) {
  set_has_crc_encryptedticket();
  crc_encryptedticket_ = value;
  // @@protoc_insertion_point(field_set:EncryptedAppTicket.crc_encryptedticket)
}

// optional uint32 cb_encrypteduserdata = 3;
inline bool EncryptedAppTicket::has_cb_encrypteduserdata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EncryptedAppTicket::set_has_cb_encrypteduserdata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EncryptedAppTicket::clear_has_cb_encrypteduserdata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EncryptedAppTicket::clear_cb_encrypteduserdata() {
  cb_encrypteduserdata_ = 0u;
  clear_has_cb_encrypteduserdata();
}
inline ::google::protobuf::uint32 EncryptedAppTicket::cb_encrypteduserdata() const {
  // @@protoc_insertion_point(field_get:EncryptedAppTicket.cb_encrypteduserdata)
  return cb_encrypteduserdata_;
}
inline void EncryptedAppTicket::set_cb_encrypteduserdata(::google::protobuf::uint32 value) {
  set_has_cb_encrypteduserdata();
  cb_encrypteduserdata_ = value;
  // @@protoc_insertion_point(field_set:EncryptedAppTicket.cb_encrypteduserdata)
}

// optional uint32 cb_encrypted_appownershipticket = 4;
inline bool EncryptedAppTicket::has_cb_encrypted_appownershipticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EncryptedAppTicket::set_has_cb_encrypted_appownershipticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EncryptedAppTicket::clear_has_cb_encrypted_appownershipticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EncryptedAppTicket::clear_cb_encrypted_appownershipticket() {
  cb_encrypted_appownershipticket_ = 0u;
  clear_has_cb_encrypted_appownershipticket();
}
inline ::google::protobuf::uint32 EncryptedAppTicket::cb_encrypted_appownershipticket() const {
  // @@protoc_insertion_point(field_get:EncryptedAppTicket.cb_encrypted_appownershipticket)
  return cb_encrypted_appownershipticket_;
}
inline void EncryptedAppTicket::set_cb_encrypted_appownershipticket(::google::protobuf::uint32 value) {
  set_has_cb_encrypted_appownershipticket();
  cb_encrypted_appownershipticket_ = value;
  // @@protoc_insertion_point(field_set:EncryptedAppTicket.cb_encrypted_appownershipticket)
}

// optional bytes encrypted_ticket = 5;
inline bool EncryptedAppTicket::has_encrypted_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EncryptedAppTicket::set_has_encrypted_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EncryptedAppTicket::clear_has_encrypted_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EncryptedAppTicket::clear_encrypted_ticket() {
  encrypted_ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encrypted_ticket();
}
inline const ::std::string& EncryptedAppTicket::encrypted_ticket() const {
  // @@protoc_insertion_point(field_get:EncryptedAppTicket.encrypted_ticket)
  return encrypted_ticket_.GetNoArena();
}
inline void EncryptedAppTicket::set_encrypted_ticket(const ::std::string& value) {
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EncryptedAppTicket.encrypted_ticket)
}
#if LANG_CXX11
inline void EncryptedAppTicket::set_encrypted_ticket(::std::string&& value) {
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EncryptedAppTicket.encrypted_ticket)
}
#endif
inline void EncryptedAppTicket::set_encrypted_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EncryptedAppTicket.encrypted_ticket)
}
inline void EncryptedAppTicket::set_encrypted_ticket(const void* value, size_t size) {
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EncryptedAppTicket.encrypted_ticket)
}
inline ::std::string* EncryptedAppTicket::mutable_encrypted_ticket() {
  set_has_encrypted_ticket();
  // @@protoc_insertion_point(field_mutable:EncryptedAppTicket.encrypted_ticket)
  return encrypted_ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptedAppTicket::release_encrypted_ticket() {
  // @@protoc_insertion_point(field_release:EncryptedAppTicket.encrypted_ticket)
  if (!has_encrypted_ticket()) {
    return NULL;
  }
  clear_has_encrypted_ticket();
  return encrypted_ticket_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptedAppTicket::set_allocated_encrypted_ticket(::std::string* encrypted_ticket) {
  if (encrypted_ticket != NULL) {
    set_has_encrypted_ticket();
  } else {
    clear_has_encrypted_ticket();
  }
  encrypted_ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_ticket);
  // @@protoc_insertion_point(field_set_allocated:EncryptedAppTicket.encrypted_ticket)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_encrypted_5fapp_5fticket_2eproto
