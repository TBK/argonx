// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_store.steamclient.proto

#include "steammessages_store.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fstore_2esteamclient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fstore_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CStore_GetLocalizedNameForTags_Response_Tag;
}  // namespace protobuf_steammessages_5fstore_2esteamclient_2eproto
class CStore_GetLocalizedNameForTags_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CStore_GetLocalizedNameForTags_Request>
      _instance;
} _CStore_GetLocalizedNameForTags_Request_default_instance_;
class CStore_GetLocalizedNameForTags_Response_TagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CStore_GetLocalizedNameForTags_Response_Tag>
      _instance;
} _CStore_GetLocalizedNameForTags_Response_Tag_default_instance_;
class CStore_GetLocalizedNameForTags_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CStore_GetLocalizedNameForTags_Response>
      _instance;
} _CStore_GetLocalizedNameForTags_Response_default_instance_;
namespace protobuf_steammessages_5fstore_2esteamclient_2eproto {
static void InitDefaultsCStore_GetLocalizedNameForTags_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CStore_GetLocalizedNameForTags_Request_default_instance_;
    new (ptr) ::CStore_GetLocalizedNameForTags_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CStore_GetLocalizedNameForTags_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CStore_GetLocalizedNameForTags_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCStore_GetLocalizedNameForTags_Request}, {}};

static void InitDefaultsCStore_GetLocalizedNameForTags_Response_Tag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CStore_GetLocalizedNameForTags_Response_Tag_default_instance_;
    new (ptr) ::CStore_GetLocalizedNameForTags_Response_Tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CStore_GetLocalizedNameForTags_Response_Tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CStore_GetLocalizedNameForTags_Response_Tag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCStore_GetLocalizedNameForTags_Response_Tag}, {}};

static void InitDefaultsCStore_GetLocalizedNameForTags_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CStore_GetLocalizedNameForTags_Response_default_instance_;
    new (ptr) ::CStore_GetLocalizedNameForTags_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CStore_GetLocalizedNameForTags_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CStore_GetLocalizedNameForTags_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCStore_GetLocalizedNameForTags_Response}, {
      &protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Response_Tag.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CStore_GetLocalizedNameForTags_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CStore_GetLocalizedNameForTags_Response_Tag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CStore_GetLocalizedNameForTags_Response.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Request, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Request, tagids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response_Tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response_Tag, tagid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response_Tag, english_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response_Tag, name_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CStore_GetLocalizedNameForTags_Response, tags_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CStore_GetLocalizedNameForTags_Request)},
  { 9, 17, sizeof(::CStore_GetLocalizedNameForTags_Response_Tag)},
  { 20, 26, sizeof(::CStore_GetLocalizedNameForTags_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CStore_GetLocalizedNameForTags_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CStore_GetLocalizedNameForTags_Response_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CStore_GetLocalizedNameForTags_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_store.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%steammessages_store.steamclient.proto\032"
      ",steammessages_unified_base.steamclient."
      "proto\"J\n&CStore_GetLocalizedNameForTags_"
      "Request\022\020\n\010language\030\001 \001(\t\022\016\n\006tagids\030\002 \003("
      "\r\"\237\001\n\'CStore_GetLocalizedNameForTags_Res"
      "ponse\022:\n\004tags\030\001 \003(\0132,.CStore_GetLocalize"
      "dNameForTags_Response.Tag\0328\n\003Tag\022\r\n\005tagi"
      "d\030\001 \001(\r\022\024\n\014english_name\030\002 \001(\t\022\014\n\004name\030\003 "
      "\001(\t2\307\001\n\005Store\022\230\001\n\027GetLocalizedNameForTag"
      "s\022\'.CStore_GetLocalizedNameForTags_Reque"
      "st\032(.CStore_GetLocalizedNameForTags_Resp"
      "onse\"*\202\265\030&Gets tag names in a different "
      "language\032#\202\265\030\037A service to access store "
      "data.B\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 530);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_store.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fstore_2esteamclient_2eproto

// ===================================================================

void CStore_GetLocalizedNameForTags_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CStore_GetLocalizedNameForTags_Request::kLanguageFieldNumber;
const int CStore_GetLocalizedNameForTags_Request::kTagidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CStore_GetLocalizedNameForTags_Request::CStore_GetLocalizedNameForTags_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CStore_GetLocalizedNameForTags_Request)
}
CStore_GetLocalizedNameForTags_Request::CStore_GetLocalizedNameForTags_Request(const CStore_GetLocalizedNameForTags_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tagids_(from.tagids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  // @@protoc_insertion_point(copy_constructor:CStore_GetLocalizedNameForTags_Request)
}

void CStore_GetLocalizedNameForTags_Request::SharedCtor() {
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CStore_GetLocalizedNameForTags_Request::~CStore_GetLocalizedNameForTags_Request() {
  // @@protoc_insertion_point(destructor:CStore_GetLocalizedNameForTags_Request)
  SharedDtor();
}

void CStore_GetLocalizedNameForTags_Request::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CStore_GetLocalizedNameForTags_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CStore_GetLocalizedNameForTags_Request::descriptor() {
  ::protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CStore_GetLocalizedNameForTags_Request& CStore_GetLocalizedNameForTags_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Request.base);
  return *internal_default_instance();
}


void CStore_GetLocalizedNameForTags_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CStore_GetLocalizedNameForTags_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    language_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CStore_GetLocalizedNameForTags_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CStore_GetLocalizedNameForTags_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CStore_GetLocalizedNameForTags_Request.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 tagids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_tagids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tagids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CStore_GetLocalizedNameForTags_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CStore_GetLocalizedNameForTags_Request)
  return false;
#undef DO_
}

void CStore_GetLocalizedNameForTags_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CStore_GetLocalizedNameForTags_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CStore_GetLocalizedNameForTags_Request.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // repeated uint32 tagids = 2;
  for (int i = 0, n = this->tagids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->tagids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CStore_GetLocalizedNameForTags_Request)
}

::google::protobuf::uint8* CStore_GetLocalizedNameForTags_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CStore_GetLocalizedNameForTags_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CStore_GetLocalizedNameForTags_Request.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // repeated uint32 tagids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->tagids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CStore_GetLocalizedNameForTags_Request)
  return target;
}

size_t CStore_GetLocalizedNameForTags_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CStore_GetLocalizedNameForTags_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 tagids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->tagids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagids_size());
    total_size += data_size;
  }

  // optional string language = 1;
  if (has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CStore_GetLocalizedNameForTags_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CStore_GetLocalizedNameForTags_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CStore_GetLocalizedNameForTags_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CStore_GetLocalizedNameForTags_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CStore_GetLocalizedNameForTags_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CStore_GetLocalizedNameForTags_Request)
    MergeFrom(*source);
  }
}

void CStore_GetLocalizedNameForTags_Request::MergeFrom(const CStore_GetLocalizedNameForTags_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CStore_GetLocalizedNameForTags_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tagids_.MergeFrom(from.tagids_);
  if (from.has_language()) {
    set_has_language();
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
}

void CStore_GetLocalizedNameForTags_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CStore_GetLocalizedNameForTags_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CStore_GetLocalizedNameForTags_Request::CopyFrom(const CStore_GetLocalizedNameForTags_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CStore_GetLocalizedNameForTags_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CStore_GetLocalizedNameForTags_Request::IsInitialized() const {
  return true;
}

void CStore_GetLocalizedNameForTags_Request::Swap(CStore_GetLocalizedNameForTags_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CStore_GetLocalizedNameForTags_Request::InternalSwap(CStore_GetLocalizedNameForTags_Request* other) {
  using std::swap;
  tagids_.InternalSwap(&other->tagids_);
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CStore_GetLocalizedNameForTags_Request::GetMetadata() const {
  protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CStore_GetLocalizedNameForTags_Response_Tag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CStore_GetLocalizedNameForTags_Response_Tag::kTagidFieldNumber;
const int CStore_GetLocalizedNameForTags_Response_Tag::kEnglishNameFieldNumber;
const int CStore_GetLocalizedNameForTags_Response_Tag::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CStore_GetLocalizedNameForTags_Response_Tag::CStore_GetLocalizedNameForTags_Response_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Response_Tag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CStore_GetLocalizedNameForTags_Response.Tag)
}
CStore_GetLocalizedNameForTags_Response_Tag::CStore_GetLocalizedNameForTags_Response_Tag(const CStore_GetLocalizedNameForTags_Response_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  english_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_english_name()) {
    english_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.english_name_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  tagid_ = from.tagid_;
  // @@protoc_insertion_point(copy_constructor:CStore_GetLocalizedNameForTags_Response.Tag)
}

void CStore_GetLocalizedNameForTags_Response_Tag::SharedCtor() {
  english_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tagid_ = 0u;
}

CStore_GetLocalizedNameForTags_Response_Tag::~CStore_GetLocalizedNameForTags_Response_Tag() {
  // @@protoc_insertion_point(destructor:CStore_GetLocalizedNameForTags_Response.Tag)
  SharedDtor();
}

void CStore_GetLocalizedNameForTags_Response_Tag::SharedDtor() {
  english_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CStore_GetLocalizedNameForTags_Response_Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CStore_GetLocalizedNameForTags_Response_Tag::descriptor() {
  ::protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CStore_GetLocalizedNameForTags_Response_Tag& CStore_GetLocalizedNameForTags_Response_Tag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Response_Tag.base);
  return *internal_default_instance();
}


void CStore_GetLocalizedNameForTags_Response_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:CStore_GetLocalizedNameForTags_Response.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      english_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  tagid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CStore_GetLocalizedNameForTags_Response_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CStore_GetLocalizedNameForTags_Response.Tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tagid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tagid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tagid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string english_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_english_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->english_name().data(), static_cast<int>(this->english_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CStore_GetLocalizedNameForTags_Response.Tag.english_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CStore_GetLocalizedNameForTags_Response.Tag.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CStore_GetLocalizedNameForTags_Response.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CStore_GetLocalizedNameForTags_Response.Tag)
  return false;
#undef DO_
}

void CStore_GetLocalizedNameForTags_Response_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CStore_GetLocalizedNameForTags_Response.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tagid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tagid(), output);
  }

  // optional string english_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->english_name().data(), static_cast<int>(this->english_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CStore_GetLocalizedNameForTags_Response.Tag.english_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->english_name(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CStore_GetLocalizedNameForTags_Response.Tag.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CStore_GetLocalizedNameForTags_Response.Tag)
}

::google::protobuf::uint8* CStore_GetLocalizedNameForTags_Response_Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CStore_GetLocalizedNameForTags_Response.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tagid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tagid(), target);
  }

  // optional string english_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->english_name().data(), static_cast<int>(this->english_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CStore_GetLocalizedNameForTags_Response.Tag.english_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->english_name(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CStore_GetLocalizedNameForTags_Response.Tag.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CStore_GetLocalizedNameForTags_Response.Tag)
  return target;
}

size_t CStore_GetLocalizedNameForTags_Response_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CStore_GetLocalizedNameForTags_Response.Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string english_name = 2;
    if (has_english_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->english_name());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 tagid = 1;
    if (has_tagid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tagid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CStore_GetLocalizedNameForTags_Response_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CStore_GetLocalizedNameForTags_Response.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const CStore_GetLocalizedNameForTags_Response_Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CStore_GetLocalizedNameForTags_Response_Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CStore_GetLocalizedNameForTags_Response.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CStore_GetLocalizedNameForTags_Response.Tag)
    MergeFrom(*source);
  }
}

void CStore_GetLocalizedNameForTags_Response_Tag::MergeFrom(const CStore_GetLocalizedNameForTags_Response_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CStore_GetLocalizedNameForTags_Response.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_english_name();
      english_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.english_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      tagid_ = from.tagid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CStore_GetLocalizedNameForTags_Response_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CStore_GetLocalizedNameForTags_Response.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CStore_GetLocalizedNameForTags_Response_Tag::CopyFrom(const CStore_GetLocalizedNameForTags_Response_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CStore_GetLocalizedNameForTags_Response.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CStore_GetLocalizedNameForTags_Response_Tag::IsInitialized() const {
  return true;
}

void CStore_GetLocalizedNameForTags_Response_Tag::Swap(CStore_GetLocalizedNameForTags_Response_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CStore_GetLocalizedNameForTags_Response_Tag::InternalSwap(CStore_GetLocalizedNameForTags_Response_Tag* other) {
  using std::swap;
  english_name_.Swap(&other->english_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tagid_, other->tagid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CStore_GetLocalizedNameForTags_Response_Tag::GetMetadata() const {
  protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CStore_GetLocalizedNameForTags_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CStore_GetLocalizedNameForTags_Response::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CStore_GetLocalizedNameForTags_Response::CStore_GetLocalizedNameForTags_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CStore_GetLocalizedNameForTags_Response)
}
CStore_GetLocalizedNameForTags_Response::CStore_GetLocalizedNameForTags_Response(const CStore_GetLocalizedNameForTags_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CStore_GetLocalizedNameForTags_Response)
}

void CStore_GetLocalizedNameForTags_Response::SharedCtor() {
}

CStore_GetLocalizedNameForTags_Response::~CStore_GetLocalizedNameForTags_Response() {
  // @@protoc_insertion_point(destructor:CStore_GetLocalizedNameForTags_Response)
  SharedDtor();
}

void CStore_GetLocalizedNameForTags_Response::SharedDtor() {
}

void CStore_GetLocalizedNameForTags_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CStore_GetLocalizedNameForTags_Response::descriptor() {
  ::protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CStore_GetLocalizedNameForTags_Response& CStore_GetLocalizedNameForTags_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fstore_2esteamclient_2eproto::scc_info_CStore_GetLocalizedNameForTags_Response.base);
  return *internal_default_instance();
}


void CStore_GetLocalizedNameForTags_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CStore_GetLocalizedNameForTags_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CStore_GetLocalizedNameForTags_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CStore_GetLocalizedNameForTags_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CStore_GetLocalizedNameForTags_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CStore_GetLocalizedNameForTags_Response)
  return false;
#undef DO_
}

void CStore_GetLocalizedNameForTags_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CStore_GetLocalizedNameForTags_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tags(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CStore_GetLocalizedNameForTags_Response)
}

::google::protobuf::uint8* CStore_GetLocalizedNameForTags_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CStore_GetLocalizedNameForTags_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tags(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CStore_GetLocalizedNameForTags_Response)
  return target;
}

size_t CStore_GetLocalizedNameForTags_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CStore_GetLocalizedNameForTags_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CStore_GetLocalizedNameForTags_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CStore_GetLocalizedNameForTags_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CStore_GetLocalizedNameForTags_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CStore_GetLocalizedNameForTags_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CStore_GetLocalizedNameForTags_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CStore_GetLocalizedNameForTags_Response)
    MergeFrom(*source);
  }
}

void CStore_GetLocalizedNameForTags_Response::MergeFrom(const CStore_GetLocalizedNameForTags_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CStore_GetLocalizedNameForTags_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
}

void CStore_GetLocalizedNameForTags_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CStore_GetLocalizedNameForTags_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CStore_GetLocalizedNameForTags_Response::CopyFrom(const CStore_GetLocalizedNameForTags_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CStore_GetLocalizedNameForTags_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CStore_GetLocalizedNameForTags_Response::IsInitialized() const {
  return true;
}

void CStore_GetLocalizedNameForTags_Response::Swap(CStore_GetLocalizedNameForTags_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CStore_GetLocalizedNameForTags_Response::InternalSwap(CStore_GetLocalizedNameForTags_Response* other) {
  using std::swap;
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CStore_GetLocalizedNameForTags_Response::GetMetadata() const {
  protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Store::~Store() {}

const ::google::protobuf::ServiceDescriptor* Store::descriptor() {
  protobuf_steammessages_5fstore_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Store::GetDescriptor() {
  return descriptor();
}

void Store::GetLocalizedNameForTags(::google::protobuf::RpcController* controller,
                         const ::CStore_GetLocalizedNameForTags_Request*,
                         ::CStore_GetLocalizedNameForTags_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLocalizedNameForTags() not implemented.");
  done->Run();
}

void Store::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fstore_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      GetLocalizedNameForTags(controller,
             ::google::protobuf::down_cast<const ::CStore_GetLocalizedNameForTags_Request*>(request),
             ::google::protobuf::down_cast< ::CStore_GetLocalizedNameForTags_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Store::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CStore_GetLocalizedNameForTags_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Store::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CStore_GetLocalizedNameForTags_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Store_Stub::Store_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Store_Stub::Store_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Store_Stub::~Store_Stub() {
  if (owns_channel_) delete channel_;
}

void Store_Stub::GetLocalizedNameForTags(::google::protobuf::RpcController* controller,
                              const ::CStore_GetLocalizedNameForTags_Request* request,
                              ::CStore_GetLocalizedNameForTags_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CStore_GetLocalizedNameForTags_Request* Arena::CreateMaybeMessage< ::CStore_GetLocalizedNameForTags_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CStore_GetLocalizedNameForTags_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CStore_GetLocalizedNameForTags_Response_Tag* Arena::CreateMaybeMessage< ::CStore_GetLocalizedNameForTags_Response_Tag >(Arena* arena) {
  return Arena::CreateInternal< ::CStore_GetLocalizedNameForTags_Response_Tag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CStore_GetLocalizedNameForTags_Response* Arena::CreateMaybeMessage< ::CStore_GetLocalizedNameForTags_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CStore_GetLocalizedNameForTags_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
