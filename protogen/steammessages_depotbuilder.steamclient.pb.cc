// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_depotbuilder.steamclient.proto

#include "steammessages_depotbuilder.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_CommitAppBuild_Request_Depots;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_GetMissingDepotChunks_Response_Chunks;
}  // namespace protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto
class CContentBuilder_InitDepotBuild_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_InitDepotBuild_Request>
      _instance;
} _CContentBuilder_InitDepotBuild_Request_default_instance_;
class CContentBuilder_InitDepotBuild_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_InitDepotBuild_Response>
      _instance;
} _CContentBuilder_InitDepotBuild_Response_default_instance_;
class CContentBuilder_StartDepotUpload_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_StartDepotUpload_Request>
      _instance;
} _CContentBuilder_StartDepotUpload_Request_default_instance_;
class CContentBuilder_StartDepotUpload_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_StartDepotUpload_Response>
      _instance;
} _CContentBuilder_StartDepotUpload_Response_default_instance_;
class CContentBuilder_GetMissingDepotChunks_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_GetMissingDepotChunks_Request>
      _instance;
} _CContentBuilder_GetMissingDepotChunks_Request_default_instance_;
class CContentBuilder_GetMissingDepotChunks_Response_ChunksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_GetMissingDepotChunks_Response_Chunks>
      _instance;
} _CContentBuilder_GetMissingDepotChunks_Response_Chunks_default_instance_;
class CContentBuilder_GetMissingDepotChunks_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_GetMissingDepotChunks_Response>
      _instance;
} _CContentBuilder_GetMissingDepotChunks_Response_default_instance_;
class CContentBuilder_FinishDepotUpload_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_FinishDepotUpload_Request>
      _instance;
} _CContentBuilder_FinishDepotUpload_Request_default_instance_;
class CContentBuilder_FinishDepotUpload_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_FinishDepotUpload_Response>
      _instance;
} _CContentBuilder_FinishDepotUpload_Response_default_instance_;
class CContentBuilder_CommitAppBuild_Request_DepotsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_CommitAppBuild_Request_Depots>
      _instance;
} _CContentBuilder_CommitAppBuild_Request_Depots_default_instance_;
class CContentBuilder_CommitAppBuild_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_CommitAppBuild_Request>
      _instance;
} _CContentBuilder_CommitAppBuild_Request_default_instance_;
class CContentBuilder_CommitAppBuild_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_CommitAppBuild_Response>
      _instance;
} _CContentBuilder_CommitAppBuild_Response_default_instance_;
class CContentBuilder_SignInstallScript_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_SignInstallScript_Request>
      _instance;
} _CContentBuilder_SignInstallScript_Request_default_instance_;
class CContentBuilder_SignInstallScript_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CContentBuilder_SignInstallScript_Response>
      _instance;
} _CContentBuilder_SignInstallScript_Response_default_instance_;
namespace protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto {
static void InitDefaultsCContentBuilder_InitDepotBuild_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_InitDepotBuild_Request_default_instance_;
    new (ptr) ::CContentBuilder_InitDepotBuild_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_InitDepotBuild_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_InitDepotBuild_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_InitDepotBuild_Request}, {}};

static void InitDefaultsCContentBuilder_InitDepotBuild_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_InitDepotBuild_Response_default_instance_;
    new (ptr) ::CContentBuilder_InitDepotBuild_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_InitDepotBuild_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_InitDepotBuild_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_InitDepotBuild_Response}, {}};

static void InitDefaultsCContentBuilder_StartDepotUpload_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_StartDepotUpload_Request_default_instance_;
    new (ptr) ::CContentBuilder_StartDepotUpload_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_StartDepotUpload_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_StartDepotUpload_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_StartDepotUpload_Request}, {}};

static void InitDefaultsCContentBuilder_StartDepotUpload_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_StartDepotUpload_Response_default_instance_;
    new (ptr) ::CContentBuilder_StartDepotUpload_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_StartDepotUpload_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_StartDepotUpload_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_StartDepotUpload_Response}, {}};

static void InitDefaultsCContentBuilder_GetMissingDepotChunks_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_GetMissingDepotChunks_Request_default_instance_;
    new (ptr) ::CContentBuilder_GetMissingDepotChunks_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_GetMissingDepotChunks_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_GetMissingDepotChunks_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_GetMissingDepotChunks_Request}, {}};

static void InitDefaultsCContentBuilder_GetMissingDepotChunks_Response_Chunks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_GetMissingDepotChunks_Response_Chunks_default_instance_;
    new (ptr) ::CContentBuilder_GetMissingDepotChunks_Response_Chunks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_GetMissingDepotChunks_Response_Chunks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_GetMissingDepotChunks_Response_Chunks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_GetMissingDepotChunks_Response_Chunks}, {}};

static void InitDefaultsCContentBuilder_GetMissingDepotChunks_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_GetMissingDepotChunks_Response_default_instance_;
    new (ptr) ::CContentBuilder_GetMissingDepotChunks_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_GetMissingDepotChunks_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CContentBuilder_GetMissingDepotChunks_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCContentBuilder_GetMissingDepotChunks_Response}, {
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Response_Chunks.base,}};

static void InitDefaultsCContentBuilder_FinishDepotUpload_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_FinishDepotUpload_Request_default_instance_;
    new (ptr) ::CContentBuilder_FinishDepotUpload_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_FinishDepotUpload_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_FinishDepotUpload_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_FinishDepotUpload_Request}, {}};

static void InitDefaultsCContentBuilder_FinishDepotUpload_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_FinishDepotUpload_Response_default_instance_;
    new (ptr) ::CContentBuilder_FinishDepotUpload_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_FinishDepotUpload_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_FinishDepotUpload_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_FinishDepotUpload_Response}, {}};

static void InitDefaultsCContentBuilder_CommitAppBuild_Request_Depots() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_CommitAppBuild_Request_Depots_default_instance_;
    new (ptr) ::CContentBuilder_CommitAppBuild_Request_Depots();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_CommitAppBuild_Request_Depots::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_CommitAppBuild_Request_Depots =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_CommitAppBuild_Request_Depots}, {}};

static void InitDefaultsCContentBuilder_CommitAppBuild_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_CommitAppBuild_Request_default_instance_;
    new (ptr) ::CContentBuilder_CommitAppBuild_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_CommitAppBuild_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CContentBuilder_CommitAppBuild_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCContentBuilder_CommitAppBuild_Request}, {
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Request_Depots.base,}};

static void InitDefaultsCContentBuilder_CommitAppBuild_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_CommitAppBuild_Response_default_instance_;
    new (ptr) ::CContentBuilder_CommitAppBuild_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_CommitAppBuild_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_CommitAppBuild_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_CommitAppBuild_Response}, {}};

static void InitDefaultsCContentBuilder_SignInstallScript_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_SignInstallScript_Request_default_instance_;
    new (ptr) ::CContentBuilder_SignInstallScript_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_SignInstallScript_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_SignInstallScript_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_SignInstallScript_Request}, {}};

static void InitDefaultsCContentBuilder_SignInstallScript_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CContentBuilder_SignInstallScript_Response_default_instance_;
    new (ptr) ::CContentBuilder_SignInstallScript_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CContentBuilder_SignInstallScript_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CContentBuilder_SignInstallScript_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCContentBuilder_SignInstallScript_Response}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_InitDepotBuild_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_InitDepotBuild_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_StartDepotUpload_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_StartDepotUpload_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_GetMissingDepotChunks_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_GetMissingDepotChunks_Response_Chunks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_GetMissingDepotChunks_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_FinishDepotUpload_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_FinishDepotUpload_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_CommitAppBuild_Request_Depots.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_CommitAppBuild_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_CommitAppBuild_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_SignInstallScript_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CContentBuilder_SignInstallScript_Response.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Request, depotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Request, workshop_itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Request, for_local_cs_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, baseline_manifestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, chunk_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, aes_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, rsa_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_InitDepotBuild_Response, url_host_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, depotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, workshop_itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, for_local_cs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, baseline_manifestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Request, manifest_size_),
  0,
  1,
  2,
  4,
  3,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_StartDepotUpload_Response, depot_build_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Request, depot_build_handle_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response_Chunks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response_Chunks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response_Chunks, sha_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response, missing_chunks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response, total_missing_chunks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_GetMissingDepotChunks_Response, total_missing_bytes_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Request, depot_build_handle_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Response, manifestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_FinishDepotUpload_Response, prev_reused_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request_Depots, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request_Depots, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request_Depots, depotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request_Depots, manifestid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request, depot_manifests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request, build_notes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Request, live_branch_),
  2,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_CommitAppBuild_Response, buildid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Request, depotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Request, install_script_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CContentBuilder_SignInstallScript_Response, signed_install_script_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::CContentBuilder_InitDepotBuild_Request)},
  { 13, 23, sizeof(::CContentBuilder_InitDepotBuild_Response)},
  { 28, 39, sizeof(::CContentBuilder_StartDepotUpload_Request)},
  { 45, 51, sizeof(::CContentBuilder_StartDepotUpload_Response)},
  { 52, 59, sizeof(::CContentBuilder_GetMissingDepotChunks_Request)},
  { 61, 67, sizeof(::CContentBuilder_GetMissingDepotChunks_Response_Chunks)},
  { 68, 76, sizeof(::CContentBuilder_GetMissingDepotChunks_Response)},
  { 79, 86, sizeof(::CContentBuilder_FinishDepotUpload_Request)},
  { 88, 95, sizeof(::CContentBuilder_FinishDepotUpload_Response)},
  { 97, 104, sizeof(::CContentBuilder_CommitAppBuild_Request_Depots)},
  { 106, 115, sizeof(::CContentBuilder_CommitAppBuild_Request)},
  { 119, 125, sizeof(::CContentBuilder_CommitAppBuild_Response)},
  { 126, 134, sizeof(::CContentBuilder_SignInstallScript_Request)},
  { 137, 143, sizeof(::CContentBuilder_SignInstallScript_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_InitDepotBuild_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_InitDepotBuild_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_StartDepotUpload_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_StartDepotUpload_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_GetMissingDepotChunks_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_GetMissingDepotChunks_Response_Chunks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_GetMissingDepotChunks_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_FinishDepotUpload_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_FinishDepotUpload_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_CommitAppBuild_Request_Depots_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_CommitAppBuild_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_CommitAppBuild_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_SignInstallScript_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CContentBuilder_SignInstallScript_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_depotbuilder.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,steammessages_depotbuilder.steamclient"
      ".proto\032,steammessages_unified_base.steam"
      "client.proto\"w\n&CContentBuilder_InitDepo"
      "tBuild_Request\022\r\n\005appid\030\001 \001(\r\022\017\n\007depotid"
      "\030\002 \001(\r\022\027\n\017workshop_itemid\030\003 \001(\004\022\024\n\014for_l"
      "ocal_cs\030\004 \001(\010\"\216\001\n\'CContentBuilder_InitDe"
      "potBuild_Response\022\033\n\023baseline_manifestid"
      "\030\001 \001(\004\022\022\n\nchunk_size\030\002 \001(\r\022\017\n\007aes_key\030\003 "
      "\001(\014\022\017\n\007rsa_key\030\004 \001(\014\022\020\n\010url_host\030\005 \001(\t\"\255"
      "\001\n(CContentBuilder_StartDepotUpload_Requ"
      "est\022\r\n\005appid\030\001 \001(\r\022\017\n\007depotid\030\002 \001(\r\022\027\n\017w"
      "orkshop_itemid\030\003 \001(\004\022\024\n\014for_local_cs\030\004 \001"
      "(\010\022\033\n\023baseline_manifestid\030\005 \001(\004\022\025\n\rmanif"
      "est_size\030\006 \001(\r\"G\n)CContentBuilder_StartD"
      "epotUpload_Response\022\032\n\022depot_build_handl"
      "e\030\001 \001(\004\"Z\n-CContentBuilder_GetMissingDep"
      "otChunks_Request\022\r\n\005appid\030\001 \001(\r\022\032\n\022depot"
      "_build_handle\030\002 \001(\004\"\322\001\n.CContentBuilder_"
      "GetMissingDepotChunks_Response\022N\n\016missin"
      "g_chunks\030\001 \003(\01326.CContentBuilder_GetMiss"
      "ingDepotChunks_Response.Chunks\022\034\n\024total_"
      "missing_chunks\030\002 \001(\r\022\033\n\023total_missing_by"
      "tes\030\003 \001(\004\032\025\n\006Chunks\022\013\n\003sha\030\001 \001(\014\"V\n)CCon"
      "tentBuilder_FinishDepotUpload_Request\022\r\n"
      "\005appid\030\001 \001(\r\022\032\n\022depot_build_handle\030\002 \001(\004"
      "\"U\n*CContentBuilder_FinishDepotUpload_Re"
      "sponse\022\022\n\nmanifestid\030\001 \001(\004\022\023\n\013prev_reuse"
      "d\030\002 \001(\010\"\331\001\n&CContentBuilder_CommitAppBui"
      "ld_Request\022\r\n\005appid\030\001 \001(\r\022G\n\017depot_manif"
      "ests\030\002 \003(\0132..CContentBuilder_CommitAppBu"
      "ild_Request.Depots\022\023\n\013build_notes\030\004 \001(\t\022"
      "\023\n\013live_branch\030\005 \001(\t\032-\n\006Depots\022\017\n\007depoti"
      "d\030\001 \001(\r\022\022\n\nmanifestid\030\002 \001(\004\":\n\'CContentB"
      "uilder_CommitAppBuild_Response\022\017\n\007buildi"
      "d\030\001 \001(\r\"c\n)CContentBuilder_SignInstallSc"
      "ript_Request\022\r\n\005appid\030\001 \001(\r\022\017\n\007depotid\030\002"
      " \001(\r\022\026\n\016install_script\030\003 \001(\t\"K\n*CContent"
      "Builder_SignInstallScript_Response\022\035\n\025si"
      "gned_install_script\030\001 \001(\t2\222\010\n\016ContentBui"
      "lder\022\230\001\n\016InitDepotBuild\022\'.CContentBuilde"
      "r_InitDepotBuild_Request\032(.CContentBuild"
      "er_InitDepotBuild_Response\"3\202\265\030/Get init"
      "al parameters to start building a depot\022"
      "\236\001\n\020StartDepotUpload\022).CContentBuilder_S"
      "tartDepotUpload_Request\032*.CContentBuilde"
      "r_StartDepotUpload_Response\"3\202\265\030/Start u"
      "ploading manifest and chunks for a depot"
      "\022\251\001\n\025GetMissingDepotChunks\022..CContentBui"
      "lder_GetMissingDepotChunks_Request\032/.CCo"
      "ntentBuilder_GetMissingDepotChunks_Respo"
      "nse\"/\202\265\030+Get list of missing chunks for "
      "depot upload\022\261\001\n\021FinishDepotUpload\022*.CCo"
      "ntentBuilder_FinishDepotUpload_Request\032+"
      ".CContentBuilder_FinishDepotUpload_Respo"
      "nse\"C\202\265\030\?Commit a depot build after mani"
      "fest and all chunks are uploaded\022\247\001\n\016Com"
      "mitAppBuild\022\'.CContentBuilder_CommitAppB"
      "uild_Request\032(.CContentBuilder_CommitApp"
      "Build_Response\"B\202\265\030>Combine previous dep"
      "ot uploads into an app build and commit "
      "it\022\210\001\n\021SignInstallScript\022*.CContentBuild"
      "er_SignInstallScript_Request\032+.CContentB"
      "uilder_SignInstallScript_Response\"\032\202\265\030\026S"
      "ign an install script\032/\202\265\030+Interface to "
      "build and upload depot contentB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2595);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_depotbuilder.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto

// ===================================================================

void CContentBuilder_InitDepotBuild_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_InitDepotBuild_Request::kAppidFieldNumber;
const int CContentBuilder_InitDepotBuild_Request::kDepotidFieldNumber;
const int CContentBuilder_InitDepotBuild_Request::kWorkshopItemidFieldNumber;
const int CContentBuilder_InitDepotBuild_Request::kForLocalCsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_InitDepotBuild_Request::CContentBuilder_InitDepotBuild_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_InitDepotBuild_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_InitDepotBuild_Request)
}
CContentBuilder_InitDepotBuild_Request::CContentBuilder_InitDepotBuild_Request(const CContentBuilder_InitDepotBuild_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&for_local_cs_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(for_local_cs_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_InitDepotBuild_Request)
}

void CContentBuilder_InitDepotBuild_Request::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&for_local_cs_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(for_local_cs_));
}

CContentBuilder_InitDepotBuild_Request::~CContentBuilder_InitDepotBuild_Request() {
  // @@protoc_insertion_point(destructor:CContentBuilder_InitDepotBuild_Request)
  SharedDtor();
}

void CContentBuilder_InitDepotBuild_Request::SharedDtor() {
}

void CContentBuilder_InitDepotBuild_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_InitDepotBuild_Request::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_InitDepotBuild_Request& CContentBuilder_InitDepotBuild_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_InitDepotBuild_Request.base);
  return *internal_default_instance();
}


void CContentBuilder_InitDepotBuild_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_InitDepotBuild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&for_local_cs_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(for_local_cs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_InitDepotBuild_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_InitDepotBuild_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depotid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 workshop_itemid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_workshop_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workshop_itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool for_local_cs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_for_local_cs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &for_local_cs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_InitDepotBuild_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_InitDepotBuild_Request)
  return false;
#undef DO_
}

void CContentBuilder_InitDepotBuild_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_InitDepotBuild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 depotid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depotid(), output);
  }

  // optional uint64 workshop_itemid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->workshop_itemid(), output);
  }

  // optional bool for_local_cs = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->for_local_cs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_InitDepotBuild_Request)
}

::google::protobuf::uint8* CContentBuilder_InitDepotBuild_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_InitDepotBuild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 depotid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depotid(), target);
  }

  // optional uint64 workshop_itemid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->workshop_itemid(), target);
  }

  // optional bool for_local_cs = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->for_local_cs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_InitDepotBuild_Request)
  return target;
}

size_t CContentBuilder_InitDepotBuild_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_InitDepotBuild_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 depotid = 2;
    if (has_depotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depotid());
    }

    // optional uint64 workshop_itemid = 3;
    if (has_workshop_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->workshop_itemid());
    }

    // optional bool for_local_cs = 4;
    if (has_for_local_cs()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_InitDepotBuild_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_InitDepotBuild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_InitDepotBuild_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_InitDepotBuild_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_InitDepotBuild_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_InitDepotBuild_Request)
    MergeFrom(*source);
  }
}

void CContentBuilder_InitDepotBuild_Request::MergeFrom(const CContentBuilder_InitDepotBuild_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_InitDepotBuild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      depotid_ = from.depotid_;
    }
    if (cached_has_bits & 0x00000004u) {
      workshop_itemid_ = from.workshop_itemid_;
    }
    if (cached_has_bits & 0x00000008u) {
      for_local_cs_ = from.for_local_cs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_InitDepotBuild_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_InitDepotBuild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_InitDepotBuild_Request::CopyFrom(const CContentBuilder_InitDepotBuild_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_InitDepotBuild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_InitDepotBuild_Request::IsInitialized() const {
  return true;
}

void CContentBuilder_InitDepotBuild_Request::Swap(CContentBuilder_InitDepotBuild_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_InitDepotBuild_Request::InternalSwap(CContentBuilder_InitDepotBuild_Request* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(depotid_, other->depotid_);
  swap(workshop_itemid_, other->workshop_itemid_);
  swap(for_local_cs_, other->for_local_cs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_InitDepotBuild_Request::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_InitDepotBuild_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_InitDepotBuild_Response::kBaselineManifestidFieldNumber;
const int CContentBuilder_InitDepotBuild_Response::kChunkSizeFieldNumber;
const int CContentBuilder_InitDepotBuild_Response::kAesKeyFieldNumber;
const int CContentBuilder_InitDepotBuild_Response::kRsaKeyFieldNumber;
const int CContentBuilder_InitDepotBuild_Response::kUrlHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_InitDepotBuild_Response::CContentBuilder_InitDepotBuild_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_InitDepotBuild_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_InitDepotBuild_Response)
}
CContentBuilder_InitDepotBuild_Response::CContentBuilder_InitDepotBuild_Response(const CContentBuilder_InitDepotBuild_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  aes_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aes_key()) {
    aes_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aes_key_);
  }
  rsa_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rsa_key()) {
    rsa_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsa_key_);
  }
  url_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url_host()) {
    url_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_host_);
  }
  ::memcpy(&baseline_manifestid_, &from.baseline_manifestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&chunk_size_) -
    reinterpret_cast<char*>(&baseline_manifestid_)) + sizeof(chunk_size_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_InitDepotBuild_Response)
}

void CContentBuilder_InitDepotBuild_Response::SharedCtor() {
  aes_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsa_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseline_manifestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chunk_size_) -
      reinterpret_cast<char*>(&baseline_manifestid_)) + sizeof(chunk_size_));
}

CContentBuilder_InitDepotBuild_Response::~CContentBuilder_InitDepotBuild_Response() {
  // @@protoc_insertion_point(destructor:CContentBuilder_InitDepotBuild_Response)
  SharedDtor();
}

void CContentBuilder_InitDepotBuild_Response::SharedDtor() {
  aes_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsa_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CContentBuilder_InitDepotBuild_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_InitDepotBuild_Response::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_InitDepotBuild_Response& CContentBuilder_InitDepotBuild_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_InitDepotBuild_Response.base);
  return *internal_default_instance();
}


void CContentBuilder_InitDepotBuild_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_InitDepotBuild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      aes_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      rsa_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      url_host_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&baseline_manifestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chunk_size_) -
        reinterpret_cast<char*>(&baseline_manifestid_)) + sizeof(chunk_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_InitDepotBuild_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_InitDepotBuild_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 baseline_manifestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_baseline_manifestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &baseline_manifestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 chunk_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chunk_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chunk_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes aes_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_aes_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rsa_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rsa_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url_host = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url_host().data(), static_cast<int>(this->url_host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CContentBuilder_InitDepotBuild_Response.url_host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_InitDepotBuild_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_InitDepotBuild_Response)
  return false;
#undef DO_
}

void CContentBuilder_InitDepotBuild_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_InitDepotBuild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 baseline_manifestid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->baseline_manifestid(), output);
  }

  // optional uint32 chunk_size = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chunk_size(), output);
  }

  // optional bytes aes_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->aes_key(), output);
  }

  // optional bytes rsa_key = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->rsa_key(), output);
  }

  // optional string url_host = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url_host().data(), static_cast<int>(this->url_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_InitDepotBuild_Response.url_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url_host(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_InitDepotBuild_Response)
}

::google::protobuf::uint8* CContentBuilder_InitDepotBuild_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_InitDepotBuild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 baseline_manifestid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->baseline_manifestid(), target);
  }

  // optional uint32 chunk_size = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chunk_size(), target);
  }

  // optional bytes aes_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->aes_key(), target);
  }

  // optional bytes rsa_key = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->rsa_key(), target);
  }

  // optional string url_host = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url_host().data(), static_cast<int>(this->url_host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_InitDepotBuild_Response.url_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url_host(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_InitDepotBuild_Response)
  return target;
}

size_t CContentBuilder_InitDepotBuild_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_InitDepotBuild_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes aes_key = 3;
    if (has_aes_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->aes_key());
    }

    // optional bytes rsa_key = 4;
    if (has_rsa_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rsa_key());
    }

    // optional string url_host = 5;
    if (has_url_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url_host());
    }

    // optional uint64 baseline_manifestid = 1;
    if (has_baseline_manifestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->baseline_manifestid());
    }

    // optional uint32 chunk_size = 2;
    if (has_chunk_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chunk_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_InitDepotBuild_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_InitDepotBuild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_InitDepotBuild_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_InitDepotBuild_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_InitDepotBuild_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_InitDepotBuild_Response)
    MergeFrom(*source);
  }
}

void CContentBuilder_InitDepotBuild_Response::MergeFrom(const CContentBuilder_InitDepotBuild_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_InitDepotBuild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_aes_key();
      aes_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aes_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rsa_key();
      rsa_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsa_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_url_host();
      url_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_host_);
    }
    if (cached_has_bits & 0x00000008u) {
      baseline_manifestid_ = from.baseline_manifestid_;
    }
    if (cached_has_bits & 0x00000010u) {
      chunk_size_ = from.chunk_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_InitDepotBuild_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_InitDepotBuild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_InitDepotBuild_Response::CopyFrom(const CContentBuilder_InitDepotBuild_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_InitDepotBuild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_InitDepotBuild_Response::IsInitialized() const {
  return true;
}

void CContentBuilder_InitDepotBuild_Response::Swap(CContentBuilder_InitDepotBuild_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_InitDepotBuild_Response::InternalSwap(CContentBuilder_InitDepotBuild_Response* other) {
  using std::swap;
  aes_key_.Swap(&other->aes_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rsa_key_.Swap(&other->rsa_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_host_.Swap(&other->url_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseline_manifestid_, other->baseline_manifestid_);
  swap(chunk_size_, other->chunk_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_InitDepotBuild_Response::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_StartDepotUpload_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_StartDepotUpload_Request::kAppidFieldNumber;
const int CContentBuilder_StartDepotUpload_Request::kDepotidFieldNumber;
const int CContentBuilder_StartDepotUpload_Request::kWorkshopItemidFieldNumber;
const int CContentBuilder_StartDepotUpload_Request::kForLocalCsFieldNumber;
const int CContentBuilder_StartDepotUpload_Request::kBaselineManifestidFieldNumber;
const int CContentBuilder_StartDepotUpload_Request::kManifestSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_StartDepotUpload_Request::CContentBuilder_StartDepotUpload_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_StartDepotUpload_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_StartDepotUpload_Request)
}
CContentBuilder_StartDepotUpload_Request::CContentBuilder_StartDepotUpload_Request(const CContentBuilder_StartDepotUpload_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&manifest_size_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(manifest_size_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_StartDepotUpload_Request)
}

void CContentBuilder_StartDepotUpload_Request::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&manifest_size_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(manifest_size_));
}

CContentBuilder_StartDepotUpload_Request::~CContentBuilder_StartDepotUpload_Request() {
  // @@protoc_insertion_point(destructor:CContentBuilder_StartDepotUpload_Request)
  SharedDtor();
}

void CContentBuilder_StartDepotUpload_Request::SharedDtor() {
}

void CContentBuilder_StartDepotUpload_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_StartDepotUpload_Request::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_StartDepotUpload_Request& CContentBuilder_StartDepotUpload_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_StartDepotUpload_Request.base);
  return *internal_default_instance();
}


void CContentBuilder_StartDepotUpload_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_StartDepotUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&manifest_size_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(manifest_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_StartDepotUpload_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_StartDepotUpload_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depotid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 workshop_itemid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_workshop_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workshop_itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool for_local_cs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_for_local_cs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &for_local_cs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 baseline_manifestid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_baseline_manifestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &baseline_manifestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 manifest_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_manifest_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &manifest_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_StartDepotUpload_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_StartDepotUpload_Request)
  return false;
#undef DO_
}

void CContentBuilder_StartDepotUpload_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_StartDepotUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 depotid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depotid(), output);
  }

  // optional uint64 workshop_itemid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->workshop_itemid(), output);
  }

  // optional bool for_local_cs = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->for_local_cs(), output);
  }

  // optional uint64 baseline_manifestid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->baseline_manifestid(), output);
  }

  // optional uint32 manifest_size = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->manifest_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_StartDepotUpload_Request)
}

::google::protobuf::uint8* CContentBuilder_StartDepotUpload_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_StartDepotUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 depotid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depotid(), target);
  }

  // optional uint64 workshop_itemid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->workshop_itemid(), target);
  }

  // optional bool for_local_cs = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->for_local_cs(), target);
  }

  // optional uint64 baseline_manifestid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->baseline_manifestid(), target);
  }

  // optional uint32 manifest_size = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->manifest_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_StartDepotUpload_Request)
  return target;
}

size_t CContentBuilder_StartDepotUpload_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_StartDepotUpload_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 depotid = 2;
    if (has_depotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depotid());
    }

    // optional uint64 workshop_itemid = 3;
    if (has_workshop_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->workshop_itemid());
    }

    // optional uint64 baseline_manifestid = 5;
    if (has_baseline_manifestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->baseline_manifestid());
    }

    // optional bool for_local_cs = 4;
    if (has_for_local_cs()) {
      total_size += 1 + 1;
    }

    // optional uint32 manifest_size = 6;
    if (has_manifest_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->manifest_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_StartDepotUpload_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_StartDepotUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_StartDepotUpload_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_StartDepotUpload_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_StartDepotUpload_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_StartDepotUpload_Request)
    MergeFrom(*source);
  }
}

void CContentBuilder_StartDepotUpload_Request::MergeFrom(const CContentBuilder_StartDepotUpload_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_StartDepotUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      depotid_ = from.depotid_;
    }
    if (cached_has_bits & 0x00000004u) {
      workshop_itemid_ = from.workshop_itemid_;
    }
    if (cached_has_bits & 0x00000008u) {
      baseline_manifestid_ = from.baseline_manifestid_;
    }
    if (cached_has_bits & 0x00000010u) {
      for_local_cs_ = from.for_local_cs_;
    }
    if (cached_has_bits & 0x00000020u) {
      manifest_size_ = from.manifest_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_StartDepotUpload_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_StartDepotUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_StartDepotUpload_Request::CopyFrom(const CContentBuilder_StartDepotUpload_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_StartDepotUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_StartDepotUpload_Request::IsInitialized() const {
  return true;
}

void CContentBuilder_StartDepotUpload_Request::Swap(CContentBuilder_StartDepotUpload_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_StartDepotUpload_Request::InternalSwap(CContentBuilder_StartDepotUpload_Request* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(depotid_, other->depotid_);
  swap(workshop_itemid_, other->workshop_itemid_);
  swap(baseline_manifestid_, other->baseline_manifestid_);
  swap(for_local_cs_, other->for_local_cs_);
  swap(manifest_size_, other->manifest_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_StartDepotUpload_Request::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_StartDepotUpload_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_StartDepotUpload_Response::kDepotBuildHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_StartDepotUpload_Response::CContentBuilder_StartDepotUpload_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_StartDepotUpload_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_StartDepotUpload_Response)
}
CContentBuilder_StartDepotUpload_Response::CContentBuilder_StartDepotUpload_Response(const CContentBuilder_StartDepotUpload_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  depot_build_handle_ = from.depot_build_handle_;
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_StartDepotUpload_Response)
}

void CContentBuilder_StartDepotUpload_Response::SharedCtor() {
  depot_build_handle_ = GOOGLE_ULONGLONG(0);
}

CContentBuilder_StartDepotUpload_Response::~CContentBuilder_StartDepotUpload_Response() {
  // @@protoc_insertion_point(destructor:CContentBuilder_StartDepotUpload_Response)
  SharedDtor();
}

void CContentBuilder_StartDepotUpload_Response::SharedDtor() {
}

void CContentBuilder_StartDepotUpload_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_StartDepotUpload_Response::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_StartDepotUpload_Response& CContentBuilder_StartDepotUpload_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_StartDepotUpload_Response.base);
  return *internal_default_instance();
}


void CContentBuilder_StartDepotUpload_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_StartDepotUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depot_build_handle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_StartDepotUpload_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_StartDepotUpload_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 depot_build_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_depot_build_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &depot_build_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_StartDepotUpload_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_StartDepotUpload_Response)
  return false;
#undef DO_
}

void CContentBuilder_StartDepotUpload_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_StartDepotUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 depot_build_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->depot_build_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_StartDepotUpload_Response)
}

::google::protobuf::uint8* CContentBuilder_StartDepotUpload_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_StartDepotUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 depot_build_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->depot_build_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_StartDepotUpload_Response)
  return target;
}

size_t CContentBuilder_StartDepotUpload_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_StartDepotUpload_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 depot_build_handle = 1;
  if (has_depot_build_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->depot_build_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_StartDepotUpload_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_StartDepotUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_StartDepotUpload_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_StartDepotUpload_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_StartDepotUpload_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_StartDepotUpload_Response)
    MergeFrom(*source);
  }
}

void CContentBuilder_StartDepotUpload_Response::MergeFrom(const CContentBuilder_StartDepotUpload_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_StartDepotUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_depot_build_handle()) {
    set_depot_build_handle(from.depot_build_handle());
  }
}

void CContentBuilder_StartDepotUpload_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_StartDepotUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_StartDepotUpload_Response::CopyFrom(const CContentBuilder_StartDepotUpload_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_StartDepotUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_StartDepotUpload_Response::IsInitialized() const {
  return true;
}

void CContentBuilder_StartDepotUpload_Response::Swap(CContentBuilder_StartDepotUpload_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_StartDepotUpload_Response::InternalSwap(CContentBuilder_StartDepotUpload_Response* other) {
  using std::swap;
  swap(depot_build_handle_, other->depot_build_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_StartDepotUpload_Response::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_GetMissingDepotChunks_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_GetMissingDepotChunks_Request::kAppidFieldNumber;
const int CContentBuilder_GetMissingDepotChunks_Request::kDepotBuildHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_GetMissingDepotChunks_Request::CContentBuilder_GetMissingDepotChunks_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_GetMissingDepotChunks_Request)
}
CContentBuilder_GetMissingDepotChunks_Request::CContentBuilder_GetMissingDepotChunks_Request(const CContentBuilder_GetMissingDepotChunks_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&depot_build_handle_, &from.depot_build_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&depot_build_handle_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_GetMissingDepotChunks_Request)
}

void CContentBuilder_GetMissingDepotChunks_Request::SharedCtor() {
  ::memset(&depot_build_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&depot_build_handle_)) + sizeof(appid_));
}

CContentBuilder_GetMissingDepotChunks_Request::~CContentBuilder_GetMissingDepotChunks_Request() {
  // @@protoc_insertion_point(destructor:CContentBuilder_GetMissingDepotChunks_Request)
  SharedDtor();
}

void CContentBuilder_GetMissingDepotChunks_Request::SharedDtor() {
}

void CContentBuilder_GetMissingDepotChunks_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_GetMissingDepotChunks_Request::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_GetMissingDepotChunks_Request& CContentBuilder_GetMissingDepotChunks_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Request.base);
  return *internal_default_instance();
}


void CContentBuilder_GetMissingDepotChunks_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_GetMissingDepotChunks_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&depot_build_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&depot_build_handle_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_GetMissingDepotChunks_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_GetMissingDepotChunks_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 depot_build_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depot_build_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &depot_build_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_GetMissingDepotChunks_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_GetMissingDepotChunks_Request)
  return false;
#undef DO_
}

void CContentBuilder_GetMissingDepotChunks_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_GetMissingDepotChunks_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint64 depot_build_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->depot_build_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_GetMissingDepotChunks_Request)
}

::google::protobuf::uint8* CContentBuilder_GetMissingDepotChunks_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_GetMissingDepotChunks_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint64 depot_build_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->depot_build_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_GetMissingDepotChunks_Request)
  return target;
}

size_t CContentBuilder_GetMissingDepotChunks_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_GetMissingDepotChunks_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 depot_build_handle = 2;
    if (has_depot_build_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->depot_build_handle());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_GetMissingDepotChunks_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_GetMissingDepotChunks_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_GetMissingDepotChunks_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_GetMissingDepotChunks_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_GetMissingDepotChunks_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_GetMissingDepotChunks_Request)
    MergeFrom(*source);
  }
}

void CContentBuilder_GetMissingDepotChunks_Request::MergeFrom(const CContentBuilder_GetMissingDepotChunks_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_GetMissingDepotChunks_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      depot_build_handle_ = from.depot_build_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_GetMissingDepotChunks_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_GetMissingDepotChunks_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_GetMissingDepotChunks_Request::CopyFrom(const CContentBuilder_GetMissingDepotChunks_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_GetMissingDepotChunks_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_GetMissingDepotChunks_Request::IsInitialized() const {
  return true;
}

void CContentBuilder_GetMissingDepotChunks_Request::Swap(CContentBuilder_GetMissingDepotChunks_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_GetMissingDepotChunks_Request::InternalSwap(CContentBuilder_GetMissingDepotChunks_Request* other) {
  using std::swap;
  swap(depot_build_handle_, other->depot_build_handle_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_GetMissingDepotChunks_Request::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_GetMissingDepotChunks_Response_Chunks::kShaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_GetMissingDepotChunks_Response_Chunks::CContentBuilder_GetMissingDepotChunks_Response_Chunks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Response_Chunks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
}
CContentBuilder_GetMissingDepotChunks_Response_Chunks::CContentBuilder_GetMissingDepotChunks_Response_Chunks(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha()) {
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::SharedCtor() {
  sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CContentBuilder_GetMissingDepotChunks_Response_Chunks::~CContentBuilder_GetMissingDepotChunks_Response_Chunks() {
  // @@protoc_insertion_point(destructor:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  SharedDtor();
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::SharedDtor() {
  sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_GetMissingDepotChunks_Response_Chunks::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_GetMissingDepotChunks_Response_Chunks& CContentBuilder_GetMissingDepotChunks_Response_Chunks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Response_Chunks.base);
  return *internal_default_instance();
}


void CContentBuilder_GetMissingDepotChunks_Response_Chunks::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sha_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_GetMissingDepotChunks_Response_Chunks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  return false;
#undef DO_
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sha(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
}

::google::protobuf::uint8* CContentBuilder_GetMissingDepotChunks_Response_Chunks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sha(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  return target;
}

size_t CContentBuilder_GetMissingDepotChunks_Response_Chunks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes sha = 1;
  if (has_sha()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sha());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_GetMissingDepotChunks_Response_Chunks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_GetMissingDepotChunks_Response_Chunks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
    MergeFrom(*source);
  }
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::MergeFrom(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sha()) {
    set_has_sha();
    sha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_);
  }
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::CopyFrom(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_GetMissingDepotChunks_Response_Chunks::IsInitialized() const {
  return true;
}

void CContentBuilder_GetMissingDepotChunks_Response_Chunks::Swap(CContentBuilder_GetMissingDepotChunks_Response_Chunks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_GetMissingDepotChunks_Response_Chunks::InternalSwap(CContentBuilder_GetMissingDepotChunks_Response_Chunks* other) {
  using std::swap;
  sha_.Swap(&other->sha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_GetMissingDepotChunks_Response_Chunks::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_GetMissingDepotChunks_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_GetMissingDepotChunks_Response::kMissingChunksFieldNumber;
const int CContentBuilder_GetMissingDepotChunks_Response::kTotalMissingChunksFieldNumber;
const int CContentBuilder_GetMissingDepotChunks_Response::kTotalMissingBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_GetMissingDepotChunks_Response::CContentBuilder_GetMissingDepotChunks_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_GetMissingDepotChunks_Response)
}
CContentBuilder_GetMissingDepotChunks_Response::CContentBuilder_GetMissingDepotChunks_Response(const CContentBuilder_GetMissingDepotChunks_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      missing_chunks_(from.missing_chunks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_missing_bytes_, &from.total_missing_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_missing_chunks_) -
    reinterpret_cast<char*>(&total_missing_bytes_)) + sizeof(total_missing_chunks_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_GetMissingDepotChunks_Response)
}

void CContentBuilder_GetMissingDepotChunks_Response::SharedCtor() {
  ::memset(&total_missing_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_missing_chunks_) -
      reinterpret_cast<char*>(&total_missing_bytes_)) + sizeof(total_missing_chunks_));
}

CContentBuilder_GetMissingDepotChunks_Response::~CContentBuilder_GetMissingDepotChunks_Response() {
  // @@protoc_insertion_point(destructor:CContentBuilder_GetMissingDepotChunks_Response)
  SharedDtor();
}

void CContentBuilder_GetMissingDepotChunks_Response::SharedDtor() {
}

void CContentBuilder_GetMissingDepotChunks_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_GetMissingDepotChunks_Response::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_GetMissingDepotChunks_Response& CContentBuilder_GetMissingDepotChunks_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_GetMissingDepotChunks_Response.base);
  return *internal_default_instance();
}


void CContentBuilder_GetMissingDepotChunks_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_GetMissingDepotChunks_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  missing_chunks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&total_missing_bytes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_missing_chunks_) -
        reinterpret_cast<char*>(&total_missing_bytes_)) + sizeof(total_missing_chunks_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_GetMissingDepotChunks_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_GetMissingDepotChunks_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_missing_chunks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_missing_chunks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total_missing_chunks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_missing_chunks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_missing_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total_missing_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_missing_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_GetMissingDepotChunks_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_GetMissingDepotChunks_Response)
  return false;
#undef DO_
}

void CContentBuilder_GetMissingDepotChunks_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_GetMissingDepotChunks_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missing_chunks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->missing_chunks(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 total_missing_chunks = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_missing_chunks(), output);
  }

  // optional uint64 total_missing_bytes = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_missing_bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_GetMissingDepotChunks_Response)
}

::google::protobuf::uint8* CContentBuilder_GetMissingDepotChunks_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_GetMissingDepotChunks_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missing_chunks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->missing_chunks(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 total_missing_chunks = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_missing_chunks(), target);
  }

  // optional uint64 total_missing_bytes = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_missing_bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_GetMissingDepotChunks_Response)
  return target;
}

size_t CContentBuilder_GetMissingDepotChunks_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_GetMissingDepotChunks_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->missing_chunks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->missing_chunks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 total_missing_bytes = 3;
    if (has_total_missing_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_missing_bytes());
    }

    // optional uint32 total_missing_chunks = 2;
    if (has_total_missing_chunks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_missing_chunks());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_GetMissingDepotChunks_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_GetMissingDepotChunks_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_GetMissingDepotChunks_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_GetMissingDepotChunks_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_GetMissingDepotChunks_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_GetMissingDepotChunks_Response)
    MergeFrom(*source);
  }
}

void CContentBuilder_GetMissingDepotChunks_Response::MergeFrom(const CContentBuilder_GetMissingDepotChunks_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_GetMissingDepotChunks_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  missing_chunks_.MergeFrom(from.missing_chunks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_missing_bytes_ = from.total_missing_bytes_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_missing_chunks_ = from.total_missing_chunks_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_GetMissingDepotChunks_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_GetMissingDepotChunks_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_GetMissingDepotChunks_Response::CopyFrom(const CContentBuilder_GetMissingDepotChunks_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_GetMissingDepotChunks_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_GetMissingDepotChunks_Response::IsInitialized() const {
  return true;
}

void CContentBuilder_GetMissingDepotChunks_Response::Swap(CContentBuilder_GetMissingDepotChunks_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_GetMissingDepotChunks_Response::InternalSwap(CContentBuilder_GetMissingDepotChunks_Response* other) {
  using std::swap;
  CastToBase(&missing_chunks_)->InternalSwap(CastToBase(&other->missing_chunks_));
  swap(total_missing_bytes_, other->total_missing_bytes_);
  swap(total_missing_chunks_, other->total_missing_chunks_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_GetMissingDepotChunks_Response::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_FinishDepotUpload_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_FinishDepotUpload_Request::kAppidFieldNumber;
const int CContentBuilder_FinishDepotUpload_Request::kDepotBuildHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_FinishDepotUpload_Request::CContentBuilder_FinishDepotUpload_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_FinishDepotUpload_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_FinishDepotUpload_Request)
}
CContentBuilder_FinishDepotUpload_Request::CContentBuilder_FinishDepotUpload_Request(const CContentBuilder_FinishDepotUpload_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&depot_build_handle_, &from.depot_build_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&depot_build_handle_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_FinishDepotUpload_Request)
}

void CContentBuilder_FinishDepotUpload_Request::SharedCtor() {
  ::memset(&depot_build_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&depot_build_handle_)) + sizeof(appid_));
}

CContentBuilder_FinishDepotUpload_Request::~CContentBuilder_FinishDepotUpload_Request() {
  // @@protoc_insertion_point(destructor:CContentBuilder_FinishDepotUpload_Request)
  SharedDtor();
}

void CContentBuilder_FinishDepotUpload_Request::SharedDtor() {
}

void CContentBuilder_FinishDepotUpload_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_FinishDepotUpload_Request::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_FinishDepotUpload_Request& CContentBuilder_FinishDepotUpload_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_FinishDepotUpload_Request.base);
  return *internal_default_instance();
}


void CContentBuilder_FinishDepotUpload_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_FinishDepotUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&depot_build_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&depot_build_handle_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_FinishDepotUpload_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_FinishDepotUpload_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 depot_build_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depot_build_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &depot_build_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_FinishDepotUpload_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_FinishDepotUpload_Request)
  return false;
#undef DO_
}

void CContentBuilder_FinishDepotUpload_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_FinishDepotUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint64 depot_build_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->depot_build_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_FinishDepotUpload_Request)
}

::google::protobuf::uint8* CContentBuilder_FinishDepotUpload_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_FinishDepotUpload_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint64 depot_build_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->depot_build_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_FinishDepotUpload_Request)
  return target;
}

size_t CContentBuilder_FinishDepotUpload_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_FinishDepotUpload_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 depot_build_handle = 2;
    if (has_depot_build_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->depot_build_handle());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_FinishDepotUpload_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_FinishDepotUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_FinishDepotUpload_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_FinishDepotUpload_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_FinishDepotUpload_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_FinishDepotUpload_Request)
    MergeFrom(*source);
  }
}

void CContentBuilder_FinishDepotUpload_Request::MergeFrom(const CContentBuilder_FinishDepotUpload_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_FinishDepotUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      depot_build_handle_ = from.depot_build_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_FinishDepotUpload_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_FinishDepotUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_FinishDepotUpload_Request::CopyFrom(const CContentBuilder_FinishDepotUpload_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_FinishDepotUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_FinishDepotUpload_Request::IsInitialized() const {
  return true;
}

void CContentBuilder_FinishDepotUpload_Request::Swap(CContentBuilder_FinishDepotUpload_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_FinishDepotUpload_Request::InternalSwap(CContentBuilder_FinishDepotUpload_Request* other) {
  using std::swap;
  swap(depot_build_handle_, other->depot_build_handle_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_FinishDepotUpload_Request::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_FinishDepotUpload_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_FinishDepotUpload_Response::kManifestidFieldNumber;
const int CContentBuilder_FinishDepotUpload_Response::kPrevReusedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_FinishDepotUpload_Response::CContentBuilder_FinishDepotUpload_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_FinishDepotUpload_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_FinishDepotUpload_Response)
}
CContentBuilder_FinishDepotUpload_Response::CContentBuilder_FinishDepotUpload_Response(const CContentBuilder_FinishDepotUpload_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&manifestid_, &from.manifestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&prev_reused_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(prev_reused_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_FinishDepotUpload_Response)
}

void CContentBuilder_FinishDepotUpload_Response::SharedCtor() {
  ::memset(&manifestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prev_reused_) -
      reinterpret_cast<char*>(&manifestid_)) + sizeof(prev_reused_));
}

CContentBuilder_FinishDepotUpload_Response::~CContentBuilder_FinishDepotUpload_Response() {
  // @@protoc_insertion_point(destructor:CContentBuilder_FinishDepotUpload_Response)
  SharedDtor();
}

void CContentBuilder_FinishDepotUpload_Response::SharedDtor() {
}

void CContentBuilder_FinishDepotUpload_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_FinishDepotUpload_Response::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_FinishDepotUpload_Response& CContentBuilder_FinishDepotUpload_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_FinishDepotUpload_Response.base);
  return *internal_default_instance();
}


void CContentBuilder_FinishDepotUpload_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_FinishDepotUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&manifestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&prev_reused_) -
        reinterpret_cast<char*>(&manifestid_)) + sizeof(prev_reused_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_FinishDepotUpload_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_FinishDepotUpload_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 manifestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_manifestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &manifestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool prev_reused = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_prev_reused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prev_reused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_FinishDepotUpload_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_FinishDepotUpload_Response)
  return false;
#undef DO_
}

void CContentBuilder_FinishDepotUpload_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_FinishDepotUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifestid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->manifestid(), output);
  }

  // optional bool prev_reused = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->prev_reused(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_FinishDepotUpload_Response)
}

::google::protobuf::uint8* CContentBuilder_FinishDepotUpload_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_FinishDepotUpload_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifestid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->manifestid(), target);
  }

  // optional bool prev_reused = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->prev_reused(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_FinishDepotUpload_Response)
  return target;
}

size_t CContentBuilder_FinishDepotUpload_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_FinishDepotUpload_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 manifestid = 1;
    if (has_manifestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->manifestid());
    }

    // optional bool prev_reused = 2;
    if (has_prev_reused()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_FinishDepotUpload_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_FinishDepotUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_FinishDepotUpload_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_FinishDepotUpload_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_FinishDepotUpload_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_FinishDepotUpload_Response)
    MergeFrom(*source);
  }
}

void CContentBuilder_FinishDepotUpload_Response::MergeFrom(const CContentBuilder_FinishDepotUpload_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_FinishDepotUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      manifestid_ = from.manifestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      prev_reused_ = from.prev_reused_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_FinishDepotUpload_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_FinishDepotUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_FinishDepotUpload_Response::CopyFrom(const CContentBuilder_FinishDepotUpload_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_FinishDepotUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_FinishDepotUpload_Response::IsInitialized() const {
  return true;
}

void CContentBuilder_FinishDepotUpload_Response::Swap(CContentBuilder_FinishDepotUpload_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_FinishDepotUpload_Response::InternalSwap(CContentBuilder_FinishDepotUpload_Response* other) {
  using std::swap;
  swap(manifestid_, other->manifestid_);
  swap(prev_reused_, other->prev_reused_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_FinishDepotUpload_Response::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_CommitAppBuild_Request_Depots::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_CommitAppBuild_Request_Depots::kDepotidFieldNumber;
const int CContentBuilder_CommitAppBuild_Request_Depots::kManifestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_CommitAppBuild_Request_Depots::CContentBuilder_CommitAppBuild_Request_Depots()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Request_Depots.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_CommitAppBuild_Request.Depots)
}
CContentBuilder_CommitAppBuild_Request_Depots::CContentBuilder_CommitAppBuild_Request_Depots(const CContentBuilder_CommitAppBuild_Request_Depots& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&manifestid_, &from.manifestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&depotid_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(depotid_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_CommitAppBuild_Request.Depots)
}

void CContentBuilder_CommitAppBuild_Request_Depots::SharedCtor() {
  ::memset(&manifestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&depotid_) -
      reinterpret_cast<char*>(&manifestid_)) + sizeof(depotid_));
}

CContentBuilder_CommitAppBuild_Request_Depots::~CContentBuilder_CommitAppBuild_Request_Depots() {
  // @@protoc_insertion_point(destructor:CContentBuilder_CommitAppBuild_Request.Depots)
  SharedDtor();
}

void CContentBuilder_CommitAppBuild_Request_Depots::SharedDtor() {
}

void CContentBuilder_CommitAppBuild_Request_Depots::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_CommitAppBuild_Request_Depots::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_CommitAppBuild_Request_Depots& CContentBuilder_CommitAppBuild_Request_Depots::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Request_Depots.base);
  return *internal_default_instance();
}


void CContentBuilder_CommitAppBuild_Request_Depots::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_CommitAppBuild_Request.Depots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&manifestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&depotid_) -
        reinterpret_cast<char*>(&manifestid_)) + sizeof(depotid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_CommitAppBuild_Request_Depots::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_CommitAppBuild_Request.Depots)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depotid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_depotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 manifestid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_manifestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &manifestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_CommitAppBuild_Request.Depots)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_CommitAppBuild_Request.Depots)
  return false;
#undef DO_
}

void CContentBuilder_CommitAppBuild_Request_Depots::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_CommitAppBuild_Request.Depots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depotid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depotid(), output);
  }

  // optional uint64 manifestid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->manifestid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_CommitAppBuild_Request.Depots)
}

::google::protobuf::uint8* CContentBuilder_CommitAppBuild_Request_Depots::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_CommitAppBuild_Request.Depots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depotid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depotid(), target);
  }

  // optional uint64 manifestid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->manifestid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_CommitAppBuild_Request.Depots)
  return target;
}

size_t CContentBuilder_CommitAppBuild_Request_Depots::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_CommitAppBuild_Request.Depots)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 manifestid = 2;
    if (has_manifestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->manifestid());
    }

    // optional uint32 depotid = 1;
    if (has_depotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depotid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_CommitAppBuild_Request_Depots::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_CommitAppBuild_Request.Depots)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_CommitAppBuild_Request_Depots* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_CommitAppBuild_Request_Depots>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_CommitAppBuild_Request.Depots)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_CommitAppBuild_Request.Depots)
    MergeFrom(*source);
  }
}

void CContentBuilder_CommitAppBuild_Request_Depots::MergeFrom(const CContentBuilder_CommitAppBuild_Request_Depots& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_CommitAppBuild_Request.Depots)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      manifestid_ = from.manifestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      depotid_ = from.depotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_CommitAppBuild_Request_Depots::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_CommitAppBuild_Request.Depots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_CommitAppBuild_Request_Depots::CopyFrom(const CContentBuilder_CommitAppBuild_Request_Depots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_CommitAppBuild_Request.Depots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_CommitAppBuild_Request_Depots::IsInitialized() const {
  return true;
}

void CContentBuilder_CommitAppBuild_Request_Depots::Swap(CContentBuilder_CommitAppBuild_Request_Depots* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_CommitAppBuild_Request_Depots::InternalSwap(CContentBuilder_CommitAppBuild_Request_Depots* other) {
  using std::swap;
  swap(manifestid_, other->manifestid_);
  swap(depotid_, other->depotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_CommitAppBuild_Request_Depots::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_CommitAppBuild_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_CommitAppBuild_Request::kAppidFieldNumber;
const int CContentBuilder_CommitAppBuild_Request::kDepotManifestsFieldNumber;
const int CContentBuilder_CommitAppBuild_Request::kBuildNotesFieldNumber;
const int CContentBuilder_CommitAppBuild_Request::kLiveBranchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_CommitAppBuild_Request::CContentBuilder_CommitAppBuild_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_CommitAppBuild_Request)
}
CContentBuilder_CommitAppBuild_Request::CContentBuilder_CommitAppBuild_Request(const CContentBuilder_CommitAppBuild_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      depot_manifests_(from.depot_manifests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_notes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_build_notes()) {
    build_notes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_notes_);
  }
  live_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_live_branch()) {
    live_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_branch_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_CommitAppBuild_Request)
}

void CContentBuilder_CommitAppBuild_Request::SharedCtor() {
  build_notes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CContentBuilder_CommitAppBuild_Request::~CContentBuilder_CommitAppBuild_Request() {
  // @@protoc_insertion_point(destructor:CContentBuilder_CommitAppBuild_Request)
  SharedDtor();
}

void CContentBuilder_CommitAppBuild_Request::SharedDtor() {
  build_notes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CContentBuilder_CommitAppBuild_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_CommitAppBuild_Request::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_CommitAppBuild_Request& CContentBuilder_CommitAppBuild_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Request.base);
  return *internal_default_instance();
}


void CContentBuilder_CommitAppBuild_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_CommitAppBuild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depot_manifests_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      build_notes_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      live_branch_.ClearNonDefaultToEmptyNoArena();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_CommitAppBuild_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_CommitAppBuild_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_depot_manifests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string build_notes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_notes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->build_notes().data(), static_cast<int>(this->build_notes().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CContentBuilder_CommitAppBuild_Request.build_notes");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string live_branch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_live_branch()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->live_branch().data(), static_cast<int>(this->live_branch().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CContentBuilder_CommitAppBuild_Request.live_branch");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_CommitAppBuild_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_CommitAppBuild_Request)
  return false;
#undef DO_
}

void CContentBuilder_CommitAppBuild_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_CommitAppBuild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated .CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->depot_manifests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->depot_manifests(static_cast<int>(i)),
      output);
  }

  // optional string build_notes = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_notes().data(), static_cast<int>(this->build_notes().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_CommitAppBuild_Request.build_notes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->build_notes(), output);
  }

  // optional string live_branch = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->live_branch().data(), static_cast<int>(this->live_branch().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_CommitAppBuild_Request.live_branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->live_branch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_CommitAppBuild_Request)
}

::google::protobuf::uint8* CContentBuilder_CommitAppBuild_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_CommitAppBuild_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated .CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->depot_manifests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->depot_manifests(static_cast<int>(i)), deterministic, target);
  }

  // optional string build_notes = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_notes().data(), static_cast<int>(this->build_notes().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_CommitAppBuild_Request.build_notes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->build_notes(), target);
  }

  // optional string live_branch = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->live_branch().data(), static_cast<int>(this->live_branch().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_CommitAppBuild_Request.live_branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->live_branch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_CommitAppBuild_Request)
  return target;
}

size_t CContentBuilder_CommitAppBuild_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_CommitAppBuild_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->depot_manifests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->depot_manifests(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string build_notes = 4;
    if (has_build_notes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->build_notes());
    }

    // optional string live_branch = 5;
    if (has_live_branch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->live_branch());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_CommitAppBuild_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_CommitAppBuild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_CommitAppBuild_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_CommitAppBuild_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_CommitAppBuild_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_CommitAppBuild_Request)
    MergeFrom(*source);
  }
}

void CContentBuilder_CommitAppBuild_Request::MergeFrom(const CContentBuilder_CommitAppBuild_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_CommitAppBuild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depot_manifests_.MergeFrom(from.depot_manifests_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_build_notes();
      build_notes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_notes_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_live_branch();
      live_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_branch_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_CommitAppBuild_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_CommitAppBuild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_CommitAppBuild_Request::CopyFrom(const CContentBuilder_CommitAppBuild_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_CommitAppBuild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_CommitAppBuild_Request::IsInitialized() const {
  return true;
}

void CContentBuilder_CommitAppBuild_Request::Swap(CContentBuilder_CommitAppBuild_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_CommitAppBuild_Request::InternalSwap(CContentBuilder_CommitAppBuild_Request* other) {
  using std::swap;
  CastToBase(&depot_manifests_)->InternalSwap(CastToBase(&other->depot_manifests_));
  build_notes_.Swap(&other->build_notes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  live_branch_.Swap(&other->live_branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_CommitAppBuild_Request::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_CommitAppBuild_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_CommitAppBuild_Response::kBuildidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_CommitAppBuild_Response::CContentBuilder_CommitAppBuild_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_CommitAppBuild_Response)
}
CContentBuilder_CommitAppBuild_Response::CContentBuilder_CommitAppBuild_Response(const CContentBuilder_CommitAppBuild_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buildid_ = from.buildid_;
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_CommitAppBuild_Response)
}

void CContentBuilder_CommitAppBuild_Response::SharedCtor() {
  buildid_ = 0u;
}

CContentBuilder_CommitAppBuild_Response::~CContentBuilder_CommitAppBuild_Response() {
  // @@protoc_insertion_point(destructor:CContentBuilder_CommitAppBuild_Response)
  SharedDtor();
}

void CContentBuilder_CommitAppBuild_Response::SharedDtor() {
}

void CContentBuilder_CommitAppBuild_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_CommitAppBuild_Response::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_CommitAppBuild_Response& CContentBuilder_CommitAppBuild_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_CommitAppBuild_Response.base);
  return *internal_default_instance();
}


void CContentBuilder_CommitAppBuild_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_CommitAppBuild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buildid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_CommitAppBuild_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_CommitAppBuild_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 buildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_buildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_CommitAppBuild_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_CommitAppBuild_Response)
  return false;
#undef DO_
}

void CContentBuilder_CommitAppBuild_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_CommitAppBuild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 buildid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_CommitAppBuild_Response)
}

::google::protobuf::uint8* CContentBuilder_CommitAppBuild_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_CommitAppBuild_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 buildid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_CommitAppBuild_Response)
  return target;
}

size_t CContentBuilder_CommitAppBuild_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_CommitAppBuild_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 buildid = 1;
  if (has_buildid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buildid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_CommitAppBuild_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_CommitAppBuild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_CommitAppBuild_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_CommitAppBuild_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_CommitAppBuild_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_CommitAppBuild_Response)
    MergeFrom(*source);
  }
}

void CContentBuilder_CommitAppBuild_Response::MergeFrom(const CContentBuilder_CommitAppBuild_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_CommitAppBuild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_buildid()) {
    set_buildid(from.buildid());
  }
}

void CContentBuilder_CommitAppBuild_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_CommitAppBuild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_CommitAppBuild_Response::CopyFrom(const CContentBuilder_CommitAppBuild_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_CommitAppBuild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_CommitAppBuild_Response::IsInitialized() const {
  return true;
}

void CContentBuilder_CommitAppBuild_Response::Swap(CContentBuilder_CommitAppBuild_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_CommitAppBuild_Response::InternalSwap(CContentBuilder_CommitAppBuild_Response* other) {
  using std::swap;
  swap(buildid_, other->buildid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_CommitAppBuild_Response::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_SignInstallScript_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_SignInstallScript_Request::kAppidFieldNumber;
const int CContentBuilder_SignInstallScript_Request::kDepotidFieldNumber;
const int CContentBuilder_SignInstallScript_Request::kInstallScriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_SignInstallScript_Request::CContentBuilder_SignInstallScript_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_SignInstallScript_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_SignInstallScript_Request)
}
CContentBuilder_SignInstallScript_Request::CContentBuilder_SignInstallScript_Request(const CContentBuilder_SignInstallScript_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  install_script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_install_script()) {
    install_script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.install_script_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&depotid_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(depotid_));
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_SignInstallScript_Request)
}

void CContentBuilder_SignInstallScript_Request::SharedCtor() {
  install_script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&depotid_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(depotid_));
}

CContentBuilder_SignInstallScript_Request::~CContentBuilder_SignInstallScript_Request() {
  // @@protoc_insertion_point(destructor:CContentBuilder_SignInstallScript_Request)
  SharedDtor();
}

void CContentBuilder_SignInstallScript_Request::SharedDtor() {
  install_script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CContentBuilder_SignInstallScript_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_SignInstallScript_Request::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_SignInstallScript_Request& CContentBuilder_SignInstallScript_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_SignInstallScript_Request.base);
  return *internal_default_instance();
}


void CContentBuilder_SignInstallScript_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_SignInstallScript_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    install_script_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&depotid_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(depotid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_SignInstallScript_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_SignInstallScript_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depotid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string install_script = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_install_script()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->install_script().data(), static_cast<int>(this->install_script().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CContentBuilder_SignInstallScript_Request.install_script");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_SignInstallScript_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_SignInstallScript_Request)
  return false;
#undef DO_
}

void CContentBuilder_SignInstallScript_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_SignInstallScript_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 depotid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depotid(), output);
  }

  // optional string install_script = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->install_script().data(), static_cast<int>(this->install_script().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_SignInstallScript_Request.install_script");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->install_script(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_SignInstallScript_Request)
}

::google::protobuf::uint8* CContentBuilder_SignInstallScript_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_SignInstallScript_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 depotid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depotid(), target);
  }

  // optional string install_script = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->install_script().data(), static_cast<int>(this->install_script().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_SignInstallScript_Request.install_script");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->install_script(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_SignInstallScript_Request)
  return target;
}

size_t CContentBuilder_SignInstallScript_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_SignInstallScript_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string install_script = 3;
    if (has_install_script()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->install_script());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 depotid = 2;
    if (has_depotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depotid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_SignInstallScript_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_SignInstallScript_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_SignInstallScript_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_SignInstallScript_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_SignInstallScript_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_SignInstallScript_Request)
    MergeFrom(*source);
  }
}

void CContentBuilder_SignInstallScript_Request::MergeFrom(const CContentBuilder_SignInstallScript_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_SignInstallScript_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_install_script();
      install_script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.install_script_);
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      depotid_ = from.depotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CContentBuilder_SignInstallScript_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_SignInstallScript_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_SignInstallScript_Request::CopyFrom(const CContentBuilder_SignInstallScript_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_SignInstallScript_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_SignInstallScript_Request::IsInitialized() const {
  return true;
}

void CContentBuilder_SignInstallScript_Request::Swap(CContentBuilder_SignInstallScript_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_SignInstallScript_Request::InternalSwap(CContentBuilder_SignInstallScript_Request* other) {
  using std::swap;
  install_script_.Swap(&other->install_script_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(depotid_, other->depotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_SignInstallScript_Request::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CContentBuilder_SignInstallScript_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CContentBuilder_SignInstallScript_Response::kSignedInstallScriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CContentBuilder_SignInstallScript_Response::CContentBuilder_SignInstallScript_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_SignInstallScript_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CContentBuilder_SignInstallScript_Response)
}
CContentBuilder_SignInstallScript_Response::CContentBuilder_SignInstallScript_Response(const CContentBuilder_SignInstallScript_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signed_install_script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signed_install_script()) {
    signed_install_script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_install_script_);
  }
  // @@protoc_insertion_point(copy_constructor:CContentBuilder_SignInstallScript_Response)
}

void CContentBuilder_SignInstallScript_Response::SharedCtor() {
  signed_install_script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CContentBuilder_SignInstallScript_Response::~CContentBuilder_SignInstallScript_Response() {
  // @@protoc_insertion_point(destructor:CContentBuilder_SignInstallScript_Response)
  SharedDtor();
}

void CContentBuilder_SignInstallScript_Response::SharedDtor() {
  signed_install_script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CContentBuilder_SignInstallScript_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CContentBuilder_SignInstallScript_Response::descriptor() {
  ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CContentBuilder_SignInstallScript_Response& CContentBuilder_SignInstallScript_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::scc_info_CContentBuilder_SignInstallScript_Response.base);
  return *internal_default_instance();
}


void CContentBuilder_SignInstallScript_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CContentBuilder_SignInstallScript_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    signed_install_script_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CContentBuilder_SignInstallScript_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CContentBuilder_SignInstallScript_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signed_install_script = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_install_script()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signed_install_script().data(), static_cast<int>(this->signed_install_script().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CContentBuilder_SignInstallScript_Response.signed_install_script");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CContentBuilder_SignInstallScript_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CContentBuilder_SignInstallScript_Response)
  return false;
#undef DO_
}

void CContentBuilder_SignInstallScript_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CContentBuilder_SignInstallScript_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signed_install_script = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signed_install_script().data(), static_cast<int>(this->signed_install_script().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_SignInstallScript_Response.signed_install_script");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signed_install_script(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CContentBuilder_SignInstallScript_Response)
}

::google::protobuf::uint8* CContentBuilder_SignInstallScript_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CContentBuilder_SignInstallScript_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signed_install_script = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signed_install_script().data(), static_cast<int>(this->signed_install_script().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CContentBuilder_SignInstallScript_Response.signed_install_script");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signed_install_script(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CContentBuilder_SignInstallScript_Response)
  return target;
}

size_t CContentBuilder_SignInstallScript_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CContentBuilder_SignInstallScript_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string signed_install_script = 1;
  if (has_signed_install_script()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_install_script());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CContentBuilder_SignInstallScript_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CContentBuilder_SignInstallScript_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CContentBuilder_SignInstallScript_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CContentBuilder_SignInstallScript_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CContentBuilder_SignInstallScript_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CContentBuilder_SignInstallScript_Response)
    MergeFrom(*source);
  }
}

void CContentBuilder_SignInstallScript_Response::MergeFrom(const CContentBuilder_SignInstallScript_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CContentBuilder_SignInstallScript_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_signed_install_script()) {
    set_has_signed_install_script();
    signed_install_script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_install_script_);
  }
}

void CContentBuilder_SignInstallScript_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CContentBuilder_SignInstallScript_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CContentBuilder_SignInstallScript_Response::CopyFrom(const CContentBuilder_SignInstallScript_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CContentBuilder_SignInstallScript_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CContentBuilder_SignInstallScript_Response::IsInitialized() const {
  return true;
}

void CContentBuilder_SignInstallScript_Response::Swap(CContentBuilder_SignInstallScript_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CContentBuilder_SignInstallScript_Response::InternalSwap(CContentBuilder_SignInstallScript_Response* other) {
  using std::swap;
  signed_install_script_.Swap(&other->signed_install_script_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CContentBuilder_SignInstallScript_Response::GetMetadata() const {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContentBuilder::~ContentBuilder() {}

const ::google::protobuf::ServiceDescriptor* ContentBuilder::descriptor() {
  protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* ContentBuilder::GetDescriptor() {
  return descriptor();
}

void ContentBuilder::InitDepotBuild(::google::protobuf::RpcController* controller,
                         const ::CContentBuilder_InitDepotBuild_Request*,
                         ::CContentBuilder_InitDepotBuild_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method InitDepotBuild() not implemented.");
  done->Run();
}

void ContentBuilder::StartDepotUpload(::google::protobuf::RpcController* controller,
                         const ::CContentBuilder_StartDepotUpload_Request*,
                         ::CContentBuilder_StartDepotUpload_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StartDepotUpload() not implemented.");
  done->Run();
}

void ContentBuilder::GetMissingDepotChunks(::google::protobuf::RpcController* controller,
                         const ::CContentBuilder_GetMissingDepotChunks_Request*,
                         ::CContentBuilder_GetMissingDepotChunks_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetMissingDepotChunks() not implemented.");
  done->Run();
}

void ContentBuilder::FinishDepotUpload(::google::protobuf::RpcController* controller,
                         const ::CContentBuilder_FinishDepotUpload_Request*,
                         ::CContentBuilder_FinishDepotUpload_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishDepotUpload() not implemented.");
  done->Run();
}

void ContentBuilder::CommitAppBuild(::google::protobuf::RpcController* controller,
                         const ::CContentBuilder_CommitAppBuild_Request*,
                         ::CContentBuilder_CommitAppBuild_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CommitAppBuild() not implemented.");
  done->Run();
}

void ContentBuilder::SignInstallScript(::google::protobuf::RpcController* controller,
                         const ::CContentBuilder_SignInstallScript_Request*,
                         ::CContentBuilder_SignInstallScript_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SignInstallScript() not implemented.");
  done->Run();
}

void ContentBuilder::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fdepotbuilder_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      InitDepotBuild(controller,
             ::google::protobuf::down_cast<const ::CContentBuilder_InitDepotBuild_Request*>(request),
             ::google::protobuf::down_cast< ::CContentBuilder_InitDepotBuild_Response*>(response),
             done);
      break;
    case 1:
      StartDepotUpload(controller,
             ::google::protobuf::down_cast<const ::CContentBuilder_StartDepotUpload_Request*>(request),
             ::google::protobuf::down_cast< ::CContentBuilder_StartDepotUpload_Response*>(response),
             done);
      break;
    case 2:
      GetMissingDepotChunks(controller,
             ::google::protobuf::down_cast<const ::CContentBuilder_GetMissingDepotChunks_Request*>(request),
             ::google::protobuf::down_cast< ::CContentBuilder_GetMissingDepotChunks_Response*>(response),
             done);
      break;
    case 3:
      FinishDepotUpload(controller,
             ::google::protobuf::down_cast<const ::CContentBuilder_FinishDepotUpload_Request*>(request),
             ::google::protobuf::down_cast< ::CContentBuilder_FinishDepotUpload_Response*>(response),
             done);
      break;
    case 4:
      CommitAppBuild(controller,
             ::google::protobuf::down_cast<const ::CContentBuilder_CommitAppBuild_Request*>(request),
             ::google::protobuf::down_cast< ::CContentBuilder_CommitAppBuild_Response*>(response),
             done);
      break;
    case 5:
      SignInstallScript(controller,
             ::google::protobuf::down_cast<const ::CContentBuilder_SignInstallScript_Request*>(request),
             ::google::protobuf::down_cast< ::CContentBuilder_SignInstallScript_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ContentBuilder::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CContentBuilder_InitDepotBuild_Request::default_instance();
    case 1:
      return ::CContentBuilder_StartDepotUpload_Request::default_instance();
    case 2:
      return ::CContentBuilder_GetMissingDepotChunks_Request::default_instance();
    case 3:
      return ::CContentBuilder_FinishDepotUpload_Request::default_instance();
    case 4:
      return ::CContentBuilder_CommitAppBuild_Request::default_instance();
    case 5:
      return ::CContentBuilder_SignInstallScript_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ContentBuilder::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CContentBuilder_InitDepotBuild_Response::default_instance();
    case 1:
      return ::CContentBuilder_StartDepotUpload_Response::default_instance();
    case 2:
      return ::CContentBuilder_GetMissingDepotChunks_Response::default_instance();
    case 3:
      return ::CContentBuilder_FinishDepotUpload_Response::default_instance();
    case 4:
      return ::CContentBuilder_CommitAppBuild_Response::default_instance();
    case 5:
      return ::CContentBuilder_SignInstallScript_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ContentBuilder_Stub::ContentBuilder_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ContentBuilder_Stub::ContentBuilder_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ContentBuilder_Stub::~ContentBuilder_Stub() {
  if (owns_channel_) delete channel_;
}

void ContentBuilder_Stub::InitDepotBuild(::google::protobuf::RpcController* controller,
                              const ::CContentBuilder_InitDepotBuild_Request* request,
                              ::CContentBuilder_InitDepotBuild_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ContentBuilder_Stub::StartDepotUpload(::google::protobuf::RpcController* controller,
                              const ::CContentBuilder_StartDepotUpload_Request* request,
                              ::CContentBuilder_StartDepotUpload_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ContentBuilder_Stub::GetMissingDepotChunks(::google::protobuf::RpcController* controller,
                              const ::CContentBuilder_GetMissingDepotChunks_Request* request,
                              ::CContentBuilder_GetMissingDepotChunks_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void ContentBuilder_Stub::FinishDepotUpload(::google::protobuf::RpcController* controller,
                              const ::CContentBuilder_FinishDepotUpload_Request* request,
                              ::CContentBuilder_FinishDepotUpload_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void ContentBuilder_Stub::CommitAppBuild(::google::protobuf::RpcController* controller,
                              const ::CContentBuilder_CommitAppBuild_Request* request,
                              ::CContentBuilder_CommitAppBuild_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void ContentBuilder_Stub::SignInstallScript(::google::protobuf::RpcController* controller,
                              const ::CContentBuilder_SignInstallScript_Request* request,
                              ::CContentBuilder_SignInstallScript_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_InitDepotBuild_Request* Arena::CreateMaybeMessage< ::CContentBuilder_InitDepotBuild_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_InitDepotBuild_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_InitDepotBuild_Response* Arena::CreateMaybeMessage< ::CContentBuilder_InitDepotBuild_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_InitDepotBuild_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_StartDepotUpload_Request* Arena::CreateMaybeMessage< ::CContentBuilder_StartDepotUpload_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_StartDepotUpload_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_StartDepotUpload_Response* Arena::CreateMaybeMessage< ::CContentBuilder_StartDepotUpload_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_StartDepotUpload_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_GetMissingDepotChunks_Request* Arena::CreateMaybeMessage< ::CContentBuilder_GetMissingDepotChunks_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_GetMissingDepotChunks_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* Arena::CreateMaybeMessage< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_GetMissingDepotChunks_Response* Arena::CreateMaybeMessage< ::CContentBuilder_GetMissingDepotChunks_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_GetMissingDepotChunks_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_FinishDepotUpload_Request* Arena::CreateMaybeMessage< ::CContentBuilder_FinishDepotUpload_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_FinishDepotUpload_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_FinishDepotUpload_Response* Arena::CreateMaybeMessage< ::CContentBuilder_FinishDepotUpload_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_FinishDepotUpload_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_CommitAppBuild_Request_Depots* Arena::CreateMaybeMessage< ::CContentBuilder_CommitAppBuild_Request_Depots >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_CommitAppBuild_Request_Depots >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_CommitAppBuild_Request* Arena::CreateMaybeMessage< ::CContentBuilder_CommitAppBuild_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_CommitAppBuild_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_CommitAppBuild_Response* Arena::CreateMaybeMessage< ::CContentBuilder_CommitAppBuild_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_CommitAppBuild_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_SignInstallScript_Request* Arena::CreateMaybeMessage< ::CContentBuilder_SignInstallScript_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_SignInstallScript_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CContentBuilder_SignInstallScript_Response* Arena::CreateMaybeMessage< ::CContentBuilder_SignInstallScript_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CContentBuilder_SignInstallScript_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
